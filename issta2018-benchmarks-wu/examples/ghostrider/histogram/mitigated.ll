; ModuleID = 'mitigated.c'
source_filename = "mitigated.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.ds_base = type { i8*, i64*, i32, i8, i32, i32 }

@in = dso_local global [1000 x i32] zeroinitializer, align 16
@out = dso_local global [1000 x i32] zeroinitializer, align 16
@constinit.5998 = private unnamed_addr constant [1 x %struct.ds_base] [%struct.ds_base { i8* bitcast ([1000 x i32]* @out to i8*), i64* null, i32 1000, i8 1, i32 0, i32 3996 }], align 8

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @hsum_epi32_avx(<2 x i64> %0) local_unnamed_addr #0 {
  %2 = bitcast <2 x i64> %0 to <4 x i32>
  %3 = shufflevector <4 x i32> %2, <4 x i32> poison, <4 x i32> <i32 2, i32 3, i32 2, i32 3>
  %4 = bitcast <2 x i64> %0 to <4 x i32>
  %5 = add <4 x i32> %3, %4
  %6 = shufflevector <4 x i32> %5, <4 x i32> poison, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %7 = add <4 x i32> %6, %5
  %8 = extractelement <4 x i32> %7, i32 0
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @mm256_hadd_to_32(<4 x i64> %0) local_unnamed_addr #1 {
  %2 = shufflevector <4 x i64> %0, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %3 = shufflevector <4 x i64> %0, <4 x i64> poison, <2 x i32> <i32 2, i32 3>
  %4 = bitcast <2 x i64> %2 to <4 x i32>
  %5 = bitcast <2 x i64> %3 to <4 x i32>
  %6 = add <4 x i32> %5, %4
  %7 = shufflevector <4 x i32> %6, <4 x i32> poison, <4 x i32> <i32 2, i32 3, i32 2, i32 3>
  %8 = add <4 x i32> %6, %7
  %9 = shufflevector <4 x i32> %8, <4 x i32> poison, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %10 = add <4 x i32> %9, %8
  %11 = extractelement <4 x i32> %10, i32 0
  ret i32 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i64 @mm256_hadd_to_64(<4 x i64> %0) local_unnamed_addr #1 {
  %2 = shufflevector <4 x i64> %0, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %3 = shufflevector <4 x i64> %0, <4 x i64> poison, <2 x i32> <i32 2, i32 3>
  %4 = add <2 x i64> %3, %2
  %5 = shufflevector <2 x i64> %4, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %6 = add <2 x i64> %5, %4
  %7 = extractelement <2 x i64> %6, i32 0
  ret i64 %7
}

; Function Attrs: nofree noinline nounwind readonly uwtable
define dso_local i64 @uint64_t_secure_load_impl(i64* %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #2 {
  %5 = ptrtoint i64* %0 to i64
  %6 = and i64 %5, -8
  %7 = insertelement <4 x i64> undef, i64 %6, i32 0
  %8 = shufflevector <4 x i64> %7, <4 x i64> poison, <4 x i32> zeroinitializer
  %9 = icmp eq i32 %2, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = zext i32 %2 to i64
  br label %27

12:                                               ; preds = %248, %4
  %13 = phi i8 [ 1, %4 ], [ %249, %248 ]
  %14 = phi <4 x i64> [ zeroinitializer, %4 ], [ %250, %248 ]
  %15 = shufflevector <4 x i64> %14, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %16 = shufflevector <4 x i64> %14, <4 x i64> poison, <2 x i32> <i32 2, i32 3>
  %17 = add <2 x i64> %16, %15
  %18 = shufflevector <2 x i64> %17, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %19 = add <2 x i64> %18, %17
  %20 = extractelement <2 x i64> %19, i32 0
  %21 = and i8 %13, 1
  %22 = icmp eq i8 %21, 0
  %23 = shl i64 %5, 3
  %24 = and i64 %23, 56
  %25 = select i1 %22, i64 0, i64 %24
  %26 = lshr i64 %20, %25
  ret i64 %26

27:                                               ; preds = %10, %248
  %28 = phi i64 [ 0, %10 ], [ %251, %248 ]
  %29 = phi <4 x i64> [ zeroinitializer, %10 ], [ %250, %248 ]
  %30 = phi i8 [ 1, %10 ], [ %249, %248 ]
  %31 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 %28, i32 3
  %32 = load i8, i8* %31, align 4, !tbaa !3, !range !10
  %33 = icmp eq i8 %32, 0
  %34 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 %28, i32 0
  %35 = load i8*, i8** %34, align 8, !tbaa !11
  %36 = ptrtoint i8* %35 to i64
  br i1 %33, label %111, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 %28, i32 4
  %39 = load i32, i32* %38, align 8, !tbaa !12
  %40 = zext i32 %39 to i64
  %41 = add i64 %40, %36
  %42 = and i64 %41, -32
  %43 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 %28, i32 5
  %44 = load i32, i32* %43, align 4, !tbaa !13
  %45 = zext i32 %44 to i64
  %46 = add i64 %45, %36
  %47 = sub i64 %46, %42
  %48 = lshr i64 %47, 5
  %49 = trunc i64 %48 to i32
  %50 = add i32 %49, 1
  %51 = inttoptr i64 %42 to i8*
  %52 = icmp eq i32 %50, 0
  br i1 %52, label %248, label %53

53:                                               ; preds = %37
  %54 = insertelement <4 x i64> undef, i64 %42, i32 0
  %55 = or i64 %42, 8
  %56 = insertelement <4 x i64> %54, i64 %55, i32 1
  %57 = insertelement <2 x i64> poison, i64 %42, i32 0
  %58 = shufflevector <2 x i64> %57, <2 x i64> poison, <2 x i32> zeroinitializer
  %59 = or <2 x i64> %58, <i64 16, i64 24>
  %60 = shufflevector <2 x i64> %59, <2 x i64> poison, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %61 = shufflevector <4 x i64> %56, <4 x i64> %60, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %62 = zext i32 %50 to i64
  %63 = add nsw i64 %62, -1
  %64 = and i64 %62, 3
  %65 = icmp ult i64 %63, 3
  br i1 %65, label %226, label %66

66:                                               ; preds = %53
  %67 = and i64 %62, 4294967292
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %108, %68 ]
  %70 = phi <4 x i64> [ %29, %66 ], [ %106, %68 ]
  %71 = phi <4 x i64> [ %61, %66 ], [ %107, %68 ]
  %72 = phi i64 [ %67, %66 ], [ %109, %68 ]
  %73 = shl i64 %69, 5
  %74 = and i64 %73, 4294967168
  %75 = getelementptr inbounds i8, i8* %51, i64 %74
  %76 = icmp eq <4 x i64> %71, %8
  %77 = bitcast i8* %75 to <4 x i64>*
  %78 = load <4 x i64>, <4 x i64>* %77, align 32, !tbaa !14
  %79 = select <4 x i1> %76, <4 x i64> %78, <4 x i64> %70
  %80 = add <4 x i64> %71, <i64 32, i64 32, i64 32, i64 32>
  %81 = shl i64 %69, 5
  %82 = and i64 %81, 4294967168
  %83 = or i64 %82, 32
  %84 = getelementptr inbounds i8, i8* %51, i64 %83
  %85 = icmp eq <4 x i64> %80, %8
  %86 = bitcast i8* %84 to <4 x i64>*
  %87 = load <4 x i64>, <4 x i64>* %86, align 32, !tbaa !14
  %88 = select <4 x i1> %85, <4 x i64> %87, <4 x i64> %79
  %89 = add <4 x i64> %71, <i64 64, i64 64, i64 64, i64 64>
  %90 = shl i64 %69, 5
  %91 = and i64 %90, 4294967168
  %92 = or i64 %91, 64
  %93 = getelementptr inbounds i8, i8* %51, i64 %92
  %94 = icmp eq <4 x i64> %89, %8
  %95 = bitcast i8* %93 to <4 x i64>*
  %96 = load <4 x i64>, <4 x i64>* %95, align 32, !tbaa !14
  %97 = select <4 x i1> %94, <4 x i64> %96, <4 x i64> %88
  %98 = add <4 x i64> %71, <i64 96, i64 96, i64 96, i64 96>
  %99 = shl i64 %69, 5
  %100 = and i64 %99, 4294967168
  %101 = or i64 %100, 96
  %102 = getelementptr inbounds i8, i8* %51, i64 %101
  %103 = icmp eq <4 x i64> %98, %8
  %104 = bitcast i8* %102 to <4 x i64>*
  %105 = load <4 x i64>, <4 x i64>* %104, align 32, !tbaa !14
  %106 = select <4 x i1> %103, <4 x i64> %105, <4 x i64> %97
  %107 = add <4 x i64> %71, <i64 128, i64 128, i64 128, i64 128>
  %108 = add nuw nsw i64 %69, 4
  %109 = add i64 %72, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %226, label %68, !llvm.loop !15

111:                                              ; preds = %27
  %112 = sub i64 %5, %36
  %113 = insertelement <4 x i64> undef, i64 %112, i32 0
  %114 = shufflevector <4 x i64> %113, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %115

115:                                              ; preds = %111, %152
  %116 = phi i64 [ 0, %111 ], [ %154, %152 ]
  %117 = phi <4 x i64> [ %29, %111 ], [ %153, %152 ]
  %118 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 %116, i32 2
  %119 = load i32, i32* %118, align 8, !tbaa !17
  %120 = icmp ult i32 %119, 4
  br i1 %120, label %152, label %121

121:                                              ; preds = %115
  %122 = lshr i32 %119, 2
  %123 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 %116, i32 0
  %124 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 %116, i32 1
  %125 = load i64*, i64** %124, align 8, !tbaa !18
  %126 = load i8*, i8** %123, align 8, !tbaa !11
  %127 = zext i32 %122 to i64
  %128 = add nsw i64 %127, -1
  %129 = and i64 %127, 7
  %130 = icmp ult i64 %128, 7
  br i1 %130, label %133, label %131

131:                                              ; preds = %121
  %132 = and i64 %127, 1073741816
  br label %156

133:                                              ; preds = %156, %121
  %134 = phi <4 x i64> [ undef, %121 ], [ %222, %156 ]
  %135 = phi i64 [ 0, %121 ], [ %223, %156 ]
  %136 = phi <4 x i64> [ %117, %121 ], [ %222, %156 ]
  %137 = icmp eq i64 %129, 0
  br i1 %137, label %152, label %138

138:                                              ; preds = %133, %138
  %139 = phi i64 [ %149, %138 ], [ %135, %133 ]
  %140 = phi <4 x i64> [ %148, %138 ], [ %136, %133 ]
  %141 = phi i64 [ %150, %138 ], [ %129, %133 ]
  %142 = shl i64 %139, 2
  %143 = getelementptr inbounds i64, i64* %125, i64 %142
  %144 = bitcast i64* %143 to <4 x i64>*
  %145 = load <4 x i64>, <4 x i64>* %144, align 1, !tbaa !14
  %146 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %145, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %147 = icmp eq <4 x i64> %145, %114
  %148 = select <4 x i1> %147, <4 x i64> %146, <4 x i64> %140
  %149 = add nuw nsw i64 %139, 1
  %150 = add i64 %141, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %138, !llvm.loop !19

152:                                              ; preds = %133, %138, %115
  %153 = phi <4 x i64> [ %117, %115 ], [ %134, %133 ], [ %148, %138 ]
  %154 = add nuw nsw i64 %116, 1
  %155 = icmp eq i64 %154, %11
  br i1 %155, label %248, label %115, !llvm.loop !21

156:                                              ; preds = %156, %131
  %157 = phi i64 [ 0, %131 ], [ %223, %156 ]
  %158 = phi <4 x i64> [ %117, %131 ], [ %222, %156 ]
  %159 = phi i64 [ %132, %131 ], [ %224, %156 ]
  %160 = shl i64 %157, 2
  %161 = getelementptr inbounds i64, i64* %125, i64 %160
  %162 = bitcast i64* %161 to <4 x i64>*
  %163 = load <4 x i64>, <4 x i64>* %162, align 1, !tbaa !14
  %164 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %163, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %165 = icmp eq <4 x i64> %163, %114
  %166 = select <4 x i1> %165, <4 x i64> %164, <4 x i64> %158
  %167 = shl i64 %157, 2
  %168 = or i64 %167, 4
  %169 = getelementptr inbounds i64, i64* %125, i64 %168
  %170 = bitcast i64* %169 to <4 x i64>*
  %171 = load <4 x i64>, <4 x i64>* %170, align 1, !tbaa !14
  %172 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %171, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %173 = icmp eq <4 x i64> %171, %114
  %174 = select <4 x i1> %173, <4 x i64> %172, <4 x i64> %166
  %175 = shl i64 %157, 2
  %176 = or i64 %175, 8
  %177 = getelementptr inbounds i64, i64* %125, i64 %176
  %178 = bitcast i64* %177 to <4 x i64>*
  %179 = load <4 x i64>, <4 x i64>* %178, align 1, !tbaa !14
  %180 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %179, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %181 = icmp eq <4 x i64> %179, %114
  %182 = select <4 x i1> %181, <4 x i64> %180, <4 x i64> %174
  %183 = shl i64 %157, 2
  %184 = or i64 %183, 12
  %185 = getelementptr inbounds i64, i64* %125, i64 %184
  %186 = bitcast i64* %185 to <4 x i64>*
  %187 = load <4 x i64>, <4 x i64>* %186, align 1, !tbaa !14
  %188 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %187, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %189 = icmp eq <4 x i64> %187, %114
  %190 = select <4 x i1> %189, <4 x i64> %188, <4 x i64> %182
  %191 = shl i64 %157, 2
  %192 = or i64 %191, 16
  %193 = getelementptr inbounds i64, i64* %125, i64 %192
  %194 = bitcast i64* %193 to <4 x i64>*
  %195 = load <4 x i64>, <4 x i64>* %194, align 1, !tbaa !14
  %196 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %195, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %197 = icmp eq <4 x i64> %195, %114
  %198 = select <4 x i1> %197, <4 x i64> %196, <4 x i64> %190
  %199 = shl i64 %157, 2
  %200 = or i64 %199, 20
  %201 = getelementptr inbounds i64, i64* %125, i64 %200
  %202 = bitcast i64* %201 to <4 x i64>*
  %203 = load <4 x i64>, <4 x i64>* %202, align 1, !tbaa !14
  %204 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %203, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %205 = icmp eq <4 x i64> %203, %114
  %206 = select <4 x i1> %205, <4 x i64> %204, <4 x i64> %198
  %207 = shl i64 %157, 2
  %208 = or i64 %207, 24
  %209 = getelementptr inbounds i64, i64* %125, i64 %208
  %210 = bitcast i64* %209 to <4 x i64>*
  %211 = load <4 x i64>, <4 x i64>* %210, align 1, !tbaa !14
  %212 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %211, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %213 = icmp eq <4 x i64> %211, %114
  %214 = select <4 x i1> %213, <4 x i64> %212, <4 x i64> %206
  %215 = shl i64 %157, 2
  %216 = or i64 %215, 28
  %217 = getelementptr inbounds i64, i64* %125, i64 %216
  %218 = bitcast i64* %217 to <4 x i64>*
  %219 = load <4 x i64>, <4 x i64>* %218, align 1, !tbaa !14
  %220 = tail call <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64> zeroinitializer, i8* %126, <4 x i64> %219, <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, i8 1)
  %221 = icmp eq <4 x i64> %219, %114
  %222 = select <4 x i1> %221, <4 x i64> %220, <4 x i64> %214
  %223 = add nuw nsw i64 %157, 8
  %224 = add i64 %159, -8
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %133, label %156, !llvm.loop !22

226:                                              ; preds = %68, %53
  %227 = phi <4 x i64> [ undef, %53 ], [ %106, %68 ]
  %228 = phi i64 [ 0, %53 ], [ %108, %68 ]
  %229 = phi <4 x i64> [ %29, %53 ], [ %106, %68 ]
  %230 = phi <4 x i64> [ %61, %53 ], [ %107, %68 ]
  %231 = icmp eq i64 %64, 0
  br i1 %231, label %248, label %232

232:                                              ; preds = %226, %232
  %233 = phi i64 [ %245, %232 ], [ %228, %226 ]
  %234 = phi <4 x i64> [ %243, %232 ], [ %229, %226 ]
  %235 = phi <4 x i64> [ %244, %232 ], [ %230, %226 ]
  %236 = phi i64 [ %246, %232 ], [ %64, %226 ]
  %237 = shl i64 %233, 5
  %238 = and i64 %237, 4294967264
  %239 = getelementptr inbounds i8, i8* %51, i64 %238
  %240 = icmp eq <4 x i64> %235, %8
  %241 = bitcast i8* %239 to <4 x i64>*
  %242 = load <4 x i64>, <4 x i64>* %241, align 32, !tbaa !14
  %243 = select <4 x i1> %240, <4 x i64> %242, <4 x i64> %234
  %244 = add <4 x i64> %235, <i64 32, i64 32, i64 32, i64 32>
  %245 = add nuw nsw i64 %233, 1
  %246 = add i64 %236, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %232, !llvm.loop !23

248:                                              ; preds = %226, %232, %152, %37
  %249 = phi i8 [ %30, %37 ], [ 0, %152 ], [ %30, %232 ], [ %30, %226 ]
  %250 = phi <4 x i64> [ %29, %37 ], [ %153, %152 ], [ %227, %226 ], [ %243, %232 ]
  %251 = add nuw nsw i64 %28, 1
  %252 = icmp eq i64 %251, %11
  br i1 %252, label %12, label %27, !llvm.loop !24
}

; Function Attrs: nofree nounwind readonly
declare <4 x i64> @llvm.x86.avx2.gather.q.q.256(<4 x i64>, i8*, <4 x i64>, <4 x i64>, i8 immarg) #3

; Function Attrs: nofree nounwind readonly uwtable
define dso_local i64 @uint64_t_secure_load(i64* readonly %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = load i64, i64* %0, align 8, !tbaa !25
  br label %10

8:                                                ; preds = %4
  %9 = tail call i64 @uint64_t_secure_load_impl(i64* %0, %struct.ds_base* %1, i32 %2, i32 undef)
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi i64 [ %7, %6 ], [ %9, %8 ]
  ret i64 %11
}

; Function Attrs: nofree nounwind uwtable
define dso_local i64 @uint64_t_secure_load_sensitive(i64* readonly %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #5 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %15

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !11
  %9 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8, !tbaa !12
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = bitcast i8* %12 to i64*
  %14 = load volatile i64, i64* %13, align 8, !tbaa !25
  br label %17

15:                                               ; preds = %4
  %16 = tail call i64 @uint64_t_secure_load_impl(i64* %0, %struct.ds_base* %1, i32 %2, i32 undef)
  br label %17

17:                                               ; preds = %15, %6
  %18 = phi i64 [ %14, %6 ], [ %16, %15 ]
  ret i64 %18
}

; Function Attrs: nofree nounwind readonly uwtable
define dso_local i32 @uint32_t_secure_load(i32* %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = bitcast i32* %0 to i64*
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = load i64, i64* %5, align 8, !tbaa !25
  br label %11

9:                                                ; preds = %4
  %10 = tail call i64 @uint64_t_secure_load_impl(i64* %5, %struct.ds_base* %1, i32 %2, i32 undef) #14
  br label %11

11:                                               ; preds = %7, %9
  %12 = phi i64 [ %8, %7 ], [ %10, %9 ]
  %13 = trunc i64 %12 to i32
  ret i32 %13
}

; Function Attrs: nofree nounwind readonly uwtable
define dso_local zeroext i16 @uint16_t_secure_load(i16* %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = bitcast i16* %0 to i64*
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = load i64, i64* %5, align 8, !tbaa !25
  br label %11

9:                                                ; preds = %4
  %10 = tail call i64 @uint64_t_secure_load_impl(i64* %5, %struct.ds_base* %1, i32 %2, i32 undef) #14
  br label %11

11:                                               ; preds = %7, %9
  %12 = phi i64 [ %8, %7 ], [ %10, %9 ]
  %13 = trunc i64 %12 to i16
  ret i16 %13
}

; Function Attrs: nofree nounwind readonly uwtable
define dso_local zeroext i8 @uint8_t_secure_load(i8* %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = bitcast i8* %0 to i64*
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = load i64, i64* %5, align 8, !tbaa !25
  br label %11

9:                                                ; preds = %4
  %10 = tail call i64 @uint64_t_secure_load_impl(i64* %5, %struct.ds_base* %1, i32 %2, i32 undef) #14
  br label %11

11:                                               ; preds = %7, %9
  %12 = phi i64 [ %8, %7 ], [ %10, %9 ]
  %13 = trunc i64 %12 to i8
  ret i8 %13
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @uint32_t_secure_load_sensitive(i32* %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #5 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %15

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !11
  %9 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8, !tbaa !12
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = bitcast i8* %12 to i64*
  %14 = load volatile i64, i64* %13, align 8, !tbaa !25
  br label %18

15:                                               ; preds = %4
  %16 = bitcast i32* %0 to i64*
  %17 = tail call i64 @uint64_t_secure_load_impl(i64* %16, %struct.ds_base* %1, i32 %2, i32 undef) #14
  br label %18

18:                                               ; preds = %6, %15
  %19 = phi i64 [ %14, %6 ], [ %17, %15 ]
  %20 = trunc i64 %19 to i32
  ret i32 %20
}

; Function Attrs: nofree nounwind uwtable
define dso_local zeroext i16 @uint16_t_secure_load_sensitive(i16* %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #5 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %15

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !11
  %9 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8, !tbaa !12
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = bitcast i8* %12 to i64*
  %14 = load volatile i64, i64* %13, align 8, !tbaa !25
  br label %18

15:                                               ; preds = %4
  %16 = bitcast i16* %0 to i64*
  %17 = tail call i64 @uint64_t_secure_load_impl(i64* %16, %struct.ds_base* %1, i32 %2, i32 undef) #14
  br label %18

18:                                               ; preds = %6, %15
  %19 = phi i64 [ %14, %6 ], [ %17, %15 ]
  %20 = trunc i64 %19 to i16
  ret i16 %20
}

; Function Attrs: nofree nounwind uwtable
define dso_local zeroext i8 @uint8_t_secure_load_sensitive(i8* %0, %struct.ds_base* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #5 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %15

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !11
  %9 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8, !tbaa !12
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = bitcast i8* %12 to i64*
  %14 = load volatile i64, i64* %13, align 8, !tbaa !25
  br label %18

15:                                               ; preds = %4
  %16 = bitcast i8* %0 to i64*
  %17 = tail call i64 @uint64_t_secure_load_impl(i64* %16, %struct.ds_base* %1, i32 %2, i32 undef) #14
  br label %18

18:                                               ; preds = %6, %15
  %19 = phi i64 [ %14, %6 ], [ %17, %15 ]
  %20 = trunc i64 %19 to i8
  ret i8 %20
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define dso_local void @uint64_t_secure_store_impl(i64 %0, i64* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #6 {
  %6 = ptrtoint i64* %1 to i64
  %7 = shl i64 %6, 3
  %8 = and i64 %7, 56
  %9 = shl i64 %0, %8
  %10 = insertelement <4 x i64> undef, i64 %9, i32 0
  %11 = shufflevector <4 x i64> %10, <4 x i64> poison, <4 x i32> zeroinitializer
  %12 = and i64 %6, -8
  %13 = insertelement <4 x i64> undef, i64 %12, i32 0
  %14 = shufflevector <4 x i64> %13, <4 x i64> poison, <4 x i32> zeroinitializer
  %15 = shl nsw i64 -1, %8
  %16 = insertelement <4 x i64> undef, i64 %15, i32 0
  %17 = shufflevector <4 x i64> %16, <4 x i64> poison, <4 x i32> zeroinitializer
  %18 = bitcast <4 x i64> %11 to <32 x i8>
  %19 = icmp eq i32 %3, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %5
  %21 = zext i32 %3 to i64
  br label %23

22:                                               ; preds = %48, %5
  ret void

23:                                               ; preds = %20, %48
  %24 = phi i64 [ 0, %20 ], [ %49, %48 ]
  %25 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %24, i32 0
  %26 = load i8*, i8** %25, align 8, !tbaa !11
  %27 = ptrtoint i8* %26 to i64
  %28 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %24, i32 4
  %29 = load i32, i32* %28, align 8, !tbaa !12
  %30 = zext i32 %29 to i64
  %31 = add i64 %30, %27
  %32 = and i64 %31, -32
  %33 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %24, i32 5
  %34 = inttoptr i64 %32 to i8*
  %35 = load i32, i32* %33, align 4, !tbaa !13
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %26, i64 %36
  %38 = icmp ult i8* %37, %34
  br i1 %38, label %48, label %39

39:                                               ; preds = %23
  %40 = insertelement <4 x i64> undef, i64 %32, i32 0
  %41 = insertelement <2 x i64> poison, i64 %32, i32 0
  %42 = shufflevector <2 x i64> %41, <2 x i64> poison, <2 x i32> zeroinitializer
  %43 = or <2 x i64> %42, <i64 8, i64 16>
  %44 = shufflevector <2 x i64> %43, <2 x i64> poison, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %45 = shufflevector <4 x i64> %40, <4 x i64> %44, <4 x i32> <i32 0, i32 4, i32 5, i32 undef>
  %46 = or i64 %32, 24
  %47 = insertelement <4 x i64> %45, i64 %46, i32 3
  br label %51

48:                                               ; preds = %51, %23
  %49 = add nuw nsw i64 %24, 1
  %50 = icmp eq i64 %49, %21
  br i1 %50, label %22, label %23, !llvm.loop !27

51:                                               ; preds = %39, %51
  %52 = phi i8* [ %61, %51 ], [ %34, %39 ]
  %53 = phi <4 x i64> [ %60, %51 ], [ %47, %39 ]
  %54 = icmp eq <4 x i64> %53, %14
  %55 = select <4 x i1> %54, <4 x i64> %17, <4 x i64> zeroinitializer
  %56 = bitcast i8* %52 to <32 x i8>*
  %57 = load <32 x i8>, <32 x i8>* %56, align 1, !tbaa !14
  %58 = bitcast <4 x i64> %55 to <32 x i8>
  %59 = tail call <32 x i8> @llvm.x86.avx2.pblendvb(<32 x i8> %57, <32 x i8> %18, <32 x i8> %58) #14
  store <32 x i8> %59, <32 x i8>* %56, align 1, !tbaa !14
  %60 = add <4 x i64> %53, <i64 32, i64 32, i64 32, i64 32>
  %61 = getelementptr inbounds i8, i8* %52, i64 32
  %62 = load i8*, i8** %25, align 8, !tbaa !11
  %63 = load i32, i32* %33, align 4, !tbaa !13
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  %66 = icmp ugt i8* %61, %65
  br i1 %66, label %48, label %51, !llvm.loop !28
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define dso_local void @uint32_t_secure_store_impl(i32 %0, i32* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #6 {
  %6 = zext i32 %0 to i64
  %7 = ptrtoint i32* %1 to i64
  %8 = shl i64 %7, 3
  %9 = and i64 %8, 56
  %10 = shl i64 %6, %9
  %11 = insertelement <4 x i64> undef, i64 %10, i32 0
  %12 = shufflevector <4 x i64> %11, <4 x i64> poison, <4 x i32> zeroinitializer
  %13 = and i64 %7, -8
  %14 = insertelement <4 x i64> undef, i64 %13, i32 0
  %15 = shufflevector <4 x i64> %14, <4 x i64> poison, <4 x i32> zeroinitializer
  %16 = shl i64 4294967295, %9
  %17 = insertelement <4 x i64> undef, i64 %16, i32 0
  %18 = shufflevector <4 x i64> %17, <4 x i64> poison, <4 x i32> zeroinitializer
  %19 = bitcast <4 x i64> %12 to <32 x i8>
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %5
  %22 = zext i32 %3 to i64
  br label %24

23:                                               ; preds = %49, %5
  ret void

24:                                               ; preds = %21, %49
  %25 = phi i64 [ 0, %21 ], [ %50, %49 ]
  %26 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !11
  %28 = ptrtoint i8* %27 to i64
  %29 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 4
  %30 = load i32, i32* %29, align 8, !tbaa !12
  %31 = zext i32 %30 to i64
  %32 = add i64 %31, %28
  %33 = and i64 %32, -32
  %34 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 5
  %35 = inttoptr i64 %33 to i8*
  %36 = load i32, i32* %34, align 4, !tbaa !13
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = icmp ult i8* %38, %35
  br i1 %39, label %49, label %40

40:                                               ; preds = %24
  %41 = insertelement <4 x i64> undef, i64 %33, i32 0
  %42 = insertelement <2 x i64> poison, i64 %33, i32 0
  %43 = shufflevector <2 x i64> %42, <2 x i64> poison, <2 x i32> zeroinitializer
  %44 = or <2 x i64> %43, <i64 8, i64 16>
  %45 = shufflevector <2 x i64> %44, <2 x i64> poison, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %46 = shufflevector <4 x i64> %41, <4 x i64> %45, <4 x i32> <i32 0, i32 4, i32 5, i32 undef>
  %47 = or i64 %33, 24
  %48 = insertelement <4 x i64> %46, i64 %47, i32 3
  br label %52

49:                                               ; preds = %52, %24
  %50 = add nuw nsw i64 %25, 1
  %51 = icmp eq i64 %50, %22
  br i1 %51, label %23, label %24, !llvm.loop !29

52:                                               ; preds = %40, %52
  %53 = phi i8* [ %62, %52 ], [ %35, %40 ]
  %54 = phi <4 x i64> [ %61, %52 ], [ %48, %40 ]
  %55 = icmp eq <4 x i64> %54, %15
  %56 = select <4 x i1> %55, <4 x i64> %18, <4 x i64> zeroinitializer
  %57 = bitcast i8* %53 to <32 x i8>*
  %58 = load <32 x i8>, <32 x i8>* %57, align 1, !tbaa !14
  %59 = bitcast <4 x i64> %56 to <32 x i8>
  %60 = tail call <32 x i8> @llvm.x86.avx2.pblendvb(<32 x i8> %58, <32 x i8> %19, <32 x i8> %59) #14
  store <32 x i8> %60, <32 x i8>* %57, align 1, !tbaa !14
  %61 = add <4 x i64> %54, <i64 32, i64 32, i64 32, i64 32>
  %62 = getelementptr inbounds i8, i8* %53, i64 32
  %63 = load i8*, i8** %26, align 8, !tbaa !11
  %64 = load i32, i32* %34, align 4, !tbaa !13
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = icmp ugt i8* %62, %66
  br i1 %67, label %49, label %52, !llvm.loop !30
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define dso_local void @uint16_t_secure_store_impl(i16 zeroext %0, i16* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #6 {
  %6 = zext i16 %0 to i64
  %7 = ptrtoint i16* %1 to i64
  %8 = shl i64 %7, 3
  %9 = and i64 %8, 56
  %10 = shl i64 %6, %9
  %11 = insertelement <4 x i64> undef, i64 %10, i32 0
  %12 = shufflevector <4 x i64> %11, <4 x i64> poison, <4 x i32> zeroinitializer
  %13 = and i64 %7, -8
  %14 = insertelement <4 x i64> undef, i64 %13, i32 0
  %15 = shufflevector <4 x i64> %14, <4 x i64> poison, <4 x i32> zeroinitializer
  %16 = shl i64 65535, %9
  %17 = insertelement <4 x i64> undef, i64 %16, i32 0
  %18 = shufflevector <4 x i64> %17, <4 x i64> poison, <4 x i32> zeroinitializer
  %19 = bitcast <4 x i64> %12 to <32 x i8>
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %5
  %22 = zext i32 %3 to i64
  br label %24

23:                                               ; preds = %49, %5
  ret void

24:                                               ; preds = %21, %49
  %25 = phi i64 [ 0, %21 ], [ %50, %49 ]
  %26 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !11
  %28 = ptrtoint i8* %27 to i64
  %29 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 4
  %30 = load i32, i32* %29, align 8, !tbaa !12
  %31 = zext i32 %30 to i64
  %32 = add i64 %31, %28
  %33 = and i64 %32, -32
  %34 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 5
  %35 = inttoptr i64 %33 to i8*
  %36 = load i32, i32* %34, align 4, !tbaa !13
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = icmp ult i8* %38, %35
  br i1 %39, label %49, label %40

40:                                               ; preds = %24
  %41 = insertelement <4 x i64> undef, i64 %33, i32 0
  %42 = insertelement <2 x i64> poison, i64 %33, i32 0
  %43 = shufflevector <2 x i64> %42, <2 x i64> poison, <2 x i32> zeroinitializer
  %44 = or <2 x i64> %43, <i64 8, i64 16>
  %45 = shufflevector <2 x i64> %44, <2 x i64> poison, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %46 = shufflevector <4 x i64> %41, <4 x i64> %45, <4 x i32> <i32 0, i32 4, i32 5, i32 undef>
  %47 = or i64 %33, 24
  %48 = insertelement <4 x i64> %46, i64 %47, i32 3
  br label %52

49:                                               ; preds = %52, %24
  %50 = add nuw nsw i64 %25, 1
  %51 = icmp eq i64 %50, %22
  br i1 %51, label %23, label %24, !llvm.loop !31

52:                                               ; preds = %40, %52
  %53 = phi i8* [ %62, %52 ], [ %35, %40 ]
  %54 = phi <4 x i64> [ %61, %52 ], [ %48, %40 ]
  %55 = icmp eq <4 x i64> %54, %15
  %56 = select <4 x i1> %55, <4 x i64> %18, <4 x i64> zeroinitializer
  %57 = bitcast i8* %53 to <32 x i8>*
  %58 = load <32 x i8>, <32 x i8>* %57, align 1, !tbaa !14
  %59 = bitcast <4 x i64> %56 to <32 x i8>
  %60 = tail call <32 x i8> @llvm.x86.avx2.pblendvb(<32 x i8> %58, <32 x i8> %19, <32 x i8> %59) #14
  store <32 x i8> %60, <32 x i8>* %57, align 1, !tbaa !14
  %61 = add <4 x i64> %54, <i64 32, i64 32, i64 32, i64 32>
  %62 = getelementptr inbounds i8, i8* %53, i64 32
  %63 = load i8*, i8** %26, align 8, !tbaa !11
  %64 = load i32, i32* %34, align 4, !tbaa !13
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = icmp ugt i8* %62, %66
  br i1 %67, label %49, label %52, !llvm.loop !32
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define dso_local void @uint8_t_secure_store_impl(i8 zeroext %0, i8* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #6 {
  %6 = zext i8 %0 to i64
  %7 = ptrtoint i8* %1 to i64
  %8 = shl i64 %7, 3
  %9 = and i64 %8, 56
  %10 = shl nuw i64 %6, %9
  %11 = insertelement <4 x i64> undef, i64 %10, i32 0
  %12 = shufflevector <4 x i64> %11, <4 x i64> poison, <4 x i32> zeroinitializer
  %13 = and i64 %7, -8
  %14 = insertelement <4 x i64> undef, i64 %13, i32 0
  %15 = shufflevector <4 x i64> %14, <4 x i64> poison, <4 x i32> zeroinitializer
  %16 = shl nuw i64 255, %9
  %17 = insertelement <4 x i64> undef, i64 %16, i32 0
  %18 = shufflevector <4 x i64> %17, <4 x i64> poison, <4 x i32> zeroinitializer
  %19 = bitcast <4 x i64> %12 to <32 x i8>
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %5
  %22 = zext i32 %3 to i64
  br label %24

23:                                               ; preds = %49, %5
  ret void

24:                                               ; preds = %21, %49
  %25 = phi i64 [ 0, %21 ], [ %50, %49 ]
  %26 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !11
  %28 = ptrtoint i8* %27 to i64
  %29 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 4
  %30 = load i32, i32* %29, align 8, !tbaa !12
  %31 = zext i32 %30 to i64
  %32 = add i64 %31, %28
  %33 = and i64 %32, -32
  %34 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 %25, i32 5
  %35 = inttoptr i64 %33 to i8*
  %36 = load i32, i32* %34, align 4, !tbaa !13
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = icmp ult i8* %38, %35
  br i1 %39, label %49, label %40

40:                                               ; preds = %24
  %41 = insertelement <4 x i64> undef, i64 %33, i32 0
  %42 = insertelement <2 x i64> poison, i64 %33, i32 0
  %43 = shufflevector <2 x i64> %42, <2 x i64> poison, <2 x i32> zeroinitializer
  %44 = or <2 x i64> %43, <i64 8, i64 16>
  %45 = shufflevector <2 x i64> %44, <2 x i64> poison, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %46 = shufflevector <4 x i64> %41, <4 x i64> %45, <4 x i32> <i32 0, i32 4, i32 5, i32 undef>
  %47 = or i64 %33, 24
  %48 = insertelement <4 x i64> %46, i64 %47, i32 3
  br label %52

49:                                               ; preds = %52, %24
  %50 = add nuw nsw i64 %25, 1
  %51 = icmp eq i64 %50, %22
  br i1 %51, label %23, label %24, !llvm.loop !33

52:                                               ; preds = %40, %52
  %53 = phi i8* [ %62, %52 ], [ %35, %40 ]
  %54 = phi <4 x i64> [ %61, %52 ], [ %48, %40 ]
  %55 = icmp eq <4 x i64> %54, %15
  %56 = select <4 x i1> %55, <4 x i64> %18, <4 x i64> zeroinitializer
  %57 = bitcast i8* %53 to <32 x i8>*
  %58 = load <32 x i8>, <32 x i8>* %57, align 1, !tbaa !14
  %59 = bitcast <4 x i64> %56 to <32 x i8>
  %60 = tail call <32 x i8> @llvm.x86.avx2.pblendvb(<32 x i8> %58, <32 x i8> %19, <32 x i8> %59) #14
  store <32 x i8> %60, <32 x i8>* %57, align 1, !tbaa !14
  %61 = add <4 x i64> %54, <i64 32, i64 32, i64 32, i64 32>
  %62 = getelementptr inbounds i8, i8* %53, i64 32
  %63 = load i8*, i8** %26, align 8, !tbaa !11
  %64 = load i32, i32* %34, align 4, !tbaa !13
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = icmp ugt i8* %62, %66
  br i1 %67, label %49, label %52, !llvm.loop !34
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local void @uint64_t_secure_store(i64 %0, i64* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #7 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = icmp eq i64* %1, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  store i64 %0, i64* %1, align 8, !tbaa !25
  br label %11

10:                                               ; preds = %5
  tail call void @uint64_t_secure_store_impl(i64 %0, i64* %1, %struct.ds_base* %2, i32 %3, i32 undef)
  br label %11

11:                                               ; preds = %7, %9, %10
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local void @uint32_t_secure_store(i32 %0, i32* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #7 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = icmp eq i32* %1, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  store i32 %0, i32* %1, align 4, !tbaa !35
  br label %11

10:                                               ; preds = %5
  tail call void @uint32_t_secure_store_impl(i32 %0, i32* %1, %struct.ds_base* %2, i32 %3, i32 undef)
  br label %11

11:                                               ; preds = %7, %9, %10
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local void @uint16_t_secure_store(i16 zeroext %0, i16* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #7 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = icmp eq i16* %1, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  store i16 %0, i16* %1, align 2, !tbaa !36
  br label %11

10:                                               ; preds = %5
  tail call void @uint16_t_secure_store_impl(i16 zeroext %0, i16* %1, %struct.ds_base* %2, i32 %3, i32 undef)
  br label %11

11:                                               ; preds = %7, %9, %10
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local void @uint8_t_secure_store(i8 zeroext %0, i8* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #7 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = icmp eq i8* %1, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  store i8 %0, i8* %1, align 1, !tbaa !14
  br label %11

10:                                               ; preds = %5
  tail call void @uint8_t_secure_store_impl(i8 zeroext %0, i8* %1, %struct.ds_base* %2, i32 %3, i32 undef)
  br label %11

11:                                               ; preds = %7, %9, %10
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @uint64_t_secure_store_sensitive(i64 %0, i64* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #5 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %7, label %30

7:                                                ; preds = %5
  %8 = icmp eq i64* %1, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = inttoptr i64 %0 to i8*
  %11 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8, !tbaa !11
  %13 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 4
  %14 = load i32, i32* %13, align 8, !tbaa !12
  %15 = zext i32 %14 to i64
  br label %23

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !11
  %19 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 4
  %20 = load i32, i32* %19, align 8, !tbaa !12
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  br label %23

23:                                               ; preds = %16, %9
  %24 = phi i64 [ %21, %16 ], [ %15, %9 ]
  %25 = phi i8* [ %18, %16 ], [ %12, %9 ]
  %26 = phi i8* [ %22, %16 ], [ %10, %9 ]
  %27 = ptrtoint i8* %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %24
  %29 = bitcast i8* %28 to i64*
  store volatile i64 %27, i64* %29, align 8, !tbaa !25
  br label %31

30:                                               ; preds = %5
  tail call void @uint64_t_secure_store_impl(i64 %0, i64* %1, %struct.ds_base* %2, i32 %3, i32 undef)
  br label %31

31:                                               ; preds = %30, %23
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @uint32_t_secure_store_sensitive(i32 %0, i32* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #5 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %7, label %32

7:                                                ; preds = %5
  %8 = icmp eq i32* %1, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = zext i32 %0 to i64
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !11
  %14 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 4
  %15 = load i32, i32* %14, align 8, !tbaa !12
  %16 = zext i32 %15 to i64
  br label %24

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8, !tbaa !11
  %20 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !tbaa !12
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  br label %24

24:                                               ; preds = %17, %9
  %25 = phi i64 [ %22, %17 ], [ %16, %9 ]
  %26 = phi i8* [ %19, %17 ], [ %13, %9 ]
  %27 = phi i8* [ %23, %17 ], [ %11, %9 ]
  %28 = ptrtoint i8* %27 to i64
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds i8, i8* %26, i64 %25
  %31 = bitcast i8* %30 to i32*
  store volatile i32 %29, i32* %31, align 4, !tbaa !35
  br label %33

32:                                               ; preds = %5
  tail call void @uint32_t_secure_store_impl(i32 %0, i32* %1, %struct.ds_base* %2, i32 %3, i32 undef)
  br label %33

33:                                               ; preds = %32, %24
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @uint16_t_secure_store_sensitive(i16 zeroext %0, i16* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #5 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %7, label %32

7:                                                ; preds = %5
  %8 = icmp eq i16* %1, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = zext i16 %0 to i64
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !11
  %14 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 4
  %15 = load i32, i32* %14, align 8, !tbaa !12
  %16 = zext i32 %15 to i64
  br label %24

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8, !tbaa !11
  %20 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !tbaa !12
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  br label %24

24:                                               ; preds = %17, %9
  %25 = phi i64 [ %22, %17 ], [ %16, %9 ]
  %26 = phi i8* [ %19, %17 ], [ %13, %9 ]
  %27 = phi i8* [ %23, %17 ], [ %11, %9 ]
  %28 = ptrtoint i8* %27 to i64
  %29 = trunc i64 %28 to i16
  %30 = getelementptr inbounds i8, i8* %26, i64 %25
  %31 = bitcast i8* %30 to i16*
  store volatile i16 %29, i16* %31, align 2, !tbaa !36
  br label %33

32:                                               ; preds = %5
  tail call void @uint16_t_secure_store_impl(i16 zeroext %0, i16* %1, %struct.ds_base* %2, i32 %3, i32 undef)
  br label %33

33:                                               ; preds = %32, %24
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @uint8_t_secure_store_sensitive(i8 zeroext %0, i8* %1, %struct.ds_base* nocapture readonly %2, i32 %3, i32 %4) local_unnamed_addr #5 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %7, label %31

7:                                                ; preds = %5
  %8 = icmp eq i8* %1, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = zext i8 %0 to i64
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !11
  %14 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 4
  %15 = load i32, i32* %14, align 8, !tbaa !12
  %16 = zext i32 %15 to i64
  br label %24

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8, !tbaa !11
  %20 = getelementptr inbounds %struct.ds_base, %struct.ds_base* %2, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !tbaa !12
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  br label %24

24:                                               ; preds = %17, %9
  %25 = phi i64 [ %22, %17 ], [ %16, %9 ]
  %26 = phi i8* [ %19, %17 ], [ %13, %9 ]
  %27 = phi i8* [ %23, %17 ], [ %11, %9 ]
  %28 = ptrtoint i8* %27 to i64
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds i8, i8* %26, i64 %25
  store volatile i8 %29, i8* %30, align 1, !tbaa !14
  br label %32

31:                                               ; preds = %5
  tail call void @uint8_t_secure_store_impl(i8 zeroext %0, i8* %1, %struct.ds_base* %2, i32 %3, i32 undef)
  br label %32

32:                                               ; preds = %31, %24
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local void @branch_id(i8* nocapture %0) local_unnamed_addr #8 {
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #5 {
  %1 = alloca [1 x %struct.ds_base], align 8
  %2 = alloca [1 x %struct.ds_base], align 8
  %3 = alloca [1 x %struct.ds_base], align 8
  %4 = alloca [1 x %struct.ds_base], align 8
  %5 = alloca [1 x %struct.ds_base], align 8
  %6 = alloca [1 x %struct.ds_base], align 8
  %7 = alloca [1 x %struct.ds_base], align 8
  %8 = alloca [1 x %struct.ds_base], align 8
  %9 = alloca [1 x %struct.ds_base], align 8
  %10 = alloca [1 x %struct.ds_base], align 8
  %11 = alloca [1 x %struct.ds_base], align 8
  %12 = alloca [1 x %struct.ds_base], align 8
  %13 = alloca [1 x %struct.ds_base], align 8
  %14 = alloca [1 x %struct.ds_base], align 8
  %15 = alloca [1 x %struct.ds_base], align 8
  %16 = alloca [1 x %struct.ds_base], align 8
  %17 = alloca [1 x %struct.ds_base], align 8
  %18 = alloca [1 x %struct.ds_base], align 8
  %19 = alloca [1 x %struct.ds_base], align 8
  %20 = alloca [1 x %struct.ds_base], align 8
  %21 = alloca [1 x %struct.ds_base], align 8
  %22 = alloca [1 x %struct.ds_base], align 8
  %23 = alloca [1 x %struct.ds_base], align 8
  %24 = alloca [1 x %struct.ds_base], align 8
  %25 = alloca [1 x %struct.ds_base], align 8
  %26 = alloca [1 x %struct.ds_base], align 8
  %27 = alloca [1 x %struct.ds_base], align 8
  %28 = alloca [1 x %struct.ds_base], align 8
  %29 = alloca [1 x %struct.ds_base], align 8
  %30 = alloca [1 x %struct.ds_base], align 8
  %31 = alloca [1 x %struct.ds_base], align 8
  %32 = alloca [1 x %struct.ds_base], align 8
  %33 = alloca [1 x %struct.ds_base], align 8
  %34 = alloca [1 x %struct.ds_base], align 8
  %35 = alloca [1 x %struct.ds_base], align 8
  %36 = alloca [1 x %struct.ds_base], align 8
  %37 = alloca [1 x %struct.ds_base], align 8
  %38 = alloca [1 x %struct.ds_base], align 8
  %39 = alloca [1 x %struct.ds_base], align 8
  %40 = alloca [1 x %struct.ds_base], align 8
  %41 = alloca [1 x %struct.ds_base], align 8
  %42 = alloca [1 x %struct.ds_base], align 8
  %43 = alloca [1 x %struct.ds_base], align 8
  %44 = alloca [1 x %struct.ds_base], align 8
  %45 = alloca [1 x %struct.ds_base], align 8
  %46 = alloca [1 x %struct.ds_base], align 8
  %47 = alloca [1 x %struct.ds_base], align 8
  %48 = alloca [1 x %struct.ds_base], align 8
  %49 = alloca [1 x %struct.ds_base], align 8
  %50 = alloca [1 x %struct.ds_base], align 8
  %51 = alloca [1 x %struct.ds_base], align 8
  %52 = alloca [1 x %struct.ds_base], align 8
  %53 = alloca [1 x %struct.ds_base], align 8
  %54 = alloca [1 x %struct.ds_base], align 8
  %55 = alloca [1 x %struct.ds_base], align 8
  %56 = alloca [1 x %struct.ds_base], align 8
  %57 = alloca [1 x %struct.ds_base], align 8
  %58 = alloca [1 x %struct.ds_base], align 8
  %59 = alloca [1 x %struct.ds_base], align 8
  %60 = alloca [1 x %struct.ds_base], align 8
  %61 = alloca [1 x %struct.ds_base], align 8
  %62 = alloca [1 x %struct.ds_base], align 8
  %63 = alloca [1 x %struct.ds_base], align 8
  %64 = alloca [1 x %struct.ds_base], align 8
  %65 = alloca [1 x %struct.ds_base], align 8
  %66 = alloca [1 x %struct.ds_base], align 8
  %67 = alloca [1 x %struct.ds_base], align 8
  %68 = alloca [1 x %struct.ds_base], align 8
  %69 = alloca [1 x %struct.ds_base], align 8
  %70 = alloca [1 x %struct.ds_base], align 8
  %71 = alloca [1 x %struct.ds_base], align 8
  %72 = alloca [1 x %struct.ds_base], align 8
  %73 = alloca [1 x %struct.ds_base], align 8
  %74 = alloca [1 x %struct.ds_base], align 8
  %75 = alloca [1 x %struct.ds_base], align 8
  %76 = alloca [1 x %struct.ds_base], align 8
  %77 = alloca [1 x %struct.ds_base], align 8
  %78 = alloca [1 x %struct.ds_base], align 8
  %79 = alloca [1 x %struct.ds_base], align 8
  %80 = alloca [1 x %struct.ds_base], align 8
  %81 = alloca [1 x %struct.ds_base], align 8
  %82 = alloca [1 x %struct.ds_base], align 8
  %83 = alloca [1 x %struct.ds_base], align 8
  %84 = alloca [1 x %struct.ds_base], align 8
  %85 = alloca [1 x %struct.ds_base], align 8
  %86 = alloca [1 x %struct.ds_base], align 8
  %87 = alloca [1 x %struct.ds_base], align 8
  %88 = alloca [1 x %struct.ds_base], align 8
  %89 = alloca [1 x %struct.ds_base], align 8
  %90 = alloca [1 x %struct.ds_base], align 8
  %91 = alloca [1 x %struct.ds_base], align 8
  %92 = alloca [1 x %struct.ds_base], align 8
  %93 = alloca [1 x %struct.ds_base], align 8
  %94 = alloca [1 x %struct.ds_base], align 8
  %95 = alloca [1 x %struct.ds_base], align 8
  %96 = alloca [1 x %struct.ds_base], align 8
  %97 = alloca [1 x %struct.ds_base], align 8
  %98 = alloca [1 x %struct.ds_base], align 8
  %99 = alloca [1 x %struct.ds_base], align 8
  %100 = alloca [1 x %struct.ds_base], align 8
  %101 = alloca [1 x %struct.ds_base], align 8
  %102 = alloca [1 x %struct.ds_base], align 8
  %103 = alloca [1 x %struct.ds_base], align 8
  %104 = alloca [1 x %struct.ds_base], align 8
  %105 = alloca [1 x %struct.ds_base], align 8
  %106 = alloca [1 x %struct.ds_base], align 8
  %107 = alloca [1 x %struct.ds_base], align 8
  %108 = alloca [1 x %struct.ds_base], align 8
  %109 = alloca [1 x %struct.ds_base], align 8
  %110 = alloca [1 x %struct.ds_base], align 8
  %111 = alloca [1 x %struct.ds_base], align 8
  %112 = alloca [1 x %struct.ds_base], align 8
  %113 = alloca [1 x %struct.ds_base], align 8
  %114 = alloca [1 x %struct.ds_base], align 8
  %115 = alloca [1 x %struct.ds_base], align 8
  %116 = alloca [1 x %struct.ds_base], align 8
  %117 = alloca [1 x %struct.ds_base], align 8
  %118 = alloca [1 x %struct.ds_base], align 8
  %119 = alloca [1 x %struct.ds_base], align 8
  %120 = alloca [1 x %struct.ds_base], align 8
  %121 = alloca [1 x %struct.ds_base], align 8
  %122 = alloca [1 x %struct.ds_base], align 8
  %123 = alloca [1 x %struct.ds_base], align 8
  %124 = alloca [1 x %struct.ds_base], align 8
  %125 = alloca [1 x %struct.ds_base], align 8
  %126 = alloca [1 x %struct.ds_base], align 8
  %127 = alloca [1 x %struct.ds_base], align 8
  %128 = alloca [1 x %struct.ds_base], align 8
  %129 = alloca [1 x %struct.ds_base], align 8
  %130 = alloca [1 x %struct.ds_base], align 8
  %131 = alloca [1 x %struct.ds_base], align 8
  %132 = alloca [1 x %struct.ds_base], align 8
  %133 = alloca [1 x %struct.ds_base], align 8
  %134 = alloca [1 x %struct.ds_base], align 8
  %135 = alloca [1 x %struct.ds_base], align 8
  %136 = alloca [1 x %struct.ds_base], align 8
  %137 = alloca [1 x %struct.ds_base], align 8
  %138 = alloca [1 x %struct.ds_base], align 8
  %139 = alloca [1 x %struct.ds_base], align 8
  %140 = alloca [1 x %struct.ds_base], align 8
  %141 = alloca [1 x %struct.ds_base], align 8
  %142 = alloca [1 x %struct.ds_base], align 8
  %143 = alloca [1 x %struct.ds_base], align 8
  %144 = alloca [1 x %struct.ds_base], align 8
  %145 = alloca [1 x %struct.ds_base], align 8
  %146 = alloca [1 x %struct.ds_base], align 8
  %147 = alloca [1 x %struct.ds_base], align 8
  %148 = alloca [1 x %struct.ds_base], align 8
  %149 = alloca [1 x %struct.ds_base], align 8
  %150 = alloca [1 x %struct.ds_base], align 8
  %151 = alloca [1 x %struct.ds_base], align 8
  %152 = alloca [1 x %struct.ds_base], align 8
  %153 = alloca [1 x %struct.ds_base], align 8
  %154 = alloca [1 x %struct.ds_base], align 8
  %155 = alloca [1 x %struct.ds_base], align 8
  %156 = alloca [1 x %struct.ds_base], align 8
  %157 = alloca [1 x %struct.ds_base], align 8
  %158 = alloca [1 x %struct.ds_base], align 8
  %159 = alloca [1 x %struct.ds_base], align 8
  %160 = alloca [1 x %struct.ds_base], align 8
  %161 = alloca [1 x %struct.ds_base], align 8
  %162 = alloca [1 x %struct.ds_base], align 8
  %163 = alloca [1 x %struct.ds_base], align 8
  %164 = alloca [1 x %struct.ds_base], align 8
  %165 = alloca [1 x %struct.ds_base], align 8
  %166 = alloca [1 x %struct.ds_base], align 8
  %167 = alloca [1 x %struct.ds_base], align 8
  %168 = alloca [1 x %struct.ds_base], align 8
  %169 = alloca [1 x %struct.ds_base], align 8
  %170 = alloca [1 x %struct.ds_base], align 8
  %171 = alloca [1 x %struct.ds_base], align 8
  %172 = alloca [1 x %struct.ds_base], align 8
  %173 = alloca [1 x %struct.ds_base], align 8
  %174 = alloca [1 x %struct.ds_base], align 8
  %175 = alloca [1 x %struct.ds_base], align 8
  %176 = alloca [1 x %struct.ds_base], align 8
  %177 = alloca [1 x %struct.ds_base], align 8
  %178 = alloca [1 x %struct.ds_base], align 8
  %179 = alloca [1 x %struct.ds_base], align 8
  %180 = alloca [1 x %struct.ds_base], align 8
  %181 = alloca [1 x %struct.ds_base], align 8
  %182 = alloca [1 x %struct.ds_base], align 8
  %183 = alloca [1 x %struct.ds_base], align 8
  %184 = alloca [1 x %struct.ds_base], align 8
  %185 = alloca [1 x %struct.ds_base], align 8
  %186 = alloca [1 x %struct.ds_base], align 8
  %187 = alloca [1 x %struct.ds_base], align 8
  %188 = alloca [1 x %struct.ds_base], align 8
  %189 = alloca [1 x %struct.ds_base], align 8
  %190 = alloca [1 x %struct.ds_base], align 8
  %191 = alloca [1 x %struct.ds_base], align 8
  %192 = alloca [1 x %struct.ds_base], align 8
  %193 = alloca [1 x %struct.ds_base], align 8
  %194 = alloca [1 x %struct.ds_base], align 8
  %195 = alloca [1 x %struct.ds_base], align 8
  %196 = alloca [1 x %struct.ds_base], align 8
  %197 = alloca [1 x %struct.ds_base], align 8
  %198 = alloca [1 x %struct.ds_base], align 8
  %199 = alloca [1 x %struct.ds_base], align 8
  %200 = alloca [1 x %struct.ds_base], align 8
  %201 = alloca [1 x %struct.ds_base], align 8
  %202 = alloca [1 x %struct.ds_base], align 8
  %203 = alloca [1 x %struct.ds_base], align 8
  %204 = alloca [1 x %struct.ds_base], align 8
  %205 = alloca [1 x %struct.ds_base], align 8
  %206 = alloca [1 x %struct.ds_base], align 8
  %207 = alloca [1 x %struct.ds_base], align 8
  %208 = alloca [1 x %struct.ds_base], align 8
  %209 = alloca [1 x %struct.ds_base], align 8
  %210 = alloca [1 x %struct.ds_base], align 8
  %211 = alloca [1 x %struct.ds_base], align 8
  %212 = alloca [1 x %struct.ds_base], align 8
  %213 = alloca [1 x %struct.ds_base], align 8
  %214 = alloca [1 x %struct.ds_base], align 8
  %215 = alloca [1 x %struct.ds_base], align 8
  %216 = alloca [1 x %struct.ds_base], align 8
  %217 = alloca [1 x %struct.ds_base], align 8
  %218 = alloca [1 x %struct.ds_base], align 8
  %219 = alloca [1 x %struct.ds_base], align 8
  %220 = alloca [1 x %struct.ds_base], align 8
  %221 = alloca [1 x %struct.ds_base], align 8
  %222 = alloca [1 x %struct.ds_base], align 8
  %223 = alloca [1 x %struct.ds_base], align 8
  %224 = alloca [1 x %struct.ds_base], align 8
  %225 = alloca [1 x %struct.ds_base], align 8
  %226 = alloca [1 x %struct.ds_base], align 8
  %227 = alloca [1 x %struct.ds_base], align 8
  %228 = alloca [1 x %struct.ds_base], align 8
  %229 = alloca [1 x %struct.ds_base], align 8
  %230 = alloca [1 x %struct.ds_base], align 8
  %231 = alloca [1 x %struct.ds_base], align 8
  %232 = alloca [1 x %struct.ds_base], align 8
  %233 = alloca [1 x %struct.ds_base], align 8
  %234 = alloca [1 x %struct.ds_base], align 8
  %235 = alloca [1 x %struct.ds_base], align 8
  %236 = alloca [1 x %struct.ds_base], align 8
  %237 = alloca [1 x %struct.ds_base], align 8
  %238 = alloca [1 x %struct.ds_base], align 8
  %239 = alloca [1 x %struct.ds_base], align 8
  %240 = alloca [1 x %struct.ds_base], align 8
  %241 = alloca [1 x %struct.ds_base], align 8
  %242 = alloca [1 x %struct.ds_base], align 8
  %243 = alloca [1 x %struct.ds_base], align 8
  %244 = alloca [1 x %struct.ds_base], align 8
  %245 = alloca [1 x %struct.ds_base], align 8
  %246 = alloca [1 x %struct.ds_base], align 8
  %247 = alloca [1 x %struct.ds_base], align 8
  %248 = alloca [1 x %struct.ds_base], align 8
  %249 = alloca [1 x %struct.ds_base], align 8
  %250 = alloca [1 x %struct.ds_base], align 8
  %251 = alloca [1 x %struct.ds_base], align 8
  %252 = alloca [1 x %struct.ds_base], align 8
  %253 = alloca [1 x %struct.ds_base], align 8
  %254 = alloca [1 x %struct.ds_base], align 8
  %255 = alloca [1 x %struct.ds_base], align 8
  %256 = alloca [1 x %struct.ds_base], align 8
  %257 = alloca [1 x %struct.ds_base], align 8
  %258 = alloca [1 x %struct.ds_base], align 8
  %259 = alloca [1 x %struct.ds_base], align 8
  %260 = alloca [1 x %struct.ds_base], align 8
  %261 = alloca [1 x %struct.ds_base], align 8
  %262 = alloca [1 x %struct.ds_base], align 8
  %263 = alloca [1 x %struct.ds_base], align 8
  %264 = alloca [1 x %struct.ds_base], align 8
  %265 = alloca [1 x %struct.ds_base], align 8
  %266 = alloca [1 x %struct.ds_base], align 8
  %267 = alloca [1 x %struct.ds_base], align 8
  %268 = alloca [1 x %struct.ds_base], align 8
  %269 = alloca [1 x %struct.ds_base], align 8
  %270 = alloca [1 x %struct.ds_base], align 8
  %271 = alloca [1 x %struct.ds_base], align 8
  %272 = alloca [1 x %struct.ds_base], align 8
  %273 = alloca [1 x %struct.ds_base], align 8
  %274 = alloca [1 x %struct.ds_base], align 8
  %275 = alloca [1 x %struct.ds_base], align 8
  %276 = alloca [1 x %struct.ds_base], align 8
  %277 = alloca [1 x %struct.ds_base], align 8
  %278 = alloca [1 x %struct.ds_base], align 8
  %279 = alloca [1 x %struct.ds_base], align 8
  %280 = alloca [1 x %struct.ds_base], align 8
  %281 = alloca [1 x %struct.ds_base], align 8
  %282 = alloca [1 x %struct.ds_base], align 8
  %283 = alloca [1 x %struct.ds_base], align 8
  %284 = alloca [1 x %struct.ds_base], align 8
  %285 = alloca [1 x %struct.ds_base], align 8
  %286 = alloca [1 x %struct.ds_base], align 8
  %287 = alloca [1 x %struct.ds_base], align 8
  %288 = alloca [1 x %struct.ds_base], align 8
  %289 = alloca [1 x %struct.ds_base], align 8
  %290 = alloca [1 x %struct.ds_base], align 8
  %291 = alloca [1 x %struct.ds_base], align 8
  %292 = alloca [1 x %struct.ds_base], align 8
  %293 = alloca [1 x %struct.ds_base], align 8
  %294 = alloca [1 x %struct.ds_base], align 8
  %295 = alloca [1 x %struct.ds_base], align 8
  %296 = alloca [1 x %struct.ds_base], align 8
  %297 = alloca [1 x %struct.ds_base], align 8
  %298 = alloca [1 x %struct.ds_base], align 8
  %299 = alloca [1 x %struct.ds_base], align 8
  %300 = alloca [1 x %struct.ds_base], align 8
  %301 = alloca [1 x %struct.ds_base], align 8
  %302 = alloca [1 x %struct.ds_base], align 8
  %303 = alloca [1 x %struct.ds_base], align 8
  %304 = alloca [1 x %struct.ds_base], align 8
  %305 = alloca [1 x %struct.ds_base], align 8
  %306 = alloca [1 x %struct.ds_base], align 8
  %307 = alloca [1 x %struct.ds_base], align 8
  %308 = alloca [1 x %struct.ds_base], align 8
  %309 = alloca [1 x %struct.ds_base], align 8
  %310 = alloca [1 x %struct.ds_base], align 8
  %311 = alloca [1 x %struct.ds_base], align 8
  %312 = alloca [1 x %struct.ds_base], align 8
  %313 = alloca [1 x %struct.ds_base], align 8
  %314 = alloca [1 x %struct.ds_base], align 8
  %315 = alloca [1 x %struct.ds_base], align 8
  %316 = alloca [1 x %struct.ds_base], align 8
  %317 = alloca [1 x %struct.ds_base], align 8
  %318 = alloca [1 x %struct.ds_base], align 8
  %319 = alloca [1 x %struct.ds_base], align 8
  %320 = alloca [1 x %struct.ds_base], align 8
  %321 = alloca [1 x %struct.ds_base], align 8
  %322 = alloca [1 x %struct.ds_base], align 8
  %323 = alloca [1 x %struct.ds_base], align 8
  %324 = alloca [1 x %struct.ds_base], align 8
  %325 = alloca [1 x %struct.ds_base], align 8
  %326 = alloca [1 x %struct.ds_base], align 8
  %327 = alloca [1 x %struct.ds_base], align 8
  %328 = alloca [1 x %struct.ds_base], align 8
  %329 = alloca [1 x %struct.ds_base], align 8
  %330 = alloca [1 x %struct.ds_base], align 8
  %331 = alloca [1 x %struct.ds_base], align 8
  %332 = alloca [1 x %struct.ds_base], align 8
  %333 = alloca [1 x %struct.ds_base], align 8
  %334 = alloca [1 x %struct.ds_base], align 8
  %335 = alloca [1 x %struct.ds_base], align 8
  %336 = alloca [1 x %struct.ds_base], align 8
  %337 = alloca [1 x %struct.ds_base], align 8
  %338 = alloca [1 x %struct.ds_base], align 8
  %339 = alloca [1 x %struct.ds_base], align 8
  %340 = alloca [1 x %struct.ds_base], align 8
  %341 = alloca [1 x %struct.ds_base], align 8
  %342 = alloca [1 x %struct.ds_base], align 8
  %343 = alloca [1 x %struct.ds_base], align 8
  %344 = alloca [1 x %struct.ds_base], align 8
  %345 = alloca [1 x %struct.ds_base], align 8
  %346 = alloca [1 x %struct.ds_base], align 8
  %347 = alloca [1 x %struct.ds_base], align 8
  %348 = alloca [1 x %struct.ds_base], align 8
  %349 = alloca [1 x %struct.ds_base], align 8
  %350 = alloca [1 x %struct.ds_base], align 8
  %351 = alloca [1 x %struct.ds_base], align 8
  %352 = alloca [1 x %struct.ds_base], align 8
  %353 = alloca [1 x %struct.ds_base], align 8
  %354 = alloca [1 x %struct.ds_base], align 8
  %355 = alloca [1 x %struct.ds_base], align 8
  %356 = alloca [1 x %struct.ds_base], align 8
  %357 = alloca [1 x %struct.ds_base], align 8
  %358 = alloca [1 x %struct.ds_base], align 8
  %359 = alloca [1 x %struct.ds_base], align 8
  %360 = alloca [1 x %struct.ds_base], align 8
  %361 = alloca [1 x %struct.ds_base], align 8
  %362 = alloca [1 x %struct.ds_base], align 8
  %363 = alloca [1 x %struct.ds_base], align 8
  %364 = alloca [1 x %struct.ds_base], align 8
  %365 = alloca [1 x %struct.ds_base], align 8
  %366 = alloca [1 x %struct.ds_base], align 8
  %367 = alloca [1 x %struct.ds_base], align 8
  %368 = alloca [1 x %struct.ds_base], align 8
  %369 = alloca [1 x %struct.ds_base], align 8
  %370 = alloca [1 x %struct.ds_base], align 8
  %371 = alloca [1 x %struct.ds_base], align 8
  %372 = alloca [1 x %struct.ds_base], align 8
  %373 = alloca [1 x %struct.ds_base], align 8
  %374 = alloca [1 x %struct.ds_base], align 8
  %375 = alloca [1 x %struct.ds_base], align 8
  %376 = alloca [1 x %struct.ds_base], align 8
  %377 = alloca [1 x %struct.ds_base], align 8
  %378 = alloca [1 x %struct.ds_base], align 8
  %379 = alloca [1 x %struct.ds_base], align 8
  %380 = alloca [1 x %struct.ds_base], align 8
  %381 = alloca [1 x %struct.ds_base], align 8
  %382 = alloca [1 x %struct.ds_base], align 8
  %383 = alloca [1 x %struct.ds_base], align 8
  %384 = alloca [1 x %struct.ds_base], align 8
  %385 = alloca [1 x %struct.ds_base], align 8
  %386 = alloca [1 x %struct.ds_base], align 8
  %387 = alloca [1 x %struct.ds_base], align 8
  %388 = alloca [1 x %struct.ds_base], align 8
  %389 = alloca [1 x %struct.ds_base], align 8
  %390 = alloca [1 x %struct.ds_base], align 8
  %391 = alloca [1 x %struct.ds_base], align 8
  %392 = alloca [1 x %struct.ds_base], align 8
  %393 = alloca [1 x %struct.ds_base], align 8
  %394 = alloca [1 x %struct.ds_base], align 8
  %395 = alloca [1 x %struct.ds_base], align 8
  %396 = alloca [1 x %struct.ds_base], align 8
  %397 = alloca [1 x %struct.ds_base], align 8
  %398 = alloca [1 x %struct.ds_base], align 8
  %399 = alloca [1 x %struct.ds_base], align 8
  %400 = alloca [1 x %struct.ds_base], align 8
  %401 = alloca [1 x %struct.ds_base], align 8
  %402 = alloca [1 x %struct.ds_base], align 8
  %403 = alloca [1 x %struct.ds_base], align 8
  %404 = alloca [1 x %struct.ds_base], align 8
  %405 = alloca [1 x %struct.ds_base], align 8
  %406 = alloca [1 x %struct.ds_base], align 8
  %407 = alloca [1 x %struct.ds_base], align 8
  %408 = alloca [1 x %struct.ds_base], align 8
  %409 = alloca [1 x %struct.ds_base], align 8
  %410 = alloca [1 x %struct.ds_base], align 8
  %411 = alloca [1 x %struct.ds_base], align 8
  %412 = alloca [1 x %struct.ds_base], align 8
  %413 = alloca [1 x %struct.ds_base], align 8
  %414 = alloca [1 x %struct.ds_base], align 8
  %415 = alloca [1 x %struct.ds_base], align 8
  %416 = alloca [1 x %struct.ds_base], align 8
  %417 = alloca [1 x %struct.ds_base], align 8
  %418 = alloca [1 x %struct.ds_base], align 8
  %419 = alloca [1 x %struct.ds_base], align 8
  %420 = alloca [1 x %struct.ds_base], align 8
  %421 = alloca [1 x %struct.ds_base], align 8
  %422 = alloca [1 x %struct.ds_base], align 8
  %423 = alloca [1 x %struct.ds_base], align 8
  %424 = alloca [1 x %struct.ds_base], align 8
  %425 = alloca [1 x %struct.ds_base], align 8
  %426 = alloca [1 x %struct.ds_base], align 8
  %427 = alloca [1 x %struct.ds_base], align 8
  %428 = alloca [1 x %struct.ds_base], align 8
  %429 = alloca [1 x %struct.ds_base], align 8
  %430 = alloca [1 x %struct.ds_base], align 8
  %431 = alloca [1 x %struct.ds_base], align 8
  %432 = alloca [1 x %struct.ds_base], align 8
  %433 = alloca [1 x %struct.ds_base], align 8
  %434 = alloca [1 x %struct.ds_base], align 8
  %435 = alloca [1 x %struct.ds_base], align 8
  %436 = alloca [1 x %struct.ds_base], align 8
  %437 = alloca [1 x %struct.ds_base], align 8
  %438 = alloca [1 x %struct.ds_base], align 8
  %439 = alloca [1 x %struct.ds_base], align 8
  %440 = alloca [1 x %struct.ds_base], align 8
  %441 = alloca [1 x %struct.ds_base], align 8
  %442 = alloca [1 x %struct.ds_base], align 8
  %443 = alloca [1 x %struct.ds_base], align 8
  %444 = alloca [1 x %struct.ds_base], align 8
  %445 = alloca [1 x %struct.ds_base], align 8
  %446 = alloca [1 x %struct.ds_base], align 8
  %447 = alloca [1 x %struct.ds_base], align 8
  %448 = alloca [1 x %struct.ds_base], align 8
  %449 = alloca [1 x %struct.ds_base], align 8
  %450 = alloca [1 x %struct.ds_base], align 8
  %451 = alloca [1 x %struct.ds_base], align 8
  %452 = alloca [1 x %struct.ds_base], align 8
  %453 = alloca [1 x %struct.ds_base], align 8
  %454 = alloca [1 x %struct.ds_base], align 8
  %455 = alloca [1 x %struct.ds_base], align 8
  %456 = alloca [1 x %struct.ds_base], align 8
  %457 = alloca [1 x %struct.ds_base], align 8
  %458 = alloca [1 x %struct.ds_base], align 8
  %459 = alloca [1 x %struct.ds_base], align 8
  %460 = alloca [1 x %struct.ds_base], align 8
  %461 = alloca [1 x %struct.ds_base], align 8
  %462 = alloca [1 x %struct.ds_base], align 8
  %463 = alloca [1 x %struct.ds_base], align 8
  %464 = alloca [1 x %struct.ds_base], align 8
  %465 = alloca [1 x %struct.ds_base], align 8
  %466 = alloca [1 x %struct.ds_base], align 8
  %467 = alloca [1 x %struct.ds_base], align 8
  %468 = alloca [1 x %struct.ds_base], align 8
  %469 = alloca [1 x %struct.ds_base], align 8
  %470 = alloca [1 x %struct.ds_base], align 8
  %471 = alloca [1 x %struct.ds_base], align 8
  %472 = alloca [1 x %struct.ds_base], align 8
  %473 = alloca [1 x %struct.ds_base], align 8
  %474 = alloca [1 x %struct.ds_base], align 8
  %475 = alloca [1 x %struct.ds_base], align 8
  %476 = alloca [1 x %struct.ds_base], align 8
  %477 = alloca [1 x %struct.ds_base], align 8
  %478 = alloca [1 x %struct.ds_base], align 8
  %479 = alloca [1 x %struct.ds_base], align 8
  %480 = alloca [1 x %struct.ds_base], align 8
  %481 = alloca [1 x %struct.ds_base], align 8
  %482 = alloca [1 x %struct.ds_base], align 8
  %483 = alloca [1 x %struct.ds_base], align 8
  %484 = alloca [1 x %struct.ds_base], align 8
  %485 = alloca [1 x %struct.ds_base], align 8
  %486 = alloca [1 x %struct.ds_base], align 8
  %487 = alloca [1 x %struct.ds_base], align 8
  %488 = alloca [1 x %struct.ds_base], align 8
  %489 = alloca [1 x %struct.ds_base], align 8
  %490 = alloca [1 x %struct.ds_base], align 8
  %491 = alloca [1 x %struct.ds_base], align 8
  %492 = alloca [1 x %struct.ds_base], align 8
  %493 = alloca [1 x %struct.ds_base], align 8
  %494 = alloca [1 x %struct.ds_base], align 8
  %495 = alloca [1 x %struct.ds_base], align 8
  %496 = alloca [1 x %struct.ds_base], align 8
  %497 = alloca [1 x %struct.ds_base], align 8
  %498 = alloca [1 x %struct.ds_base], align 8
  %499 = alloca [1 x %struct.ds_base], align 8
  %500 = alloca [1 x %struct.ds_base], align 8
  %501 = alloca [1 x %struct.ds_base], align 8
  %502 = alloca [1 x %struct.ds_base], align 8
  %503 = alloca [1 x %struct.ds_base], align 8
  %504 = alloca [1 x %struct.ds_base], align 8
  %505 = alloca [1 x %struct.ds_base], align 8
  %506 = alloca [1 x %struct.ds_base], align 8
  %507 = alloca [1 x %struct.ds_base], align 8
  %508 = alloca [1 x %struct.ds_base], align 8
  %509 = alloca [1 x %struct.ds_base], align 8
  %510 = alloca [1 x %struct.ds_base], align 8
  %511 = alloca [1 x %struct.ds_base], align 8
  %512 = alloca [1 x %struct.ds_base], align 8
  %513 = alloca [1 x %struct.ds_base], align 8
  %514 = alloca [1 x %struct.ds_base], align 8
  %515 = alloca [1 x %struct.ds_base], align 8
  %516 = alloca [1 x %struct.ds_base], align 8
  %517 = alloca [1 x %struct.ds_base], align 8
  %518 = alloca [1 x %struct.ds_base], align 8
  %519 = alloca [1 x %struct.ds_base], align 8
  %520 = alloca [1 x %struct.ds_base], align 8
  %521 = alloca [1 x %struct.ds_base], align 8
  %522 = alloca [1 x %struct.ds_base], align 8
  %523 = alloca [1 x %struct.ds_base], align 8
  %524 = alloca [1 x %struct.ds_base], align 8
  %525 = alloca [1 x %struct.ds_base], align 8
  %526 = alloca [1 x %struct.ds_base], align 8
  %527 = alloca [1 x %struct.ds_base], align 8
  %528 = alloca [1 x %struct.ds_base], align 8
  %529 = alloca [1 x %struct.ds_base], align 8
  %530 = alloca [1 x %struct.ds_base], align 8
  %531 = alloca [1 x %struct.ds_base], align 8
  %532 = alloca [1 x %struct.ds_base], align 8
  %533 = alloca [1 x %struct.ds_base], align 8
  %534 = alloca [1 x %struct.ds_base], align 8
  %535 = alloca [1 x %struct.ds_base], align 8
  %536 = alloca [1 x %struct.ds_base], align 8
  %537 = alloca [1 x %struct.ds_base], align 8
  %538 = alloca [1 x %struct.ds_base], align 8
  %539 = alloca [1 x %struct.ds_base], align 8
  %540 = alloca [1 x %struct.ds_base], align 8
  %541 = alloca [1 x %struct.ds_base], align 8
  %542 = alloca [1 x %struct.ds_base], align 8
  %543 = alloca [1 x %struct.ds_base], align 8
  %544 = alloca [1 x %struct.ds_base], align 8
  %545 = alloca [1 x %struct.ds_base], align 8
  %546 = alloca [1 x %struct.ds_base], align 8
  %547 = alloca [1 x %struct.ds_base], align 8
  %548 = alloca [1 x %struct.ds_base], align 8
  %549 = alloca [1 x %struct.ds_base], align 8
  %550 = alloca [1 x %struct.ds_base], align 8
  %551 = alloca [1 x %struct.ds_base], align 8
  %552 = alloca [1 x %struct.ds_base], align 8
  %553 = alloca [1 x %struct.ds_base], align 8
  %554 = alloca [1 x %struct.ds_base], align 8
  %555 = alloca [1 x %struct.ds_base], align 8
  %556 = alloca [1 x %struct.ds_base], align 8
  %557 = alloca [1 x %struct.ds_base], align 8
  %558 = alloca [1 x %struct.ds_base], align 8
  %559 = alloca [1 x %struct.ds_base], align 8
  %560 = alloca [1 x %struct.ds_base], align 8
  %561 = alloca [1 x %struct.ds_base], align 8
  %562 = alloca [1 x %struct.ds_base], align 8
  %563 = alloca [1 x %struct.ds_base], align 8
  %564 = alloca [1 x %struct.ds_base], align 8
  %565 = alloca [1 x %struct.ds_base], align 8
  %566 = alloca [1 x %struct.ds_base], align 8
  %567 = alloca [1 x %struct.ds_base], align 8
  %568 = alloca [1 x %struct.ds_base], align 8
  %569 = alloca [1 x %struct.ds_base], align 8
  %570 = alloca [1 x %struct.ds_base], align 8
  %571 = alloca [1 x %struct.ds_base], align 8
  %572 = alloca [1 x %struct.ds_base], align 8
  %573 = alloca [1 x %struct.ds_base], align 8
  %574 = alloca [1 x %struct.ds_base], align 8
  %575 = alloca [1 x %struct.ds_base], align 8
  %576 = alloca [1 x %struct.ds_base], align 8
  %577 = alloca [1 x %struct.ds_base], align 8
  %578 = alloca [1 x %struct.ds_base], align 8
  %579 = alloca [1 x %struct.ds_base], align 8
  %580 = alloca [1 x %struct.ds_base], align 8
  %581 = alloca [1 x %struct.ds_base], align 8
  %582 = alloca [1 x %struct.ds_base], align 8
  %583 = alloca [1 x %struct.ds_base], align 8
  %584 = alloca [1 x %struct.ds_base], align 8
  %585 = alloca [1 x %struct.ds_base], align 8
  %586 = alloca [1 x %struct.ds_base], align 8
  %587 = alloca [1 x %struct.ds_base], align 8
  %588 = alloca [1 x %struct.ds_base], align 8
  %589 = alloca [1 x %struct.ds_base], align 8
  %590 = alloca [1 x %struct.ds_base], align 8
  %591 = alloca [1 x %struct.ds_base], align 8
  %592 = alloca [1 x %struct.ds_base], align 8
  %593 = alloca [1 x %struct.ds_base], align 8
  %594 = alloca [1 x %struct.ds_base], align 8
  %595 = alloca [1 x %struct.ds_base], align 8
  %596 = alloca [1 x %struct.ds_base], align 8
  %597 = alloca [1 x %struct.ds_base], align 8
  %598 = alloca [1 x %struct.ds_base], align 8
  %599 = alloca [1 x %struct.ds_base], align 8
  %600 = alloca [1 x %struct.ds_base], align 8
  %601 = alloca [1 x %struct.ds_base], align 8
  %602 = alloca [1 x %struct.ds_base], align 8
  %603 = alloca [1 x %struct.ds_base], align 8
  %604 = alloca [1 x %struct.ds_base], align 8
  %605 = alloca [1 x %struct.ds_base], align 8
  %606 = alloca [1 x %struct.ds_base], align 8
  %607 = alloca [1 x %struct.ds_base], align 8
  %608 = alloca [1 x %struct.ds_base], align 8
  %609 = alloca [1 x %struct.ds_base], align 8
  %610 = alloca [1 x %struct.ds_base], align 8
  %611 = alloca [1 x %struct.ds_base], align 8
  %612 = alloca [1 x %struct.ds_base], align 8
  %613 = alloca [1 x %struct.ds_base], align 8
  %614 = alloca [1 x %struct.ds_base], align 8
  %615 = alloca [1 x %struct.ds_base], align 8
  %616 = alloca [1 x %struct.ds_base], align 8
  %617 = alloca [1 x %struct.ds_base], align 8
  %618 = alloca [1 x %struct.ds_base], align 8
  %619 = alloca [1 x %struct.ds_base], align 8
  %620 = alloca [1 x %struct.ds_base], align 8
  %621 = alloca [1 x %struct.ds_base], align 8
  %622 = alloca [1 x %struct.ds_base], align 8
  %623 = alloca [1 x %struct.ds_base], align 8
  %624 = alloca [1 x %struct.ds_base], align 8
  %625 = alloca [1 x %struct.ds_base], align 8
  %626 = alloca [1 x %struct.ds_base], align 8
  %627 = alloca [1 x %struct.ds_base], align 8
  %628 = alloca [1 x %struct.ds_base], align 8
  %629 = alloca [1 x %struct.ds_base], align 8
  %630 = alloca [1 x %struct.ds_base], align 8
  %631 = alloca [1 x %struct.ds_base], align 8
  %632 = alloca [1 x %struct.ds_base], align 8
  %633 = alloca [1 x %struct.ds_base], align 8
  %634 = alloca [1 x %struct.ds_base], align 8
  %635 = alloca [1 x %struct.ds_base], align 8
  %636 = alloca [1 x %struct.ds_base], align 8
  %637 = alloca [1 x %struct.ds_base], align 8
  %638 = alloca [1 x %struct.ds_base], align 8
  %639 = alloca [1 x %struct.ds_base], align 8
  %640 = alloca [1 x %struct.ds_base], align 8
  %641 = alloca [1 x %struct.ds_base], align 8
  %642 = alloca [1 x %struct.ds_base], align 8
  %643 = alloca [1 x %struct.ds_base], align 8
  %644 = alloca [1 x %struct.ds_base], align 8
  %645 = alloca [1 x %struct.ds_base], align 8
  %646 = alloca [1 x %struct.ds_base], align 8
  %647 = alloca [1 x %struct.ds_base], align 8
  %648 = alloca [1 x %struct.ds_base], align 8
  %649 = alloca [1 x %struct.ds_base], align 8
  %650 = alloca [1 x %struct.ds_base], align 8
  %651 = alloca [1 x %struct.ds_base], align 8
  %652 = alloca [1 x %struct.ds_base], align 8
  %653 = alloca [1 x %struct.ds_base], align 8
  %654 = alloca [1 x %struct.ds_base], align 8
  %655 = alloca [1 x %struct.ds_base], align 8
  %656 = alloca [1 x %struct.ds_base], align 8
  %657 = alloca [1 x %struct.ds_base], align 8
  %658 = alloca [1 x %struct.ds_base], align 8
  %659 = alloca [1 x %struct.ds_base], align 8
  %660 = alloca [1 x %struct.ds_base], align 8
  %661 = alloca [1 x %struct.ds_base], align 8
  %662 = alloca [1 x %struct.ds_base], align 8
  %663 = alloca [1 x %struct.ds_base], align 8
  %664 = alloca [1 x %struct.ds_base], align 8
  %665 = alloca [1 x %struct.ds_base], align 8
  %666 = alloca [1 x %struct.ds_base], align 8
  %667 = alloca [1 x %struct.ds_base], align 8
  %668 = alloca [1 x %struct.ds_base], align 8
  %669 = alloca [1 x %struct.ds_base], align 8
  %670 = alloca [1 x %struct.ds_base], align 8
  %671 = alloca [1 x %struct.ds_base], align 8
  %672 = alloca [1 x %struct.ds_base], align 8
  %673 = alloca [1 x %struct.ds_base], align 8
  %674 = alloca [1 x %struct.ds_base], align 8
  %675 = alloca [1 x %struct.ds_base], align 8
  %676 = alloca [1 x %struct.ds_base], align 8
  %677 = alloca [1 x %struct.ds_base], align 8
  %678 = alloca [1 x %struct.ds_base], align 8
  %679 = alloca [1 x %struct.ds_base], align 8
  %680 = alloca [1 x %struct.ds_base], align 8
  %681 = alloca [1 x %struct.ds_base], align 8
  %682 = alloca [1 x %struct.ds_base], align 8
  %683 = alloca [1 x %struct.ds_base], align 8
  %684 = alloca [1 x %struct.ds_base], align 8
  %685 = alloca [1 x %struct.ds_base], align 8
  %686 = alloca [1 x %struct.ds_base], align 8
  %687 = alloca [1 x %struct.ds_base], align 8
  %688 = alloca [1 x %struct.ds_base], align 8
  %689 = alloca [1 x %struct.ds_base], align 8
  %690 = alloca [1 x %struct.ds_base], align 8
  %691 = alloca [1 x %struct.ds_base], align 8
  %692 = alloca [1 x %struct.ds_base], align 8
  %693 = alloca [1 x %struct.ds_base], align 8
  %694 = alloca [1 x %struct.ds_base], align 8
  %695 = alloca [1 x %struct.ds_base], align 8
  %696 = alloca [1 x %struct.ds_base], align 8
  %697 = alloca [1 x %struct.ds_base], align 8
  %698 = alloca [1 x %struct.ds_base], align 8
  %699 = alloca [1 x %struct.ds_base], align 8
  %700 = alloca [1 x %struct.ds_base], align 8
  %701 = alloca [1 x %struct.ds_base], align 8
  %702 = alloca [1 x %struct.ds_base], align 8
  %703 = alloca [1 x %struct.ds_base], align 8
  %704 = alloca [1 x %struct.ds_base], align 8
  %705 = alloca [1 x %struct.ds_base], align 8
  %706 = alloca [1 x %struct.ds_base], align 8
  %707 = alloca [1 x %struct.ds_base], align 8
  %708 = alloca [1 x %struct.ds_base], align 8
  %709 = alloca [1 x %struct.ds_base], align 8
  %710 = alloca [1 x %struct.ds_base], align 8
  %711 = alloca [1 x %struct.ds_base], align 8
  %712 = alloca [1 x %struct.ds_base], align 8
  %713 = alloca [1 x %struct.ds_base], align 8
  %714 = alloca [1 x %struct.ds_base], align 8
  %715 = alloca [1 x %struct.ds_base], align 8
  %716 = alloca [1 x %struct.ds_base], align 8
  %717 = alloca [1 x %struct.ds_base], align 8
  %718 = alloca [1 x %struct.ds_base], align 8
  %719 = alloca [1 x %struct.ds_base], align 8
  %720 = alloca [1 x %struct.ds_base], align 8
  %721 = alloca [1 x %struct.ds_base], align 8
  %722 = alloca [1 x %struct.ds_base], align 8
  %723 = alloca [1 x %struct.ds_base], align 8
  %724 = alloca [1 x %struct.ds_base], align 8
  %725 = alloca [1 x %struct.ds_base], align 8
  %726 = alloca [1 x %struct.ds_base], align 8
  %727 = alloca [1 x %struct.ds_base], align 8
  %728 = alloca [1 x %struct.ds_base], align 8
  %729 = alloca [1 x %struct.ds_base], align 8
  %730 = alloca [1 x %struct.ds_base], align 8
  %731 = alloca [1 x %struct.ds_base], align 8
  %732 = alloca [1 x %struct.ds_base], align 8
  %733 = alloca [1 x %struct.ds_base], align 8
  %734 = alloca [1 x %struct.ds_base], align 8
  %735 = alloca [1 x %struct.ds_base], align 8
  %736 = alloca [1 x %struct.ds_base], align 8
  %737 = alloca [1 x %struct.ds_base], align 8
  %738 = alloca [1 x %struct.ds_base], align 8
  %739 = alloca [1 x %struct.ds_base], align 8
  %740 = alloca [1 x %struct.ds_base], align 8
  %741 = alloca [1 x %struct.ds_base], align 8
  %742 = alloca [1 x %struct.ds_base], align 8
  %743 = alloca [1 x %struct.ds_base], align 8
  %744 = alloca [1 x %struct.ds_base], align 8
  %745 = alloca [1 x %struct.ds_base], align 8
  %746 = alloca [1 x %struct.ds_base], align 8
  %747 = alloca [1 x %struct.ds_base], align 8
  %748 = alloca [1 x %struct.ds_base], align 8
  %749 = alloca [1 x %struct.ds_base], align 8
  %750 = alloca [1 x %struct.ds_base], align 8
  %751 = alloca [1 x %struct.ds_base], align 8
  %752 = alloca [1 x %struct.ds_base], align 8
  %753 = alloca [1 x %struct.ds_base], align 8
  %754 = alloca [1 x %struct.ds_base], align 8
  %755 = alloca [1 x %struct.ds_base], align 8
  %756 = alloca [1 x %struct.ds_base], align 8
  %757 = alloca [1 x %struct.ds_base], align 8
  %758 = alloca [1 x %struct.ds_base], align 8
  %759 = alloca [1 x %struct.ds_base], align 8
  %760 = alloca [1 x %struct.ds_base], align 8
  %761 = alloca [1 x %struct.ds_base], align 8
  %762 = alloca [1 x %struct.ds_base], align 8
  %763 = alloca [1 x %struct.ds_base], align 8
  %764 = alloca [1 x %struct.ds_base], align 8
  %765 = alloca [1 x %struct.ds_base], align 8
  %766 = alloca [1 x %struct.ds_base], align 8
  %767 = alloca [1 x %struct.ds_base], align 8
  %768 = alloca [1 x %struct.ds_base], align 8
  %769 = alloca [1 x %struct.ds_base], align 8
  %770 = alloca [1 x %struct.ds_base], align 8
  %771 = alloca [1 x %struct.ds_base], align 8
  %772 = alloca [1 x %struct.ds_base], align 8
  %773 = alloca [1 x %struct.ds_base], align 8
  %774 = alloca [1 x %struct.ds_base], align 8
  %775 = alloca [1 x %struct.ds_base], align 8
  %776 = alloca [1 x %struct.ds_base], align 8
  %777 = alloca [1 x %struct.ds_base], align 8
  %778 = alloca [1 x %struct.ds_base], align 8
  %779 = alloca [1 x %struct.ds_base], align 8
  %780 = alloca [1 x %struct.ds_base], align 8
  %781 = alloca [1 x %struct.ds_base], align 8
  %782 = alloca [1 x %struct.ds_base], align 8
  %783 = alloca [1 x %struct.ds_base], align 8
  %784 = alloca [1 x %struct.ds_base], align 8
  %785 = alloca [1 x %struct.ds_base], align 8
  %786 = alloca [1 x %struct.ds_base], align 8
  %787 = alloca [1 x %struct.ds_base], align 8
  %788 = alloca [1 x %struct.ds_base], align 8
  %789 = alloca [1 x %struct.ds_base], align 8
  %790 = alloca [1 x %struct.ds_base], align 8
  %791 = alloca [1 x %struct.ds_base], align 8
  %792 = alloca [1 x %struct.ds_base], align 8
  %793 = alloca [1 x %struct.ds_base], align 8
  %794 = alloca [1 x %struct.ds_base], align 8
  %795 = alloca [1 x %struct.ds_base], align 8
  %796 = alloca [1 x %struct.ds_base], align 8
  %797 = alloca [1 x %struct.ds_base], align 8
  %798 = alloca [1 x %struct.ds_base], align 8
  %799 = alloca [1 x %struct.ds_base], align 8
  %800 = alloca [1 x %struct.ds_base], align 8
  %801 = alloca [1 x %struct.ds_base], align 8
  %802 = alloca [1 x %struct.ds_base], align 8
  %803 = alloca [1 x %struct.ds_base], align 8
  %804 = alloca [1 x %struct.ds_base], align 8
  %805 = alloca [1 x %struct.ds_base], align 8
  %806 = alloca [1 x %struct.ds_base], align 8
  %807 = alloca [1 x %struct.ds_base], align 8
  %808 = alloca [1 x %struct.ds_base], align 8
  %809 = alloca [1 x %struct.ds_base], align 8
  %810 = alloca [1 x %struct.ds_base], align 8
  %811 = alloca [1 x %struct.ds_base], align 8
  %812 = alloca [1 x %struct.ds_base], align 8
  %813 = alloca [1 x %struct.ds_base], align 8
  %814 = alloca [1 x %struct.ds_base], align 8
  %815 = alloca [1 x %struct.ds_base], align 8
  %816 = alloca [1 x %struct.ds_base], align 8
  %817 = alloca [1 x %struct.ds_base], align 8
  %818 = alloca [1 x %struct.ds_base], align 8
  %819 = alloca [1 x %struct.ds_base], align 8
  %820 = alloca [1 x %struct.ds_base], align 8
  %821 = alloca [1 x %struct.ds_base], align 8
  %822 = alloca [1 x %struct.ds_base], align 8
  %823 = alloca [1 x %struct.ds_base], align 8
  %824 = alloca [1 x %struct.ds_base], align 8
  %825 = alloca [1 x %struct.ds_base], align 8
  %826 = alloca [1 x %struct.ds_base], align 8
  %827 = alloca [1 x %struct.ds_base], align 8
  %828 = alloca [1 x %struct.ds_base], align 8
  %829 = alloca [1 x %struct.ds_base], align 8
  %830 = alloca [1 x %struct.ds_base], align 8
  %831 = alloca [1 x %struct.ds_base], align 8
  %832 = alloca [1 x %struct.ds_base], align 8
  %833 = alloca [1 x %struct.ds_base], align 8
  %834 = alloca [1 x %struct.ds_base], align 8
  %835 = alloca [1 x %struct.ds_base], align 8
  %836 = alloca [1 x %struct.ds_base], align 8
  %837 = alloca [1 x %struct.ds_base], align 8
  %838 = alloca [1 x %struct.ds_base], align 8
  %839 = alloca [1 x %struct.ds_base], align 8
  %840 = alloca [1 x %struct.ds_base], align 8
  %841 = alloca [1 x %struct.ds_base], align 8
  %842 = alloca [1 x %struct.ds_base], align 8
  %843 = alloca [1 x %struct.ds_base], align 8
  %844 = alloca [1 x %struct.ds_base], align 8
  %845 = alloca [1 x %struct.ds_base], align 8
  %846 = alloca [1 x %struct.ds_base], align 8
  %847 = alloca [1 x %struct.ds_base], align 8
  %848 = alloca [1 x %struct.ds_base], align 8
  %849 = alloca [1 x %struct.ds_base], align 8
  %850 = alloca [1 x %struct.ds_base], align 8
  %851 = alloca [1 x %struct.ds_base], align 8
  %852 = alloca [1 x %struct.ds_base], align 8
  %853 = alloca [1 x %struct.ds_base], align 8
  %854 = alloca [1 x %struct.ds_base], align 8
  %855 = alloca [1 x %struct.ds_base], align 8
  %856 = alloca [1 x %struct.ds_base], align 8
  %857 = alloca [1 x %struct.ds_base], align 8
  %858 = alloca [1 x %struct.ds_base], align 8
  %859 = alloca [1 x %struct.ds_base], align 8
  %860 = alloca [1 x %struct.ds_base], align 8
  %861 = alloca [1 x %struct.ds_base], align 8
  %862 = alloca [1 x %struct.ds_base], align 8
  %863 = alloca [1 x %struct.ds_base], align 8
  %864 = alloca [1 x %struct.ds_base], align 8
  %865 = alloca [1 x %struct.ds_base], align 8
  %866 = alloca [1 x %struct.ds_base], align 8
  %867 = alloca [1 x %struct.ds_base], align 8
  %868 = alloca [1 x %struct.ds_base], align 8
  %869 = alloca [1 x %struct.ds_base], align 8
  %870 = alloca [1 x %struct.ds_base], align 8
  %871 = alloca [1 x %struct.ds_base], align 8
  %872 = alloca [1 x %struct.ds_base], align 8
  %873 = alloca [1 x %struct.ds_base], align 8
  %874 = alloca [1 x %struct.ds_base], align 8
  %875 = alloca [1 x %struct.ds_base], align 8
  %876 = alloca [1 x %struct.ds_base], align 8
  %877 = alloca [1 x %struct.ds_base], align 8
  %878 = alloca [1 x %struct.ds_base], align 8
  %879 = alloca [1 x %struct.ds_base], align 8
  %880 = alloca [1 x %struct.ds_base], align 8
  %881 = alloca [1 x %struct.ds_base], align 8
  %882 = alloca [1 x %struct.ds_base], align 8
  %883 = alloca [1 x %struct.ds_base], align 8
  %884 = alloca [1 x %struct.ds_base], align 8
  %885 = alloca [1 x %struct.ds_base], align 8
  %886 = alloca [1 x %struct.ds_base], align 8
  %887 = alloca [1 x %struct.ds_base], align 8
  %888 = alloca [1 x %struct.ds_base], align 8
  %889 = alloca [1 x %struct.ds_base], align 8
  %890 = alloca [1 x %struct.ds_base], align 8
  %891 = alloca [1 x %struct.ds_base], align 8
  %892 = alloca [1 x %struct.ds_base], align 8
  %893 = alloca [1 x %struct.ds_base], align 8
  %894 = alloca [1 x %struct.ds_base], align 8
  %895 = alloca [1 x %struct.ds_base], align 8
  %896 = alloca [1 x %struct.ds_base], align 8
  %897 = alloca [1 x %struct.ds_base], align 8
  %898 = alloca [1 x %struct.ds_base], align 8
  %899 = alloca [1 x %struct.ds_base], align 8
  %900 = alloca [1 x %struct.ds_base], align 8
  %901 = alloca [1 x %struct.ds_base], align 8
  %902 = alloca [1 x %struct.ds_base], align 8
  %903 = alloca [1 x %struct.ds_base], align 8
  %904 = alloca [1 x %struct.ds_base], align 8
  %905 = alloca [1 x %struct.ds_base], align 8
  %906 = alloca [1 x %struct.ds_base], align 8
  %907 = alloca [1 x %struct.ds_base], align 8
  %908 = alloca [1 x %struct.ds_base], align 8
  %909 = alloca [1 x %struct.ds_base], align 8
  %910 = alloca [1 x %struct.ds_base], align 8
  %911 = alloca [1 x %struct.ds_base], align 8
  %912 = alloca [1 x %struct.ds_base], align 8
  %913 = alloca [1 x %struct.ds_base], align 8
  %914 = alloca [1 x %struct.ds_base], align 8
  %915 = alloca [1 x %struct.ds_base], align 8
  %916 = alloca [1 x %struct.ds_base], align 8
  %917 = alloca [1 x %struct.ds_base], align 8
  %918 = alloca [1 x %struct.ds_base], align 8
  %919 = alloca [1 x %struct.ds_base], align 8
  %920 = alloca [1 x %struct.ds_base], align 8
  %921 = alloca [1 x %struct.ds_base], align 8
  %922 = alloca [1 x %struct.ds_base], align 8
  %923 = alloca [1 x %struct.ds_base], align 8
  %924 = alloca [1 x %struct.ds_base], align 8
  %925 = alloca [1 x %struct.ds_base], align 8
  %926 = alloca [1 x %struct.ds_base], align 8
  %927 = alloca [1 x %struct.ds_base], align 8
  %928 = alloca [1 x %struct.ds_base], align 8
  %929 = alloca [1 x %struct.ds_base], align 8
  %930 = alloca [1 x %struct.ds_base], align 8
  %931 = alloca [1 x %struct.ds_base], align 8
  %932 = alloca [1 x %struct.ds_base], align 8
  %933 = alloca [1 x %struct.ds_base], align 8
  %934 = alloca [1 x %struct.ds_base], align 8
  %935 = alloca [1 x %struct.ds_base], align 8
  %936 = alloca [1 x %struct.ds_base], align 8
  %937 = alloca [1 x %struct.ds_base], align 8
  %938 = alloca [1 x %struct.ds_base], align 8
  %939 = alloca [1 x %struct.ds_base], align 8
  %940 = alloca [1 x %struct.ds_base], align 8
  %941 = alloca [1 x %struct.ds_base], align 8
  %942 = alloca [1 x %struct.ds_base], align 8
  %943 = alloca [1 x %struct.ds_base], align 8
  %944 = alloca [1 x %struct.ds_base], align 8
  %945 = alloca [1 x %struct.ds_base], align 8
  %946 = alloca [1 x %struct.ds_base], align 8
  %947 = alloca [1 x %struct.ds_base], align 8
  %948 = alloca [1 x %struct.ds_base], align 8
  %949 = alloca [1 x %struct.ds_base], align 8
  %950 = alloca [1 x %struct.ds_base], align 8
  %951 = alloca [1 x %struct.ds_base], align 8
  %952 = alloca [1 x %struct.ds_base], align 8
  %953 = alloca [1 x %struct.ds_base], align 8
  %954 = alloca [1 x %struct.ds_base], align 8
  %955 = alloca [1 x %struct.ds_base], align 8
  %956 = alloca [1 x %struct.ds_base], align 8
  %957 = alloca [1 x %struct.ds_base], align 8
  %958 = alloca [1 x %struct.ds_base], align 8
  %959 = alloca [1 x %struct.ds_base], align 8
  %960 = alloca [1 x %struct.ds_base], align 8
  %961 = alloca [1 x %struct.ds_base], align 8
  %962 = alloca [1 x %struct.ds_base], align 8
  %963 = alloca [1 x %struct.ds_base], align 8
  %964 = alloca [1 x %struct.ds_base], align 8
  %965 = alloca [1 x %struct.ds_base], align 8
  %966 = alloca [1 x %struct.ds_base], align 8
  %967 = alloca [1 x %struct.ds_base], align 8
  %968 = alloca [1 x %struct.ds_base], align 8
  %969 = alloca [1 x %struct.ds_base], align 8
  %970 = alloca [1 x %struct.ds_base], align 8
  %971 = alloca [1 x %struct.ds_base], align 8
  %972 = alloca [1 x %struct.ds_base], align 8
  %973 = alloca [1 x %struct.ds_base], align 8
  %974 = alloca [1 x %struct.ds_base], align 8
  %975 = alloca [1 x %struct.ds_base], align 8
  %976 = alloca [1 x %struct.ds_base], align 8
  %977 = alloca [1 x %struct.ds_base], align 8
  %978 = alloca [1 x %struct.ds_base], align 8
  %979 = alloca [1 x %struct.ds_base], align 8
  %980 = alloca [1 x %struct.ds_base], align 8
  %981 = alloca [1 x %struct.ds_base], align 8
  %982 = alloca [1 x %struct.ds_base], align 8
  %983 = alloca [1 x %struct.ds_base], align 8
  %984 = alloca [1 x %struct.ds_base], align 8
  %985 = alloca [1 x %struct.ds_base], align 8
  %986 = alloca [1 x %struct.ds_base], align 8
  %987 = alloca [1 x %struct.ds_base], align 8
  %988 = alloca [1 x %struct.ds_base], align 8
  %989 = alloca [1 x %struct.ds_base], align 8
  %990 = alloca [1 x %struct.ds_base], align 8
  %991 = alloca [1 x %struct.ds_base], align 8
  %992 = alloca [1 x %struct.ds_base], align 8
  %993 = alloca [1 x %struct.ds_base], align 8
  %994 = alloca [1 x %struct.ds_base], align 8
  %995 = alloca [1 x %struct.ds_base], align 8
  %996 = alloca [1 x %struct.ds_base], align 8
  %997 = alloca [1 x %struct.ds_base], align 8
  %998 = alloca [1 x %struct.ds_base], align 8
  %999 = alloca [1 x %struct.ds_base], align 8
  %1000 = alloca [1 x %struct.ds_base], align 8
  %1001 = tail call i64 @read(i32 0, i8* bitcast ([1000 x i32]* @in to i8*), i64 4000) #14
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(4000) bitcast ([1000 x i32]* @out to i8*), i8 0, i64 4000, i1 false)
  %1002 = load i64, i64* bitcast ([1000 x i32]* @in to i64*), align 16, !tbaa !25
  %1003 = trunc i64 %1002 to i32
  %1004 = call i32 @llvm.abs.i32(i32 %1003, i1 false)
  %1005 = urem i32 %1004, 1000
  %1006 = zext i32 %1005 to i64
  %1007 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1006
  %1008 = bitcast i32* %1007 to i64*
  %1009 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1008, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1010 = trunc i64 %1009 to i32
  %1011 = add nsw i32 %1010, 1
  %1012 = bitcast [1 x %struct.ds_base]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1012, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1013 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %1, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1011, i32* nonnull %1007, %struct.ds_base* nonnull %1013, i32 1, i32 undef) #14
  %1014 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 1) to i64*), align 8, !tbaa !25
  %1015 = trunc i64 %1014 to i32
  %1016 = call i32 @llvm.abs.i32(i32 %1015, i1 false)
  %1017 = urem i32 %1016, 1000
  %1018 = zext i32 %1017 to i64
  %1019 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1018
  %1020 = bitcast i32* %1019 to i64*
  %1021 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1020, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1022 = trunc i64 %1021 to i32
  %1023 = add nsw i32 %1022, 1
  %1024 = bitcast [1 x %struct.ds_base]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1024, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1025 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %2, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1023, i32* nonnull %1019, %struct.ds_base* nonnull %1025, i32 1, i32 undef) #14
  %1026 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 2) to i64*), align 8, !tbaa !25
  %1027 = trunc i64 %1026 to i32
  %1028 = call i32 @llvm.abs.i32(i32 %1027, i1 false)
  %1029 = urem i32 %1028, 1000
  %1030 = zext i32 %1029 to i64
  %1031 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1030
  %1032 = bitcast i32* %1031 to i64*
  %1033 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1032, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1034 = trunc i64 %1033 to i32
  %1035 = add nsw i32 %1034, 1
  %1036 = bitcast [1 x %struct.ds_base]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1036, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1037 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %3, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1035, i32* nonnull %1031, %struct.ds_base* nonnull %1037, i32 1, i32 undef) #14
  %1038 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 3) to i64*), align 8, !tbaa !25
  %1039 = trunc i64 %1038 to i32
  %1040 = call i32 @llvm.abs.i32(i32 %1039, i1 false)
  %1041 = urem i32 %1040, 1000
  %1042 = zext i32 %1041 to i64
  %1043 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1042
  %1044 = bitcast i32* %1043 to i64*
  %1045 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1044, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1046 = trunc i64 %1045 to i32
  %1047 = add nsw i32 %1046, 1
  %1048 = bitcast [1 x %struct.ds_base]* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1048, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1049 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %4, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1047, i32* nonnull %1043, %struct.ds_base* nonnull %1049, i32 1, i32 undef) #14
  %1050 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 4) to i64*), align 16, !tbaa !25
  %1051 = trunc i64 %1050 to i32
  %1052 = call i32 @llvm.abs.i32(i32 %1051, i1 false)
  %1053 = urem i32 %1052, 1000
  %1054 = zext i32 %1053 to i64
  %1055 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1054
  %1056 = bitcast i32* %1055 to i64*
  %1057 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1056, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1058 = trunc i64 %1057 to i32
  %1059 = add nsw i32 %1058, 1
  %1060 = bitcast [1 x %struct.ds_base]* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1060, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1061 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %5, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1059, i32* nonnull %1055, %struct.ds_base* nonnull %1061, i32 1, i32 undef) #14
  %1062 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 5) to i64*), align 8, !tbaa !25
  %1063 = trunc i64 %1062 to i32
  %1064 = call i32 @llvm.abs.i32(i32 %1063, i1 false)
  %1065 = urem i32 %1064, 1000
  %1066 = zext i32 %1065 to i64
  %1067 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1066
  %1068 = bitcast i32* %1067 to i64*
  %1069 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1068, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1070 = trunc i64 %1069 to i32
  %1071 = add nsw i32 %1070, 1
  %1072 = bitcast [1 x %struct.ds_base]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1072, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1073 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %6, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1071, i32* nonnull %1067, %struct.ds_base* nonnull %1073, i32 1, i32 undef) #14
  %1074 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 6) to i64*), align 8, !tbaa !25
  %1075 = trunc i64 %1074 to i32
  %1076 = call i32 @llvm.abs.i32(i32 %1075, i1 false)
  %1077 = urem i32 %1076, 1000
  %1078 = zext i32 %1077 to i64
  %1079 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1078
  %1080 = bitcast i32* %1079 to i64*
  %1081 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1080, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1082 = trunc i64 %1081 to i32
  %1083 = add nsw i32 %1082, 1
  %1084 = bitcast [1 x %struct.ds_base]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1084, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1085 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %7, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1083, i32* nonnull %1079, %struct.ds_base* nonnull %1085, i32 1, i32 undef) #14
  %1086 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 7) to i64*), align 8, !tbaa !25
  %1087 = trunc i64 %1086 to i32
  %1088 = call i32 @llvm.abs.i32(i32 %1087, i1 false)
  %1089 = urem i32 %1088, 1000
  %1090 = zext i32 %1089 to i64
  %1091 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1090
  %1092 = bitcast i32* %1091 to i64*
  %1093 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1092, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1094 = trunc i64 %1093 to i32
  %1095 = add nsw i32 %1094, 1
  %1096 = bitcast [1 x %struct.ds_base]* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1096, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1097 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %8, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1095, i32* nonnull %1091, %struct.ds_base* nonnull %1097, i32 1, i32 undef) #14
  %1098 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 8) to i64*), align 16, !tbaa !25
  %1099 = trunc i64 %1098 to i32
  %1100 = call i32 @llvm.abs.i32(i32 %1099, i1 false)
  %1101 = urem i32 %1100, 1000
  %1102 = zext i32 %1101 to i64
  %1103 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1102
  %1104 = bitcast i32* %1103 to i64*
  %1105 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1104, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1106 = trunc i64 %1105 to i32
  %1107 = add nsw i32 %1106, 1
  %1108 = bitcast [1 x %struct.ds_base]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1108, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1109 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %9, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1107, i32* nonnull %1103, %struct.ds_base* nonnull %1109, i32 1, i32 undef) #14
  %1110 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 9) to i64*), align 8, !tbaa !25
  %1111 = trunc i64 %1110 to i32
  %1112 = call i32 @llvm.abs.i32(i32 %1111, i1 false)
  %1113 = urem i32 %1112, 1000
  %1114 = zext i32 %1113 to i64
  %1115 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1114
  %1116 = bitcast i32* %1115 to i64*
  %1117 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1116, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1118 = trunc i64 %1117 to i32
  %1119 = add nsw i32 %1118, 1
  %1120 = bitcast [1 x %struct.ds_base]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1120, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1121 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %10, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1119, i32* nonnull %1115, %struct.ds_base* nonnull %1121, i32 1, i32 undef) #14
  %1122 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 10) to i64*), align 8, !tbaa !25
  %1123 = trunc i64 %1122 to i32
  %1124 = call i32 @llvm.abs.i32(i32 %1123, i1 false)
  %1125 = urem i32 %1124, 1000
  %1126 = zext i32 %1125 to i64
  %1127 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1126
  %1128 = bitcast i32* %1127 to i64*
  %1129 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1128, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1130 = trunc i64 %1129 to i32
  %1131 = add nsw i32 %1130, 1
  %1132 = bitcast [1 x %struct.ds_base]* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1132, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1133 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %11, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1131, i32* nonnull %1127, %struct.ds_base* nonnull %1133, i32 1, i32 undef) #14
  %1134 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 11) to i64*), align 8, !tbaa !25
  %1135 = trunc i64 %1134 to i32
  %1136 = call i32 @llvm.abs.i32(i32 %1135, i1 false)
  %1137 = urem i32 %1136, 1000
  %1138 = zext i32 %1137 to i64
  %1139 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1138
  %1140 = bitcast i32* %1139 to i64*
  %1141 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1140, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1142 = trunc i64 %1141 to i32
  %1143 = add nsw i32 %1142, 1
  %1144 = bitcast [1 x %struct.ds_base]* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1144, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1145 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %12, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1143, i32* nonnull %1139, %struct.ds_base* nonnull %1145, i32 1, i32 undef) #14
  %1146 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 12) to i64*), align 16, !tbaa !25
  %1147 = trunc i64 %1146 to i32
  %1148 = call i32 @llvm.abs.i32(i32 %1147, i1 false)
  %1149 = urem i32 %1148, 1000
  %1150 = zext i32 %1149 to i64
  %1151 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1150
  %1152 = bitcast i32* %1151 to i64*
  %1153 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1152, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1154 = trunc i64 %1153 to i32
  %1155 = add nsw i32 %1154, 1
  %1156 = bitcast [1 x %struct.ds_base]* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1156, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1157 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %13, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1155, i32* nonnull %1151, %struct.ds_base* nonnull %1157, i32 1, i32 undef) #14
  %1158 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 13) to i64*), align 8, !tbaa !25
  %1159 = trunc i64 %1158 to i32
  %1160 = call i32 @llvm.abs.i32(i32 %1159, i1 false)
  %1161 = urem i32 %1160, 1000
  %1162 = zext i32 %1161 to i64
  %1163 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1162
  %1164 = bitcast i32* %1163 to i64*
  %1165 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1164, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1166 = trunc i64 %1165 to i32
  %1167 = add nsw i32 %1166, 1
  %1168 = bitcast [1 x %struct.ds_base]* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1168, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1169 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %14, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1167, i32* nonnull %1163, %struct.ds_base* nonnull %1169, i32 1, i32 undef) #14
  %1170 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 14) to i64*), align 8, !tbaa !25
  %1171 = trunc i64 %1170 to i32
  %1172 = call i32 @llvm.abs.i32(i32 %1171, i1 false)
  %1173 = urem i32 %1172, 1000
  %1174 = zext i32 %1173 to i64
  %1175 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1174
  %1176 = bitcast i32* %1175 to i64*
  %1177 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1176, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1178 = trunc i64 %1177 to i32
  %1179 = add nsw i32 %1178, 1
  %1180 = bitcast [1 x %struct.ds_base]* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1180, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1181 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %15, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1179, i32* nonnull %1175, %struct.ds_base* nonnull %1181, i32 1, i32 undef) #14
  %1182 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 15) to i64*), align 8, !tbaa !25
  %1183 = trunc i64 %1182 to i32
  %1184 = call i32 @llvm.abs.i32(i32 %1183, i1 false)
  %1185 = urem i32 %1184, 1000
  %1186 = zext i32 %1185 to i64
  %1187 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1186
  %1188 = bitcast i32* %1187 to i64*
  %1189 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1188, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1190 = trunc i64 %1189 to i32
  %1191 = add nsw i32 %1190, 1
  %1192 = bitcast [1 x %struct.ds_base]* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1192, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1193 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %16, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1191, i32* nonnull %1187, %struct.ds_base* nonnull %1193, i32 1, i32 undef) #14
  %1194 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 16) to i64*), align 16, !tbaa !25
  %1195 = trunc i64 %1194 to i32
  %1196 = call i32 @llvm.abs.i32(i32 %1195, i1 false)
  %1197 = urem i32 %1196, 1000
  %1198 = zext i32 %1197 to i64
  %1199 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1198
  %1200 = bitcast i32* %1199 to i64*
  %1201 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1200, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1202 = trunc i64 %1201 to i32
  %1203 = add nsw i32 %1202, 1
  %1204 = bitcast [1 x %struct.ds_base]* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1204, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1205 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %17, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1203, i32* nonnull %1199, %struct.ds_base* nonnull %1205, i32 1, i32 undef) #14
  %1206 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 17) to i64*), align 8, !tbaa !25
  %1207 = trunc i64 %1206 to i32
  %1208 = call i32 @llvm.abs.i32(i32 %1207, i1 false)
  %1209 = urem i32 %1208, 1000
  %1210 = zext i32 %1209 to i64
  %1211 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1210
  %1212 = bitcast i32* %1211 to i64*
  %1213 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1212, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1214 = trunc i64 %1213 to i32
  %1215 = add nsw i32 %1214, 1
  %1216 = bitcast [1 x %struct.ds_base]* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1216, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1217 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %18, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1215, i32* nonnull %1211, %struct.ds_base* nonnull %1217, i32 1, i32 undef) #14
  %1218 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 18) to i64*), align 8, !tbaa !25
  %1219 = trunc i64 %1218 to i32
  %1220 = call i32 @llvm.abs.i32(i32 %1219, i1 false)
  %1221 = urem i32 %1220, 1000
  %1222 = zext i32 %1221 to i64
  %1223 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1222
  %1224 = bitcast i32* %1223 to i64*
  %1225 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1224, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1226 = trunc i64 %1225 to i32
  %1227 = add nsw i32 %1226, 1
  %1228 = bitcast [1 x %struct.ds_base]* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1228, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1229 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %19, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1227, i32* nonnull %1223, %struct.ds_base* nonnull %1229, i32 1, i32 undef) #14
  %1230 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 19) to i64*), align 8, !tbaa !25
  %1231 = trunc i64 %1230 to i32
  %1232 = call i32 @llvm.abs.i32(i32 %1231, i1 false)
  %1233 = urem i32 %1232, 1000
  %1234 = zext i32 %1233 to i64
  %1235 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1234
  %1236 = bitcast i32* %1235 to i64*
  %1237 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1236, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1238 = trunc i64 %1237 to i32
  %1239 = add nsw i32 %1238, 1
  %1240 = bitcast [1 x %struct.ds_base]* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1240, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1241 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %20, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1239, i32* nonnull %1235, %struct.ds_base* nonnull %1241, i32 1, i32 undef) #14
  %1242 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 20) to i64*), align 16, !tbaa !25
  %1243 = trunc i64 %1242 to i32
  %1244 = call i32 @llvm.abs.i32(i32 %1243, i1 false)
  %1245 = urem i32 %1244, 1000
  %1246 = zext i32 %1245 to i64
  %1247 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1246
  %1248 = bitcast i32* %1247 to i64*
  %1249 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1248, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1250 = trunc i64 %1249 to i32
  %1251 = add nsw i32 %1250, 1
  %1252 = bitcast [1 x %struct.ds_base]* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1252, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1253 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %21, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1251, i32* nonnull %1247, %struct.ds_base* nonnull %1253, i32 1, i32 undef) #14
  %1254 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 21) to i64*), align 8, !tbaa !25
  %1255 = trunc i64 %1254 to i32
  %1256 = call i32 @llvm.abs.i32(i32 %1255, i1 false)
  %1257 = urem i32 %1256, 1000
  %1258 = zext i32 %1257 to i64
  %1259 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1258
  %1260 = bitcast i32* %1259 to i64*
  %1261 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1260, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1262 = trunc i64 %1261 to i32
  %1263 = add nsw i32 %1262, 1
  %1264 = bitcast [1 x %struct.ds_base]* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1264, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1265 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %22, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1263, i32* nonnull %1259, %struct.ds_base* nonnull %1265, i32 1, i32 undef) #14
  %1266 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 22) to i64*), align 8, !tbaa !25
  %1267 = trunc i64 %1266 to i32
  %1268 = call i32 @llvm.abs.i32(i32 %1267, i1 false)
  %1269 = urem i32 %1268, 1000
  %1270 = zext i32 %1269 to i64
  %1271 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1270
  %1272 = bitcast i32* %1271 to i64*
  %1273 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1272, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1274 = trunc i64 %1273 to i32
  %1275 = add nsw i32 %1274, 1
  %1276 = bitcast [1 x %struct.ds_base]* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1276, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1277 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %23, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1275, i32* nonnull %1271, %struct.ds_base* nonnull %1277, i32 1, i32 undef) #14
  %1278 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 23) to i64*), align 8, !tbaa !25
  %1279 = trunc i64 %1278 to i32
  %1280 = call i32 @llvm.abs.i32(i32 %1279, i1 false)
  %1281 = urem i32 %1280, 1000
  %1282 = zext i32 %1281 to i64
  %1283 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1282
  %1284 = bitcast i32* %1283 to i64*
  %1285 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1284, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1286 = trunc i64 %1285 to i32
  %1287 = add nsw i32 %1286, 1
  %1288 = bitcast [1 x %struct.ds_base]* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1288, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1289 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %24, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1287, i32* nonnull %1283, %struct.ds_base* nonnull %1289, i32 1, i32 undef) #14
  %1290 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 24) to i64*), align 16, !tbaa !25
  %1291 = trunc i64 %1290 to i32
  %1292 = call i32 @llvm.abs.i32(i32 %1291, i1 false)
  %1293 = urem i32 %1292, 1000
  %1294 = zext i32 %1293 to i64
  %1295 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1294
  %1296 = bitcast i32* %1295 to i64*
  %1297 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1296, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1298 = trunc i64 %1297 to i32
  %1299 = add nsw i32 %1298, 1
  %1300 = bitcast [1 x %struct.ds_base]* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1300, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1301 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %25, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1299, i32* nonnull %1295, %struct.ds_base* nonnull %1301, i32 1, i32 undef) #14
  %1302 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 25) to i64*), align 8, !tbaa !25
  %1303 = trunc i64 %1302 to i32
  %1304 = call i32 @llvm.abs.i32(i32 %1303, i1 false)
  %1305 = urem i32 %1304, 1000
  %1306 = zext i32 %1305 to i64
  %1307 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1306
  %1308 = bitcast i32* %1307 to i64*
  %1309 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1308, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1310 = trunc i64 %1309 to i32
  %1311 = add nsw i32 %1310, 1
  %1312 = bitcast [1 x %struct.ds_base]* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1312, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1313 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %26, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1311, i32* nonnull %1307, %struct.ds_base* nonnull %1313, i32 1, i32 undef) #14
  %1314 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 26) to i64*), align 8, !tbaa !25
  %1315 = trunc i64 %1314 to i32
  %1316 = call i32 @llvm.abs.i32(i32 %1315, i1 false)
  %1317 = urem i32 %1316, 1000
  %1318 = zext i32 %1317 to i64
  %1319 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1318
  %1320 = bitcast i32* %1319 to i64*
  %1321 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1320, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1322 = trunc i64 %1321 to i32
  %1323 = add nsw i32 %1322, 1
  %1324 = bitcast [1 x %struct.ds_base]* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1324, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1325 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %27, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1323, i32* nonnull %1319, %struct.ds_base* nonnull %1325, i32 1, i32 undef) #14
  %1326 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 27) to i64*), align 8, !tbaa !25
  %1327 = trunc i64 %1326 to i32
  %1328 = call i32 @llvm.abs.i32(i32 %1327, i1 false)
  %1329 = urem i32 %1328, 1000
  %1330 = zext i32 %1329 to i64
  %1331 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1330
  %1332 = bitcast i32* %1331 to i64*
  %1333 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1332, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1334 = trunc i64 %1333 to i32
  %1335 = add nsw i32 %1334, 1
  %1336 = bitcast [1 x %struct.ds_base]* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1336, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1337 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %28, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1335, i32* nonnull %1331, %struct.ds_base* nonnull %1337, i32 1, i32 undef) #14
  %1338 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 28) to i64*), align 16, !tbaa !25
  %1339 = trunc i64 %1338 to i32
  %1340 = call i32 @llvm.abs.i32(i32 %1339, i1 false)
  %1341 = urem i32 %1340, 1000
  %1342 = zext i32 %1341 to i64
  %1343 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1342
  %1344 = bitcast i32* %1343 to i64*
  %1345 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1344, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1346 = trunc i64 %1345 to i32
  %1347 = add nsw i32 %1346, 1
  %1348 = bitcast [1 x %struct.ds_base]* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1348, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1349 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %29, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1347, i32* nonnull %1343, %struct.ds_base* nonnull %1349, i32 1, i32 undef) #14
  %1350 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 29) to i64*), align 8, !tbaa !25
  %1351 = trunc i64 %1350 to i32
  %1352 = call i32 @llvm.abs.i32(i32 %1351, i1 false)
  %1353 = urem i32 %1352, 1000
  %1354 = zext i32 %1353 to i64
  %1355 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1354
  %1356 = bitcast i32* %1355 to i64*
  %1357 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1356, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1358 = trunc i64 %1357 to i32
  %1359 = add nsw i32 %1358, 1
  %1360 = bitcast [1 x %struct.ds_base]* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1360, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1361 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %30, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1359, i32* nonnull %1355, %struct.ds_base* nonnull %1361, i32 1, i32 undef) #14
  %1362 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 30) to i64*), align 8, !tbaa !25
  %1363 = trunc i64 %1362 to i32
  %1364 = call i32 @llvm.abs.i32(i32 %1363, i1 false)
  %1365 = urem i32 %1364, 1000
  %1366 = zext i32 %1365 to i64
  %1367 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1366
  %1368 = bitcast i32* %1367 to i64*
  %1369 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1368, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1370 = trunc i64 %1369 to i32
  %1371 = add nsw i32 %1370, 1
  %1372 = bitcast [1 x %struct.ds_base]* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1372, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1373 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %31, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1371, i32* nonnull %1367, %struct.ds_base* nonnull %1373, i32 1, i32 undef) #14
  %1374 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 31) to i64*), align 8, !tbaa !25
  %1375 = trunc i64 %1374 to i32
  %1376 = call i32 @llvm.abs.i32(i32 %1375, i1 false)
  %1377 = urem i32 %1376, 1000
  %1378 = zext i32 %1377 to i64
  %1379 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1378
  %1380 = bitcast i32* %1379 to i64*
  %1381 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1380, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1382 = trunc i64 %1381 to i32
  %1383 = add nsw i32 %1382, 1
  %1384 = bitcast [1 x %struct.ds_base]* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1384, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1385 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %32, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1383, i32* nonnull %1379, %struct.ds_base* nonnull %1385, i32 1, i32 undef) #14
  %1386 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 32) to i64*), align 16, !tbaa !25
  %1387 = trunc i64 %1386 to i32
  %1388 = call i32 @llvm.abs.i32(i32 %1387, i1 false)
  %1389 = urem i32 %1388, 1000
  %1390 = zext i32 %1389 to i64
  %1391 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1390
  %1392 = bitcast i32* %1391 to i64*
  %1393 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1392, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1394 = trunc i64 %1393 to i32
  %1395 = add nsw i32 %1394, 1
  %1396 = bitcast [1 x %struct.ds_base]* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1396, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1397 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %33, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1395, i32* nonnull %1391, %struct.ds_base* nonnull %1397, i32 1, i32 undef) #14
  %1398 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 33) to i64*), align 8, !tbaa !25
  %1399 = trunc i64 %1398 to i32
  %1400 = call i32 @llvm.abs.i32(i32 %1399, i1 false)
  %1401 = urem i32 %1400, 1000
  %1402 = zext i32 %1401 to i64
  %1403 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1402
  %1404 = bitcast i32* %1403 to i64*
  %1405 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1404, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1406 = trunc i64 %1405 to i32
  %1407 = add nsw i32 %1406, 1
  %1408 = bitcast [1 x %struct.ds_base]* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1408, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1409 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %34, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1407, i32* nonnull %1403, %struct.ds_base* nonnull %1409, i32 1, i32 undef) #14
  %1410 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 34) to i64*), align 8, !tbaa !25
  %1411 = trunc i64 %1410 to i32
  %1412 = call i32 @llvm.abs.i32(i32 %1411, i1 false)
  %1413 = urem i32 %1412, 1000
  %1414 = zext i32 %1413 to i64
  %1415 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1414
  %1416 = bitcast i32* %1415 to i64*
  %1417 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1416, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1418 = trunc i64 %1417 to i32
  %1419 = add nsw i32 %1418, 1
  %1420 = bitcast [1 x %struct.ds_base]* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1420, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1421 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %35, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1419, i32* nonnull %1415, %struct.ds_base* nonnull %1421, i32 1, i32 undef) #14
  %1422 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 35) to i64*), align 8, !tbaa !25
  %1423 = trunc i64 %1422 to i32
  %1424 = call i32 @llvm.abs.i32(i32 %1423, i1 false)
  %1425 = urem i32 %1424, 1000
  %1426 = zext i32 %1425 to i64
  %1427 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1426
  %1428 = bitcast i32* %1427 to i64*
  %1429 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1428, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1430 = trunc i64 %1429 to i32
  %1431 = add nsw i32 %1430, 1
  %1432 = bitcast [1 x %struct.ds_base]* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1432, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1433 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %36, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1431, i32* nonnull %1427, %struct.ds_base* nonnull %1433, i32 1, i32 undef) #14
  %1434 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 36) to i64*), align 16, !tbaa !25
  %1435 = trunc i64 %1434 to i32
  %1436 = call i32 @llvm.abs.i32(i32 %1435, i1 false)
  %1437 = urem i32 %1436, 1000
  %1438 = zext i32 %1437 to i64
  %1439 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1438
  %1440 = bitcast i32* %1439 to i64*
  %1441 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1440, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1442 = trunc i64 %1441 to i32
  %1443 = add nsw i32 %1442, 1
  %1444 = bitcast [1 x %struct.ds_base]* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1444, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1445 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %37, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1443, i32* nonnull %1439, %struct.ds_base* nonnull %1445, i32 1, i32 undef) #14
  %1446 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 37) to i64*), align 8, !tbaa !25
  %1447 = trunc i64 %1446 to i32
  %1448 = call i32 @llvm.abs.i32(i32 %1447, i1 false)
  %1449 = urem i32 %1448, 1000
  %1450 = zext i32 %1449 to i64
  %1451 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1450
  %1452 = bitcast i32* %1451 to i64*
  %1453 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1452, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1454 = trunc i64 %1453 to i32
  %1455 = add nsw i32 %1454, 1
  %1456 = bitcast [1 x %struct.ds_base]* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1456, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1457 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %38, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1455, i32* nonnull %1451, %struct.ds_base* nonnull %1457, i32 1, i32 undef) #14
  %1458 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 38) to i64*), align 8, !tbaa !25
  %1459 = trunc i64 %1458 to i32
  %1460 = call i32 @llvm.abs.i32(i32 %1459, i1 false)
  %1461 = urem i32 %1460, 1000
  %1462 = zext i32 %1461 to i64
  %1463 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1462
  %1464 = bitcast i32* %1463 to i64*
  %1465 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1464, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1466 = trunc i64 %1465 to i32
  %1467 = add nsw i32 %1466, 1
  %1468 = bitcast [1 x %struct.ds_base]* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1468, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1469 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %39, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1467, i32* nonnull %1463, %struct.ds_base* nonnull %1469, i32 1, i32 undef) #14
  %1470 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 39) to i64*), align 8, !tbaa !25
  %1471 = trunc i64 %1470 to i32
  %1472 = call i32 @llvm.abs.i32(i32 %1471, i1 false)
  %1473 = urem i32 %1472, 1000
  %1474 = zext i32 %1473 to i64
  %1475 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1474
  %1476 = bitcast i32* %1475 to i64*
  %1477 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1476, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1478 = trunc i64 %1477 to i32
  %1479 = add nsw i32 %1478, 1
  %1480 = bitcast [1 x %struct.ds_base]* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1480, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1481 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %40, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1479, i32* nonnull %1475, %struct.ds_base* nonnull %1481, i32 1, i32 undef) #14
  %1482 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 40) to i64*), align 16, !tbaa !25
  %1483 = trunc i64 %1482 to i32
  %1484 = call i32 @llvm.abs.i32(i32 %1483, i1 false)
  %1485 = urem i32 %1484, 1000
  %1486 = zext i32 %1485 to i64
  %1487 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1486
  %1488 = bitcast i32* %1487 to i64*
  %1489 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1488, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1490 = trunc i64 %1489 to i32
  %1491 = add nsw i32 %1490, 1
  %1492 = bitcast [1 x %struct.ds_base]* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1492, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1493 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %41, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1491, i32* nonnull %1487, %struct.ds_base* nonnull %1493, i32 1, i32 undef) #14
  %1494 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 41) to i64*), align 8, !tbaa !25
  %1495 = trunc i64 %1494 to i32
  %1496 = call i32 @llvm.abs.i32(i32 %1495, i1 false)
  %1497 = urem i32 %1496, 1000
  %1498 = zext i32 %1497 to i64
  %1499 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1498
  %1500 = bitcast i32* %1499 to i64*
  %1501 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1500, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1502 = trunc i64 %1501 to i32
  %1503 = add nsw i32 %1502, 1
  %1504 = bitcast [1 x %struct.ds_base]* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1504, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1505 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %42, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1503, i32* nonnull %1499, %struct.ds_base* nonnull %1505, i32 1, i32 undef) #14
  %1506 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 42) to i64*), align 8, !tbaa !25
  %1507 = trunc i64 %1506 to i32
  %1508 = call i32 @llvm.abs.i32(i32 %1507, i1 false)
  %1509 = urem i32 %1508, 1000
  %1510 = zext i32 %1509 to i64
  %1511 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1510
  %1512 = bitcast i32* %1511 to i64*
  %1513 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1512, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1514 = trunc i64 %1513 to i32
  %1515 = add nsw i32 %1514, 1
  %1516 = bitcast [1 x %struct.ds_base]* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1516, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1517 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %43, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1515, i32* nonnull %1511, %struct.ds_base* nonnull %1517, i32 1, i32 undef) #14
  %1518 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 43) to i64*), align 8, !tbaa !25
  %1519 = trunc i64 %1518 to i32
  %1520 = call i32 @llvm.abs.i32(i32 %1519, i1 false)
  %1521 = urem i32 %1520, 1000
  %1522 = zext i32 %1521 to i64
  %1523 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1522
  %1524 = bitcast i32* %1523 to i64*
  %1525 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1524, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1526 = trunc i64 %1525 to i32
  %1527 = add nsw i32 %1526, 1
  %1528 = bitcast [1 x %struct.ds_base]* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1528, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1529 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %44, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1527, i32* nonnull %1523, %struct.ds_base* nonnull %1529, i32 1, i32 undef) #14
  %1530 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 44) to i64*), align 16, !tbaa !25
  %1531 = trunc i64 %1530 to i32
  %1532 = call i32 @llvm.abs.i32(i32 %1531, i1 false)
  %1533 = urem i32 %1532, 1000
  %1534 = zext i32 %1533 to i64
  %1535 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1534
  %1536 = bitcast i32* %1535 to i64*
  %1537 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1536, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1538 = trunc i64 %1537 to i32
  %1539 = add nsw i32 %1538, 1
  %1540 = bitcast [1 x %struct.ds_base]* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1540, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1541 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %45, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1539, i32* nonnull %1535, %struct.ds_base* nonnull %1541, i32 1, i32 undef) #14
  %1542 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 45) to i64*), align 8, !tbaa !25
  %1543 = trunc i64 %1542 to i32
  %1544 = call i32 @llvm.abs.i32(i32 %1543, i1 false)
  %1545 = urem i32 %1544, 1000
  %1546 = zext i32 %1545 to i64
  %1547 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1546
  %1548 = bitcast i32* %1547 to i64*
  %1549 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1548, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1550 = trunc i64 %1549 to i32
  %1551 = add nsw i32 %1550, 1
  %1552 = bitcast [1 x %struct.ds_base]* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1552, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1553 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %46, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1551, i32* nonnull %1547, %struct.ds_base* nonnull %1553, i32 1, i32 undef) #14
  %1554 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 46) to i64*), align 8, !tbaa !25
  %1555 = trunc i64 %1554 to i32
  %1556 = call i32 @llvm.abs.i32(i32 %1555, i1 false)
  %1557 = urem i32 %1556, 1000
  %1558 = zext i32 %1557 to i64
  %1559 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1558
  %1560 = bitcast i32* %1559 to i64*
  %1561 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1560, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1562 = trunc i64 %1561 to i32
  %1563 = add nsw i32 %1562, 1
  %1564 = bitcast [1 x %struct.ds_base]* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1564, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1565 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %47, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1563, i32* nonnull %1559, %struct.ds_base* nonnull %1565, i32 1, i32 undef) #14
  %1566 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 47) to i64*), align 8, !tbaa !25
  %1567 = trunc i64 %1566 to i32
  %1568 = call i32 @llvm.abs.i32(i32 %1567, i1 false)
  %1569 = urem i32 %1568, 1000
  %1570 = zext i32 %1569 to i64
  %1571 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1570
  %1572 = bitcast i32* %1571 to i64*
  %1573 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1572, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1574 = trunc i64 %1573 to i32
  %1575 = add nsw i32 %1574, 1
  %1576 = bitcast [1 x %struct.ds_base]* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1576, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1577 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %48, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1575, i32* nonnull %1571, %struct.ds_base* nonnull %1577, i32 1, i32 undef) #14
  %1578 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 48) to i64*), align 16, !tbaa !25
  %1579 = trunc i64 %1578 to i32
  %1580 = call i32 @llvm.abs.i32(i32 %1579, i1 false)
  %1581 = urem i32 %1580, 1000
  %1582 = zext i32 %1581 to i64
  %1583 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1582
  %1584 = bitcast i32* %1583 to i64*
  %1585 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1584, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1586 = trunc i64 %1585 to i32
  %1587 = add nsw i32 %1586, 1
  %1588 = bitcast [1 x %struct.ds_base]* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1588, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1589 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %49, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1587, i32* nonnull %1583, %struct.ds_base* nonnull %1589, i32 1, i32 undef) #14
  %1590 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 49) to i64*), align 8, !tbaa !25
  %1591 = trunc i64 %1590 to i32
  %1592 = call i32 @llvm.abs.i32(i32 %1591, i1 false)
  %1593 = urem i32 %1592, 1000
  %1594 = zext i32 %1593 to i64
  %1595 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1594
  %1596 = bitcast i32* %1595 to i64*
  %1597 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1596, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1598 = trunc i64 %1597 to i32
  %1599 = add nsw i32 %1598, 1
  %1600 = bitcast [1 x %struct.ds_base]* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1600, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1601 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %50, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1599, i32* nonnull %1595, %struct.ds_base* nonnull %1601, i32 1, i32 undef) #14
  %1602 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 50) to i64*), align 8, !tbaa !25
  %1603 = trunc i64 %1602 to i32
  %1604 = call i32 @llvm.abs.i32(i32 %1603, i1 false)
  %1605 = urem i32 %1604, 1000
  %1606 = zext i32 %1605 to i64
  %1607 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1606
  %1608 = bitcast i32* %1607 to i64*
  %1609 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1608, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1610 = trunc i64 %1609 to i32
  %1611 = add nsw i32 %1610, 1
  %1612 = bitcast [1 x %struct.ds_base]* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1612, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1613 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %51, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1611, i32* nonnull %1607, %struct.ds_base* nonnull %1613, i32 1, i32 undef) #14
  %1614 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 51) to i64*), align 8, !tbaa !25
  %1615 = trunc i64 %1614 to i32
  %1616 = call i32 @llvm.abs.i32(i32 %1615, i1 false)
  %1617 = urem i32 %1616, 1000
  %1618 = zext i32 %1617 to i64
  %1619 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1618
  %1620 = bitcast i32* %1619 to i64*
  %1621 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1620, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1622 = trunc i64 %1621 to i32
  %1623 = add nsw i32 %1622, 1
  %1624 = bitcast [1 x %struct.ds_base]* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1624, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1625 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %52, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1623, i32* nonnull %1619, %struct.ds_base* nonnull %1625, i32 1, i32 undef) #14
  %1626 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 52) to i64*), align 16, !tbaa !25
  %1627 = trunc i64 %1626 to i32
  %1628 = call i32 @llvm.abs.i32(i32 %1627, i1 false)
  %1629 = urem i32 %1628, 1000
  %1630 = zext i32 %1629 to i64
  %1631 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1630
  %1632 = bitcast i32* %1631 to i64*
  %1633 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1632, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1634 = trunc i64 %1633 to i32
  %1635 = add nsw i32 %1634, 1
  %1636 = bitcast [1 x %struct.ds_base]* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1636, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1637 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %53, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1635, i32* nonnull %1631, %struct.ds_base* nonnull %1637, i32 1, i32 undef) #14
  %1638 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 53) to i64*), align 8, !tbaa !25
  %1639 = trunc i64 %1638 to i32
  %1640 = call i32 @llvm.abs.i32(i32 %1639, i1 false)
  %1641 = urem i32 %1640, 1000
  %1642 = zext i32 %1641 to i64
  %1643 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1642
  %1644 = bitcast i32* %1643 to i64*
  %1645 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1644, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1646 = trunc i64 %1645 to i32
  %1647 = add nsw i32 %1646, 1
  %1648 = bitcast [1 x %struct.ds_base]* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1648, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1649 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %54, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1647, i32* nonnull %1643, %struct.ds_base* nonnull %1649, i32 1, i32 undef) #14
  %1650 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 54) to i64*), align 8, !tbaa !25
  %1651 = trunc i64 %1650 to i32
  %1652 = call i32 @llvm.abs.i32(i32 %1651, i1 false)
  %1653 = urem i32 %1652, 1000
  %1654 = zext i32 %1653 to i64
  %1655 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1654
  %1656 = bitcast i32* %1655 to i64*
  %1657 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1656, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1658 = trunc i64 %1657 to i32
  %1659 = add nsw i32 %1658, 1
  %1660 = bitcast [1 x %struct.ds_base]* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1660, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1661 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %55, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1659, i32* nonnull %1655, %struct.ds_base* nonnull %1661, i32 1, i32 undef) #14
  %1662 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 55) to i64*), align 8, !tbaa !25
  %1663 = trunc i64 %1662 to i32
  %1664 = call i32 @llvm.abs.i32(i32 %1663, i1 false)
  %1665 = urem i32 %1664, 1000
  %1666 = zext i32 %1665 to i64
  %1667 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1666
  %1668 = bitcast i32* %1667 to i64*
  %1669 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1668, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1670 = trunc i64 %1669 to i32
  %1671 = add nsw i32 %1670, 1
  %1672 = bitcast [1 x %struct.ds_base]* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1672, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1673 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %56, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1671, i32* nonnull %1667, %struct.ds_base* nonnull %1673, i32 1, i32 undef) #14
  %1674 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 56) to i64*), align 16, !tbaa !25
  %1675 = trunc i64 %1674 to i32
  %1676 = call i32 @llvm.abs.i32(i32 %1675, i1 false)
  %1677 = urem i32 %1676, 1000
  %1678 = zext i32 %1677 to i64
  %1679 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1678
  %1680 = bitcast i32* %1679 to i64*
  %1681 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1680, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1682 = trunc i64 %1681 to i32
  %1683 = add nsw i32 %1682, 1
  %1684 = bitcast [1 x %struct.ds_base]* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1684, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1685 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %57, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1683, i32* nonnull %1679, %struct.ds_base* nonnull %1685, i32 1, i32 undef) #14
  %1686 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 57) to i64*), align 8, !tbaa !25
  %1687 = trunc i64 %1686 to i32
  %1688 = call i32 @llvm.abs.i32(i32 %1687, i1 false)
  %1689 = urem i32 %1688, 1000
  %1690 = zext i32 %1689 to i64
  %1691 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1690
  %1692 = bitcast i32* %1691 to i64*
  %1693 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1692, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1694 = trunc i64 %1693 to i32
  %1695 = add nsw i32 %1694, 1
  %1696 = bitcast [1 x %struct.ds_base]* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1696, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1697 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %58, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1695, i32* nonnull %1691, %struct.ds_base* nonnull %1697, i32 1, i32 undef) #14
  %1698 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 58) to i64*), align 8, !tbaa !25
  %1699 = trunc i64 %1698 to i32
  %1700 = call i32 @llvm.abs.i32(i32 %1699, i1 false)
  %1701 = urem i32 %1700, 1000
  %1702 = zext i32 %1701 to i64
  %1703 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1702
  %1704 = bitcast i32* %1703 to i64*
  %1705 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1704, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1706 = trunc i64 %1705 to i32
  %1707 = add nsw i32 %1706, 1
  %1708 = bitcast [1 x %struct.ds_base]* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1708, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1709 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %59, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1707, i32* nonnull %1703, %struct.ds_base* nonnull %1709, i32 1, i32 undef) #14
  %1710 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 59) to i64*), align 8, !tbaa !25
  %1711 = trunc i64 %1710 to i32
  %1712 = call i32 @llvm.abs.i32(i32 %1711, i1 false)
  %1713 = urem i32 %1712, 1000
  %1714 = zext i32 %1713 to i64
  %1715 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1714
  %1716 = bitcast i32* %1715 to i64*
  %1717 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1716, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1718 = trunc i64 %1717 to i32
  %1719 = add nsw i32 %1718, 1
  %1720 = bitcast [1 x %struct.ds_base]* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1720, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1721 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %60, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1719, i32* nonnull %1715, %struct.ds_base* nonnull %1721, i32 1, i32 undef) #14
  %1722 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 60) to i64*), align 16, !tbaa !25
  %1723 = trunc i64 %1722 to i32
  %1724 = call i32 @llvm.abs.i32(i32 %1723, i1 false)
  %1725 = urem i32 %1724, 1000
  %1726 = zext i32 %1725 to i64
  %1727 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1726
  %1728 = bitcast i32* %1727 to i64*
  %1729 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1728, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1730 = trunc i64 %1729 to i32
  %1731 = add nsw i32 %1730, 1
  %1732 = bitcast [1 x %struct.ds_base]* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1732, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1733 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %61, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1731, i32* nonnull %1727, %struct.ds_base* nonnull %1733, i32 1, i32 undef) #14
  %1734 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 61) to i64*), align 8, !tbaa !25
  %1735 = trunc i64 %1734 to i32
  %1736 = call i32 @llvm.abs.i32(i32 %1735, i1 false)
  %1737 = urem i32 %1736, 1000
  %1738 = zext i32 %1737 to i64
  %1739 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1738
  %1740 = bitcast i32* %1739 to i64*
  %1741 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1740, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1742 = trunc i64 %1741 to i32
  %1743 = add nsw i32 %1742, 1
  %1744 = bitcast [1 x %struct.ds_base]* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1744, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1745 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %62, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1743, i32* nonnull %1739, %struct.ds_base* nonnull %1745, i32 1, i32 undef) #14
  %1746 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 62) to i64*), align 8, !tbaa !25
  %1747 = trunc i64 %1746 to i32
  %1748 = call i32 @llvm.abs.i32(i32 %1747, i1 false)
  %1749 = urem i32 %1748, 1000
  %1750 = zext i32 %1749 to i64
  %1751 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1750
  %1752 = bitcast i32* %1751 to i64*
  %1753 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1752, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1754 = trunc i64 %1753 to i32
  %1755 = add nsw i32 %1754, 1
  %1756 = bitcast [1 x %struct.ds_base]* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1756, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1757 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %63, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1755, i32* nonnull %1751, %struct.ds_base* nonnull %1757, i32 1, i32 undef) #14
  %1758 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 63) to i64*), align 8, !tbaa !25
  %1759 = trunc i64 %1758 to i32
  %1760 = call i32 @llvm.abs.i32(i32 %1759, i1 false)
  %1761 = urem i32 %1760, 1000
  %1762 = zext i32 %1761 to i64
  %1763 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1762
  %1764 = bitcast i32* %1763 to i64*
  %1765 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1764, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1766 = trunc i64 %1765 to i32
  %1767 = add nsw i32 %1766, 1
  %1768 = bitcast [1 x %struct.ds_base]* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1768, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1769 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %64, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1767, i32* nonnull %1763, %struct.ds_base* nonnull %1769, i32 1, i32 undef) #14
  %1770 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 64) to i64*), align 16, !tbaa !25
  %1771 = trunc i64 %1770 to i32
  %1772 = call i32 @llvm.abs.i32(i32 %1771, i1 false)
  %1773 = urem i32 %1772, 1000
  %1774 = zext i32 %1773 to i64
  %1775 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1774
  %1776 = bitcast i32* %1775 to i64*
  %1777 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1776, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1778 = trunc i64 %1777 to i32
  %1779 = add nsw i32 %1778, 1
  %1780 = bitcast [1 x %struct.ds_base]* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1780, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1781 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %65, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1779, i32* nonnull %1775, %struct.ds_base* nonnull %1781, i32 1, i32 undef) #14
  %1782 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 65) to i64*), align 8, !tbaa !25
  %1783 = trunc i64 %1782 to i32
  %1784 = call i32 @llvm.abs.i32(i32 %1783, i1 false)
  %1785 = urem i32 %1784, 1000
  %1786 = zext i32 %1785 to i64
  %1787 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1786
  %1788 = bitcast i32* %1787 to i64*
  %1789 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1788, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1790 = trunc i64 %1789 to i32
  %1791 = add nsw i32 %1790, 1
  %1792 = bitcast [1 x %struct.ds_base]* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1792, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1793 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %66, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1791, i32* nonnull %1787, %struct.ds_base* nonnull %1793, i32 1, i32 undef) #14
  %1794 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 66) to i64*), align 8, !tbaa !25
  %1795 = trunc i64 %1794 to i32
  %1796 = call i32 @llvm.abs.i32(i32 %1795, i1 false)
  %1797 = urem i32 %1796, 1000
  %1798 = zext i32 %1797 to i64
  %1799 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1798
  %1800 = bitcast i32* %1799 to i64*
  %1801 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1800, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1802 = trunc i64 %1801 to i32
  %1803 = add nsw i32 %1802, 1
  %1804 = bitcast [1 x %struct.ds_base]* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1804, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1805 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %67, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1803, i32* nonnull %1799, %struct.ds_base* nonnull %1805, i32 1, i32 undef) #14
  %1806 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 67) to i64*), align 8, !tbaa !25
  %1807 = trunc i64 %1806 to i32
  %1808 = call i32 @llvm.abs.i32(i32 %1807, i1 false)
  %1809 = urem i32 %1808, 1000
  %1810 = zext i32 %1809 to i64
  %1811 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1810
  %1812 = bitcast i32* %1811 to i64*
  %1813 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1812, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1814 = trunc i64 %1813 to i32
  %1815 = add nsw i32 %1814, 1
  %1816 = bitcast [1 x %struct.ds_base]* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1816, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1817 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %68, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1815, i32* nonnull %1811, %struct.ds_base* nonnull %1817, i32 1, i32 undef) #14
  %1818 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 68) to i64*), align 16, !tbaa !25
  %1819 = trunc i64 %1818 to i32
  %1820 = call i32 @llvm.abs.i32(i32 %1819, i1 false)
  %1821 = urem i32 %1820, 1000
  %1822 = zext i32 %1821 to i64
  %1823 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1822
  %1824 = bitcast i32* %1823 to i64*
  %1825 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1824, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1826 = trunc i64 %1825 to i32
  %1827 = add nsw i32 %1826, 1
  %1828 = bitcast [1 x %struct.ds_base]* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1828, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1829 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %69, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1827, i32* nonnull %1823, %struct.ds_base* nonnull %1829, i32 1, i32 undef) #14
  %1830 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 69) to i64*), align 8, !tbaa !25
  %1831 = trunc i64 %1830 to i32
  %1832 = call i32 @llvm.abs.i32(i32 %1831, i1 false)
  %1833 = urem i32 %1832, 1000
  %1834 = zext i32 %1833 to i64
  %1835 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1834
  %1836 = bitcast i32* %1835 to i64*
  %1837 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1836, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1838 = trunc i64 %1837 to i32
  %1839 = add nsw i32 %1838, 1
  %1840 = bitcast [1 x %struct.ds_base]* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1840, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1841 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %70, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1839, i32* nonnull %1835, %struct.ds_base* nonnull %1841, i32 1, i32 undef) #14
  %1842 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 70) to i64*), align 8, !tbaa !25
  %1843 = trunc i64 %1842 to i32
  %1844 = call i32 @llvm.abs.i32(i32 %1843, i1 false)
  %1845 = urem i32 %1844, 1000
  %1846 = zext i32 %1845 to i64
  %1847 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1846
  %1848 = bitcast i32* %1847 to i64*
  %1849 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1848, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1850 = trunc i64 %1849 to i32
  %1851 = add nsw i32 %1850, 1
  %1852 = bitcast [1 x %struct.ds_base]* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1852, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1853 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %71, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1851, i32* nonnull %1847, %struct.ds_base* nonnull %1853, i32 1, i32 undef) #14
  %1854 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 71) to i64*), align 8, !tbaa !25
  %1855 = trunc i64 %1854 to i32
  %1856 = call i32 @llvm.abs.i32(i32 %1855, i1 false)
  %1857 = urem i32 %1856, 1000
  %1858 = zext i32 %1857 to i64
  %1859 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1858
  %1860 = bitcast i32* %1859 to i64*
  %1861 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1860, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1862 = trunc i64 %1861 to i32
  %1863 = add nsw i32 %1862, 1
  %1864 = bitcast [1 x %struct.ds_base]* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1864, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1865 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %72, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1863, i32* nonnull %1859, %struct.ds_base* nonnull %1865, i32 1, i32 undef) #14
  %1866 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 72) to i64*), align 16, !tbaa !25
  %1867 = trunc i64 %1866 to i32
  %1868 = call i32 @llvm.abs.i32(i32 %1867, i1 false)
  %1869 = urem i32 %1868, 1000
  %1870 = zext i32 %1869 to i64
  %1871 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1870
  %1872 = bitcast i32* %1871 to i64*
  %1873 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1872, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1874 = trunc i64 %1873 to i32
  %1875 = add nsw i32 %1874, 1
  %1876 = bitcast [1 x %struct.ds_base]* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1876, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1877 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %73, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1875, i32* nonnull %1871, %struct.ds_base* nonnull %1877, i32 1, i32 undef) #14
  %1878 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 73) to i64*), align 8, !tbaa !25
  %1879 = trunc i64 %1878 to i32
  %1880 = call i32 @llvm.abs.i32(i32 %1879, i1 false)
  %1881 = urem i32 %1880, 1000
  %1882 = zext i32 %1881 to i64
  %1883 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1882
  %1884 = bitcast i32* %1883 to i64*
  %1885 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1884, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1886 = trunc i64 %1885 to i32
  %1887 = add nsw i32 %1886, 1
  %1888 = bitcast [1 x %struct.ds_base]* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1888, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1889 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %74, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1887, i32* nonnull %1883, %struct.ds_base* nonnull %1889, i32 1, i32 undef) #14
  %1890 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 74) to i64*), align 8, !tbaa !25
  %1891 = trunc i64 %1890 to i32
  %1892 = call i32 @llvm.abs.i32(i32 %1891, i1 false)
  %1893 = urem i32 %1892, 1000
  %1894 = zext i32 %1893 to i64
  %1895 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1894
  %1896 = bitcast i32* %1895 to i64*
  %1897 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1896, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1898 = trunc i64 %1897 to i32
  %1899 = add nsw i32 %1898, 1
  %1900 = bitcast [1 x %struct.ds_base]* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1900, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1901 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %75, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1899, i32* nonnull %1895, %struct.ds_base* nonnull %1901, i32 1, i32 undef) #14
  %1902 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 75) to i64*), align 8, !tbaa !25
  %1903 = trunc i64 %1902 to i32
  %1904 = call i32 @llvm.abs.i32(i32 %1903, i1 false)
  %1905 = urem i32 %1904, 1000
  %1906 = zext i32 %1905 to i64
  %1907 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1906
  %1908 = bitcast i32* %1907 to i64*
  %1909 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1908, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1910 = trunc i64 %1909 to i32
  %1911 = add nsw i32 %1910, 1
  %1912 = bitcast [1 x %struct.ds_base]* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1912, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1913 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %76, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1911, i32* nonnull %1907, %struct.ds_base* nonnull %1913, i32 1, i32 undef) #14
  %1914 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 76) to i64*), align 16, !tbaa !25
  %1915 = trunc i64 %1914 to i32
  %1916 = call i32 @llvm.abs.i32(i32 %1915, i1 false)
  %1917 = urem i32 %1916, 1000
  %1918 = zext i32 %1917 to i64
  %1919 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1918
  %1920 = bitcast i32* %1919 to i64*
  %1921 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1920, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1922 = trunc i64 %1921 to i32
  %1923 = add nsw i32 %1922, 1
  %1924 = bitcast [1 x %struct.ds_base]* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1924, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1925 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %77, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1923, i32* nonnull %1919, %struct.ds_base* nonnull %1925, i32 1, i32 undef) #14
  %1926 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 77) to i64*), align 8, !tbaa !25
  %1927 = trunc i64 %1926 to i32
  %1928 = call i32 @llvm.abs.i32(i32 %1927, i1 false)
  %1929 = urem i32 %1928, 1000
  %1930 = zext i32 %1929 to i64
  %1931 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1930
  %1932 = bitcast i32* %1931 to i64*
  %1933 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1932, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1934 = trunc i64 %1933 to i32
  %1935 = add nsw i32 %1934, 1
  %1936 = bitcast [1 x %struct.ds_base]* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1936, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1937 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %78, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1935, i32* nonnull %1931, %struct.ds_base* nonnull %1937, i32 1, i32 undef) #14
  %1938 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 78) to i64*), align 8, !tbaa !25
  %1939 = trunc i64 %1938 to i32
  %1940 = call i32 @llvm.abs.i32(i32 %1939, i1 false)
  %1941 = urem i32 %1940, 1000
  %1942 = zext i32 %1941 to i64
  %1943 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1942
  %1944 = bitcast i32* %1943 to i64*
  %1945 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1944, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1946 = trunc i64 %1945 to i32
  %1947 = add nsw i32 %1946, 1
  %1948 = bitcast [1 x %struct.ds_base]* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1948, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1949 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %79, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1947, i32* nonnull %1943, %struct.ds_base* nonnull %1949, i32 1, i32 undef) #14
  %1950 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 79) to i64*), align 8, !tbaa !25
  %1951 = trunc i64 %1950 to i32
  %1952 = call i32 @llvm.abs.i32(i32 %1951, i1 false)
  %1953 = urem i32 %1952, 1000
  %1954 = zext i32 %1953 to i64
  %1955 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1954
  %1956 = bitcast i32* %1955 to i64*
  %1957 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1956, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1958 = trunc i64 %1957 to i32
  %1959 = add nsw i32 %1958, 1
  %1960 = bitcast [1 x %struct.ds_base]* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1960, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1961 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %80, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1959, i32* nonnull %1955, %struct.ds_base* nonnull %1961, i32 1, i32 undef) #14
  %1962 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 80) to i64*), align 16, !tbaa !25
  %1963 = trunc i64 %1962 to i32
  %1964 = call i32 @llvm.abs.i32(i32 %1963, i1 false)
  %1965 = urem i32 %1964, 1000
  %1966 = zext i32 %1965 to i64
  %1967 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1966
  %1968 = bitcast i32* %1967 to i64*
  %1969 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1968, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1970 = trunc i64 %1969 to i32
  %1971 = add nsw i32 %1970, 1
  %1972 = bitcast [1 x %struct.ds_base]* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1972, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1973 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %81, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1971, i32* nonnull %1967, %struct.ds_base* nonnull %1973, i32 1, i32 undef) #14
  %1974 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 81) to i64*), align 8, !tbaa !25
  %1975 = trunc i64 %1974 to i32
  %1976 = call i32 @llvm.abs.i32(i32 %1975, i1 false)
  %1977 = urem i32 %1976, 1000
  %1978 = zext i32 %1977 to i64
  %1979 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1978
  %1980 = bitcast i32* %1979 to i64*
  %1981 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1980, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1982 = trunc i64 %1981 to i32
  %1983 = add nsw i32 %1982, 1
  %1984 = bitcast [1 x %struct.ds_base]* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1984, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1985 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %82, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1983, i32* nonnull %1979, %struct.ds_base* nonnull %1985, i32 1, i32 undef) #14
  %1986 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 82) to i64*), align 8, !tbaa !25
  %1987 = trunc i64 %1986 to i32
  %1988 = call i32 @llvm.abs.i32(i32 %1987, i1 false)
  %1989 = urem i32 %1988, 1000
  %1990 = zext i32 %1989 to i64
  %1991 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %1990
  %1992 = bitcast i32* %1991 to i64*
  %1993 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %1992, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %1994 = trunc i64 %1993 to i32
  %1995 = add nsw i32 %1994, 1
  %1996 = bitcast [1 x %struct.ds_base]* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1996, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %1997 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %83, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %1995, i32* nonnull %1991, %struct.ds_base* nonnull %1997, i32 1, i32 undef) #14
  %1998 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 83) to i64*), align 8, !tbaa !25
  %1999 = trunc i64 %1998 to i32
  %2000 = call i32 @llvm.abs.i32(i32 %1999, i1 false)
  %2001 = urem i32 %2000, 1000
  %2002 = zext i32 %2001 to i64
  %2003 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2002
  %2004 = bitcast i32* %2003 to i64*
  %2005 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2004, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2006 = trunc i64 %2005 to i32
  %2007 = add nsw i32 %2006, 1
  %2008 = bitcast [1 x %struct.ds_base]* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2008, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2009 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %84, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2007, i32* nonnull %2003, %struct.ds_base* nonnull %2009, i32 1, i32 undef) #14
  %2010 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 84) to i64*), align 16, !tbaa !25
  %2011 = trunc i64 %2010 to i32
  %2012 = call i32 @llvm.abs.i32(i32 %2011, i1 false)
  %2013 = urem i32 %2012, 1000
  %2014 = zext i32 %2013 to i64
  %2015 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2014
  %2016 = bitcast i32* %2015 to i64*
  %2017 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2016, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2018 = trunc i64 %2017 to i32
  %2019 = add nsw i32 %2018, 1
  %2020 = bitcast [1 x %struct.ds_base]* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2020, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2021 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %85, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2019, i32* nonnull %2015, %struct.ds_base* nonnull %2021, i32 1, i32 undef) #14
  %2022 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 85) to i64*), align 8, !tbaa !25
  %2023 = trunc i64 %2022 to i32
  %2024 = call i32 @llvm.abs.i32(i32 %2023, i1 false)
  %2025 = urem i32 %2024, 1000
  %2026 = zext i32 %2025 to i64
  %2027 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2026
  %2028 = bitcast i32* %2027 to i64*
  %2029 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2028, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2030 = trunc i64 %2029 to i32
  %2031 = add nsw i32 %2030, 1
  %2032 = bitcast [1 x %struct.ds_base]* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2032, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2033 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %86, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2031, i32* nonnull %2027, %struct.ds_base* nonnull %2033, i32 1, i32 undef) #14
  %2034 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 86) to i64*), align 8, !tbaa !25
  %2035 = trunc i64 %2034 to i32
  %2036 = call i32 @llvm.abs.i32(i32 %2035, i1 false)
  %2037 = urem i32 %2036, 1000
  %2038 = zext i32 %2037 to i64
  %2039 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2038
  %2040 = bitcast i32* %2039 to i64*
  %2041 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2040, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2042 = trunc i64 %2041 to i32
  %2043 = add nsw i32 %2042, 1
  %2044 = bitcast [1 x %struct.ds_base]* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2044, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2045 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %87, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2043, i32* nonnull %2039, %struct.ds_base* nonnull %2045, i32 1, i32 undef) #14
  %2046 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 87) to i64*), align 8, !tbaa !25
  %2047 = trunc i64 %2046 to i32
  %2048 = call i32 @llvm.abs.i32(i32 %2047, i1 false)
  %2049 = urem i32 %2048, 1000
  %2050 = zext i32 %2049 to i64
  %2051 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2050
  %2052 = bitcast i32* %2051 to i64*
  %2053 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2052, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2054 = trunc i64 %2053 to i32
  %2055 = add nsw i32 %2054, 1
  %2056 = bitcast [1 x %struct.ds_base]* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2056, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2057 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %88, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2055, i32* nonnull %2051, %struct.ds_base* nonnull %2057, i32 1, i32 undef) #14
  %2058 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 88) to i64*), align 16, !tbaa !25
  %2059 = trunc i64 %2058 to i32
  %2060 = call i32 @llvm.abs.i32(i32 %2059, i1 false)
  %2061 = urem i32 %2060, 1000
  %2062 = zext i32 %2061 to i64
  %2063 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2062
  %2064 = bitcast i32* %2063 to i64*
  %2065 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2064, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2066 = trunc i64 %2065 to i32
  %2067 = add nsw i32 %2066, 1
  %2068 = bitcast [1 x %struct.ds_base]* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2068, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2069 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %89, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2067, i32* nonnull %2063, %struct.ds_base* nonnull %2069, i32 1, i32 undef) #14
  %2070 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 89) to i64*), align 8, !tbaa !25
  %2071 = trunc i64 %2070 to i32
  %2072 = call i32 @llvm.abs.i32(i32 %2071, i1 false)
  %2073 = urem i32 %2072, 1000
  %2074 = zext i32 %2073 to i64
  %2075 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2074
  %2076 = bitcast i32* %2075 to i64*
  %2077 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2076, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2078 = trunc i64 %2077 to i32
  %2079 = add nsw i32 %2078, 1
  %2080 = bitcast [1 x %struct.ds_base]* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2080, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2081 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %90, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2079, i32* nonnull %2075, %struct.ds_base* nonnull %2081, i32 1, i32 undef) #14
  %2082 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 90) to i64*), align 8, !tbaa !25
  %2083 = trunc i64 %2082 to i32
  %2084 = call i32 @llvm.abs.i32(i32 %2083, i1 false)
  %2085 = urem i32 %2084, 1000
  %2086 = zext i32 %2085 to i64
  %2087 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2086
  %2088 = bitcast i32* %2087 to i64*
  %2089 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2088, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2090 = trunc i64 %2089 to i32
  %2091 = add nsw i32 %2090, 1
  %2092 = bitcast [1 x %struct.ds_base]* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2092, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2093 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %91, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2091, i32* nonnull %2087, %struct.ds_base* nonnull %2093, i32 1, i32 undef) #14
  %2094 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 91) to i64*), align 8, !tbaa !25
  %2095 = trunc i64 %2094 to i32
  %2096 = call i32 @llvm.abs.i32(i32 %2095, i1 false)
  %2097 = urem i32 %2096, 1000
  %2098 = zext i32 %2097 to i64
  %2099 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2098
  %2100 = bitcast i32* %2099 to i64*
  %2101 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2100, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2102 = trunc i64 %2101 to i32
  %2103 = add nsw i32 %2102, 1
  %2104 = bitcast [1 x %struct.ds_base]* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2104, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2105 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %92, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2103, i32* nonnull %2099, %struct.ds_base* nonnull %2105, i32 1, i32 undef) #14
  %2106 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 92) to i64*), align 16, !tbaa !25
  %2107 = trunc i64 %2106 to i32
  %2108 = call i32 @llvm.abs.i32(i32 %2107, i1 false)
  %2109 = urem i32 %2108, 1000
  %2110 = zext i32 %2109 to i64
  %2111 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2110
  %2112 = bitcast i32* %2111 to i64*
  %2113 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2112, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2114 = trunc i64 %2113 to i32
  %2115 = add nsw i32 %2114, 1
  %2116 = bitcast [1 x %struct.ds_base]* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2116, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2117 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %93, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2115, i32* nonnull %2111, %struct.ds_base* nonnull %2117, i32 1, i32 undef) #14
  %2118 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 93) to i64*), align 8, !tbaa !25
  %2119 = trunc i64 %2118 to i32
  %2120 = call i32 @llvm.abs.i32(i32 %2119, i1 false)
  %2121 = urem i32 %2120, 1000
  %2122 = zext i32 %2121 to i64
  %2123 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2122
  %2124 = bitcast i32* %2123 to i64*
  %2125 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2124, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2126 = trunc i64 %2125 to i32
  %2127 = add nsw i32 %2126, 1
  %2128 = bitcast [1 x %struct.ds_base]* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2128, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2129 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %94, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2127, i32* nonnull %2123, %struct.ds_base* nonnull %2129, i32 1, i32 undef) #14
  %2130 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 94) to i64*), align 8, !tbaa !25
  %2131 = trunc i64 %2130 to i32
  %2132 = call i32 @llvm.abs.i32(i32 %2131, i1 false)
  %2133 = urem i32 %2132, 1000
  %2134 = zext i32 %2133 to i64
  %2135 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2134
  %2136 = bitcast i32* %2135 to i64*
  %2137 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2136, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2138 = trunc i64 %2137 to i32
  %2139 = add nsw i32 %2138, 1
  %2140 = bitcast [1 x %struct.ds_base]* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2140, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2141 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %95, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2139, i32* nonnull %2135, %struct.ds_base* nonnull %2141, i32 1, i32 undef) #14
  %2142 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 95) to i64*), align 8, !tbaa !25
  %2143 = trunc i64 %2142 to i32
  %2144 = call i32 @llvm.abs.i32(i32 %2143, i1 false)
  %2145 = urem i32 %2144, 1000
  %2146 = zext i32 %2145 to i64
  %2147 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2146
  %2148 = bitcast i32* %2147 to i64*
  %2149 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2148, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2150 = trunc i64 %2149 to i32
  %2151 = add nsw i32 %2150, 1
  %2152 = bitcast [1 x %struct.ds_base]* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2152, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2153 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %96, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2151, i32* nonnull %2147, %struct.ds_base* nonnull %2153, i32 1, i32 undef) #14
  %2154 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 96) to i64*), align 16, !tbaa !25
  %2155 = trunc i64 %2154 to i32
  %2156 = call i32 @llvm.abs.i32(i32 %2155, i1 false)
  %2157 = urem i32 %2156, 1000
  %2158 = zext i32 %2157 to i64
  %2159 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2158
  %2160 = bitcast i32* %2159 to i64*
  %2161 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2160, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2162 = trunc i64 %2161 to i32
  %2163 = add nsw i32 %2162, 1
  %2164 = bitcast [1 x %struct.ds_base]* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2164, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2165 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %97, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2163, i32* nonnull %2159, %struct.ds_base* nonnull %2165, i32 1, i32 undef) #14
  %2166 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 97) to i64*), align 8, !tbaa !25
  %2167 = trunc i64 %2166 to i32
  %2168 = call i32 @llvm.abs.i32(i32 %2167, i1 false)
  %2169 = urem i32 %2168, 1000
  %2170 = zext i32 %2169 to i64
  %2171 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2170
  %2172 = bitcast i32* %2171 to i64*
  %2173 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2172, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2174 = trunc i64 %2173 to i32
  %2175 = add nsw i32 %2174, 1
  %2176 = bitcast [1 x %struct.ds_base]* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2176, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2177 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %98, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2175, i32* nonnull %2171, %struct.ds_base* nonnull %2177, i32 1, i32 undef) #14
  %2178 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 98) to i64*), align 8, !tbaa !25
  %2179 = trunc i64 %2178 to i32
  %2180 = call i32 @llvm.abs.i32(i32 %2179, i1 false)
  %2181 = urem i32 %2180, 1000
  %2182 = zext i32 %2181 to i64
  %2183 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2182
  %2184 = bitcast i32* %2183 to i64*
  %2185 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2184, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2186 = trunc i64 %2185 to i32
  %2187 = add nsw i32 %2186, 1
  %2188 = bitcast [1 x %struct.ds_base]* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2188, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2189 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %99, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2187, i32* nonnull %2183, %struct.ds_base* nonnull %2189, i32 1, i32 undef) #14
  %2190 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 99) to i64*), align 8, !tbaa !25
  %2191 = trunc i64 %2190 to i32
  %2192 = call i32 @llvm.abs.i32(i32 %2191, i1 false)
  %2193 = urem i32 %2192, 1000
  %2194 = zext i32 %2193 to i64
  %2195 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2194
  %2196 = bitcast i32* %2195 to i64*
  %2197 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2196, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2198 = trunc i64 %2197 to i32
  %2199 = add nsw i32 %2198, 1
  %2200 = bitcast [1 x %struct.ds_base]* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2200, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2201 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %100, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2199, i32* nonnull %2195, %struct.ds_base* nonnull %2201, i32 1, i32 undef) #14
  %2202 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 100) to i64*), align 16, !tbaa !25
  %2203 = trunc i64 %2202 to i32
  %2204 = call i32 @llvm.abs.i32(i32 %2203, i1 false)
  %2205 = urem i32 %2204, 1000
  %2206 = zext i32 %2205 to i64
  %2207 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2206
  %2208 = bitcast i32* %2207 to i64*
  %2209 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2208, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2210 = trunc i64 %2209 to i32
  %2211 = add nsw i32 %2210, 1
  %2212 = bitcast [1 x %struct.ds_base]* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2212, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2213 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %101, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2211, i32* nonnull %2207, %struct.ds_base* nonnull %2213, i32 1, i32 undef) #14
  %2214 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 101) to i64*), align 8, !tbaa !25
  %2215 = trunc i64 %2214 to i32
  %2216 = call i32 @llvm.abs.i32(i32 %2215, i1 false)
  %2217 = urem i32 %2216, 1000
  %2218 = zext i32 %2217 to i64
  %2219 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2218
  %2220 = bitcast i32* %2219 to i64*
  %2221 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2220, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2222 = trunc i64 %2221 to i32
  %2223 = add nsw i32 %2222, 1
  %2224 = bitcast [1 x %struct.ds_base]* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2224, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2225 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %102, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2223, i32* nonnull %2219, %struct.ds_base* nonnull %2225, i32 1, i32 undef) #14
  %2226 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 102) to i64*), align 8, !tbaa !25
  %2227 = trunc i64 %2226 to i32
  %2228 = call i32 @llvm.abs.i32(i32 %2227, i1 false)
  %2229 = urem i32 %2228, 1000
  %2230 = zext i32 %2229 to i64
  %2231 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2230
  %2232 = bitcast i32* %2231 to i64*
  %2233 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2232, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2234 = trunc i64 %2233 to i32
  %2235 = add nsw i32 %2234, 1
  %2236 = bitcast [1 x %struct.ds_base]* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2236, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2237 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %103, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2235, i32* nonnull %2231, %struct.ds_base* nonnull %2237, i32 1, i32 undef) #14
  %2238 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 103) to i64*), align 8, !tbaa !25
  %2239 = trunc i64 %2238 to i32
  %2240 = call i32 @llvm.abs.i32(i32 %2239, i1 false)
  %2241 = urem i32 %2240, 1000
  %2242 = zext i32 %2241 to i64
  %2243 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2242
  %2244 = bitcast i32* %2243 to i64*
  %2245 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2244, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2246 = trunc i64 %2245 to i32
  %2247 = add nsw i32 %2246, 1
  %2248 = bitcast [1 x %struct.ds_base]* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2248, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2249 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %104, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2247, i32* nonnull %2243, %struct.ds_base* nonnull %2249, i32 1, i32 undef) #14
  %2250 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 104) to i64*), align 16, !tbaa !25
  %2251 = trunc i64 %2250 to i32
  %2252 = call i32 @llvm.abs.i32(i32 %2251, i1 false)
  %2253 = urem i32 %2252, 1000
  %2254 = zext i32 %2253 to i64
  %2255 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2254
  %2256 = bitcast i32* %2255 to i64*
  %2257 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2256, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2258 = trunc i64 %2257 to i32
  %2259 = add nsw i32 %2258, 1
  %2260 = bitcast [1 x %struct.ds_base]* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2260, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2261 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %105, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2259, i32* nonnull %2255, %struct.ds_base* nonnull %2261, i32 1, i32 undef) #14
  %2262 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 105) to i64*), align 8, !tbaa !25
  %2263 = trunc i64 %2262 to i32
  %2264 = call i32 @llvm.abs.i32(i32 %2263, i1 false)
  %2265 = urem i32 %2264, 1000
  %2266 = zext i32 %2265 to i64
  %2267 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2266
  %2268 = bitcast i32* %2267 to i64*
  %2269 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2268, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2270 = trunc i64 %2269 to i32
  %2271 = add nsw i32 %2270, 1
  %2272 = bitcast [1 x %struct.ds_base]* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2272, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2273 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %106, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2271, i32* nonnull %2267, %struct.ds_base* nonnull %2273, i32 1, i32 undef) #14
  %2274 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 106) to i64*), align 8, !tbaa !25
  %2275 = trunc i64 %2274 to i32
  %2276 = call i32 @llvm.abs.i32(i32 %2275, i1 false)
  %2277 = urem i32 %2276, 1000
  %2278 = zext i32 %2277 to i64
  %2279 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2278
  %2280 = bitcast i32* %2279 to i64*
  %2281 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2280, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2282 = trunc i64 %2281 to i32
  %2283 = add nsw i32 %2282, 1
  %2284 = bitcast [1 x %struct.ds_base]* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2284, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2285 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %107, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2283, i32* nonnull %2279, %struct.ds_base* nonnull %2285, i32 1, i32 undef) #14
  %2286 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 107) to i64*), align 8, !tbaa !25
  %2287 = trunc i64 %2286 to i32
  %2288 = call i32 @llvm.abs.i32(i32 %2287, i1 false)
  %2289 = urem i32 %2288, 1000
  %2290 = zext i32 %2289 to i64
  %2291 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2290
  %2292 = bitcast i32* %2291 to i64*
  %2293 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2292, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2294 = trunc i64 %2293 to i32
  %2295 = add nsw i32 %2294, 1
  %2296 = bitcast [1 x %struct.ds_base]* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2296, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2297 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %108, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2295, i32* nonnull %2291, %struct.ds_base* nonnull %2297, i32 1, i32 undef) #14
  %2298 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 108) to i64*), align 16, !tbaa !25
  %2299 = trunc i64 %2298 to i32
  %2300 = call i32 @llvm.abs.i32(i32 %2299, i1 false)
  %2301 = urem i32 %2300, 1000
  %2302 = zext i32 %2301 to i64
  %2303 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2302
  %2304 = bitcast i32* %2303 to i64*
  %2305 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2304, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2306 = trunc i64 %2305 to i32
  %2307 = add nsw i32 %2306, 1
  %2308 = bitcast [1 x %struct.ds_base]* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2308, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2309 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %109, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2307, i32* nonnull %2303, %struct.ds_base* nonnull %2309, i32 1, i32 undef) #14
  %2310 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 109) to i64*), align 8, !tbaa !25
  %2311 = trunc i64 %2310 to i32
  %2312 = call i32 @llvm.abs.i32(i32 %2311, i1 false)
  %2313 = urem i32 %2312, 1000
  %2314 = zext i32 %2313 to i64
  %2315 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2314
  %2316 = bitcast i32* %2315 to i64*
  %2317 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2316, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2318 = trunc i64 %2317 to i32
  %2319 = add nsw i32 %2318, 1
  %2320 = bitcast [1 x %struct.ds_base]* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2320, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2321 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %110, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2319, i32* nonnull %2315, %struct.ds_base* nonnull %2321, i32 1, i32 undef) #14
  %2322 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 110) to i64*), align 8, !tbaa !25
  %2323 = trunc i64 %2322 to i32
  %2324 = call i32 @llvm.abs.i32(i32 %2323, i1 false)
  %2325 = urem i32 %2324, 1000
  %2326 = zext i32 %2325 to i64
  %2327 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2326
  %2328 = bitcast i32* %2327 to i64*
  %2329 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2328, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2330 = trunc i64 %2329 to i32
  %2331 = add nsw i32 %2330, 1
  %2332 = bitcast [1 x %struct.ds_base]* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2332, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2333 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %111, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2331, i32* nonnull %2327, %struct.ds_base* nonnull %2333, i32 1, i32 undef) #14
  %2334 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 111) to i64*), align 8, !tbaa !25
  %2335 = trunc i64 %2334 to i32
  %2336 = call i32 @llvm.abs.i32(i32 %2335, i1 false)
  %2337 = urem i32 %2336, 1000
  %2338 = zext i32 %2337 to i64
  %2339 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2338
  %2340 = bitcast i32* %2339 to i64*
  %2341 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2340, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2342 = trunc i64 %2341 to i32
  %2343 = add nsw i32 %2342, 1
  %2344 = bitcast [1 x %struct.ds_base]* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2344, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2345 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %112, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2343, i32* nonnull %2339, %struct.ds_base* nonnull %2345, i32 1, i32 undef) #14
  %2346 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 112) to i64*), align 16, !tbaa !25
  %2347 = trunc i64 %2346 to i32
  %2348 = call i32 @llvm.abs.i32(i32 %2347, i1 false)
  %2349 = urem i32 %2348, 1000
  %2350 = zext i32 %2349 to i64
  %2351 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2350
  %2352 = bitcast i32* %2351 to i64*
  %2353 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2352, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2354 = trunc i64 %2353 to i32
  %2355 = add nsw i32 %2354, 1
  %2356 = bitcast [1 x %struct.ds_base]* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2356, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2357 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %113, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2355, i32* nonnull %2351, %struct.ds_base* nonnull %2357, i32 1, i32 undef) #14
  %2358 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 113) to i64*), align 8, !tbaa !25
  %2359 = trunc i64 %2358 to i32
  %2360 = call i32 @llvm.abs.i32(i32 %2359, i1 false)
  %2361 = urem i32 %2360, 1000
  %2362 = zext i32 %2361 to i64
  %2363 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2362
  %2364 = bitcast i32* %2363 to i64*
  %2365 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2364, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2366 = trunc i64 %2365 to i32
  %2367 = add nsw i32 %2366, 1
  %2368 = bitcast [1 x %struct.ds_base]* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2368, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2369 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %114, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2367, i32* nonnull %2363, %struct.ds_base* nonnull %2369, i32 1, i32 undef) #14
  %2370 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 114) to i64*), align 8, !tbaa !25
  %2371 = trunc i64 %2370 to i32
  %2372 = call i32 @llvm.abs.i32(i32 %2371, i1 false)
  %2373 = urem i32 %2372, 1000
  %2374 = zext i32 %2373 to i64
  %2375 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2374
  %2376 = bitcast i32* %2375 to i64*
  %2377 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2376, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2378 = trunc i64 %2377 to i32
  %2379 = add nsw i32 %2378, 1
  %2380 = bitcast [1 x %struct.ds_base]* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2380, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2381 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %115, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2379, i32* nonnull %2375, %struct.ds_base* nonnull %2381, i32 1, i32 undef) #14
  %2382 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 115) to i64*), align 8, !tbaa !25
  %2383 = trunc i64 %2382 to i32
  %2384 = call i32 @llvm.abs.i32(i32 %2383, i1 false)
  %2385 = urem i32 %2384, 1000
  %2386 = zext i32 %2385 to i64
  %2387 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2386
  %2388 = bitcast i32* %2387 to i64*
  %2389 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2388, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2390 = trunc i64 %2389 to i32
  %2391 = add nsw i32 %2390, 1
  %2392 = bitcast [1 x %struct.ds_base]* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2392, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2393 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %116, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2391, i32* nonnull %2387, %struct.ds_base* nonnull %2393, i32 1, i32 undef) #14
  %2394 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 116) to i64*), align 16, !tbaa !25
  %2395 = trunc i64 %2394 to i32
  %2396 = call i32 @llvm.abs.i32(i32 %2395, i1 false)
  %2397 = urem i32 %2396, 1000
  %2398 = zext i32 %2397 to i64
  %2399 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2398
  %2400 = bitcast i32* %2399 to i64*
  %2401 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2400, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2402 = trunc i64 %2401 to i32
  %2403 = add nsw i32 %2402, 1
  %2404 = bitcast [1 x %struct.ds_base]* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2404, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2405 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %117, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2403, i32* nonnull %2399, %struct.ds_base* nonnull %2405, i32 1, i32 undef) #14
  %2406 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 117) to i64*), align 8, !tbaa !25
  %2407 = trunc i64 %2406 to i32
  %2408 = call i32 @llvm.abs.i32(i32 %2407, i1 false)
  %2409 = urem i32 %2408, 1000
  %2410 = zext i32 %2409 to i64
  %2411 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2410
  %2412 = bitcast i32* %2411 to i64*
  %2413 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2412, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2414 = trunc i64 %2413 to i32
  %2415 = add nsw i32 %2414, 1
  %2416 = bitcast [1 x %struct.ds_base]* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2416, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2417 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %118, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2415, i32* nonnull %2411, %struct.ds_base* nonnull %2417, i32 1, i32 undef) #14
  %2418 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 118) to i64*), align 8, !tbaa !25
  %2419 = trunc i64 %2418 to i32
  %2420 = call i32 @llvm.abs.i32(i32 %2419, i1 false)
  %2421 = urem i32 %2420, 1000
  %2422 = zext i32 %2421 to i64
  %2423 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2422
  %2424 = bitcast i32* %2423 to i64*
  %2425 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2424, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2426 = trunc i64 %2425 to i32
  %2427 = add nsw i32 %2426, 1
  %2428 = bitcast [1 x %struct.ds_base]* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2428, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2429 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %119, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2427, i32* nonnull %2423, %struct.ds_base* nonnull %2429, i32 1, i32 undef) #14
  %2430 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 119) to i64*), align 8, !tbaa !25
  %2431 = trunc i64 %2430 to i32
  %2432 = call i32 @llvm.abs.i32(i32 %2431, i1 false)
  %2433 = urem i32 %2432, 1000
  %2434 = zext i32 %2433 to i64
  %2435 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2434
  %2436 = bitcast i32* %2435 to i64*
  %2437 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2436, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2438 = trunc i64 %2437 to i32
  %2439 = add nsw i32 %2438, 1
  %2440 = bitcast [1 x %struct.ds_base]* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2440, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2441 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %120, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2439, i32* nonnull %2435, %struct.ds_base* nonnull %2441, i32 1, i32 undef) #14
  %2442 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 120) to i64*), align 16, !tbaa !25
  %2443 = trunc i64 %2442 to i32
  %2444 = call i32 @llvm.abs.i32(i32 %2443, i1 false)
  %2445 = urem i32 %2444, 1000
  %2446 = zext i32 %2445 to i64
  %2447 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2446
  %2448 = bitcast i32* %2447 to i64*
  %2449 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2448, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2450 = trunc i64 %2449 to i32
  %2451 = add nsw i32 %2450, 1
  %2452 = bitcast [1 x %struct.ds_base]* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2452, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2453 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %121, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2451, i32* nonnull %2447, %struct.ds_base* nonnull %2453, i32 1, i32 undef) #14
  %2454 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 121) to i64*), align 8, !tbaa !25
  %2455 = trunc i64 %2454 to i32
  %2456 = call i32 @llvm.abs.i32(i32 %2455, i1 false)
  %2457 = urem i32 %2456, 1000
  %2458 = zext i32 %2457 to i64
  %2459 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2458
  %2460 = bitcast i32* %2459 to i64*
  %2461 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2460, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2462 = trunc i64 %2461 to i32
  %2463 = add nsw i32 %2462, 1
  %2464 = bitcast [1 x %struct.ds_base]* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2464, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2465 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %122, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2463, i32* nonnull %2459, %struct.ds_base* nonnull %2465, i32 1, i32 undef) #14
  %2466 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 122) to i64*), align 8, !tbaa !25
  %2467 = trunc i64 %2466 to i32
  %2468 = call i32 @llvm.abs.i32(i32 %2467, i1 false)
  %2469 = urem i32 %2468, 1000
  %2470 = zext i32 %2469 to i64
  %2471 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2470
  %2472 = bitcast i32* %2471 to i64*
  %2473 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2472, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2474 = trunc i64 %2473 to i32
  %2475 = add nsw i32 %2474, 1
  %2476 = bitcast [1 x %struct.ds_base]* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2476, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2477 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %123, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2475, i32* nonnull %2471, %struct.ds_base* nonnull %2477, i32 1, i32 undef) #14
  %2478 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 123) to i64*), align 8, !tbaa !25
  %2479 = trunc i64 %2478 to i32
  %2480 = call i32 @llvm.abs.i32(i32 %2479, i1 false)
  %2481 = urem i32 %2480, 1000
  %2482 = zext i32 %2481 to i64
  %2483 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2482
  %2484 = bitcast i32* %2483 to i64*
  %2485 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2484, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2486 = trunc i64 %2485 to i32
  %2487 = add nsw i32 %2486, 1
  %2488 = bitcast [1 x %struct.ds_base]* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2488, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2489 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %124, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2487, i32* nonnull %2483, %struct.ds_base* nonnull %2489, i32 1, i32 undef) #14
  %2490 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 124) to i64*), align 16, !tbaa !25
  %2491 = trunc i64 %2490 to i32
  %2492 = call i32 @llvm.abs.i32(i32 %2491, i1 false)
  %2493 = urem i32 %2492, 1000
  %2494 = zext i32 %2493 to i64
  %2495 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2494
  %2496 = bitcast i32* %2495 to i64*
  %2497 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2496, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2498 = trunc i64 %2497 to i32
  %2499 = add nsw i32 %2498, 1
  %2500 = bitcast [1 x %struct.ds_base]* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2500, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2501 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %125, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2499, i32* nonnull %2495, %struct.ds_base* nonnull %2501, i32 1, i32 undef) #14
  %2502 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 125) to i64*), align 8, !tbaa !25
  %2503 = trunc i64 %2502 to i32
  %2504 = call i32 @llvm.abs.i32(i32 %2503, i1 false)
  %2505 = urem i32 %2504, 1000
  %2506 = zext i32 %2505 to i64
  %2507 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2506
  %2508 = bitcast i32* %2507 to i64*
  %2509 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2508, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2510 = trunc i64 %2509 to i32
  %2511 = add nsw i32 %2510, 1
  %2512 = bitcast [1 x %struct.ds_base]* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2512, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2513 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %126, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2511, i32* nonnull %2507, %struct.ds_base* nonnull %2513, i32 1, i32 undef) #14
  %2514 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 126) to i64*), align 8, !tbaa !25
  %2515 = trunc i64 %2514 to i32
  %2516 = call i32 @llvm.abs.i32(i32 %2515, i1 false)
  %2517 = urem i32 %2516, 1000
  %2518 = zext i32 %2517 to i64
  %2519 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2518
  %2520 = bitcast i32* %2519 to i64*
  %2521 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2520, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2522 = trunc i64 %2521 to i32
  %2523 = add nsw i32 %2522, 1
  %2524 = bitcast [1 x %struct.ds_base]* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2524, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2525 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %127, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2523, i32* nonnull %2519, %struct.ds_base* nonnull %2525, i32 1, i32 undef) #14
  %2526 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 127) to i64*), align 8, !tbaa !25
  %2527 = trunc i64 %2526 to i32
  %2528 = call i32 @llvm.abs.i32(i32 %2527, i1 false)
  %2529 = urem i32 %2528, 1000
  %2530 = zext i32 %2529 to i64
  %2531 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2530
  %2532 = bitcast i32* %2531 to i64*
  %2533 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2532, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2534 = trunc i64 %2533 to i32
  %2535 = add nsw i32 %2534, 1
  %2536 = bitcast [1 x %struct.ds_base]* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2536, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2537 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %128, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2535, i32* nonnull %2531, %struct.ds_base* nonnull %2537, i32 1, i32 undef) #14
  %2538 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 128) to i64*), align 16, !tbaa !25
  %2539 = trunc i64 %2538 to i32
  %2540 = call i32 @llvm.abs.i32(i32 %2539, i1 false)
  %2541 = urem i32 %2540, 1000
  %2542 = zext i32 %2541 to i64
  %2543 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2542
  %2544 = bitcast i32* %2543 to i64*
  %2545 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2544, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2546 = trunc i64 %2545 to i32
  %2547 = add nsw i32 %2546, 1
  %2548 = bitcast [1 x %struct.ds_base]* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2548, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2549 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %129, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2547, i32* nonnull %2543, %struct.ds_base* nonnull %2549, i32 1, i32 undef) #14
  %2550 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 129) to i64*), align 8, !tbaa !25
  %2551 = trunc i64 %2550 to i32
  %2552 = call i32 @llvm.abs.i32(i32 %2551, i1 false)
  %2553 = urem i32 %2552, 1000
  %2554 = zext i32 %2553 to i64
  %2555 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2554
  %2556 = bitcast i32* %2555 to i64*
  %2557 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2556, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2558 = trunc i64 %2557 to i32
  %2559 = add nsw i32 %2558, 1
  %2560 = bitcast [1 x %struct.ds_base]* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2560, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2561 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %130, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2559, i32* nonnull %2555, %struct.ds_base* nonnull %2561, i32 1, i32 undef) #14
  %2562 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 130) to i64*), align 8, !tbaa !25
  %2563 = trunc i64 %2562 to i32
  %2564 = call i32 @llvm.abs.i32(i32 %2563, i1 false)
  %2565 = urem i32 %2564, 1000
  %2566 = zext i32 %2565 to i64
  %2567 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2566
  %2568 = bitcast i32* %2567 to i64*
  %2569 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2568, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2570 = trunc i64 %2569 to i32
  %2571 = add nsw i32 %2570, 1
  %2572 = bitcast [1 x %struct.ds_base]* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2572, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2573 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %131, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2571, i32* nonnull %2567, %struct.ds_base* nonnull %2573, i32 1, i32 undef) #14
  %2574 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 131) to i64*), align 8, !tbaa !25
  %2575 = trunc i64 %2574 to i32
  %2576 = call i32 @llvm.abs.i32(i32 %2575, i1 false)
  %2577 = urem i32 %2576, 1000
  %2578 = zext i32 %2577 to i64
  %2579 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2578
  %2580 = bitcast i32* %2579 to i64*
  %2581 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2580, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2582 = trunc i64 %2581 to i32
  %2583 = add nsw i32 %2582, 1
  %2584 = bitcast [1 x %struct.ds_base]* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2584, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2585 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %132, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2583, i32* nonnull %2579, %struct.ds_base* nonnull %2585, i32 1, i32 undef) #14
  %2586 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 132) to i64*), align 16, !tbaa !25
  %2587 = trunc i64 %2586 to i32
  %2588 = call i32 @llvm.abs.i32(i32 %2587, i1 false)
  %2589 = urem i32 %2588, 1000
  %2590 = zext i32 %2589 to i64
  %2591 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2590
  %2592 = bitcast i32* %2591 to i64*
  %2593 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2592, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2594 = trunc i64 %2593 to i32
  %2595 = add nsw i32 %2594, 1
  %2596 = bitcast [1 x %struct.ds_base]* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2596, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2597 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %133, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2595, i32* nonnull %2591, %struct.ds_base* nonnull %2597, i32 1, i32 undef) #14
  %2598 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 133) to i64*), align 8, !tbaa !25
  %2599 = trunc i64 %2598 to i32
  %2600 = call i32 @llvm.abs.i32(i32 %2599, i1 false)
  %2601 = urem i32 %2600, 1000
  %2602 = zext i32 %2601 to i64
  %2603 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2602
  %2604 = bitcast i32* %2603 to i64*
  %2605 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2604, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2606 = trunc i64 %2605 to i32
  %2607 = add nsw i32 %2606, 1
  %2608 = bitcast [1 x %struct.ds_base]* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2608, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2609 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %134, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2607, i32* nonnull %2603, %struct.ds_base* nonnull %2609, i32 1, i32 undef) #14
  %2610 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 134) to i64*), align 8, !tbaa !25
  %2611 = trunc i64 %2610 to i32
  %2612 = call i32 @llvm.abs.i32(i32 %2611, i1 false)
  %2613 = urem i32 %2612, 1000
  %2614 = zext i32 %2613 to i64
  %2615 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2614
  %2616 = bitcast i32* %2615 to i64*
  %2617 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2616, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2618 = trunc i64 %2617 to i32
  %2619 = add nsw i32 %2618, 1
  %2620 = bitcast [1 x %struct.ds_base]* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2620, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2621 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %135, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2619, i32* nonnull %2615, %struct.ds_base* nonnull %2621, i32 1, i32 undef) #14
  %2622 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 135) to i64*), align 8, !tbaa !25
  %2623 = trunc i64 %2622 to i32
  %2624 = call i32 @llvm.abs.i32(i32 %2623, i1 false)
  %2625 = urem i32 %2624, 1000
  %2626 = zext i32 %2625 to i64
  %2627 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2626
  %2628 = bitcast i32* %2627 to i64*
  %2629 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2628, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2630 = trunc i64 %2629 to i32
  %2631 = add nsw i32 %2630, 1
  %2632 = bitcast [1 x %struct.ds_base]* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2632, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2633 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %136, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2631, i32* nonnull %2627, %struct.ds_base* nonnull %2633, i32 1, i32 undef) #14
  %2634 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 136) to i64*), align 16, !tbaa !25
  %2635 = trunc i64 %2634 to i32
  %2636 = call i32 @llvm.abs.i32(i32 %2635, i1 false)
  %2637 = urem i32 %2636, 1000
  %2638 = zext i32 %2637 to i64
  %2639 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2638
  %2640 = bitcast i32* %2639 to i64*
  %2641 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2640, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2642 = trunc i64 %2641 to i32
  %2643 = add nsw i32 %2642, 1
  %2644 = bitcast [1 x %struct.ds_base]* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2644, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2645 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %137, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2643, i32* nonnull %2639, %struct.ds_base* nonnull %2645, i32 1, i32 undef) #14
  %2646 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 137) to i64*), align 8, !tbaa !25
  %2647 = trunc i64 %2646 to i32
  %2648 = call i32 @llvm.abs.i32(i32 %2647, i1 false)
  %2649 = urem i32 %2648, 1000
  %2650 = zext i32 %2649 to i64
  %2651 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2650
  %2652 = bitcast i32* %2651 to i64*
  %2653 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2652, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2654 = trunc i64 %2653 to i32
  %2655 = add nsw i32 %2654, 1
  %2656 = bitcast [1 x %struct.ds_base]* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2656, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2657 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %138, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2655, i32* nonnull %2651, %struct.ds_base* nonnull %2657, i32 1, i32 undef) #14
  %2658 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 138) to i64*), align 8, !tbaa !25
  %2659 = trunc i64 %2658 to i32
  %2660 = call i32 @llvm.abs.i32(i32 %2659, i1 false)
  %2661 = urem i32 %2660, 1000
  %2662 = zext i32 %2661 to i64
  %2663 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2662
  %2664 = bitcast i32* %2663 to i64*
  %2665 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2664, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2666 = trunc i64 %2665 to i32
  %2667 = add nsw i32 %2666, 1
  %2668 = bitcast [1 x %struct.ds_base]* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2668, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2669 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %139, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2667, i32* nonnull %2663, %struct.ds_base* nonnull %2669, i32 1, i32 undef) #14
  %2670 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 139) to i64*), align 8, !tbaa !25
  %2671 = trunc i64 %2670 to i32
  %2672 = call i32 @llvm.abs.i32(i32 %2671, i1 false)
  %2673 = urem i32 %2672, 1000
  %2674 = zext i32 %2673 to i64
  %2675 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2674
  %2676 = bitcast i32* %2675 to i64*
  %2677 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2676, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2678 = trunc i64 %2677 to i32
  %2679 = add nsw i32 %2678, 1
  %2680 = bitcast [1 x %struct.ds_base]* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2680, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2681 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %140, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2679, i32* nonnull %2675, %struct.ds_base* nonnull %2681, i32 1, i32 undef) #14
  %2682 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 140) to i64*), align 16, !tbaa !25
  %2683 = trunc i64 %2682 to i32
  %2684 = call i32 @llvm.abs.i32(i32 %2683, i1 false)
  %2685 = urem i32 %2684, 1000
  %2686 = zext i32 %2685 to i64
  %2687 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2686
  %2688 = bitcast i32* %2687 to i64*
  %2689 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2688, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2690 = trunc i64 %2689 to i32
  %2691 = add nsw i32 %2690, 1
  %2692 = bitcast [1 x %struct.ds_base]* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2692, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2693 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %141, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2691, i32* nonnull %2687, %struct.ds_base* nonnull %2693, i32 1, i32 undef) #14
  %2694 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 141) to i64*), align 8, !tbaa !25
  %2695 = trunc i64 %2694 to i32
  %2696 = call i32 @llvm.abs.i32(i32 %2695, i1 false)
  %2697 = urem i32 %2696, 1000
  %2698 = zext i32 %2697 to i64
  %2699 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2698
  %2700 = bitcast i32* %2699 to i64*
  %2701 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2700, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2702 = trunc i64 %2701 to i32
  %2703 = add nsw i32 %2702, 1
  %2704 = bitcast [1 x %struct.ds_base]* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2704, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2705 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %142, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2703, i32* nonnull %2699, %struct.ds_base* nonnull %2705, i32 1, i32 undef) #14
  %2706 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 142) to i64*), align 8, !tbaa !25
  %2707 = trunc i64 %2706 to i32
  %2708 = call i32 @llvm.abs.i32(i32 %2707, i1 false)
  %2709 = urem i32 %2708, 1000
  %2710 = zext i32 %2709 to i64
  %2711 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2710
  %2712 = bitcast i32* %2711 to i64*
  %2713 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2712, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2714 = trunc i64 %2713 to i32
  %2715 = add nsw i32 %2714, 1
  %2716 = bitcast [1 x %struct.ds_base]* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2716, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2717 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %143, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2715, i32* nonnull %2711, %struct.ds_base* nonnull %2717, i32 1, i32 undef) #14
  %2718 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 143) to i64*), align 8, !tbaa !25
  %2719 = trunc i64 %2718 to i32
  %2720 = call i32 @llvm.abs.i32(i32 %2719, i1 false)
  %2721 = urem i32 %2720, 1000
  %2722 = zext i32 %2721 to i64
  %2723 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2722
  %2724 = bitcast i32* %2723 to i64*
  %2725 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2724, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2726 = trunc i64 %2725 to i32
  %2727 = add nsw i32 %2726, 1
  %2728 = bitcast [1 x %struct.ds_base]* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2728, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2729 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %144, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2727, i32* nonnull %2723, %struct.ds_base* nonnull %2729, i32 1, i32 undef) #14
  %2730 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 144) to i64*), align 16, !tbaa !25
  %2731 = trunc i64 %2730 to i32
  %2732 = call i32 @llvm.abs.i32(i32 %2731, i1 false)
  %2733 = urem i32 %2732, 1000
  %2734 = zext i32 %2733 to i64
  %2735 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2734
  %2736 = bitcast i32* %2735 to i64*
  %2737 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2736, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2738 = trunc i64 %2737 to i32
  %2739 = add nsw i32 %2738, 1
  %2740 = bitcast [1 x %struct.ds_base]* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2740, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2741 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %145, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2739, i32* nonnull %2735, %struct.ds_base* nonnull %2741, i32 1, i32 undef) #14
  %2742 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 145) to i64*), align 8, !tbaa !25
  %2743 = trunc i64 %2742 to i32
  %2744 = call i32 @llvm.abs.i32(i32 %2743, i1 false)
  %2745 = urem i32 %2744, 1000
  %2746 = zext i32 %2745 to i64
  %2747 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2746
  %2748 = bitcast i32* %2747 to i64*
  %2749 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2748, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2750 = trunc i64 %2749 to i32
  %2751 = add nsw i32 %2750, 1
  %2752 = bitcast [1 x %struct.ds_base]* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2752, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2753 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %146, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2751, i32* nonnull %2747, %struct.ds_base* nonnull %2753, i32 1, i32 undef) #14
  %2754 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 146) to i64*), align 8, !tbaa !25
  %2755 = trunc i64 %2754 to i32
  %2756 = call i32 @llvm.abs.i32(i32 %2755, i1 false)
  %2757 = urem i32 %2756, 1000
  %2758 = zext i32 %2757 to i64
  %2759 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2758
  %2760 = bitcast i32* %2759 to i64*
  %2761 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2760, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2762 = trunc i64 %2761 to i32
  %2763 = add nsw i32 %2762, 1
  %2764 = bitcast [1 x %struct.ds_base]* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2764, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2765 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %147, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2763, i32* nonnull %2759, %struct.ds_base* nonnull %2765, i32 1, i32 undef) #14
  %2766 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 147) to i64*), align 8, !tbaa !25
  %2767 = trunc i64 %2766 to i32
  %2768 = call i32 @llvm.abs.i32(i32 %2767, i1 false)
  %2769 = urem i32 %2768, 1000
  %2770 = zext i32 %2769 to i64
  %2771 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2770
  %2772 = bitcast i32* %2771 to i64*
  %2773 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2772, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2774 = trunc i64 %2773 to i32
  %2775 = add nsw i32 %2774, 1
  %2776 = bitcast [1 x %struct.ds_base]* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2776, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2777 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %148, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2775, i32* nonnull %2771, %struct.ds_base* nonnull %2777, i32 1, i32 undef) #14
  %2778 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 148) to i64*), align 16, !tbaa !25
  %2779 = trunc i64 %2778 to i32
  %2780 = call i32 @llvm.abs.i32(i32 %2779, i1 false)
  %2781 = urem i32 %2780, 1000
  %2782 = zext i32 %2781 to i64
  %2783 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2782
  %2784 = bitcast i32* %2783 to i64*
  %2785 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2784, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2786 = trunc i64 %2785 to i32
  %2787 = add nsw i32 %2786, 1
  %2788 = bitcast [1 x %struct.ds_base]* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2788, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2789 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %149, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2787, i32* nonnull %2783, %struct.ds_base* nonnull %2789, i32 1, i32 undef) #14
  %2790 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 149) to i64*), align 8, !tbaa !25
  %2791 = trunc i64 %2790 to i32
  %2792 = call i32 @llvm.abs.i32(i32 %2791, i1 false)
  %2793 = urem i32 %2792, 1000
  %2794 = zext i32 %2793 to i64
  %2795 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2794
  %2796 = bitcast i32* %2795 to i64*
  %2797 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2796, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2798 = trunc i64 %2797 to i32
  %2799 = add nsw i32 %2798, 1
  %2800 = bitcast [1 x %struct.ds_base]* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2800, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2801 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %150, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2799, i32* nonnull %2795, %struct.ds_base* nonnull %2801, i32 1, i32 undef) #14
  %2802 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 150) to i64*), align 8, !tbaa !25
  %2803 = trunc i64 %2802 to i32
  %2804 = call i32 @llvm.abs.i32(i32 %2803, i1 false)
  %2805 = urem i32 %2804, 1000
  %2806 = zext i32 %2805 to i64
  %2807 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2806
  %2808 = bitcast i32* %2807 to i64*
  %2809 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2808, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2810 = trunc i64 %2809 to i32
  %2811 = add nsw i32 %2810, 1
  %2812 = bitcast [1 x %struct.ds_base]* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2812, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2813 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %151, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2811, i32* nonnull %2807, %struct.ds_base* nonnull %2813, i32 1, i32 undef) #14
  %2814 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 151) to i64*), align 8, !tbaa !25
  %2815 = trunc i64 %2814 to i32
  %2816 = call i32 @llvm.abs.i32(i32 %2815, i1 false)
  %2817 = urem i32 %2816, 1000
  %2818 = zext i32 %2817 to i64
  %2819 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2818
  %2820 = bitcast i32* %2819 to i64*
  %2821 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2820, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2822 = trunc i64 %2821 to i32
  %2823 = add nsw i32 %2822, 1
  %2824 = bitcast [1 x %struct.ds_base]* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2824, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2825 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %152, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2823, i32* nonnull %2819, %struct.ds_base* nonnull %2825, i32 1, i32 undef) #14
  %2826 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 152) to i64*), align 16, !tbaa !25
  %2827 = trunc i64 %2826 to i32
  %2828 = call i32 @llvm.abs.i32(i32 %2827, i1 false)
  %2829 = urem i32 %2828, 1000
  %2830 = zext i32 %2829 to i64
  %2831 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2830
  %2832 = bitcast i32* %2831 to i64*
  %2833 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2832, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2834 = trunc i64 %2833 to i32
  %2835 = add nsw i32 %2834, 1
  %2836 = bitcast [1 x %struct.ds_base]* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2836, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2837 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %153, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2835, i32* nonnull %2831, %struct.ds_base* nonnull %2837, i32 1, i32 undef) #14
  %2838 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 153) to i64*), align 8, !tbaa !25
  %2839 = trunc i64 %2838 to i32
  %2840 = call i32 @llvm.abs.i32(i32 %2839, i1 false)
  %2841 = urem i32 %2840, 1000
  %2842 = zext i32 %2841 to i64
  %2843 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2842
  %2844 = bitcast i32* %2843 to i64*
  %2845 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2844, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2846 = trunc i64 %2845 to i32
  %2847 = add nsw i32 %2846, 1
  %2848 = bitcast [1 x %struct.ds_base]* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2848, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2849 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %154, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2847, i32* nonnull %2843, %struct.ds_base* nonnull %2849, i32 1, i32 undef) #14
  %2850 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 154) to i64*), align 8, !tbaa !25
  %2851 = trunc i64 %2850 to i32
  %2852 = call i32 @llvm.abs.i32(i32 %2851, i1 false)
  %2853 = urem i32 %2852, 1000
  %2854 = zext i32 %2853 to i64
  %2855 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2854
  %2856 = bitcast i32* %2855 to i64*
  %2857 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2856, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2858 = trunc i64 %2857 to i32
  %2859 = add nsw i32 %2858, 1
  %2860 = bitcast [1 x %struct.ds_base]* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2860, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2861 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %155, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2859, i32* nonnull %2855, %struct.ds_base* nonnull %2861, i32 1, i32 undef) #14
  %2862 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 155) to i64*), align 8, !tbaa !25
  %2863 = trunc i64 %2862 to i32
  %2864 = call i32 @llvm.abs.i32(i32 %2863, i1 false)
  %2865 = urem i32 %2864, 1000
  %2866 = zext i32 %2865 to i64
  %2867 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2866
  %2868 = bitcast i32* %2867 to i64*
  %2869 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2868, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2870 = trunc i64 %2869 to i32
  %2871 = add nsw i32 %2870, 1
  %2872 = bitcast [1 x %struct.ds_base]* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2872, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2873 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %156, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2871, i32* nonnull %2867, %struct.ds_base* nonnull %2873, i32 1, i32 undef) #14
  %2874 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 156) to i64*), align 16, !tbaa !25
  %2875 = trunc i64 %2874 to i32
  %2876 = call i32 @llvm.abs.i32(i32 %2875, i1 false)
  %2877 = urem i32 %2876, 1000
  %2878 = zext i32 %2877 to i64
  %2879 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2878
  %2880 = bitcast i32* %2879 to i64*
  %2881 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2880, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2882 = trunc i64 %2881 to i32
  %2883 = add nsw i32 %2882, 1
  %2884 = bitcast [1 x %struct.ds_base]* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2884, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2885 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %157, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2883, i32* nonnull %2879, %struct.ds_base* nonnull %2885, i32 1, i32 undef) #14
  %2886 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 157) to i64*), align 8, !tbaa !25
  %2887 = trunc i64 %2886 to i32
  %2888 = call i32 @llvm.abs.i32(i32 %2887, i1 false)
  %2889 = urem i32 %2888, 1000
  %2890 = zext i32 %2889 to i64
  %2891 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2890
  %2892 = bitcast i32* %2891 to i64*
  %2893 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2892, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2894 = trunc i64 %2893 to i32
  %2895 = add nsw i32 %2894, 1
  %2896 = bitcast [1 x %struct.ds_base]* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2896, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2897 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %158, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2895, i32* nonnull %2891, %struct.ds_base* nonnull %2897, i32 1, i32 undef) #14
  %2898 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 158) to i64*), align 8, !tbaa !25
  %2899 = trunc i64 %2898 to i32
  %2900 = call i32 @llvm.abs.i32(i32 %2899, i1 false)
  %2901 = urem i32 %2900, 1000
  %2902 = zext i32 %2901 to i64
  %2903 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2902
  %2904 = bitcast i32* %2903 to i64*
  %2905 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2904, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2906 = trunc i64 %2905 to i32
  %2907 = add nsw i32 %2906, 1
  %2908 = bitcast [1 x %struct.ds_base]* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2908, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2909 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %159, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2907, i32* nonnull %2903, %struct.ds_base* nonnull %2909, i32 1, i32 undef) #14
  %2910 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 159) to i64*), align 8, !tbaa !25
  %2911 = trunc i64 %2910 to i32
  %2912 = call i32 @llvm.abs.i32(i32 %2911, i1 false)
  %2913 = urem i32 %2912, 1000
  %2914 = zext i32 %2913 to i64
  %2915 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2914
  %2916 = bitcast i32* %2915 to i64*
  %2917 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2916, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2918 = trunc i64 %2917 to i32
  %2919 = add nsw i32 %2918, 1
  %2920 = bitcast [1 x %struct.ds_base]* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2920, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2921 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %160, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2919, i32* nonnull %2915, %struct.ds_base* nonnull %2921, i32 1, i32 undef) #14
  %2922 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 160) to i64*), align 16, !tbaa !25
  %2923 = trunc i64 %2922 to i32
  %2924 = call i32 @llvm.abs.i32(i32 %2923, i1 false)
  %2925 = urem i32 %2924, 1000
  %2926 = zext i32 %2925 to i64
  %2927 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2926
  %2928 = bitcast i32* %2927 to i64*
  %2929 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2928, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2930 = trunc i64 %2929 to i32
  %2931 = add nsw i32 %2930, 1
  %2932 = bitcast [1 x %struct.ds_base]* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2932, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2933 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %161, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2931, i32* nonnull %2927, %struct.ds_base* nonnull %2933, i32 1, i32 undef) #14
  %2934 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 161) to i64*), align 8, !tbaa !25
  %2935 = trunc i64 %2934 to i32
  %2936 = call i32 @llvm.abs.i32(i32 %2935, i1 false)
  %2937 = urem i32 %2936, 1000
  %2938 = zext i32 %2937 to i64
  %2939 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2938
  %2940 = bitcast i32* %2939 to i64*
  %2941 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2940, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2942 = trunc i64 %2941 to i32
  %2943 = add nsw i32 %2942, 1
  %2944 = bitcast [1 x %struct.ds_base]* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2944, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2945 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %162, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2943, i32* nonnull %2939, %struct.ds_base* nonnull %2945, i32 1, i32 undef) #14
  %2946 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 162) to i64*), align 8, !tbaa !25
  %2947 = trunc i64 %2946 to i32
  %2948 = call i32 @llvm.abs.i32(i32 %2947, i1 false)
  %2949 = urem i32 %2948, 1000
  %2950 = zext i32 %2949 to i64
  %2951 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2950
  %2952 = bitcast i32* %2951 to i64*
  %2953 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2952, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2954 = trunc i64 %2953 to i32
  %2955 = add nsw i32 %2954, 1
  %2956 = bitcast [1 x %struct.ds_base]* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2956, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2957 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %163, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2955, i32* nonnull %2951, %struct.ds_base* nonnull %2957, i32 1, i32 undef) #14
  %2958 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 163) to i64*), align 8, !tbaa !25
  %2959 = trunc i64 %2958 to i32
  %2960 = call i32 @llvm.abs.i32(i32 %2959, i1 false)
  %2961 = urem i32 %2960, 1000
  %2962 = zext i32 %2961 to i64
  %2963 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2962
  %2964 = bitcast i32* %2963 to i64*
  %2965 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2964, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2966 = trunc i64 %2965 to i32
  %2967 = add nsw i32 %2966, 1
  %2968 = bitcast [1 x %struct.ds_base]* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2968, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2969 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %164, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2967, i32* nonnull %2963, %struct.ds_base* nonnull %2969, i32 1, i32 undef) #14
  %2970 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 164) to i64*), align 16, !tbaa !25
  %2971 = trunc i64 %2970 to i32
  %2972 = call i32 @llvm.abs.i32(i32 %2971, i1 false)
  %2973 = urem i32 %2972, 1000
  %2974 = zext i32 %2973 to i64
  %2975 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2974
  %2976 = bitcast i32* %2975 to i64*
  %2977 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2976, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2978 = trunc i64 %2977 to i32
  %2979 = add nsw i32 %2978, 1
  %2980 = bitcast [1 x %struct.ds_base]* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2980, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2981 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %165, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2979, i32* nonnull %2975, %struct.ds_base* nonnull %2981, i32 1, i32 undef) #14
  %2982 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 165) to i64*), align 8, !tbaa !25
  %2983 = trunc i64 %2982 to i32
  %2984 = call i32 @llvm.abs.i32(i32 %2983, i1 false)
  %2985 = urem i32 %2984, 1000
  %2986 = zext i32 %2985 to i64
  %2987 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2986
  %2988 = bitcast i32* %2987 to i64*
  %2989 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %2988, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %2990 = trunc i64 %2989 to i32
  %2991 = add nsw i32 %2990, 1
  %2992 = bitcast [1 x %struct.ds_base]* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2992, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %2993 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %166, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %2991, i32* nonnull %2987, %struct.ds_base* nonnull %2993, i32 1, i32 undef) #14
  %2994 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 166) to i64*), align 8, !tbaa !25
  %2995 = trunc i64 %2994 to i32
  %2996 = call i32 @llvm.abs.i32(i32 %2995, i1 false)
  %2997 = urem i32 %2996, 1000
  %2998 = zext i32 %2997 to i64
  %2999 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %2998
  %3000 = bitcast i32* %2999 to i64*
  %3001 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3000, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3002 = trunc i64 %3001 to i32
  %3003 = add nsw i32 %3002, 1
  %3004 = bitcast [1 x %struct.ds_base]* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3004, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3005 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %167, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3003, i32* nonnull %2999, %struct.ds_base* nonnull %3005, i32 1, i32 undef) #14
  %3006 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 167) to i64*), align 8, !tbaa !25
  %3007 = trunc i64 %3006 to i32
  %3008 = call i32 @llvm.abs.i32(i32 %3007, i1 false)
  %3009 = urem i32 %3008, 1000
  %3010 = zext i32 %3009 to i64
  %3011 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3010
  %3012 = bitcast i32* %3011 to i64*
  %3013 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3012, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3014 = trunc i64 %3013 to i32
  %3015 = add nsw i32 %3014, 1
  %3016 = bitcast [1 x %struct.ds_base]* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3016, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3017 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %168, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3015, i32* nonnull %3011, %struct.ds_base* nonnull %3017, i32 1, i32 undef) #14
  %3018 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 168) to i64*), align 16, !tbaa !25
  %3019 = trunc i64 %3018 to i32
  %3020 = call i32 @llvm.abs.i32(i32 %3019, i1 false)
  %3021 = urem i32 %3020, 1000
  %3022 = zext i32 %3021 to i64
  %3023 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3022
  %3024 = bitcast i32* %3023 to i64*
  %3025 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3024, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3026 = trunc i64 %3025 to i32
  %3027 = add nsw i32 %3026, 1
  %3028 = bitcast [1 x %struct.ds_base]* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3028, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3029 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %169, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3027, i32* nonnull %3023, %struct.ds_base* nonnull %3029, i32 1, i32 undef) #14
  %3030 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 169) to i64*), align 8, !tbaa !25
  %3031 = trunc i64 %3030 to i32
  %3032 = call i32 @llvm.abs.i32(i32 %3031, i1 false)
  %3033 = urem i32 %3032, 1000
  %3034 = zext i32 %3033 to i64
  %3035 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3034
  %3036 = bitcast i32* %3035 to i64*
  %3037 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3036, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3038 = trunc i64 %3037 to i32
  %3039 = add nsw i32 %3038, 1
  %3040 = bitcast [1 x %struct.ds_base]* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3040, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3041 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %170, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3039, i32* nonnull %3035, %struct.ds_base* nonnull %3041, i32 1, i32 undef) #14
  %3042 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 170) to i64*), align 8, !tbaa !25
  %3043 = trunc i64 %3042 to i32
  %3044 = call i32 @llvm.abs.i32(i32 %3043, i1 false)
  %3045 = urem i32 %3044, 1000
  %3046 = zext i32 %3045 to i64
  %3047 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3046
  %3048 = bitcast i32* %3047 to i64*
  %3049 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3048, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3050 = trunc i64 %3049 to i32
  %3051 = add nsw i32 %3050, 1
  %3052 = bitcast [1 x %struct.ds_base]* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3052, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3053 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %171, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3051, i32* nonnull %3047, %struct.ds_base* nonnull %3053, i32 1, i32 undef) #14
  %3054 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 171) to i64*), align 8, !tbaa !25
  %3055 = trunc i64 %3054 to i32
  %3056 = call i32 @llvm.abs.i32(i32 %3055, i1 false)
  %3057 = urem i32 %3056, 1000
  %3058 = zext i32 %3057 to i64
  %3059 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3058
  %3060 = bitcast i32* %3059 to i64*
  %3061 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3060, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3062 = trunc i64 %3061 to i32
  %3063 = add nsw i32 %3062, 1
  %3064 = bitcast [1 x %struct.ds_base]* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3064, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3065 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %172, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3063, i32* nonnull %3059, %struct.ds_base* nonnull %3065, i32 1, i32 undef) #14
  %3066 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 172) to i64*), align 16, !tbaa !25
  %3067 = trunc i64 %3066 to i32
  %3068 = call i32 @llvm.abs.i32(i32 %3067, i1 false)
  %3069 = urem i32 %3068, 1000
  %3070 = zext i32 %3069 to i64
  %3071 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3070
  %3072 = bitcast i32* %3071 to i64*
  %3073 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3072, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3074 = trunc i64 %3073 to i32
  %3075 = add nsw i32 %3074, 1
  %3076 = bitcast [1 x %struct.ds_base]* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3076, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3077 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %173, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3075, i32* nonnull %3071, %struct.ds_base* nonnull %3077, i32 1, i32 undef) #14
  %3078 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 173) to i64*), align 8, !tbaa !25
  %3079 = trunc i64 %3078 to i32
  %3080 = call i32 @llvm.abs.i32(i32 %3079, i1 false)
  %3081 = urem i32 %3080, 1000
  %3082 = zext i32 %3081 to i64
  %3083 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3082
  %3084 = bitcast i32* %3083 to i64*
  %3085 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3084, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3086 = trunc i64 %3085 to i32
  %3087 = add nsw i32 %3086, 1
  %3088 = bitcast [1 x %struct.ds_base]* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3088, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3089 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %174, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3087, i32* nonnull %3083, %struct.ds_base* nonnull %3089, i32 1, i32 undef) #14
  %3090 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 174) to i64*), align 8, !tbaa !25
  %3091 = trunc i64 %3090 to i32
  %3092 = call i32 @llvm.abs.i32(i32 %3091, i1 false)
  %3093 = urem i32 %3092, 1000
  %3094 = zext i32 %3093 to i64
  %3095 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3094
  %3096 = bitcast i32* %3095 to i64*
  %3097 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3096, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3098 = trunc i64 %3097 to i32
  %3099 = add nsw i32 %3098, 1
  %3100 = bitcast [1 x %struct.ds_base]* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3100, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3101 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %175, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3099, i32* nonnull %3095, %struct.ds_base* nonnull %3101, i32 1, i32 undef) #14
  %3102 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 175) to i64*), align 8, !tbaa !25
  %3103 = trunc i64 %3102 to i32
  %3104 = call i32 @llvm.abs.i32(i32 %3103, i1 false)
  %3105 = urem i32 %3104, 1000
  %3106 = zext i32 %3105 to i64
  %3107 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3106
  %3108 = bitcast i32* %3107 to i64*
  %3109 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3108, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3110 = trunc i64 %3109 to i32
  %3111 = add nsw i32 %3110, 1
  %3112 = bitcast [1 x %struct.ds_base]* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3112, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3113 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %176, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3111, i32* nonnull %3107, %struct.ds_base* nonnull %3113, i32 1, i32 undef) #14
  %3114 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 176) to i64*), align 16, !tbaa !25
  %3115 = trunc i64 %3114 to i32
  %3116 = call i32 @llvm.abs.i32(i32 %3115, i1 false)
  %3117 = urem i32 %3116, 1000
  %3118 = zext i32 %3117 to i64
  %3119 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3118
  %3120 = bitcast i32* %3119 to i64*
  %3121 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3120, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3122 = trunc i64 %3121 to i32
  %3123 = add nsw i32 %3122, 1
  %3124 = bitcast [1 x %struct.ds_base]* %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3124, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3125 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %177, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3123, i32* nonnull %3119, %struct.ds_base* nonnull %3125, i32 1, i32 undef) #14
  %3126 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 177) to i64*), align 8, !tbaa !25
  %3127 = trunc i64 %3126 to i32
  %3128 = call i32 @llvm.abs.i32(i32 %3127, i1 false)
  %3129 = urem i32 %3128, 1000
  %3130 = zext i32 %3129 to i64
  %3131 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3130
  %3132 = bitcast i32* %3131 to i64*
  %3133 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3132, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3134 = trunc i64 %3133 to i32
  %3135 = add nsw i32 %3134, 1
  %3136 = bitcast [1 x %struct.ds_base]* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3136, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3137 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %178, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3135, i32* nonnull %3131, %struct.ds_base* nonnull %3137, i32 1, i32 undef) #14
  %3138 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 178) to i64*), align 8, !tbaa !25
  %3139 = trunc i64 %3138 to i32
  %3140 = call i32 @llvm.abs.i32(i32 %3139, i1 false)
  %3141 = urem i32 %3140, 1000
  %3142 = zext i32 %3141 to i64
  %3143 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3142
  %3144 = bitcast i32* %3143 to i64*
  %3145 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3144, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3146 = trunc i64 %3145 to i32
  %3147 = add nsw i32 %3146, 1
  %3148 = bitcast [1 x %struct.ds_base]* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3148, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3149 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %179, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3147, i32* nonnull %3143, %struct.ds_base* nonnull %3149, i32 1, i32 undef) #14
  %3150 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 179) to i64*), align 8, !tbaa !25
  %3151 = trunc i64 %3150 to i32
  %3152 = call i32 @llvm.abs.i32(i32 %3151, i1 false)
  %3153 = urem i32 %3152, 1000
  %3154 = zext i32 %3153 to i64
  %3155 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3154
  %3156 = bitcast i32* %3155 to i64*
  %3157 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3156, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3158 = trunc i64 %3157 to i32
  %3159 = add nsw i32 %3158, 1
  %3160 = bitcast [1 x %struct.ds_base]* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3160, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3161 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %180, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3159, i32* nonnull %3155, %struct.ds_base* nonnull %3161, i32 1, i32 undef) #14
  %3162 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 180) to i64*), align 16, !tbaa !25
  %3163 = trunc i64 %3162 to i32
  %3164 = call i32 @llvm.abs.i32(i32 %3163, i1 false)
  %3165 = urem i32 %3164, 1000
  %3166 = zext i32 %3165 to i64
  %3167 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3166
  %3168 = bitcast i32* %3167 to i64*
  %3169 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3168, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3170 = trunc i64 %3169 to i32
  %3171 = add nsw i32 %3170, 1
  %3172 = bitcast [1 x %struct.ds_base]* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3172, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3173 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %181, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3171, i32* nonnull %3167, %struct.ds_base* nonnull %3173, i32 1, i32 undef) #14
  %3174 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 181) to i64*), align 8, !tbaa !25
  %3175 = trunc i64 %3174 to i32
  %3176 = call i32 @llvm.abs.i32(i32 %3175, i1 false)
  %3177 = urem i32 %3176, 1000
  %3178 = zext i32 %3177 to i64
  %3179 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3178
  %3180 = bitcast i32* %3179 to i64*
  %3181 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3180, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3182 = trunc i64 %3181 to i32
  %3183 = add nsw i32 %3182, 1
  %3184 = bitcast [1 x %struct.ds_base]* %182 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3184, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3185 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %182, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3183, i32* nonnull %3179, %struct.ds_base* nonnull %3185, i32 1, i32 undef) #14
  %3186 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 182) to i64*), align 8, !tbaa !25
  %3187 = trunc i64 %3186 to i32
  %3188 = call i32 @llvm.abs.i32(i32 %3187, i1 false)
  %3189 = urem i32 %3188, 1000
  %3190 = zext i32 %3189 to i64
  %3191 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3190
  %3192 = bitcast i32* %3191 to i64*
  %3193 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3192, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3194 = trunc i64 %3193 to i32
  %3195 = add nsw i32 %3194, 1
  %3196 = bitcast [1 x %struct.ds_base]* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3196, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3197 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %183, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3195, i32* nonnull %3191, %struct.ds_base* nonnull %3197, i32 1, i32 undef) #14
  %3198 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 183) to i64*), align 8, !tbaa !25
  %3199 = trunc i64 %3198 to i32
  %3200 = call i32 @llvm.abs.i32(i32 %3199, i1 false)
  %3201 = urem i32 %3200, 1000
  %3202 = zext i32 %3201 to i64
  %3203 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3202
  %3204 = bitcast i32* %3203 to i64*
  %3205 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3204, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3206 = trunc i64 %3205 to i32
  %3207 = add nsw i32 %3206, 1
  %3208 = bitcast [1 x %struct.ds_base]* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3208, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3209 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %184, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3207, i32* nonnull %3203, %struct.ds_base* nonnull %3209, i32 1, i32 undef) #14
  %3210 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 184) to i64*), align 16, !tbaa !25
  %3211 = trunc i64 %3210 to i32
  %3212 = call i32 @llvm.abs.i32(i32 %3211, i1 false)
  %3213 = urem i32 %3212, 1000
  %3214 = zext i32 %3213 to i64
  %3215 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3214
  %3216 = bitcast i32* %3215 to i64*
  %3217 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3216, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3218 = trunc i64 %3217 to i32
  %3219 = add nsw i32 %3218, 1
  %3220 = bitcast [1 x %struct.ds_base]* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3220, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3221 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %185, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3219, i32* nonnull %3215, %struct.ds_base* nonnull %3221, i32 1, i32 undef) #14
  %3222 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 185) to i64*), align 8, !tbaa !25
  %3223 = trunc i64 %3222 to i32
  %3224 = call i32 @llvm.abs.i32(i32 %3223, i1 false)
  %3225 = urem i32 %3224, 1000
  %3226 = zext i32 %3225 to i64
  %3227 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3226
  %3228 = bitcast i32* %3227 to i64*
  %3229 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3228, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3230 = trunc i64 %3229 to i32
  %3231 = add nsw i32 %3230, 1
  %3232 = bitcast [1 x %struct.ds_base]* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3232, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3233 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %186, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3231, i32* nonnull %3227, %struct.ds_base* nonnull %3233, i32 1, i32 undef) #14
  %3234 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 186) to i64*), align 8, !tbaa !25
  %3235 = trunc i64 %3234 to i32
  %3236 = call i32 @llvm.abs.i32(i32 %3235, i1 false)
  %3237 = urem i32 %3236, 1000
  %3238 = zext i32 %3237 to i64
  %3239 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3238
  %3240 = bitcast i32* %3239 to i64*
  %3241 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3240, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3242 = trunc i64 %3241 to i32
  %3243 = add nsw i32 %3242, 1
  %3244 = bitcast [1 x %struct.ds_base]* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3244, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3245 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %187, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3243, i32* nonnull %3239, %struct.ds_base* nonnull %3245, i32 1, i32 undef) #14
  %3246 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 187) to i64*), align 8, !tbaa !25
  %3247 = trunc i64 %3246 to i32
  %3248 = call i32 @llvm.abs.i32(i32 %3247, i1 false)
  %3249 = urem i32 %3248, 1000
  %3250 = zext i32 %3249 to i64
  %3251 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3250
  %3252 = bitcast i32* %3251 to i64*
  %3253 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3252, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3254 = trunc i64 %3253 to i32
  %3255 = add nsw i32 %3254, 1
  %3256 = bitcast [1 x %struct.ds_base]* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3256, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3257 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %188, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3255, i32* nonnull %3251, %struct.ds_base* nonnull %3257, i32 1, i32 undef) #14
  %3258 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 188) to i64*), align 16, !tbaa !25
  %3259 = trunc i64 %3258 to i32
  %3260 = call i32 @llvm.abs.i32(i32 %3259, i1 false)
  %3261 = urem i32 %3260, 1000
  %3262 = zext i32 %3261 to i64
  %3263 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3262
  %3264 = bitcast i32* %3263 to i64*
  %3265 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3264, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3266 = trunc i64 %3265 to i32
  %3267 = add nsw i32 %3266, 1
  %3268 = bitcast [1 x %struct.ds_base]* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3268, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3269 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %189, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3267, i32* nonnull %3263, %struct.ds_base* nonnull %3269, i32 1, i32 undef) #14
  %3270 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 189) to i64*), align 8, !tbaa !25
  %3271 = trunc i64 %3270 to i32
  %3272 = call i32 @llvm.abs.i32(i32 %3271, i1 false)
  %3273 = urem i32 %3272, 1000
  %3274 = zext i32 %3273 to i64
  %3275 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3274
  %3276 = bitcast i32* %3275 to i64*
  %3277 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3276, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3278 = trunc i64 %3277 to i32
  %3279 = add nsw i32 %3278, 1
  %3280 = bitcast [1 x %struct.ds_base]* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3280, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3281 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %190, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3279, i32* nonnull %3275, %struct.ds_base* nonnull %3281, i32 1, i32 undef) #14
  %3282 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 190) to i64*), align 8, !tbaa !25
  %3283 = trunc i64 %3282 to i32
  %3284 = call i32 @llvm.abs.i32(i32 %3283, i1 false)
  %3285 = urem i32 %3284, 1000
  %3286 = zext i32 %3285 to i64
  %3287 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3286
  %3288 = bitcast i32* %3287 to i64*
  %3289 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3288, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3290 = trunc i64 %3289 to i32
  %3291 = add nsw i32 %3290, 1
  %3292 = bitcast [1 x %struct.ds_base]* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3292, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3293 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %191, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3291, i32* nonnull %3287, %struct.ds_base* nonnull %3293, i32 1, i32 undef) #14
  %3294 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 191) to i64*), align 8, !tbaa !25
  %3295 = trunc i64 %3294 to i32
  %3296 = call i32 @llvm.abs.i32(i32 %3295, i1 false)
  %3297 = urem i32 %3296, 1000
  %3298 = zext i32 %3297 to i64
  %3299 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3298
  %3300 = bitcast i32* %3299 to i64*
  %3301 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3300, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3302 = trunc i64 %3301 to i32
  %3303 = add nsw i32 %3302, 1
  %3304 = bitcast [1 x %struct.ds_base]* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3304, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3305 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %192, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3303, i32* nonnull %3299, %struct.ds_base* nonnull %3305, i32 1, i32 undef) #14
  %3306 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 192) to i64*), align 16, !tbaa !25
  %3307 = trunc i64 %3306 to i32
  %3308 = call i32 @llvm.abs.i32(i32 %3307, i1 false)
  %3309 = urem i32 %3308, 1000
  %3310 = zext i32 %3309 to i64
  %3311 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3310
  %3312 = bitcast i32* %3311 to i64*
  %3313 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3312, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3314 = trunc i64 %3313 to i32
  %3315 = add nsw i32 %3314, 1
  %3316 = bitcast [1 x %struct.ds_base]* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3316, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3317 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %193, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3315, i32* nonnull %3311, %struct.ds_base* nonnull %3317, i32 1, i32 undef) #14
  %3318 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 193) to i64*), align 8, !tbaa !25
  %3319 = trunc i64 %3318 to i32
  %3320 = call i32 @llvm.abs.i32(i32 %3319, i1 false)
  %3321 = urem i32 %3320, 1000
  %3322 = zext i32 %3321 to i64
  %3323 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3322
  %3324 = bitcast i32* %3323 to i64*
  %3325 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3324, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3326 = trunc i64 %3325 to i32
  %3327 = add nsw i32 %3326, 1
  %3328 = bitcast [1 x %struct.ds_base]* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3328, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3329 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %194, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3327, i32* nonnull %3323, %struct.ds_base* nonnull %3329, i32 1, i32 undef) #14
  %3330 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 194) to i64*), align 8, !tbaa !25
  %3331 = trunc i64 %3330 to i32
  %3332 = call i32 @llvm.abs.i32(i32 %3331, i1 false)
  %3333 = urem i32 %3332, 1000
  %3334 = zext i32 %3333 to i64
  %3335 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3334
  %3336 = bitcast i32* %3335 to i64*
  %3337 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3336, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3338 = trunc i64 %3337 to i32
  %3339 = add nsw i32 %3338, 1
  %3340 = bitcast [1 x %struct.ds_base]* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3340, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3341 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %195, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3339, i32* nonnull %3335, %struct.ds_base* nonnull %3341, i32 1, i32 undef) #14
  %3342 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 195) to i64*), align 8, !tbaa !25
  %3343 = trunc i64 %3342 to i32
  %3344 = call i32 @llvm.abs.i32(i32 %3343, i1 false)
  %3345 = urem i32 %3344, 1000
  %3346 = zext i32 %3345 to i64
  %3347 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3346
  %3348 = bitcast i32* %3347 to i64*
  %3349 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3348, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3350 = trunc i64 %3349 to i32
  %3351 = add nsw i32 %3350, 1
  %3352 = bitcast [1 x %struct.ds_base]* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3352, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3353 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %196, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3351, i32* nonnull %3347, %struct.ds_base* nonnull %3353, i32 1, i32 undef) #14
  %3354 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 196) to i64*), align 16, !tbaa !25
  %3355 = trunc i64 %3354 to i32
  %3356 = call i32 @llvm.abs.i32(i32 %3355, i1 false)
  %3357 = urem i32 %3356, 1000
  %3358 = zext i32 %3357 to i64
  %3359 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3358
  %3360 = bitcast i32* %3359 to i64*
  %3361 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3360, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3362 = trunc i64 %3361 to i32
  %3363 = add nsw i32 %3362, 1
  %3364 = bitcast [1 x %struct.ds_base]* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3364, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3365 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %197, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3363, i32* nonnull %3359, %struct.ds_base* nonnull %3365, i32 1, i32 undef) #14
  %3366 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 197) to i64*), align 8, !tbaa !25
  %3367 = trunc i64 %3366 to i32
  %3368 = call i32 @llvm.abs.i32(i32 %3367, i1 false)
  %3369 = urem i32 %3368, 1000
  %3370 = zext i32 %3369 to i64
  %3371 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3370
  %3372 = bitcast i32* %3371 to i64*
  %3373 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3372, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3374 = trunc i64 %3373 to i32
  %3375 = add nsw i32 %3374, 1
  %3376 = bitcast [1 x %struct.ds_base]* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3376, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3377 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %198, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3375, i32* nonnull %3371, %struct.ds_base* nonnull %3377, i32 1, i32 undef) #14
  %3378 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 198) to i64*), align 8, !tbaa !25
  %3379 = trunc i64 %3378 to i32
  %3380 = call i32 @llvm.abs.i32(i32 %3379, i1 false)
  %3381 = urem i32 %3380, 1000
  %3382 = zext i32 %3381 to i64
  %3383 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3382
  %3384 = bitcast i32* %3383 to i64*
  %3385 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3384, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3386 = trunc i64 %3385 to i32
  %3387 = add nsw i32 %3386, 1
  %3388 = bitcast [1 x %struct.ds_base]* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3388, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3389 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %199, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3387, i32* nonnull %3383, %struct.ds_base* nonnull %3389, i32 1, i32 undef) #14
  %3390 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 199) to i64*), align 8, !tbaa !25
  %3391 = trunc i64 %3390 to i32
  %3392 = call i32 @llvm.abs.i32(i32 %3391, i1 false)
  %3393 = urem i32 %3392, 1000
  %3394 = zext i32 %3393 to i64
  %3395 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3394
  %3396 = bitcast i32* %3395 to i64*
  %3397 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3396, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3398 = trunc i64 %3397 to i32
  %3399 = add nsw i32 %3398, 1
  %3400 = bitcast [1 x %struct.ds_base]* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3400, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3401 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %200, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3399, i32* nonnull %3395, %struct.ds_base* nonnull %3401, i32 1, i32 undef) #14
  %3402 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 200) to i64*), align 16, !tbaa !25
  %3403 = trunc i64 %3402 to i32
  %3404 = call i32 @llvm.abs.i32(i32 %3403, i1 false)
  %3405 = urem i32 %3404, 1000
  %3406 = zext i32 %3405 to i64
  %3407 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3406
  %3408 = bitcast i32* %3407 to i64*
  %3409 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3408, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3410 = trunc i64 %3409 to i32
  %3411 = add nsw i32 %3410, 1
  %3412 = bitcast [1 x %struct.ds_base]* %201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3412, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3413 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %201, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3411, i32* nonnull %3407, %struct.ds_base* nonnull %3413, i32 1, i32 undef) #14
  %3414 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 201) to i64*), align 8, !tbaa !25
  %3415 = trunc i64 %3414 to i32
  %3416 = call i32 @llvm.abs.i32(i32 %3415, i1 false)
  %3417 = urem i32 %3416, 1000
  %3418 = zext i32 %3417 to i64
  %3419 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3418
  %3420 = bitcast i32* %3419 to i64*
  %3421 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3420, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3422 = trunc i64 %3421 to i32
  %3423 = add nsw i32 %3422, 1
  %3424 = bitcast [1 x %struct.ds_base]* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3424, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3425 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %202, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3423, i32* nonnull %3419, %struct.ds_base* nonnull %3425, i32 1, i32 undef) #14
  %3426 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 202) to i64*), align 8, !tbaa !25
  %3427 = trunc i64 %3426 to i32
  %3428 = call i32 @llvm.abs.i32(i32 %3427, i1 false)
  %3429 = urem i32 %3428, 1000
  %3430 = zext i32 %3429 to i64
  %3431 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3430
  %3432 = bitcast i32* %3431 to i64*
  %3433 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3432, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3434 = trunc i64 %3433 to i32
  %3435 = add nsw i32 %3434, 1
  %3436 = bitcast [1 x %struct.ds_base]* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3436, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3437 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %203, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3435, i32* nonnull %3431, %struct.ds_base* nonnull %3437, i32 1, i32 undef) #14
  %3438 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 203) to i64*), align 8, !tbaa !25
  %3439 = trunc i64 %3438 to i32
  %3440 = call i32 @llvm.abs.i32(i32 %3439, i1 false)
  %3441 = urem i32 %3440, 1000
  %3442 = zext i32 %3441 to i64
  %3443 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3442
  %3444 = bitcast i32* %3443 to i64*
  %3445 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3444, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3446 = trunc i64 %3445 to i32
  %3447 = add nsw i32 %3446, 1
  %3448 = bitcast [1 x %struct.ds_base]* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3448, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3449 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %204, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3447, i32* nonnull %3443, %struct.ds_base* nonnull %3449, i32 1, i32 undef) #14
  %3450 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 204) to i64*), align 16, !tbaa !25
  %3451 = trunc i64 %3450 to i32
  %3452 = call i32 @llvm.abs.i32(i32 %3451, i1 false)
  %3453 = urem i32 %3452, 1000
  %3454 = zext i32 %3453 to i64
  %3455 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3454
  %3456 = bitcast i32* %3455 to i64*
  %3457 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3456, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3458 = trunc i64 %3457 to i32
  %3459 = add nsw i32 %3458, 1
  %3460 = bitcast [1 x %struct.ds_base]* %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3460, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3461 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %205, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3459, i32* nonnull %3455, %struct.ds_base* nonnull %3461, i32 1, i32 undef) #14
  %3462 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 205) to i64*), align 8, !tbaa !25
  %3463 = trunc i64 %3462 to i32
  %3464 = call i32 @llvm.abs.i32(i32 %3463, i1 false)
  %3465 = urem i32 %3464, 1000
  %3466 = zext i32 %3465 to i64
  %3467 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3466
  %3468 = bitcast i32* %3467 to i64*
  %3469 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3468, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3470 = trunc i64 %3469 to i32
  %3471 = add nsw i32 %3470, 1
  %3472 = bitcast [1 x %struct.ds_base]* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3472, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3473 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %206, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3471, i32* nonnull %3467, %struct.ds_base* nonnull %3473, i32 1, i32 undef) #14
  %3474 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 206) to i64*), align 8, !tbaa !25
  %3475 = trunc i64 %3474 to i32
  %3476 = call i32 @llvm.abs.i32(i32 %3475, i1 false)
  %3477 = urem i32 %3476, 1000
  %3478 = zext i32 %3477 to i64
  %3479 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3478
  %3480 = bitcast i32* %3479 to i64*
  %3481 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3480, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3482 = trunc i64 %3481 to i32
  %3483 = add nsw i32 %3482, 1
  %3484 = bitcast [1 x %struct.ds_base]* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3484, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3485 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %207, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3483, i32* nonnull %3479, %struct.ds_base* nonnull %3485, i32 1, i32 undef) #14
  %3486 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 207) to i64*), align 8, !tbaa !25
  %3487 = trunc i64 %3486 to i32
  %3488 = call i32 @llvm.abs.i32(i32 %3487, i1 false)
  %3489 = urem i32 %3488, 1000
  %3490 = zext i32 %3489 to i64
  %3491 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3490
  %3492 = bitcast i32* %3491 to i64*
  %3493 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3492, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3494 = trunc i64 %3493 to i32
  %3495 = add nsw i32 %3494, 1
  %3496 = bitcast [1 x %struct.ds_base]* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3496, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3497 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %208, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3495, i32* nonnull %3491, %struct.ds_base* nonnull %3497, i32 1, i32 undef) #14
  %3498 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 208) to i64*), align 16, !tbaa !25
  %3499 = trunc i64 %3498 to i32
  %3500 = call i32 @llvm.abs.i32(i32 %3499, i1 false)
  %3501 = urem i32 %3500, 1000
  %3502 = zext i32 %3501 to i64
  %3503 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3502
  %3504 = bitcast i32* %3503 to i64*
  %3505 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3504, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3506 = trunc i64 %3505 to i32
  %3507 = add nsw i32 %3506, 1
  %3508 = bitcast [1 x %struct.ds_base]* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3508, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3509 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %209, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3507, i32* nonnull %3503, %struct.ds_base* nonnull %3509, i32 1, i32 undef) #14
  %3510 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 209) to i64*), align 8, !tbaa !25
  %3511 = trunc i64 %3510 to i32
  %3512 = call i32 @llvm.abs.i32(i32 %3511, i1 false)
  %3513 = urem i32 %3512, 1000
  %3514 = zext i32 %3513 to i64
  %3515 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3514
  %3516 = bitcast i32* %3515 to i64*
  %3517 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3516, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3518 = trunc i64 %3517 to i32
  %3519 = add nsw i32 %3518, 1
  %3520 = bitcast [1 x %struct.ds_base]* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3520, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3521 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %210, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3519, i32* nonnull %3515, %struct.ds_base* nonnull %3521, i32 1, i32 undef) #14
  %3522 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 210) to i64*), align 8, !tbaa !25
  %3523 = trunc i64 %3522 to i32
  %3524 = call i32 @llvm.abs.i32(i32 %3523, i1 false)
  %3525 = urem i32 %3524, 1000
  %3526 = zext i32 %3525 to i64
  %3527 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3526
  %3528 = bitcast i32* %3527 to i64*
  %3529 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3528, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3530 = trunc i64 %3529 to i32
  %3531 = add nsw i32 %3530, 1
  %3532 = bitcast [1 x %struct.ds_base]* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3532, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3533 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %211, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3531, i32* nonnull %3527, %struct.ds_base* nonnull %3533, i32 1, i32 undef) #14
  %3534 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 211) to i64*), align 8, !tbaa !25
  %3535 = trunc i64 %3534 to i32
  %3536 = call i32 @llvm.abs.i32(i32 %3535, i1 false)
  %3537 = urem i32 %3536, 1000
  %3538 = zext i32 %3537 to i64
  %3539 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3538
  %3540 = bitcast i32* %3539 to i64*
  %3541 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3540, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3542 = trunc i64 %3541 to i32
  %3543 = add nsw i32 %3542, 1
  %3544 = bitcast [1 x %struct.ds_base]* %212 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3544, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3545 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %212, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3543, i32* nonnull %3539, %struct.ds_base* nonnull %3545, i32 1, i32 undef) #14
  %3546 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 212) to i64*), align 16, !tbaa !25
  %3547 = trunc i64 %3546 to i32
  %3548 = call i32 @llvm.abs.i32(i32 %3547, i1 false)
  %3549 = urem i32 %3548, 1000
  %3550 = zext i32 %3549 to i64
  %3551 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3550
  %3552 = bitcast i32* %3551 to i64*
  %3553 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3552, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3554 = trunc i64 %3553 to i32
  %3555 = add nsw i32 %3554, 1
  %3556 = bitcast [1 x %struct.ds_base]* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3556, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3557 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %213, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3555, i32* nonnull %3551, %struct.ds_base* nonnull %3557, i32 1, i32 undef) #14
  %3558 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 213) to i64*), align 8, !tbaa !25
  %3559 = trunc i64 %3558 to i32
  %3560 = call i32 @llvm.abs.i32(i32 %3559, i1 false)
  %3561 = urem i32 %3560, 1000
  %3562 = zext i32 %3561 to i64
  %3563 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3562
  %3564 = bitcast i32* %3563 to i64*
  %3565 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3564, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3566 = trunc i64 %3565 to i32
  %3567 = add nsw i32 %3566, 1
  %3568 = bitcast [1 x %struct.ds_base]* %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3568, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3569 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %214, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3567, i32* nonnull %3563, %struct.ds_base* nonnull %3569, i32 1, i32 undef) #14
  %3570 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 214) to i64*), align 8, !tbaa !25
  %3571 = trunc i64 %3570 to i32
  %3572 = call i32 @llvm.abs.i32(i32 %3571, i1 false)
  %3573 = urem i32 %3572, 1000
  %3574 = zext i32 %3573 to i64
  %3575 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3574
  %3576 = bitcast i32* %3575 to i64*
  %3577 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3576, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3578 = trunc i64 %3577 to i32
  %3579 = add nsw i32 %3578, 1
  %3580 = bitcast [1 x %struct.ds_base]* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3580, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3581 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %215, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3579, i32* nonnull %3575, %struct.ds_base* nonnull %3581, i32 1, i32 undef) #14
  %3582 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 215) to i64*), align 8, !tbaa !25
  %3583 = trunc i64 %3582 to i32
  %3584 = call i32 @llvm.abs.i32(i32 %3583, i1 false)
  %3585 = urem i32 %3584, 1000
  %3586 = zext i32 %3585 to i64
  %3587 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3586
  %3588 = bitcast i32* %3587 to i64*
  %3589 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3588, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3590 = trunc i64 %3589 to i32
  %3591 = add nsw i32 %3590, 1
  %3592 = bitcast [1 x %struct.ds_base]* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3592, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3593 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %216, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3591, i32* nonnull %3587, %struct.ds_base* nonnull %3593, i32 1, i32 undef) #14
  %3594 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 216) to i64*), align 16, !tbaa !25
  %3595 = trunc i64 %3594 to i32
  %3596 = call i32 @llvm.abs.i32(i32 %3595, i1 false)
  %3597 = urem i32 %3596, 1000
  %3598 = zext i32 %3597 to i64
  %3599 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3598
  %3600 = bitcast i32* %3599 to i64*
  %3601 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3600, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3602 = trunc i64 %3601 to i32
  %3603 = add nsw i32 %3602, 1
  %3604 = bitcast [1 x %struct.ds_base]* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3604, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3605 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %217, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3603, i32* nonnull %3599, %struct.ds_base* nonnull %3605, i32 1, i32 undef) #14
  %3606 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 217) to i64*), align 8, !tbaa !25
  %3607 = trunc i64 %3606 to i32
  %3608 = call i32 @llvm.abs.i32(i32 %3607, i1 false)
  %3609 = urem i32 %3608, 1000
  %3610 = zext i32 %3609 to i64
  %3611 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3610
  %3612 = bitcast i32* %3611 to i64*
  %3613 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3612, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3614 = trunc i64 %3613 to i32
  %3615 = add nsw i32 %3614, 1
  %3616 = bitcast [1 x %struct.ds_base]* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3616, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3617 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %218, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3615, i32* nonnull %3611, %struct.ds_base* nonnull %3617, i32 1, i32 undef) #14
  %3618 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 218) to i64*), align 8, !tbaa !25
  %3619 = trunc i64 %3618 to i32
  %3620 = call i32 @llvm.abs.i32(i32 %3619, i1 false)
  %3621 = urem i32 %3620, 1000
  %3622 = zext i32 %3621 to i64
  %3623 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3622
  %3624 = bitcast i32* %3623 to i64*
  %3625 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3624, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3626 = trunc i64 %3625 to i32
  %3627 = add nsw i32 %3626, 1
  %3628 = bitcast [1 x %struct.ds_base]* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3628, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3629 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %219, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3627, i32* nonnull %3623, %struct.ds_base* nonnull %3629, i32 1, i32 undef) #14
  %3630 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 219) to i64*), align 8, !tbaa !25
  %3631 = trunc i64 %3630 to i32
  %3632 = call i32 @llvm.abs.i32(i32 %3631, i1 false)
  %3633 = urem i32 %3632, 1000
  %3634 = zext i32 %3633 to i64
  %3635 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3634
  %3636 = bitcast i32* %3635 to i64*
  %3637 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3636, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3638 = trunc i64 %3637 to i32
  %3639 = add nsw i32 %3638, 1
  %3640 = bitcast [1 x %struct.ds_base]* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3640, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3641 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %220, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3639, i32* nonnull %3635, %struct.ds_base* nonnull %3641, i32 1, i32 undef) #14
  %3642 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 220) to i64*), align 16, !tbaa !25
  %3643 = trunc i64 %3642 to i32
  %3644 = call i32 @llvm.abs.i32(i32 %3643, i1 false)
  %3645 = urem i32 %3644, 1000
  %3646 = zext i32 %3645 to i64
  %3647 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3646
  %3648 = bitcast i32* %3647 to i64*
  %3649 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3648, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3650 = trunc i64 %3649 to i32
  %3651 = add nsw i32 %3650, 1
  %3652 = bitcast [1 x %struct.ds_base]* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3652, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3653 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %221, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3651, i32* nonnull %3647, %struct.ds_base* nonnull %3653, i32 1, i32 undef) #14
  %3654 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 221) to i64*), align 8, !tbaa !25
  %3655 = trunc i64 %3654 to i32
  %3656 = call i32 @llvm.abs.i32(i32 %3655, i1 false)
  %3657 = urem i32 %3656, 1000
  %3658 = zext i32 %3657 to i64
  %3659 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3658
  %3660 = bitcast i32* %3659 to i64*
  %3661 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3660, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3662 = trunc i64 %3661 to i32
  %3663 = add nsw i32 %3662, 1
  %3664 = bitcast [1 x %struct.ds_base]* %222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3664, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3665 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %222, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3663, i32* nonnull %3659, %struct.ds_base* nonnull %3665, i32 1, i32 undef) #14
  %3666 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 222) to i64*), align 8, !tbaa !25
  %3667 = trunc i64 %3666 to i32
  %3668 = call i32 @llvm.abs.i32(i32 %3667, i1 false)
  %3669 = urem i32 %3668, 1000
  %3670 = zext i32 %3669 to i64
  %3671 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3670
  %3672 = bitcast i32* %3671 to i64*
  %3673 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3672, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3674 = trunc i64 %3673 to i32
  %3675 = add nsw i32 %3674, 1
  %3676 = bitcast [1 x %struct.ds_base]* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3676, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3677 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %223, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3675, i32* nonnull %3671, %struct.ds_base* nonnull %3677, i32 1, i32 undef) #14
  %3678 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 223) to i64*), align 8, !tbaa !25
  %3679 = trunc i64 %3678 to i32
  %3680 = call i32 @llvm.abs.i32(i32 %3679, i1 false)
  %3681 = urem i32 %3680, 1000
  %3682 = zext i32 %3681 to i64
  %3683 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3682
  %3684 = bitcast i32* %3683 to i64*
  %3685 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3684, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3686 = trunc i64 %3685 to i32
  %3687 = add nsw i32 %3686, 1
  %3688 = bitcast [1 x %struct.ds_base]* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3688, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3689 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %224, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3687, i32* nonnull %3683, %struct.ds_base* nonnull %3689, i32 1, i32 undef) #14
  %3690 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 224) to i64*), align 16, !tbaa !25
  %3691 = trunc i64 %3690 to i32
  %3692 = call i32 @llvm.abs.i32(i32 %3691, i1 false)
  %3693 = urem i32 %3692, 1000
  %3694 = zext i32 %3693 to i64
  %3695 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3694
  %3696 = bitcast i32* %3695 to i64*
  %3697 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3696, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3698 = trunc i64 %3697 to i32
  %3699 = add nsw i32 %3698, 1
  %3700 = bitcast [1 x %struct.ds_base]* %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3700, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3701 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %225, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3699, i32* nonnull %3695, %struct.ds_base* nonnull %3701, i32 1, i32 undef) #14
  %3702 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 225) to i64*), align 8, !tbaa !25
  %3703 = trunc i64 %3702 to i32
  %3704 = call i32 @llvm.abs.i32(i32 %3703, i1 false)
  %3705 = urem i32 %3704, 1000
  %3706 = zext i32 %3705 to i64
  %3707 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3706
  %3708 = bitcast i32* %3707 to i64*
  %3709 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3708, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3710 = trunc i64 %3709 to i32
  %3711 = add nsw i32 %3710, 1
  %3712 = bitcast [1 x %struct.ds_base]* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3712, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3713 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %226, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3711, i32* nonnull %3707, %struct.ds_base* nonnull %3713, i32 1, i32 undef) #14
  %3714 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 226) to i64*), align 8, !tbaa !25
  %3715 = trunc i64 %3714 to i32
  %3716 = call i32 @llvm.abs.i32(i32 %3715, i1 false)
  %3717 = urem i32 %3716, 1000
  %3718 = zext i32 %3717 to i64
  %3719 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3718
  %3720 = bitcast i32* %3719 to i64*
  %3721 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3720, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3722 = trunc i64 %3721 to i32
  %3723 = add nsw i32 %3722, 1
  %3724 = bitcast [1 x %struct.ds_base]* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3724, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3725 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %227, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3723, i32* nonnull %3719, %struct.ds_base* nonnull %3725, i32 1, i32 undef) #14
  %3726 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 227) to i64*), align 8, !tbaa !25
  %3727 = trunc i64 %3726 to i32
  %3728 = call i32 @llvm.abs.i32(i32 %3727, i1 false)
  %3729 = urem i32 %3728, 1000
  %3730 = zext i32 %3729 to i64
  %3731 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3730
  %3732 = bitcast i32* %3731 to i64*
  %3733 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3732, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3734 = trunc i64 %3733 to i32
  %3735 = add nsw i32 %3734, 1
  %3736 = bitcast [1 x %struct.ds_base]* %228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3736, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3737 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %228, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3735, i32* nonnull %3731, %struct.ds_base* nonnull %3737, i32 1, i32 undef) #14
  %3738 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 228) to i64*), align 16, !tbaa !25
  %3739 = trunc i64 %3738 to i32
  %3740 = call i32 @llvm.abs.i32(i32 %3739, i1 false)
  %3741 = urem i32 %3740, 1000
  %3742 = zext i32 %3741 to i64
  %3743 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3742
  %3744 = bitcast i32* %3743 to i64*
  %3745 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3744, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3746 = trunc i64 %3745 to i32
  %3747 = add nsw i32 %3746, 1
  %3748 = bitcast [1 x %struct.ds_base]* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3748, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3749 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %229, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3747, i32* nonnull %3743, %struct.ds_base* nonnull %3749, i32 1, i32 undef) #14
  %3750 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 229) to i64*), align 8, !tbaa !25
  %3751 = trunc i64 %3750 to i32
  %3752 = call i32 @llvm.abs.i32(i32 %3751, i1 false)
  %3753 = urem i32 %3752, 1000
  %3754 = zext i32 %3753 to i64
  %3755 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3754
  %3756 = bitcast i32* %3755 to i64*
  %3757 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3756, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3758 = trunc i64 %3757 to i32
  %3759 = add nsw i32 %3758, 1
  %3760 = bitcast [1 x %struct.ds_base]* %230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3760, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3761 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %230, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3759, i32* nonnull %3755, %struct.ds_base* nonnull %3761, i32 1, i32 undef) #14
  %3762 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 230) to i64*), align 8, !tbaa !25
  %3763 = trunc i64 %3762 to i32
  %3764 = call i32 @llvm.abs.i32(i32 %3763, i1 false)
  %3765 = urem i32 %3764, 1000
  %3766 = zext i32 %3765 to i64
  %3767 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3766
  %3768 = bitcast i32* %3767 to i64*
  %3769 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3768, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3770 = trunc i64 %3769 to i32
  %3771 = add nsw i32 %3770, 1
  %3772 = bitcast [1 x %struct.ds_base]* %231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3772, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3773 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %231, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3771, i32* nonnull %3767, %struct.ds_base* nonnull %3773, i32 1, i32 undef) #14
  %3774 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 231) to i64*), align 8, !tbaa !25
  %3775 = trunc i64 %3774 to i32
  %3776 = call i32 @llvm.abs.i32(i32 %3775, i1 false)
  %3777 = urem i32 %3776, 1000
  %3778 = zext i32 %3777 to i64
  %3779 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3778
  %3780 = bitcast i32* %3779 to i64*
  %3781 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3780, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3782 = trunc i64 %3781 to i32
  %3783 = add nsw i32 %3782, 1
  %3784 = bitcast [1 x %struct.ds_base]* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3784, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3785 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %232, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3783, i32* nonnull %3779, %struct.ds_base* nonnull %3785, i32 1, i32 undef) #14
  %3786 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 232) to i64*), align 16, !tbaa !25
  %3787 = trunc i64 %3786 to i32
  %3788 = call i32 @llvm.abs.i32(i32 %3787, i1 false)
  %3789 = urem i32 %3788, 1000
  %3790 = zext i32 %3789 to i64
  %3791 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3790
  %3792 = bitcast i32* %3791 to i64*
  %3793 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3792, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3794 = trunc i64 %3793 to i32
  %3795 = add nsw i32 %3794, 1
  %3796 = bitcast [1 x %struct.ds_base]* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3796, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3797 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %233, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3795, i32* nonnull %3791, %struct.ds_base* nonnull %3797, i32 1, i32 undef) #14
  %3798 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 233) to i64*), align 8, !tbaa !25
  %3799 = trunc i64 %3798 to i32
  %3800 = call i32 @llvm.abs.i32(i32 %3799, i1 false)
  %3801 = urem i32 %3800, 1000
  %3802 = zext i32 %3801 to i64
  %3803 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3802
  %3804 = bitcast i32* %3803 to i64*
  %3805 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3804, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3806 = trunc i64 %3805 to i32
  %3807 = add nsw i32 %3806, 1
  %3808 = bitcast [1 x %struct.ds_base]* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3808, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3809 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %234, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3807, i32* nonnull %3803, %struct.ds_base* nonnull %3809, i32 1, i32 undef) #14
  %3810 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 234) to i64*), align 8, !tbaa !25
  %3811 = trunc i64 %3810 to i32
  %3812 = call i32 @llvm.abs.i32(i32 %3811, i1 false)
  %3813 = urem i32 %3812, 1000
  %3814 = zext i32 %3813 to i64
  %3815 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3814
  %3816 = bitcast i32* %3815 to i64*
  %3817 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3816, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3818 = trunc i64 %3817 to i32
  %3819 = add nsw i32 %3818, 1
  %3820 = bitcast [1 x %struct.ds_base]* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3820, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3821 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %235, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3819, i32* nonnull %3815, %struct.ds_base* nonnull %3821, i32 1, i32 undef) #14
  %3822 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 235) to i64*), align 8, !tbaa !25
  %3823 = trunc i64 %3822 to i32
  %3824 = call i32 @llvm.abs.i32(i32 %3823, i1 false)
  %3825 = urem i32 %3824, 1000
  %3826 = zext i32 %3825 to i64
  %3827 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3826
  %3828 = bitcast i32* %3827 to i64*
  %3829 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3828, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3830 = trunc i64 %3829 to i32
  %3831 = add nsw i32 %3830, 1
  %3832 = bitcast [1 x %struct.ds_base]* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3832, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3833 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %236, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3831, i32* nonnull %3827, %struct.ds_base* nonnull %3833, i32 1, i32 undef) #14
  %3834 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 236) to i64*), align 16, !tbaa !25
  %3835 = trunc i64 %3834 to i32
  %3836 = call i32 @llvm.abs.i32(i32 %3835, i1 false)
  %3837 = urem i32 %3836, 1000
  %3838 = zext i32 %3837 to i64
  %3839 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3838
  %3840 = bitcast i32* %3839 to i64*
  %3841 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3840, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3842 = trunc i64 %3841 to i32
  %3843 = add nsw i32 %3842, 1
  %3844 = bitcast [1 x %struct.ds_base]* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3844, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3845 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %237, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3843, i32* nonnull %3839, %struct.ds_base* nonnull %3845, i32 1, i32 undef) #14
  %3846 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 237) to i64*), align 8, !tbaa !25
  %3847 = trunc i64 %3846 to i32
  %3848 = call i32 @llvm.abs.i32(i32 %3847, i1 false)
  %3849 = urem i32 %3848, 1000
  %3850 = zext i32 %3849 to i64
  %3851 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3850
  %3852 = bitcast i32* %3851 to i64*
  %3853 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3852, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3854 = trunc i64 %3853 to i32
  %3855 = add nsw i32 %3854, 1
  %3856 = bitcast [1 x %struct.ds_base]* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3856, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3857 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %238, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3855, i32* nonnull %3851, %struct.ds_base* nonnull %3857, i32 1, i32 undef) #14
  %3858 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 238) to i64*), align 8, !tbaa !25
  %3859 = trunc i64 %3858 to i32
  %3860 = call i32 @llvm.abs.i32(i32 %3859, i1 false)
  %3861 = urem i32 %3860, 1000
  %3862 = zext i32 %3861 to i64
  %3863 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3862
  %3864 = bitcast i32* %3863 to i64*
  %3865 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3864, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3866 = trunc i64 %3865 to i32
  %3867 = add nsw i32 %3866, 1
  %3868 = bitcast [1 x %struct.ds_base]* %239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3868, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3869 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %239, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3867, i32* nonnull %3863, %struct.ds_base* nonnull %3869, i32 1, i32 undef) #14
  %3870 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 239) to i64*), align 8, !tbaa !25
  %3871 = trunc i64 %3870 to i32
  %3872 = call i32 @llvm.abs.i32(i32 %3871, i1 false)
  %3873 = urem i32 %3872, 1000
  %3874 = zext i32 %3873 to i64
  %3875 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3874
  %3876 = bitcast i32* %3875 to i64*
  %3877 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3876, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3878 = trunc i64 %3877 to i32
  %3879 = add nsw i32 %3878, 1
  %3880 = bitcast [1 x %struct.ds_base]* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3880, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3881 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %240, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3879, i32* nonnull %3875, %struct.ds_base* nonnull %3881, i32 1, i32 undef) #14
  %3882 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 240) to i64*), align 16, !tbaa !25
  %3883 = trunc i64 %3882 to i32
  %3884 = call i32 @llvm.abs.i32(i32 %3883, i1 false)
  %3885 = urem i32 %3884, 1000
  %3886 = zext i32 %3885 to i64
  %3887 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3886
  %3888 = bitcast i32* %3887 to i64*
  %3889 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3888, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3890 = trunc i64 %3889 to i32
  %3891 = add nsw i32 %3890, 1
  %3892 = bitcast [1 x %struct.ds_base]* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3892, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3893 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %241, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3891, i32* nonnull %3887, %struct.ds_base* nonnull %3893, i32 1, i32 undef) #14
  %3894 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 241) to i64*), align 8, !tbaa !25
  %3895 = trunc i64 %3894 to i32
  %3896 = call i32 @llvm.abs.i32(i32 %3895, i1 false)
  %3897 = urem i32 %3896, 1000
  %3898 = zext i32 %3897 to i64
  %3899 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3898
  %3900 = bitcast i32* %3899 to i64*
  %3901 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3900, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3902 = trunc i64 %3901 to i32
  %3903 = add nsw i32 %3902, 1
  %3904 = bitcast [1 x %struct.ds_base]* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3904, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3905 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %242, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3903, i32* nonnull %3899, %struct.ds_base* nonnull %3905, i32 1, i32 undef) #14
  %3906 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 242) to i64*), align 8, !tbaa !25
  %3907 = trunc i64 %3906 to i32
  %3908 = call i32 @llvm.abs.i32(i32 %3907, i1 false)
  %3909 = urem i32 %3908, 1000
  %3910 = zext i32 %3909 to i64
  %3911 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3910
  %3912 = bitcast i32* %3911 to i64*
  %3913 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3912, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3914 = trunc i64 %3913 to i32
  %3915 = add nsw i32 %3914, 1
  %3916 = bitcast [1 x %struct.ds_base]* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3916, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3917 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %243, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3915, i32* nonnull %3911, %struct.ds_base* nonnull %3917, i32 1, i32 undef) #14
  %3918 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 243) to i64*), align 8, !tbaa !25
  %3919 = trunc i64 %3918 to i32
  %3920 = call i32 @llvm.abs.i32(i32 %3919, i1 false)
  %3921 = urem i32 %3920, 1000
  %3922 = zext i32 %3921 to i64
  %3923 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3922
  %3924 = bitcast i32* %3923 to i64*
  %3925 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3924, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3926 = trunc i64 %3925 to i32
  %3927 = add nsw i32 %3926, 1
  %3928 = bitcast [1 x %struct.ds_base]* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3928, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3929 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %244, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3927, i32* nonnull %3923, %struct.ds_base* nonnull %3929, i32 1, i32 undef) #14
  %3930 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 244) to i64*), align 16, !tbaa !25
  %3931 = trunc i64 %3930 to i32
  %3932 = call i32 @llvm.abs.i32(i32 %3931, i1 false)
  %3933 = urem i32 %3932, 1000
  %3934 = zext i32 %3933 to i64
  %3935 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3934
  %3936 = bitcast i32* %3935 to i64*
  %3937 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3936, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3938 = trunc i64 %3937 to i32
  %3939 = add nsw i32 %3938, 1
  %3940 = bitcast [1 x %struct.ds_base]* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3940, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3941 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %245, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3939, i32* nonnull %3935, %struct.ds_base* nonnull %3941, i32 1, i32 undef) #14
  %3942 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 245) to i64*), align 8, !tbaa !25
  %3943 = trunc i64 %3942 to i32
  %3944 = call i32 @llvm.abs.i32(i32 %3943, i1 false)
  %3945 = urem i32 %3944, 1000
  %3946 = zext i32 %3945 to i64
  %3947 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3946
  %3948 = bitcast i32* %3947 to i64*
  %3949 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3948, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3950 = trunc i64 %3949 to i32
  %3951 = add nsw i32 %3950, 1
  %3952 = bitcast [1 x %struct.ds_base]* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3952, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3953 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %246, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3951, i32* nonnull %3947, %struct.ds_base* nonnull %3953, i32 1, i32 undef) #14
  %3954 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 246) to i64*), align 8, !tbaa !25
  %3955 = trunc i64 %3954 to i32
  %3956 = call i32 @llvm.abs.i32(i32 %3955, i1 false)
  %3957 = urem i32 %3956, 1000
  %3958 = zext i32 %3957 to i64
  %3959 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3958
  %3960 = bitcast i32* %3959 to i64*
  %3961 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3960, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3962 = trunc i64 %3961 to i32
  %3963 = add nsw i32 %3962, 1
  %3964 = bitcast [1 x %struct.ds_base]* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3964, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3965 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %247, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3963, i32* nonnull %3959, %struct.ds_base* nonnull %3965, i32 1, i32 undef) #14
  %3966 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 247) to i64*), align 8, !tbaa !25
  %3967 = trunc i64 %3966 to i32
  %3968 = call i32 @llvm.abs.i32(i32 %3967, i1 false)
  %3969 = urem i32 %3968, 1000
  %3970 = zext i32 %3969 to i64
  %3971 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3970
  %3972 = bitcast i32* %3971 to i64*
  %3973 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3972, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3974 = trunc i64 %3973 to i32
  %3975 = add nsw i32 %3974, 1
  %3976 = bitcast [1 x %struct.ds_base]* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3976, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3977 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %248, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3975, i32* nonnull %3971, %struct.ds_base* nonnull %3977, i32 1, i32 undef) #14
  %3978 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 248) to i64*), align 16, !tbaa !25
  %3979 = trunc i64 %3978 to i32
  %3980 = call i32 @llvm.abs.i32(i32 %3979, i1 false)
  %3981 = urem i32 %3980, 1000
  %3982 = zext i32 %3981 to i64
  %3983 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3982
  %3984 = bitcast i32* %3983 to i64*
  %3985 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3984, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3986 = trunc i64 %3985 to i32
  %3987 = add nsw i32 %3986, 1
  %3988 = bitcast [1 x %struct.ds_base]* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3988, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %3989 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %249, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3987, i32* nonnull %3983, %struct.ds_base* nonnull %3989, i32 1, i32 undef) #14
  %3990 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 249) to i64*), align 8, !tbaa !25
  %3991 = trunc i64 %3990 to i32
  %3992 = call i32 @llvm.abs.i32(i32 %3991, i1 false)
  %3993 = urem i32 %3992, 1000
  %3994 = zext i32 %3993 to i64
  %3995 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %3994
  %3996 = bitcast i32* %3995 to i64*
  %3997 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %3996, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %3998 = trunc i64 %3997 to i32
  %3999 = add nsw i32 %3998, 1
  %4000 = bitcast [1 x %struct.ds_base]* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4000, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4001 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %250, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %3999, i32* nonnull %3995, %struct.ds_base* nonnull %4001, i32 1, i32 undef) #14
  %4002 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 250) to i64*), align 8, !tbaa !25
  %4003 = trunc i64 %4002 to i32
  %4004 = call i32 @llvm.abs.i32(i32 %4003, i1 false)
  %4005 = urem i32 %4004, 1000
  %4006 = zext i32 %4005 to i64
  %4007 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4006
  %4008 = bitcast i32* %4007 to i64*
  %4009 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4008, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4010 = trunc i64 %4009 to i32
  %4011 = add nsw i32 %4010, 1
  %4012 = bitcast [1 x %struct.ds_base]* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4012, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4013 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %251, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4011, i32* nonnull %4007, %struct.ds_base* nonnull %4013, i32 1, i32 undef) #14
  %4014 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 251) to i64*), align 8, !tbaa !25
  %4015 = trunc i64 %4014 to i32
  %4016 = call i32 @llvm.abs.i32(i32 %4015, i1 false)
  %4017 = urem i32 %4016, 1000
  %4018 = zext i32 %4017 to i64
  %4019 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4018
  %4020 = bitcast i32* %4019 to i64*
  %4021 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4020, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4022 = trunc i64 %4021 to i32
  %4023 = add nsw i32 %4022, 1
  %4024 = bitcast [1 x %struct.ds_base]* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4024, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4025 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %252, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4023, i32* nonnull %4019, %struct.ds_base* nonnull %4025, i32 1, i32 undef) #14
  %4026 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 252) to i64*), align 16, !tbaa !25
  %4027 = trunc i64 %4026 to i32
  %4028 = call i32 @llvm.abs.i32(i32 %4027, i1 false)
  %4029 = urem i32 %4028, 1000
  %4030 = zext i32 %4029 to i64
  %4031 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4030
  %4032 = bitcast i32* %4031 to i64*
  %4033 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4032, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4034 = trunc i64 %4033 to i32
  %4035 = add nsw i32 %4034, 1
  %4036 = bitcast [1 x %struct.ds_base]* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4036, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4037 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %253, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4035, i32* nonnull %4031, %struct.ds_base* nonnull %4037, i32 1, i32 undef) #14
  %4038 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 253) to i64*), align 8, !tbaa !25
  %4039 = trunc i64 %4038 to i32
  %4040 = call i32 @llvm.abs.i32(i32 %4039, i1 false)
  %4041 = urem i32 %4040, 1000
  %4042 = zext i32 %4041 to i64
  %4043 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4042
  %4044 = bitcast i32* %4043 to i64*
  %4045 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4044, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4046 = trunc i64 %4045 to i32
  %4047 = add nsw i32 %4046, 1
  %4048 = bitcast [1 x %struct.ds_base]* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4048, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4049 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %254, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4047, i32* nonnull %4043, %struct.ds_base* nonnull %4049, i32 1, i32 undef) #14
  %4050 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 254) to i64*), align 8, !tbaa !25
  %4051 = trunc i64 %4050 to i32
  %4052 = call i32 @llvm.abs.i32(i32 %4051, i1 false)
  %4053 = urem i32 %4052, 1000
  %4054 = zext i32 %4053 to i64
  %4055 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4054
  %4056 = bitcast i32* %4055 to i64*
  %4057 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4056, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4058 = trunc i64 %4057 to i32
  %4059 = add nsw i32 %4058, 1
  %4060 = bitcast [1 x %struct.ds_base]* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4060, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4061 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %255, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4059, i32* nonnull %4055, %struct.ds_base* nonnull %4061, i32 1, i32 undef) #14
  %4062 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 255) to i64*), align 8, !tbaa !25
  %4063 = trunc i64 %4062 to i32
  %4064 = call i32 @llvm.abs.i32(i32 %4063, i1 false)
  %4065 = urem i32 %4064, 1000
  %4066 = zext i32 %4065 to i64
  %4067 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4066
  %4068 = bitcast i32* %4067 to i64*
  %4069 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4068, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4070 = trunc i64 %4069 to i32
  %4071 = add nsw i32 %4070, 1
  %4072 = bitcast [1 x %struct.ds_base]* %256 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4072, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4073 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %256, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4071, i32* nonnull %4067, %struct.ds_base* nonnull %4073, i32 1, i32 undef) #14
  %4074 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 256) to i64*), align 16, !tbaa !25
  %4075 = trunc i64 %4074 to i32
  %4076 = call i32 @llvm.abs.i32(i32 %4075, i1 false)
  %4077 = urem i32 %4076, 1000
  %4078 = zext i32 %4077 to i64
  %4079 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4078
  %4080 = bitcast i32* %4079 to i64*
  %4081 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4080, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4082 = trunc i64 %4081 to i32
  %4083 = add nsw i32 %4082, 1
  %4084 = bitcast [1 x %struct.ds_base]* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4084, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4085 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %257, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4083, i32* nonnull %4079, %struct.ds_base* nonnull %4085, i32 1, i32 undef) #14
  %4086 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 257) to i64*), align 8, !tbaa !25
  %4087 = trunc i64 %4086 to i32
  %4088 = call i32 @llvm.abs.i32(i32 %4087, i1 false)
  %4089 = urem i32 %4088, 1000
  %4090 = zext i32 %4089 to i64
  %4091 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4090
  %4092 = bitcast i32* %4091 to i64*
  %4093 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4092, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4094 = trunc i64 %4093 to i32
  %4095 = add nsw i32 %4094, 1
  %4096 = bitcast [1 x %struct.ds_base]* %258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4096, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4097 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %258, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4095, i32* nonnull %4091, %struct.ds_base* nonnull %4097, i32 1, i32 undef) #14
  %4098 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 258) to i64*), align 8, !tbaa !25
  %4099 = trunc i64 %4098 to i32
  %4100 = call i32 @llvm.abs.i32(i32 %4099, i1 false)
  %4101 = urem i32 %4100, 1000
  %4102 = zext i32 %4101 to i64
  %4103 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4102
  %4104 = bitcast i32* %4103 to i64*
  %4105 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4104, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4106 = trunc i64 %4105 to i32
  %4107 = add nsw i32 %4106, 1
  %4108 = bitcast [1 x %struct.ds_base]* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4108, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4109 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %259, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4107, i32* nonnull %4103, %struct.ds_base* nonnull %4109, i32 1, i32 undef) #14
  %4110 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 259) to i64*), align 8, !tbaa !25
  %4111 = trunc i64 %4110 to i32
  %4112 = call i32 @llvm.abs.i32(i32 %4111, i1 false)
  %4113 = urem i32 %4112, 1000
  %4114 = zext i32 %4113 to i64
  %4115 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4114
  %4116 = bitcast i32* %4115 to i64*
  %4117 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4116, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4118 = trunc i64 %4117 to i32
  %4119 = add nsw i32 %4118, 1
  %4120 = bitcast [1 x %struct.ds_base]* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4120, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4121 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %260, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4119, i32* nonnull %4115, %struct.ds_base* nonnull %4121, i32 1, i32 undef) #14
  %4122 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 260) to i64*), align 16, !tbaa !25
  %4123 = trunc i64 %4122 to i32
  %4124 = call i32 @llvm.abs.i32(i32 %4123, i1 false)
  %4125 = urem i32 %4124, 1000
  %4126 = zext i32 %4125 to i64
  %4127 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4126
  %4128 = bitcast i32* %4127 to i64*
  %4129 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4128, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4130 = trunc i64 %4129 to i32
  %4131 = add nsw i32 %4130, 1
  %4132 = bitcast [1 x %struct.ds_base]* %261 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4132, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4133 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %261, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4131, i32* nonnull %4127, %struct.ds_base* nonnull %4133, i32 1, i32 undef) #14
  %4134 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 261) to i64*), align 8, !tbaa !25
  %4135 = trunc i64 %4134 to i32
  %4136 = call i32 @llvm.abs.i32(i32 %4135, i1 false)
  %4137 = urem i32 %4136, 1000
  %4138 = zext i32 %4137 to i64
  %4139 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4138
  %4140 = bitcast i32* %4139 to i64*
  %4141 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4140, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4142 = trunc i64 %4141 to i32
  %4143 = add nsw i32 %4142, 1
  %4144 = bitcast [1 x %struct.ds_base]* %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4144, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4145 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %262, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4143, i32* nonnull %4139, %struct.ds_base* nonnull %4145, i32 1, i32 undef) #14
  %4146 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 262) to i64*), align 8, !tbaa !25
  %4147 = trunc i64 %4146 to i32
  %4148 = call i32 @llvm.abs.i32(i32 %4147, i1 false)
  %4149 = urem i32 %4148, 1000
  %4150 = zext i32 %4149 to i64
  %4151 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4150
  %4152 = bitcast i32* %4151 to i64*
  %4153 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4152, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4154 = trunc i64 %4153 to i32
  %4155 = add nsw i32 %4154, 1
  %4156 = bitcast [1 x %struct.ds_base]* %263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4156, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4157 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %263, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4155, i32* nonnull %4151, %struct.ds_base* nonnull %4157, i32 1, i32 undef) #14
  %4158 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 263) to i64*), align 8, !tbaa !25
  %4159 = trunc i64 %4158 to i32
  %4160 = call i32 @llvm.abs.i32(i32 %4159, i1 false)
  %4161 = urem i32 %4160, 1000
  %4162 = zext i32 %4161 to i64
  %4163 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4162
  %4164 = bitcast i32* %4163 to i64*
  %4165 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4164, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4166 = trunc i64 %4165 to i32
  %4167 = add nsw i32 %4166, 1
  %4168 = bitcast [1 x %struct.ds_base]* %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4168, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4169 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %264, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4167, i32* nonnull %4163, %struct.ds_base* nonnull %4169, i32 1, i32 undef) #14
  %4170 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 264) to i64*), align 16, !tbaa !25
  %4171 = trunc i64 %4170 to i32
  %4172 = call i32 @llvm.abs.i32(i32 %4171, i1 false)
  %4173 = urem i32 %4172, 1000
  %4174 = zext i32 %4173 to i64
  %4175 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4174
  %4176 = bitcast i32* %4175 to i64*
  %4177 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4176, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4178 = trunc i64 %4177 to i32
  %4179 = add nsw i32 %4178, 1
  %4180 = bitcast [1 x %struct.ds_base]* %265 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4180, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4181 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %265, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4179, i32* nonnull %4175, %struct.ds_base* nonnull %4181, i32 1, i32 undef) #14
  %4182 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 265) to i64*), align 8, !tbaa !25
  %4183 = trunc i64 %4182 to i32
  %4184 = call i32 @llvm.abs.i32(i32 %4183, i1 false)
  %4185 = urem i32 %4184, 1000
  %4186 = zext i32 %4185 to i64
  %4187 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4186
  %4188 = bitcast i32* %4187 to i64*
  %4189 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4188, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4190 = trunc i64 %4189 to i32
  %4191 = add nsw i32 %4190, 1
  %4192 = bitcast [1 x %struct.ds_base]* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4192, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4193 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %266, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4191, i32* nonnull %4187, %struct.ds_base* nonnull %4193, i32 1, i32 undef) #14
  %4194 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 266) to i64*), align 8, !tbaa !25
  %4195 = trunc i64 %4194 to i32
  %4196 = call i32 @llvm.abs.i32(i32 %4195, i1 false)
  %4197 = urem i32 %4196, 1000
  %4198 = zext i32 %4197 to i64
  %4199 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4198
  %4200 = bitcast i32* %4199 to i64*
  %4201 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4200, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4202 = trunc i64 %4201 to i32
  %4203 = add nsw i32 %4202, 1
  %4204 = bitcast [1 x %struct.ds_base]* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4204, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4205 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %267, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4203, i32* nonnull %4199, %struct.ds_base* nonnull %4205, i32 1, i32 undef) #14
  %4206 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 267) to i64*), align 8, !tbaa !25
  %4207 = trunc i64 %4206 to i32
  %4208 = call i32 @llvm.abs.i32(i32 %4207, i1 false)
  %4209 = urem i32 %4208, 1000
  %4210 = zext i32 %4209 to i64
  %4211 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4210
  %4212 = bitcast i32* %4211 to i64*
  %4213 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4212, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4214 = trunc i64 %4213 to i32
  %4215 = add nsw i32 %4214, 1
  %4216 = bitcast [1 x %struct.ds_base]* %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4216, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4217 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %268, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4215, i32* nonnull %4211, %struct.ds_base* nonnull %4217, i32 1, i32 undef) #14
  %4218 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 268) to i64*), align 16, !tbaa !25
  %4219 = trunc i64 %4218 to i32
  %4220 = call i32 @llvm.abs.i32(i32 %4219, i1 false)
  %4221 = urem i32 %4220, 1000
  %4222 = zext i32 %4221 to i64
  %4223 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4222
  %4224 = bitcast i32* %4223 to i64*
  %4225 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4224, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4226 = trunc i64 %4225 to i32
  %4227 = add nsw i32 %4226, 1
  %4228 = bitcast [1 x %struct.ds_base]* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4228, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4229 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %269, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4227, i32* nonnull %4223, %struct.ds_base* nonnull %4229, i32 1, i32 undef) #14
  %4230 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 269) to i64*), align 8, !tbaa !25
  %4231 = trunc i64 %4230 to i32
  %4232 = call i32 @llvm.abs.i32(i32 %4231, i1 false)
  %4233 = urem i32 %4232, 1000
  %4234 = zext i32 %4233 to i64
  %4235 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4234
  %4236 = bitcast i32* %4235 to i64*
  %4237 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4236, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4238 = trunc i64 %4237 to i32
  %4239 = add nsw i32 %4238, 1
  %4240 = bitcast [1 x %struct.ds_base]* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4240, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4241 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %270, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4239, i32* nonnull %4235, %struct.ds_base* nonnull %4241, i32 1, i32 undef) #14
  %4242 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 270) to i64*), align 8, !tbaa !25
  %4243 = trunc i64 %4242 to i32
  %4244 = call i32 @llvm.abs.i32(i32 %4243, i1 false)
  %4245 = urem i32 %4244, 1000
  %4246 = zext i32 %4245 to i64
  %4247 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4246
  %4248 = bitcast i32* %4247 to i64*
  %4249 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4248, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4250 = trunc i64 %4249 to i32
  %4251 = add nsw i32 %4250, 1
  %4252 = bitcast [1 x %struct.ds_base]* %271 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4252, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4253 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %271, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4251, i32* nonnull %4247, %struct.ds_base* nonnull %4253, i32 1, i32 undef) #14
  %4254 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 271) to i64*), align 8, !tbaa !25
  %4255 = trunc i64 %4254 to i32
  %4256 = call i32 @llvm.abs.i32(i32 %4255, i1 false)
  %4257 = urem i32 %4256, 1000
  %4258 = zext i32 %4257 to i64
  %4259 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4258
  %4260 = bitcast i32* %4259 to i64*
  %4261 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4260, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4262 = trunc i64 %4261 to i32
  %4263 = add nsw i32 %4262, 1
  %4264 = bitcast [1 x %struct.ds_base]* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4264, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4265 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %272, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4263, i32* nonnull %4259, %struct.ds_base* nonnull %4265, i32 1, i32 undef) #14
  %4266 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 272) to i64*), align 16, !tbaa !25
  %4267 = trunc i64 %4266 to i32
  %4268 = call i32 @llvm.abs.i32(i32 %4267, i1 false)
  %4269 = urem i32 %4268, 1000
  %4270 = zext i32 %4269 to i64
  %4271 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4270
  %4272 = bitcast i32* %4271 to i64*
  %4273 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4272, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4274 = trunc i64 %4273 to i32
  %4275 = add nsw i32 %4274, 1
  %4276 = bitcast [1 x %struct.ds_base]* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4276, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4277 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %273, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4275, i32* nonnull %4271, %struct.ds_base* nonnull %4277, i32 1, i32 undef) #14
  %4278 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 273) to i64*), align 8, !tbaa !25
  %4279 = trunc i64 %4278 to i32
  %4280 = call i32 @llvm.abs.i32(i32 %4279, i1 false)
  %4281 = urem i32 %4280, 1000
  %4282 = zext i32 %4281 to i64
  %4283 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4282
  %4284 = bitcast i32* %4283 to i64*
  %4285 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4284, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4286 = trunc i64 %4285 to i32
  %4287 = add nsw i32 %4286, 1
  %4288 = bitcast [1 x %struct.ds_base]* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4288, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4289 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %274, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4287, i32* nonnull %4283, %struct.ds_base* nonnull %4289, i32 1, i32 undef) #14
  %4290 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 274) to i64*), align 8, !tbaa !25
  %4291 = trunc i64 %4290 to i32
  %4292 = call i32 @llvm.abs.i32(i32 %4291, i1 false)
  %4293 = urem i32 %4292, 1000
  %4294 = zext i32 %4293 to i64
  %4295 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4294
  %4296 = bitcast i32* %4295 to i64*
  %4297 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4296, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4298 = trunc i64 %4297 to i32
  %4299 = add nsw i32 %4298, 1
  %4300 = bitcast [1 x %struct.ds_base]* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4300, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4301 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %275, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4299, i32* nonnull %4295, %struct.ds_base* nonnull %4301, i32 1, i32 undef) #14
  %4302 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 275) to i64*), align 8, !tbaa !25
  %4303 = trunc i64 %4302 to i32
  %4304 = call i32 @llvm.abs.i32(i32 %4303, i1 false)
  %4305 = urem i32 %4304, 1000
  %4306 = zext i32 %4305 to i64
  %4307 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4306
  %4308 = bitcast i32* %4307 to i64*
  %4309 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4308, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4310 = trunc i64 %4309 to i32
  %4311 = add nsw i32 %4310, 1
  %4312 = bitcast [1 x %struct.ds_base]* %276 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4312, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4313 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %276, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4311, i32* nonnull %4307, %struct.ds_base* nonnull %4313, i32 1, i32 undef) #14
  %4314 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 276) to i64*), align 16, !tbaa !25
  %4315 = trunc i64 %4314 to i32
  %4316 = call i32 @llvm.abs.i32(i32 %4315, i1 false)
  %4317 = urem i32 %4316, 1000
  %4318 = zext i32 %4317 to i64
  %4319 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4318
  %4320 = bitcast i32* %4319 to i64*
  %4321 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4320, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4322 = trunc i64 %4321 to i32
  %4323 = add nsw i32 %4322, 1
  %4324 = bitcast [1 x %struct.ds_base]* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4324, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4325 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %277, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4323, i32* nonnull %4319, %struct.ds_base* nonnull %4325, i32 1, i32 undef) #14
  %4326 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 277) to i64*), align 8, !tbaa !25
  %4327 = trunc i64 %4326 to i32
  %4328 = call i32 @llvm.abs.i32(i32 %4327, i1 false)
  %4329 = urem i32 %4328, 1000
  %4330 = zext i32 %4329 to i64
  %4331 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4330
  %4332 = bitcast i32* %4331 to i64*
  %4333 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4332, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4334 = trunc i64 %4333 to i32
  %4335 = add nsw i32 %4334, 1
  %4336 = bitcast [1 x %struct.ds_base]* %278 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4336, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4337 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %278, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4335, i32* nonnull %4331, %struct.ds_base* nonnull %4337, i32 1, i32 undef) #14
  %4338 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 278) to i64*), align 8, !tbaa !25
  %4339 = trunc i64 %4338 to i32
  %4340 = call i32 @llvm.abs.i32(i32 %4339, i1 false)
  %4341 = urem i32 %4340, 1000
  %4342 = zext i32 %4341 to i64
  %4343 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4342
  %4344 = bitcast i32* %4343 to i64*
  %4345 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4344, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4346 = trunc i64 %4345 to i32
  %4347 = add nsw i32 %4346, 1
  %4348 = bitcast [1 x %struct.ds_base]* %279 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4348, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4349 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %279, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4347, i32* nonnull %4343, %struct.ds_base* nonnull %4349, i32 1, i32 undef) #14
  %4350 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 279) to i64*), align 8, !tbaa !25
  %4351 = trunc i64 %4350 to i32
  %4352 = call i32 @llvm.abs.i32(i32 %4351, i1 false)
  %4353 = urem i32 %4352, 1000
  %4354 = zext i32 %4353 to i64
  %4355 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4354
  %4356 = bitcast i32* %4355 to i64*
  %4357 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4356, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4358 = trunc i64 %4357 to i32
  %4359 = add nsw i32 %4358, 1
  %4360 = bitcast [1 x %struct.ds_base]* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4360, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4361 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %280, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4359, i32* nonnull %4355, %struct.ds_base* nonnull %4361, i32 1, i32 undef) #14
  %4362 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 280) to i64*), align 16, !tbaa !25
  %4363 = trunc i64 %4362 to i32
  %4364 = call i32 @llvm.abs.i32(i32 %4363, i1 false)
  %4365 = urem i32 %4364, 1000
  %4366 = zext i32 %4365 to i64
  %4367 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4366
  %4368 = bitcast i32* %4367 to i64*
  %4369 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4368, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4370 = trunc i64 %4369 to i32
  %4371 = add nsw i32 %4370, 1
  %4372 = bitcast [1 x %struct.ds_base]* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4372, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4373 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %281, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4371, i32* nonnull %4367, %struct.ds_base* nonnull %4373, i32 1, i32 undef) #14
  %4374 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 281) to i64*), align 8, !tbaa !25
  %4375 = trunc i64 %4374 to i32
  %4376 = call i32 @llvm.abs.i32(i32 %4375, i1 false)
  %4377 = urem i32 %4376, 1000
  %4378 = zext i32 %4377 to i64
  %4379 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4378
  %4380 = bitcast i32* %4379 to i64*
  %4381 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4380, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4382 = trunc i64 %4381 to i32
  %4383 = add nsw i32 %4382, 1
  %4384 = bitcast [1 x %struct.ds_base]* %282 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4384, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4385 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %282, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4383, i32* nonnull %4379, %struct.ds_base* nonnull %4385, i32 1, i32 undef) #14
  %4386 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 282) to i64*), align 8, !tbaa !25
  %4387 = trunc i64 %4386 to i32
  %4388 = call i32 @llvm.abs.i32(i32 %4387, i1 false)
  %4389 = urem i32 %4388, 1000
  %4390 = zext i32 %4389 to i64
  %4391 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4390
  %4392 = bitcast i32* %4391 to i64*
  %4393 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4392, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4394 = trunc i64 %4393 to i32
  %4395 = add nsw i32 %4394, 1
  %4396 = bitcast [1 x %struct.ds_base]* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4396, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4397 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %283, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4395, i32* nonnull %4391, %struct.ds_base* nonnull %4397, i32 1, i32 undef) #14
  %4398 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 283) to i64*), align 8, !tbaa !25
  %4399 = trunc i64 %4398 to i32
  %4400 = call i32 @llvm.abs.i32(i32 %4399, i1 false)
  %4401 = urem i32 %4400, 1000
  %4402 = zext i32 %4401 to i64
  %4403 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4402
  %4404 = bitcast i32* %4403 to i64*
  %4405 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4404, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4406 = trunc i64 %4405 to i32
  %4407 = add nsw i32 %4406, 1
  %4408 = bitcast [1 x %struct.ds_base]* %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4408, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4409 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %284, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4407, i32* nonnull %4403, %struct.ds_base* nonnull %4409, i32 1, i32 undef) #14
  %4410 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 284) to i64*), align 16, !tbaa !25
  %4411 = trunc i64 %4410 to i32
  %4412 = call i32 @llvm.abs.i32(i32 %4411, i1 false)
  %4413 = urem i32 %4412, 1000
  %4414 = zext i32 %4413 to i64
  %4415 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4414
  %4416 = bitcast i32* %4415 to i64*
  %4417 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4416, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4418 = trunc i64 %4417 to i32
  %4419 = add nsw i32 %4418, 1
  %4420 = bitcast [1 x %struct.ds_base]* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4420, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4421 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %285, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4419, i32* nonnull %4415, %struct.ds_base* nonnull %4421, i32 1, i32 undef) #14
  %4422 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 285) to i64*), align 8, !tbaa !25
  %4423 = trunc i64 %4422 to i32
  %4424 = call i32 @llvm.abs.i32(i32 %4423, i1 false)
  %4425 = urem i32 %4424, 1000
  %4426 = zext i32 %4425 to i64
  %4427 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4426
  %4428 = bitcast i32* %4427 to i64*
  %4429 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4428, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4430 = trunc i64 %4429 to i32
  %4431 = add nsw i32 %4430, 1
  %4432 = bitcast [1 x %struct.ds_base]* %286 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4432, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4433 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %286, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4431, i32* nonnull %4427, %struct.ds_base* nonnull %4433, i32 1, i32 undef) #14
  %4434 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 286) to i64*), align 8, !tbaa !25
  %4435 = trunc i64 %4434 to i32
  %4436 = call i32 @llvm.abs.i32(i32 %4435, i1 false)
  %4437 = urem i32 %4436, 1000
  %4438 = zext i32 %4437 to i64
  %4439 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4438
  %4440 = bitcast i32* %4439 to i64*
  %4441 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4440, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4442 = trunc i64 %4441 to i32
  %4443 = add nsw i32 %4442, 1
  %4444 = bitcast [1 x %struct.ds_base]* %287 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4444, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4445 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %287, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4443, i32* nonnull %4439, %struct.ds_base* nonnull %4445, i32 1, i32 undef) #14
  %4446 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 287) to i64*), align 8, !tbaa !25
  %4447 = trunc i64 %4446 to i32
  %4448 = call i32 @llvm.abs.i32(i32 %4447, i1 false)
  %4449 = urem i32 %4448, 1000
  %4450 = zext i32 %4449 to i64
  %4451 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4450
  %4452 = bitcast i32* %4451 to i64*
  %4453 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4452, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4454 = trunc i64 %4453 to i32
  %4455 = add nsw i32 %4454, 1
  %4456 = bitcast [1 x %struct.ds_base]* %288 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4456, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4457 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %288, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4455, i32* nonnull %4451, %struct.ds_base* nonnull %4457, i32 1, i32 undef) #14
  %4458 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 288) to i64*), align 16, !tbaa !25
  %4459 = trunc i64 %4458 to i32
  %4460 = call i32 @llvm.abs.i32(i32 %4459, i1 false)
  %4461 = urem i32 %4460, 1000
  %4462 = zext i32 %4461 to i64
  %4463 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4462
  %4464 = bitcast i32* %4463 to i64*
  %4465 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4464, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4466 = trunc i64 %4465 to i32
  %4467 = add nsw i32 %4466, 1
  %4468 = bitcast [1 x %struct.ds_base]* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4468, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4469 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %289, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4467, i32* nonnull %4463, %struct.ds_base* nonnull %4469, i32 1, i32 undef) #14
  %4470 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 289) to i64*), align 8, !tbaa !25
  %4471 = trunc i64 %4470 to i32
  %4472 = call i32 @llvm.abs.i32(i32 %4471, i1 false)
  %4473 = urem i32 %4472, 1000
  %4474 = zext i32 %4473 to i64
  %4475 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4474
  %4476 = bitcast i32* %4475 to i64*
  %4477 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4476, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4478 = trunc i64 %4477 to i32
  %4479 = add nsw i32 %4478, 1
  %4480 = bitcast [1 x %struct.ds_base]* %290 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4480, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4481 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %290, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4479, i32* nonnull %4475, %struct.ds_base* nonnull %4481, i32 1, i32 undef) #14
  %4482 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 290) to i64*), align 8, !tbaa !25
  %4483 = trunc i64 %4482 to i32
  %4484 = call i32 @llvm.abs.i32(i32 %4483, i1 false)
  %4485 = urem i32 %4484, 1000
  %4486 = zext i32 %4485 to i64
  %4487 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4486
  %4488 = bitcast i32* %4487 to i64*
  %4489 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4488, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4490 = trunc i64 %4489 to i32
  %4491 = add nsw i32 %4490, 1
  %4492 = bitcast [1 x %struct.ds_base]* %291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4492, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4493 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %291, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4491, i32* nonnull %4487, %struct.ds_base* nonnull %4493, i32 1, i32 undef) #14
  %4494 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 291) to i64*), align 8, !tbaa !25
  %4495 = trunc i64 %4494 to i32
  %4496 = call i32 @llvm.abs.i32(i32 %4495, i1 false)
  %4497 = urem i32 %4496, 1000
  %4498 = zext i32 %4497 to i64
  %4499 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4498
  %4500 = bitcast i32* %4499 to i64*
  %4501 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4500, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4502 = trunc i64 %4501 to i32
  %4503 = add nsw i32 %4502, 1
  %4504 = bitcast [1 x %struct.ds_base]* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4504, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4505 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %292, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4503, i32* nonnull %4499, %struct.ds_base* nonnull %4505, i32 1, i32 undef) #14
  %4506 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 292) to i64*), align 16, !tbaa !25
  %4507 = trunc i64 %4506 to i32
  %4508 = call i32 @llvm.abs.i32(i32 %4507, i1 false)
  %4509 = urem i32 %4508, 1000
  %4510 = zext i32 %4509 to i64
  %4511 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4510
  %4512 = bitcast i32* %4511 to i64*
  %4513 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4512, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4514 = trunc i64 %4513 to i32
  %4515 = add nsw i32 %4514, 1
  %4516 = bitcast [1 x %struct.ds_base]* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4516, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4517 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %293, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4515, i32* nonnull %4511, %struct.ds_base* nonnull %4517, i32 1, i32 undef) #14
  %4518 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 293) to i64*), align 8, !tbaa !25
  %4519 = trunc i64 %4518 to i32
  %4520 = call i32 @llvm.abs.i32(i32 %4519, i1 false)
  %4521 = urem i32 %4520, 1000
  %4522 = zext i32 %4521 to i64
  %4523 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4522
  %4524 = bitcast i32* %4523 to i64*
  %4525 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4524, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4526 = trunc i64 %4525 to i32
  %4527 = add nsw i32 %4526, 1
  %4528 = bitcast [1 x %struct.ds_base]* %294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4528, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4529 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %294, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4527, i32* nonnull %4523, %struct.ds_base* nonnull %4529, i32 1, i32 undef) #14
  %4530 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 294) to i64*), align 8, !tbaa !25
  %4531 = trunc i64 %4530 to i32
  %4532 = call i32 @llvm.abs.i32(i32 %4531, i1 false)
  %4533 = urem i32 %4532, 1000
  %4534 = zext i32 %4533 to i64
  %4535 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4534
  %4536 = bitcast i32* %4535 to i64*
  %4537 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4536, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4538 = trunc i64 %4537 to i32
  %4539 = add nsw i32 %4538, 1
  %4540 = bitcast [1 x %struct.ds_base]* %295 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4540, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4541 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %295, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4539, i32* nonnull %4535, %struct.ds_base* nonnull %4541, i32 1, i32 undef) #14
  %4542 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 295) to i64*), align 8, !tbaa !25
  %4543 = trunc i64 %4542 to i32
  %4544 = call i32 @llvm.abs.i32(i32 %4543, i1 false)
  %4545 = urem i32 %4544, 1000
  %4546 = zext i32 %4545 to i64
  %4547 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4546
  %4548 = bitcast i32* %4547 to i64*
  %4549 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4548, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4550 = trunc i64 %4549 to i32
  %4551 = add nsw i32 %4550, 1
  %4552 = bitcast [1 x %struct.ds_base]* %296 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4552, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4553 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %296, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4551, i32* nonnull %4547, %struct.ds_base* nonnull %4553, i32 1, i32 undef) #14
  %4554 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 296) to i64*), align 16, !tbaa !25
  %4555 = trunc i64 %4554 to i32
  %4556 = call i32 @llvm.abs.i32(i32 %4555, i1 false)
  %4557 = urem i32 %4556, 1000
  %4558 = zext i32 %4557 to i64
  %4559 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4558
  %4560 = bitcast i32* %4559 to i64*
  %4561 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4560, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4562 = trunc i64 %4561 to i32
  %4563 = add nsw i32 %4562, 1
  %4564 = bitcast [1 x %struct.ds_base]* %297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4564, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4565 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %297, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4563, i32* nonnull %4559, %struct.ds_base* nonnull %4565, i32 1, i32 undef) #14
  %4566 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 297) to i64*), align 8, !tbaa !25
  %4567 = trunc i64 %4566 to i32
  %4568 = call i32 @llvm.abs.i32(i32 %4567, i1 false)
  %4569 = urem i32 %4568, 1000
  %4570 = zext i32 %4569 to i64
  %4571 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4570
  %4572 = bitcast i32* %4571 to i64*
  %4573 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4572, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4574 = trunc i64 %4573 to i32
  %4575 = add nsw i32 %4574, 1
  %4576 = bitcast [1 x %struct.ds_base]* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4576, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4577 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %298, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4575, i32* nonnull %4571, %struct.ds_base* nonnull %4577, i32 1, i32 undef) #14
  %4578 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 298) to i64*), align 8, !tbaa !25
  %4579 = trunc i64 %4578 to i32
  %4580 = call i32 @llvm.abs.i32(i32 %4579, i1 false)
  %4581 = urem i32 %4580, 1000
  %4582 = zext i32 %4581 to i64
  %4583 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4582
  %4584 = bitcast i32* %4583 to i64*
  %4585 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4584, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4586 = trunc i64 %4585 to i32
  %4587 = add nsw i32 %4586, 1
  %4588 = bitcast [1 x %struct.ds_base]* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4588, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4589 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %299, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4587, i32* nonnull %4583, %struct.ds_base* nonnull %4589, i32 1, i32 undef) #14
  %4590 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 299) to i64*), align 8, !tbaa !25
  %4591 = trunc i64 %4590 to i32
  %4592 = call i32 @llvm.abs.i32(i32 %4591, i1 false)
  %4593 = urem i32 %4592, 1000
  %4594 = zext i32 %4593 to i64
  %4595 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4594
  %4596 = bitcast i32* %4595 to i64*
  %4597 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4596, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4598 = trunc i64 %4597 to i32
  %4599 = add nsw i32 %4598, 1
  %4600 = bitcast [1 x %struct.ds_base]* %300 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4600, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4601 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %300, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4599, i32* nonnull %4595, %struct.ds_base* nonnull %4601, i32 1, i32 undef) #14
  %4602 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 300) to i64*), align 16, !tbaa !25
  %4603 = trunc i64 %4602 to i32
  %4604 = call i32 @llvm.abs.i32(i32 %4603, i1 false)
  %4605 = urem i32 %4604, 1000
  %4606 = zext i32 %4605 to i64
  %4607 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4606
  %4608 = bitcast i32* %4607 to i64*
  %4609 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4608, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4610 = trunc i64 %4609 to i32
  %4611 = add nsw i32 %4610, 1
  %4612 = bitcast [1 x %struct.ds_base]* %301 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4612, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4613 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %301, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4611, i32* nonnull %4607, %struct.ds_base* nonnull %4613, i32 1, i32 undef) #14
  %4614 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 301) to i64*), align 8, !tbaa !25
  %4615 = trunc i64 %4614 to i32
  %4616 = call i32 @llvm.abs.i32(i32 %4615, i1 false)
  %4617 = urem i32 %4616, 1000
  %4618 = zext i32 %4617 to i64
  %4619 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4618
  %4620 = bitcast i32* %4619 to i64*
  %4621 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4620, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4622 = trunc i64 %4621 to i32
  %4623 = add nsw i32 %4622, 1
  %4624 = bitcast [1 x %struct.ds_base]* %302 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4624, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4625 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %302, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4623, i32* nonnull %4619, %struct.ds_base* nonnull %4625, i32 1, i32 undef) #14
  %4626 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 302) to i64*), align 8, !tbaa !25
  %4627 = trunc i64 %4626 to i32
  %4628 = call i32 @llvm.abs.i32(i32 %4627, i1 false)
  %4629 = urem i32 %4628, 1000
  %4630 = zext i32 %4629 to i64
  %4631 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4630
  %4632 = bitcast i32* %4631 to i64*
  %4633 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4632, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4634 = trunc i64 %4633 to i32
  %4635 = add nsw i32 %4634, 1
  %4636 = bitcast [1 x %struct.ds_base]* %303 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4636, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4637 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %303, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4635, i32* nonnull %4631, %struct.ds_base* nonnull %4637, i32 1, i32 undef) #14
  %4638 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 303) to i64*), align 8, !tbaa !25
  %4639 = trunc i64 %4638 to i32
  %4640 = call i32 @llvm.abs.i32(i32 %4639, i1 false)
  %4641 = urem i32 %4640, 1000
  %4642 = zext i32 %4641 to i64
  %4643 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4642
  %4644 = bitcast i32* %4643 to i64*
  %4645 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4644, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4646 = trunc i64 %4645 to i32
  %4647 = add nsw i32 %4646, 1
  %4648 = bitcast [1 x %struct.ds_base]* %304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4648, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4649 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %304, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4647, i32* nonnull %4643, %struct.ds_base* nonnull %4649, i32 1, i32 undef) #14
  %4650 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 304) to i64*), align 16, !tbaa !25
  %4651 = trunc i64 %4650 to i32
  %4652 = call i32 @llvm.abs.i32(i32 %4651, i1 false)
  %4653 = urem i32 %4652, 1000
  %4654 = zext i32 %4653 to i64
  %4655 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4654
  %4656 = bitcast i32* %4655 to i64*
  %4657 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4656, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4658 = trunc i64 %4657 to i32
  %4659 = add nsw i32 %4658, 1
  %4660 = bitcast [1 x %struct.ds_base]* %305 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4660, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4661 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %305, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4659, i32* nonnull %4655, %struct.ds_base* nonnull %4661, i32 1, i32 undef) #14
  %4662 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 305) to i64*), align 8, !tbaa !25
  %4663 = trunc i64 %4662 to i32
  %4664 = call i32 @llvm.abs.i32(i32 %4663, i1 false)
  %4665 = urem i32 %4664, 1000
  %4666 = zext i32 %4665 to i64
  %4667 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4666
  %4668 = bitcast i32* %4667 to i64*
  %4669 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4668, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4670 = trunc i64 %4669 to i32
  %4671 = add nsw i32 %4670, 1
  %4672 = bitcast [1 x %struct.ds_base]* %306 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4672, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4673 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %306, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4671, i32* nonnull %4667, %struct.ds_base* nonnull %4673, i32 1, i32 undef) #14
  %4674 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 306) to i64*), align 8, !tbaa !25
  %4675 = trunc i64 %4674 to i32
  %4676 = call i32 @llvm.abs.i32(i32 %4675, i1 false)
  %4677 = urem i32 %4676, 1000
  %4678 = zext i32 %4677 to i64
  %4679 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4678
  %4680 = bitcast i32* %4679 to i64*
  %4681 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4680, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4682 = trunc i64 %4681 to i32
  %4683 = add nsw i32 %4682, 1
  %4684 = bitcast [1 x %struct.ds_base]* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4684, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4685 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %307, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4683, i32* nonnull %4679, %struct.ds_base* nonnull %4685, i32 1, i32 undef) #14
  %4686 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 307) to i64*), align 8, !tbaa !25
  %4687 = trunc i64 %4686 to i32
  %4688 = call i32 @llvm.abs.i32(i32 %4687, i1 false)
  %4689 = urem i32 %4688, 1000
  %4690 = zext i32 %4689 to i64
  %4691 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4690
  %4692 = bitcast i32* %4691 to i64*
  %4693 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4692, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4694 = trunc i64 %4693 to i32
  %4695 = add nsw i32 %4694, 1
  %4696 = bitcast [1 x %struct.ds_base]* %308 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4696, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4697 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %308, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4695, i32* nonnull %4691, %struct.ds_base* nonnull %4697, i32 1, i32 undef) #14
  %4698 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 308) to i64*), align 16, !tbaa !25
  %4699 = trunc i64 %4698 to i32
  %4700 = call i32 @llvm.abs.i32(i32 %4699, i1 false)
  %4701 = urem i32 %4700, 1000
  %4702 = zext i32 %4701 to i64
  %4703 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4702
  %4704 = bitcast i32* %4703 to i64*
  %4705 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4704, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4706 = trunc i64 %4705 to i32
  %4707 = add nsw i32 %4706, 1
  %4708 = bitcast [1 x %struct.ds_base]* %309 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4708, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4709 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %309, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4707, i32* nonnull %4703, %struct.ds_base* nonnull %4709, i32 1, i32 undef) #14
  %4710 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 309) to i64*), align 8, !tbaa !25
  %4711 = trunc i64 %4710 to i32
  %4712 = call i32 @llvm.abs.i32(i32 %4711, i1 false)
  %4713 = urem i32 %4712, 1000
  %4714 = zext i32 %4713 to i64
  %4715 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4714
  %4716 = bitcast i32* %4715 to i64*
  %4717 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4716, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4718 = trunc i64 %4717 to i32
  %4719 = add nsw i32 %4718, 1
  %4720 = bitcast [1 x %struct.ds_base]* %310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4720, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4721 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %310, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4719, i32* nonnull %4715, %struct.ds_base* nonnull %4721, i32 1, i32 undef) #14
  %4722 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 310) to i64*), align 8, !tbaa !25
  %4723 = trunc i64 %4722 to i32
  %4724 = call i32 @llvm.abs.i32(i32 %4723, i1 false)
  %4725 = urem i32 %4724, 1000
  %4726 = zext i32 %4725 to i64
  %4727 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4726
  %4728 = bitcast i32* %4727 to i64*
  %4729 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4728, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4730 = trunc i64 %4729 to i32
  %4731 = add nsw i32 %4730, 1
  %4732 = bitcast [1 x %struct.ds_base]* %311 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4732, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4733 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %311, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4731, i32* nonnull %4727, %struct.ds_base* nonnull %4733, i32 1, i32 undef) #14
  %4734 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 311) to i64*), align 8, !tbaa !25
  %4735 = trunc i64 %4734 to i32
  %4736 = call i32 @llvm.abs.i32(i32 %4735, i1 false)
  %4737 = urem i32 %4736, 1000
  %4738 = zext i32 %4737 to i64
  %4739 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4738
  %4740 = bitcast i32* %4739 to i64*
  %4741 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4740, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4742 = trunc i64 %4741 to i32
  %4743 = add nsw i32 %4742, 1
  %4744 = bitcast [1 x %struct.ds_base]* %312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4744, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4745 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %312, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4743, i32* nonnull %4739, %struct.ds_base* nonnull %4745, i32 1, i32 undef) #14
  %4746 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 312) to i64*), align 16, !tbaa !25
  %4747 = trunc i64 %4746 to i32
  %4748 = call i32 @llvm.abs.i32(i32 %4747, i1 false)
  %4749 = urem i32 %4748, 1000
  %4750 = zext i32 %4749 to i64
  %4751 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4750
  %4752 = bitcast i32* %4751 to i64*
  %4753 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4752, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4754 = trunc i64 %4753 to i32
  %4755 = add nsw i32 %4754, 1
  %4756 = bitcast [1 x %struct.ds_base]* %313 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4756, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4757 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %313, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4755, i32* nonnull %4751, %struct.ds_base* nonnull %4757, i32 1, i32 undef) #14
  %4758 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 313) to i64*), align 8, !tbaa !25
  %4759 = trunc i64 %4758 to i32
  %4760 = call i32 @llvm.abs.i32(i32 %4759, i1 false)
  %4761 = urem i32 %4760, 1000
  %4762 = zext i32 %4761 to i64
  %4763 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4762
  %4764 = bitcast i32* %4763 to i64*
  %4765 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4764, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4766 = trunc i64 %4765 to i32
  %4767 = add nsw i32 %4766, 1
  %4768 = bitcast [1 x %struct.ds_base]* %314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4768, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4769 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %314, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4767, i32* nonnull %4763, %struct.ds_base* nonnull %4769, i32 1, i32 undef) #14
  %4770 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 314) to i64*), align 8, !tbaa !25
  %4771 = trunc i64 %4770 to i32
  %4772 = call i32 @llvm.abs.i32(i32 %4771, i1 false)
  %4773 = urem i32 %4772, 1000
  %4774 = zext i32 %4773 to i64
  %4775 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4774
  %4776 = bitcast i32* %4775 to i64*
  %4777 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4776, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4778 = trunc i64 %4777 to i32
  %4779 = add nsw i32 %4778, 1
  %4780 = bitcast [1 x %struct.ds_base]* %315 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4780, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4781 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %315, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4779, i32* nonnull %4775, %struct.ds_base* nonnull %4781, i32 1, i32 undef) #14
  %4782 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 315) to i64*), align 8, !tbaa !25
  %4783 = trunc i64 %4782 to i32
  %4784 = call i32 @llvm.abs.i32(i32 %4783, i1 false)
  %4785 = urem i32 %4784, 1000
  %4786 = zext i32 %4785 to i64
  %4787 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4786
  %4788 = bitcast i32* %4787 to i64*
  %4789 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4788, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4790 = trunc i64 %4789 to i32
  %4791 = add nsw i32 %4790, 1
  %4792 = bitcast [1 x %struct.ds_base]* %316 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4792, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4793 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %316, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4791, i32* nonnull %4787, %struct.ds_base* nonnull %4793, i32 1, i32 undef) #14
  %4794 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 316) to i64*), align 16, !tbaa !25
  %4795 = trunc i64 %4794 to i32
  %4796 = call i32 @llvm.abs.i32(i32 %4795, i1 false)
  %4797 = urem i32 %4796, 1000
  %4798 = zext i32 %4797 to i64
  %4799 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4798
  %4800 = bitcast i32* %4799 to i64*
  %4801 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4800, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4802 = trunc i64 %4801 to i32
  %4803 = add nsw i32 %4802, 1
  %4804 = bitcast [1 x %struct.ds_base]* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4804, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4805 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %317, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4803, i32* nonnull %4799, %struct.ds_base* nonnull %4805, i32 1, i32 undef) #14
  %4806 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 317) to i64*), align 8, !tbaa !25
  %4807 = trunc i64 %4806 to i32
  %4808 = call i32 @llvm.abs.i32(i32 %4807, i1 false)
  %4809 = urem i32 %4808, 1000
  %4810 = zext i32 %4809 to i64
  %4811 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4810
  %4812 = bitcast i32* %4811 to i64*
  %4813 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4812, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4814 = trunc i64 %4813 to i32
  %4815 = add nsw i32 %4814, 1
  %4816 = bitcast [1 x %struct.ds_base]* %318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4816, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4817 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %318, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4815, i32* nonnull %4811, %struct.ds_base* nonnull %4817, i32 1, i32 undef) #14
  %4818 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 318) to i64*), align 8, !tbaa !25
  %4819 = trunc i64 %4818 to i32
  %4820 = call i32 @llvm.abs.i32(i32 %4819, i1 false)
  %4821 = urem i32 %4820, 1000
  %4822 = zext i32 %4821 to i64
  %4823 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4822
  %4824 = bitcast i32* %4823 to i64*
  %4825 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4824, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4826 = trunc i64 %4825 to i32
  %4827 = add nsw i32 %4826, 1
  %4828 = bitcast [1 x %struct.ds_base]* %319 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4828, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4829 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %319, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4827, i32* nonnull %4823, %struct.ds_base* nonnull %4829, i32 1, i32 undef) #14
  %4830 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 319) to i64*), align 8, !tbaa !25
  %4831 = trunc i64 %4830 to i32
  %4832 = call i32 @llvm.abs.i32(i32 %4831, i1 false)
  %4833 = urem i32 %4832, 1000
  %4834 = zext i32 %4833 to i64
  %4835 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4834
  %4836 = bitcast i32* %4835 to i64*
  %4837 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4836, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4838 = trunc i64 %4837 to i32
  %4839 = add nsw i32 %4838, 1
  %4840 = bitcast [1 x %struct.ds_base]* %320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4840, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4841 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %320, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4839, i32* nonnull %4835, %struct.ds_base* nonnull %4841, i32 1, i32 undef) #14
  %4842 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 320) to i64*), align 16, !tbaa !25
  %4843 = trunc i64 %4842 to i32
  %4844 = call i32 @llvm.abs.i32(i32 %4843, i1 false)
  %4845 = urem i32 %4844, 1000
  %4846 = zext i32 %4845 to i64
  %4847 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4846
  %4848 = bitcast i32* %4847 to i64*
  %4849 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4848, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4850 = trunc i64 %4849 to i32
  %4851 = add nsw i32 %4850, 1
  %4852 = bitcast [1 x %struct.ds_base]* %321 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4852, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4853 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %321, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4851, i32* nonnull %4847, %struct.ds_base* nonnull %4853, i32 1, i32 undef) #14
  %4854 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 321) to i64*), align 8, !tbaa !25
  %4855 = trunc i64 %4854 to i32
  %4856 = call i32 @llvm.abs.i32(i32 %4855, i1 false)
  %4857 = urem i32 %4856, 1000
  %4858 = zext i32 %4857 to i64
  %4859 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4858
  %4860 = bitcast i32* %4859 to i64*
  %4861 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4860, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4862 = trunc i64 %4861 to i32
  %4863 = add nsw i32 %4862, 1
  %4864 = bitcast [1 x %struct.ds_base]* %322 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4864, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4865 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %322, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4863, i32* nonnull %4859, %struct.ds_base* nonnull %4865, i32 1, i32 undef) #14
  %4866 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 322) to i64*), align 8, !tbaa !25
  %4867 = trunc i64 %4866 to i32
  %4868 = call i32 @llvm.abs.i32(i32 %4867, i1 false)
  %4869 = urem i32 %4868, 1000
  %4870 = zext i32 %4869 to i64
  %4871 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4870
  %4872 = bitcast i32* %4871 to i64*
  %4873 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4872, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4874 = trunc i64 %4873 to i32
  %4875 = add nsw i32 %4874, 1
  %4876 = bitcast [1 x %struct.ds_base]* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4876, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4877 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %323, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4875, i32* nonnull %4871, %struct.ds_base* nonnull %4877, i32 1, i32 undef) #14
  %4878 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 323) to i64*), align 8, !tbaa !25
  %4879 = trunc i64 %4878 to i32
  %4880 = call i32 @llvm.abs.i32(i32 %4879, i1 false)
  %4881 = urem i32 %4880, 1000
  %4882 = zext i32 %4881 to i64
  %4883 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4882
  %4884 = bitcast i32* %4883 to i64*
  %4885 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4884, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4886 = trunc i64 %4885 to i32
  %4887 = add nsw i32 %4886, 1
  %4888 = bitcast [1 x %struct.ds_base]* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4888, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4889 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %324, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4887, i32* nonnull %4883, %struct.ds_base* nonnull %4889, i32 1, i32 undef) #14
  %4890 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 324) to i64*), align 16, !tbaa !25
  %4891 = trunc i64 %4890 to i32
  %4892 = call i32 @llvm.abs.i32(i32 %4891, i1 false)
  %4893 = urem i32 %4892, 1000
  %4894 = zext i32 %4893 to i64
  %4895 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4894
  %4896 = bitcast i32* %4895 to i64*
  %4897 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4896, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4898 = trunc i64 %4897 to i32
  %4899 = add nsw i32 %4898, 1
  %4900 = bitcast [1 x %struct.ds_base]* %325 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4900, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4901 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %325, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4899, i32* nonnull %4895, %struct.ds_base* nonnull %4901, i32 1, i32 undef) #14
  %4902 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 325) to i64*), align 8, !tbaa !25
  %4903 = trunc i64 %4902 to i32
  %4904 = call i32 @llvm.abs.i32(i32 %4903, i1 false)
  %4905 = urem i32 %4904, 1000
  %4906 = zext i32 %4905 to i64
  %4907 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4906
  %4908 = bitcast i32* %4907 to i64*
  %4909 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4908, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4910 = trunc i64 %4909 to i32
  %4911 = add nsw i32 %4910, 1
  %4912 = bitcast [1 x %struct.ds_base]* %326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4912, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4913 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %326, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4911, i32* nonnull %4907, %struct.ds_base* nonnull %4913, i32 1, i32 undef) #14
  %4914 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 326) to i64*), align 8, !tbaa !25
  %4915 = trunc i64 %4914 to i32
  %4916 = call i32 @llvm.abs.i32(i32 %4915, i1 false)
  %4917 = urem i32 %4916, 1000
  %4918 = zext i32 %4917 to i64
  %4919 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4918
  %4920 = bitcast i32* %4919 to i64*
  %4921 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4920, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4922 = trunc i64 %4921 to i32
  %4923 = add nsw i32 %4922, 1
  %4924 = bitcast [1 x %struct.ds_base]* %327 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4924, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4925 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %327, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4923, i32* nonnull %4919, %struct.ds_base* nonnull %4925, i32 1, i32 undef) #14
  %4926 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 327) to i64*), align 8, !tbaa !25
  %4927 = trunc i64 %4926 to i32
  %4928 = call i32 @llvm.abs.i32(i32 %4927, i1 false)
  %4929 = urem i32 %4928, 1000
  %4930 = zext i32 %4929 to i64
  %4931 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4930
  %4932 = bitcast i32* %4931 to i64*
  %4933 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4932, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4934 = trunc i64 %4933 to i32
  %4935 = add nsw i32 %4934, 1
  %4936 = bitcast [1 x %struct.ds_base]* %328 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4936, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4937 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %328, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4935, i32* nonnull %4931, %struct.ds_base* nonnull %4937, i32 1, i32 undef) #14
  %4938 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 328) to i64*), align 16, !tbaa !25
  %4939 = trunc i64 %4938 to i32
  %4940 = call i32 @llvm.abs.i32(i32 %4939, i1 false)
  %4941 = urem i32 %4940, 1000
  %4942 = zext i32 %4941 to i64
  %4943 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4942
  %4944 = bitcast i32* %4943 to i64*
  %4945 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4944, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4946 = trunc i64 %4945 to i32
  %4947 = add nsw i32 %4946, 1
  %4948 = bitcast [1 x %struct.ds_base]* %329 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4948, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4949 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %329, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4947, i32* nonnull %4943, %struct.ds_base* nonnull %4949, i32 1, i32 undef) #14
  %4950 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 329) to i64*), align 8, !tbaa !25
  %4951 = trunc i64 %4950 to i32
  %4952 = call i32 @llvm.abs.i32(i32 %4951, i1 false)
  %4953 = urem i32 %4952, 1000
  %4954 = zext i32 %4953 to i64
  %4955 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4954
  %4956 = bitcast i32* %4955 to i64*
  %4957 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4956, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4958 = trunc i64 %4957 to i32
  %4959 = add nsw i32 %4958, 1
  %4960 = bitcast [1 x %struct.ds_base]* %330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4960, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4961 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %330, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4959, i32* nonnull %4955, %struct.ds_base* nonnull %4961, i32 1, i32 undef) #14
  %4962 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 330) to i64*), align 8, !tbaa !25
  %4963 = trunc i64 %4962 to i32
  %4964 = call i32 @llvm.abs.i32(i32 %4963, i1 false)
  %4965 = urem i32 %4964, 1000
  %4966 = zext i32 %4965 to i64
  %4967 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4966
  %4968 = bitcast i32* %4967 to i64*
  %4969 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4968, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4970 = trunc i64 %4969 to i32
  %4971 = add nsw i32 %4970, 1
  %4972 = bitcast [1 x %struct.ds_base]* %331 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4972, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4973 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %331, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4971, i32* nonnull %4967, %struct.ds_base* nonnull %4973, i32 1, i32 undef) #14
  %4974 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 331) to i64*), align 8, !tbaa !25
  %4975 = trunc i64 %4974 to i32
  %4976 = call i32 @llvm.abs.i32(i32 %4975, i1 false)
  %4977 = urem i32 %4976, 1000
  %4978 = zext i32 %4977 to i64
  %4979 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4978
  %4980 = bitcast i32* %4979 to i64*
  %4981 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4980, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4982 = trunc i64 %4981 to i32
  %4983 = add nsw i32 %4982, 1
  %4984 = bitcast [1 x %struct.ds_base]* %332 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4984, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4985 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %332, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4983, i32* nonnull %4979, %struct.ds_base* nonnull %4985, i32 1, i32 undef) #14
  %4986 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 332) to i64*), align 16, !tbaa !25
  %4987 = trunc i64 %4986 to i32
  %4988 = call i32 @llvm.abs.i32(i32 %4987, i1 false)
  %4989 = urem i32 %4988, 1000
  %4990 = zext i32 %4989 to i64
  %4991 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %4990
  %4992 = bitcast i32* %4991 to i64*
  %4993 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %4992, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %4994 = trunc i64 %4993 to i32
  %4995 = add nsw i32 %4994, 1
  %4996 = bitcast [1 x %struct.ds_base]* %333 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %4996, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %4997 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %333, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %4995, i32* nonnull %4991, %struct.ds_base* nonnull %4997, i32 1, i32 undef) #14
  %4998 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 333) to i64*), align 8, !tbaa !25
  %4999 = trunc i64 %4998 to i32
  %5000 = call i32 @llvm.abs.i32(i32 %4999, i1 false)
  %5001 = urem i32 %5000, 1000
  %5002 = zext i32 %5001 to i64
  %5003 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5002
  %5004 = bitcast i32* %5003 to i64*
  %5005 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5004, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5006 = trunc i64 %5005 to i32
  %5007 = add nsw i32 %5006, 1
  %5008 = bitcast [1 x %struct.ds_base]* %334 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5008, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5009 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %334, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5007, i32* nonnull %5003, %struct.ds_base* nonnull %5009, i32 1, i32 undef) #14
  %5010 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 334) to i64*), align 8, !tbaa !25
  %5011 = trunc i64 %5010 to i32
  %5012 = call i32 @llvm.abs.i32(i32 %5011, i1 false)
  %5013 = urem i32 %5012, 1000
  %5014 = zext i32 %5013 to i64
  %5015 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5014
  %5016 = bitcast i32* %5015 to i64*
  %5017 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5016, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5018 = trunc i64 %5017 to i32
  %5019 = add nsw i32 %5018, 1
  %5020 = bitcast [1 x %struct.ds_base]* %335 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5020, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5021 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %335, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5019, i32* nonnull %5015, %struct.ds_base* nonnull %5021, i32 1, i32 undef) #14
  %5022 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 335) to i64*), align 8, !tbaa !25
  %5023 = trunc i64 %5022 to i32
  %5024 = call i32 @llvm.abs.i32(i32 %5023, i1 false)
  %5025 = urem i32 %5024, 1000
  %5026 = zext i32 %5025 to i64
  %5027 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5026
  %5028 = bitcast i32* %5027 to i64*
  %5029 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5028, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5030 = trunc i64 %5029 to i32
  %5031 = add nsw i32 %5030, 1
  %5032 = bitcast [1 x %struct.ds_base]* %336 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5032, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5033 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %336, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5031, i32* nonnull %5027, %struct.ds_base* nonnull %5033, i32 1, i32 undef) #14
  %5034 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 336) to i64*), align 16, !tbaa !25
  %5035 = trunc i64 %5034 to i32
  %5036 = call i32 @llvm.abs.i32(i32 %5035, i1 false)
  %5037 = urem i32 %5036, 1000
  %5038 = zext i32 %5037 to i64
  %5039 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5038
  %5040 = bitcast i32* %5039 to i64*
  %5041 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5040, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5042 = trunc i64 %5041 to i32
  %5043 = add nsw i32 %5042, 1
  %5044 = bitcast [1 x %struct.ds_base]* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5044, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5045 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %337, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5043, i32* nonnull %5039, %struct.ds_base* nonnull %5045, i32 1, i32 undef) #14
  %5046 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 337) to i64*), align 8, !tbaa !25
  %5047 = trunc i64 %5046 to i32
  %5048 = call i32 @llvm.abs.i32(i32 %5047, i1 false)
  %5049 = urem i32 %5048, 1000
  %5050 = zext i32 %5049 to i64
  %5051 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5050
  %5052 = bitcast i32* %5051 to i64*
  %5053 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5052, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5054 = trunc i64 %5053 to i32
  %5055 = add nsw i32 %5054, 1
  %5056 = bitcast [1 x %struct.ds_base]* %338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5056, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5057 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %338, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5055, i32* nonnull %5051, %struct.ds_base* nonnull %5057, i32 1, i32 undef) #14
  %5058 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 338) to i64*), align 8, !tbaa !25
  %5059 = trunc i64 %5058 to i32
  %5060 = call i32 @llvm.abs.i32(i32 %5059, i1 false)
  %5061 = urem i32 %5060, 1000
  %5062 = zext i32 %5061 to i64
  %5063 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5062
  %5064 = bitcast i32* %5063 to i64*
  %5065 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5064, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5066 = trunc i64 %5065 to i32
  %5067 = add nsw i32 %5066, 1
  %5068 = bitcast [1 x %struct.ds_base]* %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5068, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5069 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %339, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5067, i32* nonnull %5063, %struct.ds_base* nonnull %5069, i32 1, i32 undef) #14
  %5070 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 339) to i64*), align 8, !tbaa !25
  %5071 = trunc i64 %5070 to i32
  %5072 = call i32 @llvm.abs.i32(i32 %5071, i1 false)
  %5073 = urem i32 %5072, 1000
  %5074 = zext i32 %5073 to i64
  %5075 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5074
  %5076 = bitcast i32* %5075 to i64*
  %5077 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5076, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5078 = trunc i64 %5077 to i32
  %5079 = add nsw i32 %5078, 1
  %5080 = bitcast [1 x %struct.ds_base]* %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5080, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5081 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %340, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5079, i32* nonnull %5075, %struct.ds_base* nonnull %5081, i32 1, i32 undef) #14
  %5082 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 340) to i64*), align 16, !tbaa !25
  %5083 = trunc i64 %5082 to i32
  %5084 = call i32 @llvm.abs.i32(i32 %5083, i1 false)
  %5085 = urem i32 %5084, 1000
  %5086 = zext i32 %5085 to i64
  %5087 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5086
  %5088 = bitcast i32* %5087 to i64*
  %5089 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5088, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5090 = trunc i64 %5089 to i32
  %5091 = add nsw i32 %5090, 1
  %5092 = bitcast [1 x %struct.ds_base]* %341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5092, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5093 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %341, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5091, i32* nonnull %5087, %struct.ds_base* nonnull %5093, i32 1, i32 undef) #14
  %5094 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 341) to i64*), align 8, !tbaa !25
  %5095 = trunc i64 %5094 to i32
  %5096 = call i32 @llvm.abs.i32(i32 %5095, i1 false)
  %5097 = urem i32 %5096, 1000
  %5098 = zext i32 %5097 to i64
  %5099 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5098
  %5100 = bitcast i32* %5099 to i64*
  %5101 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5100, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5102 = trunc i64 %5101 to i32
  %5103 = add nsw i32 %5102, 1
  %5104 = bitcast [1 x %struct.ds_base]* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5104, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5105 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %342, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5103, i32* nonnull %5099, %struct.ds_base* nonnull %5105, i32 1, i32 undef) #14
  %5106 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 342) to i64*), align 8, !tbaa !25
  %5107 = trunc i64 %5106 to i32
  %5108 = call i32 @llvm.abs.i32(i32 %5107, i1 false)
  %5109 = urem i32 %5108, 1000
  %5110 = zext i32 %5109 to i64
  %5111 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5110
  %5112 = bitcast i32* %5111 to i64*
  %5113 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5112, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5114 = trunc i64 %5113 to i32
  %5115 = add nsw i32 %5114, 1
  %5116 = bitcast [1 x %struct.ds_base]* %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5116, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5117 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %343, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5115, i32* nonnull %5111, %struct.ds_base* nonnull %5117, i32 1, i32 undef) #14
  %5118 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 343) to i64*), align 8, !tbaa !25
  %5119 = trunc i64 %5118 to i32
  %5120 = call i32 @llvm.abs.i32(i32 %5119, i1 false)
  %5121 = urem i32 %5120, 1000
  %5122 = zext i32 %5121 to i64
  %5123 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5122
  %5124 = bitcast i32* %5123 to i64*
  %5125 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5124, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5126 = trunc i64 %5125 to i32
  %5127 = add nsw i32 %5126, 1
  %5128 = bitcast [1 x %struct.ds_base]* %344 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5128, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5129 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %344, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5127, i32* nonnull %5123, %struct.ds_base* nonnull %5129, i32 1, i32 undef) #14
  %5130 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 344) to i64*), align 16, !tbaa !25
  %5131 = trunc i64 %5130 to i32
  %5132 = call i32 @llvm.abs.i32(i32 %5131, i1 false)
  %5133 = urem i32 %5132, 1000
  %5134 = zext i32 %5133 to i64
  %5135 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5134
  %5136 = bitcast i32* %5135 to i64*
  %5137 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5136, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5138 = trunc i64 %5137 to i32
  %5139 = add nsw i32 %5138, 1
  %5140 = bitcast [1 x %struct.ds_base]* %345 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5140, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5141 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %345, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5139, i32* nonnull %5135, %struct.ds_base* nonnull %5141, i32 1, i32 undef) #14
  %5142 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 345) to i64*), align 8, !tbaa !25
  %5143 = trunc i64 %5142 to i32
  %5144 = call i32 @llvm.abs.i32(i32 %5143, i1 false)
  %5145 = urem i32 %5144, 1000
  %5146 = zext i32 %5145 to i64
  %5147 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5146
  %5148 = bitcast i32* %5147 to i64*
  %5149 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5148, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5150 = trunc i64 %5149 to i32
  %5151 = add nsw i32 %5150, 1
  %5152 = bitcast [1 x %struct.ds_base]* %346 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5152, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5153 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %346, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5151, i32* nonnull %5147, %struct.ds_base* nonnull %5153, i32 1, i32 undef) #14
  %5154 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 346) to i64*), align 8, !tbaa !25
  %5155 = trunc i64 %5154 to i32
  %5156 = call i32 @llvm.abs.i32(i32 %5155, i1 false)
  %5157 = urem i32 %5156, 1000
  %5158 = zext i32 %5157 to i64
  %5159 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5158
  %5160 = bitcast i32* %5159 to i64*
  %5161 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5160, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5162 = trunc i64 %5161 to i32
  %5163 = add nsw i32 %5162, 1
  %5164 = bitcast [1 x %struct.ds_base]* %347 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5164, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5165 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %347, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5163, i32* nonnull %5159, %struct.ds_base* nonnull %5165, i32 1, i32 undef) #14
  %5166 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 347) to i64*), align 8, !tbaa !25
  %5167 = trunc i64 %5166 to i32
  %5168 = call i32 @llvm.abs.i32(i32 %5167, i1 false)
  %5169 = urem i32 %5168, 1000
  %5170 = zext i32 %5169 to i64
  %5171 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5170
  %5172 = bitcast i32* %5171 to i64*
  %5173 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5172, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5174 = trunc i64 %5173 to i32
  %5175 = add nsw i32 %5174, 1
  %5176 = bitcast [1 x %struct.ds_base]* %348 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5176, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5177 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %348, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5175, i32* nonnull %5171, %struct.ds_base* nonnull %5177, i32 1, i32 undef) #14
  %5178 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 348) to i64*), align 16, !tbaa !25
  %5179 = trunc i64 %5178 to i32
  %5180 = call i32 @llvm.abs.i32(i32 %5179, i1 false)
  %5181 = urem i32 %5180, 1000
  %5182 = zext i32 %5181 to i64
  %5183 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5182
  %5184 = bitcast i32* %5183 to i64*
  %5185 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5184, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5186 = trunc i64 %5185 to i32
  %5187 = add nsw i32 %5186, 1
  %5188 = bitcast [1 x %struct.ds_base]* %349 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5188, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5189 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %349, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5187, i32* nonnull %5183, %struct.ds_base* nonnull %5189, i32 1, i32 undef) #14
  %5190 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 349) to i64*), align 8, !tbaa !25
  %5191 = trunc i64 %5190 to i32
  %5192 = call i32 @llvm.abs.i32(i32 %5191, i1 false)
  %5193 = urem i32 %5192, 1000
  %5194 = zext i32 %5193 to i64
  %5195 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5194
  %5196 = bitcast i32* %5195 to i64*
  %5197 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5196, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5198 = trunc i64 %5197 to i32
  %5199 = add nsw i32 %5198, 1
  %5200 = bitcast [1 x %struct.ds_base]* %350 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5200, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5201 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %350, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5199, i32* nonnull %5195, %struct.ds_base* nonnull %5201, i32 1, i32 undef) #14
  %5202 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 350) to i64*), align 8, !tbaa !25
  %5203 = trunc i64 %5202 to i32
  %5204 = call i32 @llvm.abs.i32(i32 %5203, i1 false)
  %5205 = urem i32 %5204, 1000
  %5206 = zext i32 %5205 to i64
  %5207 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5206
  %5208 = bitcast i32* %5207 to i64*
  %5209 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5208, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5210 = trunc i64 %5209 to i32
  %5211 = add nsw i32 %5210, 1
  %5212 = bitcast [1 x %struct.ds_base]* %351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5212, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5213 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %351, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5211, i32* nonnull %5207, %struct.ds_base* nonnull %5213, i32 1, i32 undef) #14
  %5214 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 351) to i64*), align 8, !tbaa !25
  %5215 = trunc i64 %5214 to i32
  %5216 = call i32 @llvm.abs.i32(i32 %5215, i1 false)
  %5217 = urem i32 %5216, 1000
  %5218 = zext i32 %5217 to i64
  %5219 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5218
  %5220 = bitcast i32* %5219 to i64*
  %5221 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5220, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5222 = trunc i64 %5221 to i32
  %5223 = add nsw i32 %5222, 1
  %5224 = bitcast [1 x %struct.ds_base]* %352 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5224, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5225 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %352, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5223, i32* nonnull %5219, %struct.ds_base* nonnull %5225, i32 1, i32 undef) #14
  %5226 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 352) to i64*), align 16, !tbaa !25
  %5227 = trunc i64 %5226 to i32
  %5228 = call i32 @llvm.abs.i32(i32 %5227, i1 false)
  %5229 = urem i32 %5228, 1000
  %5230 = zext i32 %5229 to i64
  %5231 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5230
  %5232 = bitcast i32* %5231 to i64*
  %5233 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5232, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5234 = trunc i64 %5233 to i32
  %5235 = add nsw i32 %5234, 1
  %5236 = bitcast [1 x %struct.ds_base]* %353 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5236, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5237 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %353, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5235, i32* nonnull %5231, %struct.ds_base* nonnull %5237, i32 1, i32 undef) #14
  %5238 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 353) to i64*), align 8, !tbaa !25
  %5239 = trunc i64 %5238 to i32
  %5240 = call i32 @llvm.abs.i32(i32 %5239, i1 false)
  %5241 = urem i32 %5240, 1000
  %5242 = zext i32 %5241 to i64
  %5243 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5242
  %5244 = bitcast i32* %5243 to i64*
  %5245 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5244, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5246 = trunc i64 %5245 to i32
  %5247 = add nsw i32 %5246, 1
  %5248 = bitcast [1 x %struct.ds_base]* %354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5248, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5249 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %354, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5247, i32* nonnull %5243, %struct.ds_base* nonnull %5249, i32 1, i32 undef) #14
  %5250 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 354) to i64*), align 8, !tbaa !25
  %5251 = trunc i64 %5250 to i32
  %5252 = call i32 @llvm.abs.i32(i32 %5251, i1 false)
  %5253 = urem i32 %5252, 1000
  %5254 = zext i32 %5253 to i64
  %5255 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5254
  %5256 = bitcast i32* %5255 to i64*
  %5257 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5256, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5258 = trunc i64 %5257 to i32
  %5259 = add nsw i32 %5258, 1
  %5260 = bitcast [1 x %struct.ds_base]* %355 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5260, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5261 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %355, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5259, i32* nonnull %5255, %struct.ds_base* nonnull %5261, i32 1, i32 undef) #14
  %5262 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 355) to i64*), align 8, !tbaa !25
  %5263 = trunc i64 %5262 to i32
  %5264 = call i32 @llvm.abs.i32(i32 %5263, i1 false)
  %5265 = urem i32 %5264, 1000
  %5266 = zext i32 %5265 to i64
  %5267 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5266
  %5268 = bitcast i32* %5267 to i64*
  %5269 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5268, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5270 = trunc i64 %5269 to i32
  %5271 = add nsw i32 %5270, 1
  %5272 = bitcast [1 x %struct.ds_base]* %356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5272, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5273 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %356, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5271, i32* nonnull %5267, %struct.ds_base* nonnull %5273, i32 1, i32 undef) #14
  %5274 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 356) to i64*), align 16, !tbaa !25
  %5275 = trunc i64 %5274 to i32
  %5276 = call i32 @llvm.abs.i32(i32 %5275, i1 false)
  %5277 = urem i32 %5276, 1000
  %5278 = zext i32 %5277 to i64
  %5279 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5278
  %5280 = bitcast i32* %5279 to i64*
  %5281 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5280, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5282 = trunc i64 %5281 to i32
  %5283 = add nsw i32 %5282, 1
  %5284 = bitcast [1 x %struct.ds_base]* %357 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5284, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5285 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %357, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5283, i32* nonnull %5279, %struct.ds_base* nonnull %5285, i32 1, i32 undef) #14
  %5286 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 357) to i64*), align 8, !tbaa !25
  %5287 = trunc i64 %5286 to i32
  %5288 = call i32 @llvm.abs.i32(i32 %5287, i1 false)
  %5289 = urem i32 %5288, 1000
  %5290 = zext i32 %5289 to i64
  %5291 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5290
  %5292 = bitcast i32* %5291 to i64*
  %5293 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5292, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5294 = trunc i64 %5293 to i32
  %5295 = add nsw i32 %5294, 1
  %5296 = bitcast [1 x %struct.ds_base]* %358 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5296, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5297 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %358, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5295, i32* nonnull %5291, %struct.ds_base* nonnull %5297, i32 1, i32 undef) #14
  %5298 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 358) to i64*), align 8, !tbaa !25
  %5299 = trunc i64 %5298 to i32
  %5300 = call i32 @llvm.abs.i32(i32 %5299, i1 false)
  %5301 = urem i32 %5300, 1000
  %5302 = zext i32 %5301 to i64
  %5303 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5302
  %5304 = bitcast i32* %5303 to i64*
  %5305 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5304, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5306 = trunc i64 %5305 to i32
  %5307 = add nsw i32 %5306, 1
  %5308 = bitcast [1 x %struct.ds_base]* %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5308, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5309 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %359, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5307, i32* nonnull %5303, %struct.ds_base* nonnull %5309, i32 1, i32 undef) #14
  %5310 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 359) to i64*), align 8, !tbaa !25
  %5311 = trunc i64 %5310 to i32
  %5312 = call i32 @llvm.abs.i32(i32 %5311, i1 false)
  %5313 = urem i32 %5312, 1000
  %5314 = zext i32 %5313 to i64
  %5315 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5314
  %5316 = bitcast i32* %5315 to i64*
  %5317 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5316, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5318 = trunc i64 %5317 to i32
  %5319 = add nsw i32 %5318, 1
  %5320 = bitcast [1 x %struct.ds_base]* %360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5320, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5321 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %360, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5319, i32* nonnull %5315, %struct.ds_base* nonnull %5321, i32 1, i32 undef) #14
  %5322 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 360) to i64*), align 16, !tbaa !25
  %5323 = trunc i64 %5322 to i32
  %5324 = call i32 @llvm.abs.i32(i32 %5323, i1 false)
  %5325 = urem i32 %5324, 1000
  %5326 = zext i32 %5325 to i64
  %5327 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5326
  %5328 = bitcast i32* %5327 to i64*
  %5329 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5328, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5330 = trunc i64 %5329 to i32
  %5331 = add nsw i32 %5330, 1
  %5332 = bitcast [1 x %struct.ds_base]* %361 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5332, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5333 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %361, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5331, i32* nonnull %5327, %struct.ds_base* nonnull %5333, i32 1, i32 undef) #14
  %5334 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 361) to i64*), align 8, !tbaa !25
  %5335 = trunc i64 %5334 to i32
  %5336 = call i32 @llvm.abs.i32(i32 %5335, i1 false)
  %5337 = urem i32 %5336, 1000
  %5338 = zext i32 %5337 to i64
  %5339 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5338
  %5340 = bitcast i32* %5339 to i64*
  %5341 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5340, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5342 = trunc i64 %5341 to i32
  %5343 = add nsw i32 %5342, 1
  %5344 = bitcast [1 x %struct.ds_base]* %362 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5344, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5345 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %362, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5343, i32* nonnull %5339, %struct.ds_base* nonnull %5345, i32 1, i32 undef) #14
  %5346 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 362) to i64*), align 8, !tbaa !25
  %5347 = trunc i64 %5346 to i32
  %5348 = call i32 @llvm.abs.i32(i32 %5347, i1 false)
  %5349 = urem i32 %5348, 1000
  %5350 = zext i32 %5349 to i64
  %5351 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5350
  %5352 = bitcast i32* %5351 to i64*
  %5353 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5352, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5354 = trunc i64 %5353 to i32
  %5355 = add nsw i32 %5354, 1
  %5356 = bitcast [1 x %struct.ds_base]* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5356, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5357 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %363, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5355, i32* nonnull %5351, %struct.ds_base* nonnull %5357, i32 1, i32 undef) #14
  %5358 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 363) to i64*), align 8, !tbaa !25
  %5359 = trunc i64 %5358 to i32
  %5360 = call i32 @llvm.abs.i32(i32 %5359, i1 false)
  %5361 = urem i32 %5360, 1000
  %5362 = zext i32 %5361 to i64
  %5363 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5362
  %5364 = bitcast i32* %5363 to i64*
  %5365 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5364, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5366 = trunc i64 %5365 to i32
  %5367 = add nsw i32 %5366, 1
  %5368 = bitcast [1 x %struct.ds_base]* %364 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5368, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5369 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %364, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5367, i32* nonnull %5363, %struct.ds_base* nonnull %5369, i32 1, i32 undef) #14
  %5370 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 364) to i64*), align 16, !tbaa !25
  %5371 = trunc i64 %5370 to i32
  %5372 = call i32 @llvm.abs.i32(i32 %5371, i1 false)
  %5373 = urem i32 %5372, 1000
  %5374 = zext i32 %5373 to i64
  %5375 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5374
  %5376 = bitcast i32* %5375 to i64*
  %5377 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5376, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5378 = trunc i64 %5377 to i32
  %5379 = add nsw i32 %5378, 1
  %5380 = bitcast [1 x %struct.ds_base]* %365 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5380, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5381 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %365, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5379, i32* nonnull %5375, %struct.ds_base* nonnull %5381, i32 1, i32 undef) #14
  %5382 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 365) to i64*), align 8, !tbaa !25
  %5383 = trunc i64 %5382 to i32
  %5384 = call i32 @llvm.abs.i32(i32 %5383, i1 false)
  %5385 = urem i32 %5384, 1000
  %5386 = zext i32 %5385 to i64
  %5387 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5386
  %5388 = bitcast i32* %5387 to i64*
  %5389 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5388, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5390 = trunc i64 %5389 to i32
  %5391 = add nsw i32 %5390, 1
  %5392 = bitcast [1 x %struct.ds_base]* %366 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5392, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5393 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %366, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5391, i32* nonnull %5387, %struct.ds_base* nonnull %5393, i32 1, i32 undef) #14
  %5394 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 366) to i64*), align 8, !tbaa !25
  %5395 = trunc i64 %5394 to i32
  %5396 = call i32 @llvm.abs.i32(i32 %5395, i1 false)
  %5397 = urem i32 %5396, 1000
  %5398 = zext i32 %5397 to i64
  %5399 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5398
  %5400 = bitcast i32* %5399 to i64*
  %5401 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5400, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5402 = trunc i64 %5401 to i32
  %5403 = add nsw i32 %5402, 1
  %5404 = bitcast [1 x %struct.ds_base]* %367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5404, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5405 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %367, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5403, i32* nonnull %5399, %struct.ds_base* nonnull %5405, i32 1, i32 undef) #14
  %5406 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 367) to i64*), align 8, !tbaa !25
  %5407 = trunc i64 %5406 to i32
  %5408 = call i32 @llvm.abs.i32(i32 %5407, i1 false)
  %5409 = urem i32 %5408, 1000
  %5410 = zext i32 %5409 to i64
  %5411 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5410
  %5412 = bitcast i32* %5411 to i64*
  %5413 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5412, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5414 = trunc i64 %5413 to i32
  %5415 = add nsw i32 %5414, 1
  %5416 = bitcast [1 x %struct.ds_base]* %368 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5416, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5417 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %368, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5415, i32* nonnull %5411, %struct.ds_base* nonnull %5417, i32 1, i32 undef) #14
  %5418 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 368) to i64*), align 16, !tbaa !25
  %5419 = trunc i64 %5418 to i32
  %5420 = call i32 @llvm.abs.i32(i32 %5419, i1 false)
  %5421 = urem i32 %5420, 1000
  %5422 = zext i32 %5421 to i64
  %5423 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5422
  %5424 = bitcast i32* %5423 to i64*
  %5425 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5424, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5426 = trunc i64 %5425 to i32
  %5427 = add nsw i32 %5426, 1
  %5428 = bitcast [1 x %struct.ds_base]* %369 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5428, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5429 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %369, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5427, i32* nonnull %5423, %struct.ds_base* nonnull %5429, i32 1, i32 undef) #14
  %5430 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 369) to i64*), align 8, !tbaa !25
  %5431 = trunc i64 %5430 to i32
  %5432 = call i32 @llvm.abs.i32(i32 %5431, i1 false)
  %5433 = urem i32 %5432, 1000
  %5434 = zext i32 %5433 to i64
  %5435 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5434
  %5436 = bitcast i32* %5435 to i64*
  %5437 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5436, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5438 = trunc i64 %5437 to i32
  %5439 = add nsw i32 %5438, 1
  %5440 = bitcast [1 x %struct.ds_base]* %370 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5440, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5441 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %370, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5439, i32* nonnull %5435, %struct.ds_base* nonnull %5441, i32 1, i32 undef) #14
  %5442 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 370) to i64*), align 8, !tbaa !25
  %5443 = trunc i64 %5442 to i32
  %5444 = call i32 @llvm.abs.i32(i32 %5443, i1 false)
  %5445 = urem i32 %5444, 1000
  %5446 = zext i32 %5445 to i64
  %5447 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5446
  %5448 = bitcast i32* %5447 to i64*
  %5449 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5448, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5450 = trunc i64 %5449 to i32
  %5451 = add nsw i32 %5450, 1
  %5452 = bitcast [1 x %struct.ds_base]* %371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5452, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5453 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %371, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5451, i32* nonnull %5447, %struct.ds_base* nonnull %5453, i32 1, i32 undef) #14
  %5454 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 371) to i64*), align 8, !tbaa !25
  %5455 = trunc i64 %5454 to i32
  %5456 = call i32 @llvm.abs.i32(i32 %5455, i1 false)
  %5457 = urem i32 %5456, 1000
  %5458 = zext i32 %5457 to i64
  %5459 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5458
  %5460 = bitcast i32* %5459 to i64*
  %5461 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5460, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5462 = trunc i64 %5461 to i32
  %5463 = add nsw i32 %5462, 1
  %5464 = bitcast [1 x %struct.ds_base]* %372 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5464, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5465 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %372, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5463, i32* nonnull %5459, %struct.ds_base* nonnull %5465, i32 1, i32 undef) #14
  %5466 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 372) to i64*), align 16, !tbaa !25
  %5467 = trunc i64 %5466 to i32
  %5468 = call i32 @llvm.abs.i32(i32 %5467, i1 false)
  %5469 = urem i32 %5468, 1000
  %5470 = zext i32 %5469 to i64
  %5471 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5470
  %5472 = bitcast i32* %5471 to i64*
  %5473 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5472, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5474 = trunc i64 %5473 to i32
  %5475 = add nsw i32 %5474, 1
  %5476 = bitcast [1 x %struct.ds_base]* %373 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5476, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5477 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %373, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5475, i32* nonnull %5471, %struct.ds_base* nonnull %5477, i32 1, i32 undef) #14
  %5478 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 373) to i64*), align 8, !tbaa !25
  %5479 = trunc i64 %5478 to i32
  %5480 = call i32 @llvm.abs.i32(i32 %5479, i1 false)
  %5481 = urem i32 %5480, 1000
  %5482 = zext i32 %5481 to i64
  %5483 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5482
  %5484 = bitcast i32* %5483 to i64*
  %5485 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5484, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5486 = trunc i64 %5485 to i32
  %5487 = add nsw i32 %5486, 1
  %5488 = bitcast [1 x %struct.ds_base]* %374 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5488, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5489 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %374, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5487, i32* nonnull %5483, %struct.ds_base* nonnull %5489, i32 1, i32 undef) #14
  %5490 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 374) to i64*), align 8, !tbaa !25
  %5491 = trunc i64 %5490 to i32
  %5492 = call i32 @llvm.abs.i32(i32 %5491, i1 false)
  %5493 = urem i32 %5492, 1000
  %5494 = zext i32 %5493 to i64
  %5495 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5494
  %5496 = bitcast i32* %5495 to i64*
  %5497 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5496, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5498 = trunc i64 %5497 to i32
  %5499 = add nsw i32 %5498, 1
  %5500 = bitcast [1 x %struct.ds_base]* %375 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5500, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5501 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %375, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5499, i32* nonnull %5495, %struct.ds_base* nonnull %5501, i32 1, i32 undef) #14
  %5502 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 375) to i64*), align 8, !tbaa !25
  %5503 = trunc i64 %5502 to i32
  %5504 = call i32 @llvm.abs.i32(i32 %5503, i1 false)
  %5505 = urem i32 %5504, 1000
  %5506 = zext i32 %5505 to i64
  %5507 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5506
  %5508 = bitcast i32* %5507 to i64*
  %5509 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5508, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5510 = trunc i64 %5509 to i32
  %5511 = add nsw i32 %5510, 1
  %5512 = bitcast [1 x %struct.ds_base]* %376 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5512, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5513 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %376, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5511, i32* nonnull %5507, %struct.ds_base* nonnull %5513, i32 1, i32 undef) #14
  %5514 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 376) to i64*), align 16, !tbaa !25
  %5515 = trunc i64 %5514 to i32
  %5516 = call i32 @llvm.abs.i32(i32 %5515, i1 false)
  %5517 = urem i32 %5516, 1000
  %5518 = zext i32 %5517 to i64
  %5519 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5518
  %5520 = bitcast i32* %5519 to i64*
  %5521 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5520, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5522 = trunc i64 %5521 to i32
  %5523 = add nsw i32 %5522, 1
  %5524 = bitcast [1 x %struct.ds_base]* %377 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5524, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5525 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %377, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5523, i32* nonnull %5519, %struct.ds_base* nonnull %5525, i32 1, i32 undef) #14
  %5526 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 377) to i64*), align 8, !tbaa !25
  %5527 = trunc i64 %5526 to i32
  %5528 = call i32 @llvm.abs.i32(i32 %5527, i1 false)
  %5529 = urem i32 %5528, 1000
  %5530 = zext i32 %5529 to i64
  %5531 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5530
  %5532 = bitcast i32* %5531 to i64*
  %5533 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5532, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5534 = trunc i64 %5533 to i32
  %5535 = add nsw i32 %5534, 1
  %5536 = bitcast [1 x %struct.ds_base]* %378 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5536, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5537 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %378, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5535, i32* nonnull %5531, %struct.ds_base* nonnull %5537, i32 1, i32 undef) #14
  %5538 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 378) to i64*), align 8, !tbaa !25
  %5539 = trunc i64 %5538 to i32
  %5540 = call i32 @llvm.abs.i32(i32 %5539, i1 false)
  %5541 = urem i32 %5540, 1000
  %5542 = zext i32 %5541 to i64
  %5543 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5542
  %5544 = bitcast i32* %5543 to i64*
  %5545 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5544, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5546 = trunc i64 %5545 to i32
  %5547 = add nsw i32 %5546, 1
  %5548 = bitcast [1 x %struct.ds_base]* %379 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5548, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5549 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %379, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5547, i32* nonnull %5543, %struct.ds_base* nonnull %5549, i32 1, i32 undef) #14
  %5550 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 379) to i64*), align 8, !tbaa !25
  %5551 = trunc i64 %5550 to i32
  %5552 = call i32 @llvm.abs.i32(i32 %5551, i1 false)
  %5553 = urem i32 %5552, 1000
  %5554 = zext i32 %5553 to i64
  %5555 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5554
  %5556 = bitcast i32* %5555 to i64*
  %5557 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5556, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5558 = trunc i64 %5557 to i32
  %5559 = add nsw i32 %5558, 1
  %5560 = bitcast [1 x %struct.ds_base]* %380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5560, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5561 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %380, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5559, i32* nonnull %5555, %struct.ds_base* nonnull %5561, i32 1, i32 undef) #14
  %5562 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 380) to i64*), align 16, !tbaa !25
  %5563 = trunc i64 %5562 to i32
  %5564 = call i32 @llvm.abs.i32(i32 %5563, i1 false)
  %5565 = urem i32 %5564, 1000
  %5566 = zext i32 %5565 to i64
  %5567 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5566
  %5568 = bitcast i32* %5567 to i64*
  %5569 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5568, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5570 = trunc i64 %5569 to i32
  %5571 = add nsw i32 %5570, 1
  %5572 = bitcast [1 x %struct.ds_base]* %381 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5572, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5573 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %381, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5571, i32* nonnull %5567, %struct.ds_base* nonnull %5573, i32 1, i32 undef) #14
  %5574 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 381) to i64*), align 8, !tbaa !25
  %5575 = trunc i64 %5574 to i32
  %5576 = call i32 @llvm.abs.i32(i32 %5575, i1 false)
  %5577 = urem i32 %5576, 1000
  %5578 = zext i32 %5577 to i64
  %5579 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5578
  %5580 = bitcast i32* %5579 to i64*
  %5581 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5580, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5582 = trunc i64 %5581 to i32
  %5583 = add nsw i32 %5582, 1
  %5584 = bitcast [1 x %struct.ds_base]* %382 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5584, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5585 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %382, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5583, i32* nonnull %5579, %struct.ds_base* nonnull %5585, i32 1, i32 undef) #14
  %5586 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 382) to i64*), align 8, !tbaa !25
  %5587 = trunc i64 %5586 to i32
  %5588 = call i32 @llvm.abs.i32(i32 %5587, i1 false)
  %5589 = urem i32 %5588, 1000
  %5590 = zext i32 %5589 to i64
  %5591 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5590
  %5592 = bitcast i32* %5591 to i64*
  %5593 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5592, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5594 = trunc i64 %5593 to i32
  %5595 = add nsw i32 %5594, 1
  %5596 = bitcast [1 x %struct.ds_base]* %383 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5596, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5597 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %383, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5595, i32* nonnull %5591, %struct.ds_base* nonnull %5597, i32 1, i32 undef) #14
  %5598 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 383) to i64*), align 8, !tbaa !25
  %5599 = trunc i64 %5598 to i32
  %5600 = call i32 @llvm.abs.i32(i32 %5599, i1 false)
  %5601 = urem i32 %5600, 1000
  %5602 = zext i32 %5601 to i64
  %5603 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5602
  %5604 = bitcast i32* %5603 to i64*
  %5605 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5604, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5606 = trunc i64 %5605 to i32
  %5607 = add nsw i32 %5606, 1
  %5608 = bitcast [1 x %struct.ds_base]* %384 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5608, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5609 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %384, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5607, i32* nonnull %5603, %struct.ds_base* nonnull %5609, i32 1, i32 undef) #14
  %5610 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 384) to i64*), align 16, !tbaa !25
  %5611 = trunc i64 %5610 to i32
  %5612 = call i32 @llvm.abs.i32(i32 %5611, i1 false)
  %5613 = urem i32 %5612, 1000
  %5614 = zext i32 %5613 to i64
  %5615 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5614
  %5616 = bitcast i32* %5615 to i64*
  %5617 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5616, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5618 = trunc i64 %5617 to i32
  %5619 = add nsw i32 %5618, 1
  %5620 = bitcast [1 x %struct.ds_base]* %385 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5620, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5621 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %385, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5619, i32* nonnull %5615, %struct.ds_base* nonnull %5621, i32 1, i32 undef) #14
  %5622 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 385) to i64*), align 8, !tbaa !25
  %5623 = trunc i64 %5622 to i32
  %5624 = call i32 @llvm.abs.i32(i32 %5623, i1 false)
  %5625 = urem i32 %5624, 1000
  %5626 = zext i32 %5625 to i64
  %5627 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5626
  %5628 = bitcast i32* %5627 to i64*
  %5629 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5628, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5630 = trunc i64 %5629 to i32
  %5631 = add nsw i32 %5630, 1
  %5632 = bitcast [1 x %struct.ds_base]* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5632, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5633 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %386, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5631, i32* nonnull %5627, %struct.ds_base* nonnull %5633, i32 1, i32 undef) #14
  %5634 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 386) to i64*), align 8, !tbaa !25
  %5635 = trunc i64 %5634 to i32
  %5636 = call i32 @llvm.abs.i32(i32 %5635, i1 false)
  %5637 = urem i32 %5636, 1000
  %5638 = zext i32 %5637 to i64
  %5639 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5638
  %5640 = bitcast i32* %5639 to i64*
  %5641 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5640, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5642 = trunc i64 %5641 to i32
  %5643 = add nsw i32 %5642, 1
  %5644 = bitcast [1 x %struct.ds_base]* %387 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5644, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5645 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %387, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5643, i32* nonnull %5639, %struct.ds_base* nonnull %5645, i32 1, i32 undef) #14
  %5646 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 387) to i64*), align 8, !tbaa !25
  %5647 = trunc i64 %5646 to i32
  %5648 = call i32 @llvm.abs.i32(i32 %5647, i1 false)
  %5649 = urem i32 %5648, 1000
  %5650 = zext i32 %5649 to i64
  %5651 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5650
  %5652 = bitcast i32* %5651 to i64*
  %5653 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5652, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5654 = trunc i64 %5653 to i32
  %5655 = add nsw i32 %5654, 1
  %5656 = bitcast [1 x %struct.ds_base]* %388 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5656, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5657 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %388, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5655, i32* nonnull %5651, %struct.ds_base* nonnull %5657, i32 1, i32 undef) #14
  %5658 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 388) to i64*), align 16, !tbaa !25
  %5659 = trunc i64 %5658 to i32
  %5660 = call i32 @llvm.abs.i32(i32 %5659, i1 false)
  %5661 = urem i32 %5660, 1000
  %5662 = zext i32 %5661 to i64
  %5663 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5662
  %5664 = bitcast i32* %5663 to i64*
  %5665 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5664, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5666 = trunc i64 %5665 to i32
  %5667 = add nsw i32 %5666, 1
  %5668 = bitcast [1 x %struct.ds_base]* %389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5668, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5669 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %389, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5667, i32* nonnull %5663, %struct.ds_base* nonnull %5669, i32 1, i32 undef) #14
  %5670 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 389) to i64*), align 8, !tbaa !25
  %5671 = trunc i64 %5670 to i32
  %5672 = call i32 @llvm.abs.i32(i32 %5671, i1 false)
  %5673 = urem i32 %5672, 1000
  %5674 = zext i32 %5673 to i64
  %5675 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5674
  %5676 = bitcast i32* %5675 to i64*
  %5677 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5676, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5678 = trunc i64 %5677 to i32
  %5679 = add nsw i32 %5678, 1
  %5680 = bitcast [1 x %struct.ds_base]* %390 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5680, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5681 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %390, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5679, i32* nonnull %5675, %struct.ds_base* nonnull %5681, i32 1, i32 undef) #14
  %5682 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 390) to i64*), align 8, !tbaa !25
  %5683 = trunc i64 %5682 to i32
  %5684 = call i32 @llvm.abs.i32(i32 %5683, i1 false)
  %5685 = urem i32 %5684, 1000
  %5686 = zext i32 %5685 to i64
  %5687 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5686
  %5688 = bitcast i32* %5687 to i64*
  %5689 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5688, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5690 = trunc i64 %5689 to i32
  %5691 = add nsw i32 %5690, 1
  %5692 = bitcast [1 x %struct.ds_base]* %391 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5692, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5693 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %391, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5691, i32* nonnull %5687, %struct.ds_base* nonnull %5693, i32 1, i32 undef) #14
  %5694 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 391) to i64*), align 8, !tbaa !25
  %5695 = trunc i64 %5694 to i32
  %5696 = call i32 @llvm.abs.i32(i32 %5695, i1 false)
  %5697 = urem i32 %5696, 1000
  %5698 = zext i32 %5697 to i64
  %5699 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5698
  %5700 = bitcast i32* %5699 to i64*
  %5701 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5700, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5702 = trunc i64 %5701 to i32
  %5703 = add nsw i32 %5702, 1
  %5704 = bitcast [1 x %struct.ds_base]* %392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5704, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5705 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %392, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5703, i32* nonnull %5699, %struct.ds_base* nonnull %5705, i32 1, i32 undef) #14
  %5706 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 392) to i64*), align 16, !tbaa !25
  %5707 = trunc i64 %5706 to i32
  %5708 = call i32 @llvm.abs.i32(i32 %5707, i1 false)
  %5709 = urem i32 %5708, 1000
  %5710 = zext i32 %5709 to i64
  %5711 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5710
  %5712 = bitcast i32* %5711 to i64*
  %5713 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5712, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5714 = trunc i64 %5713 to i32
  %5715 = add nsw i32 %5714, 1
  %5716 = bitcast [1 x %struct.ds_base]* %393 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5716, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5717 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %393, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5715, i32* nonnull %5711, %struct.ds_base* nonnull %5717, i32 1, i32 undef) #14
  %5718 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 393) to i64*), align 8, !tbaa !25
  %5719 = trunc i64 %5718 to i32
  %5720 = call i32 @llvm.abs.i32(i32 %5719, i1 false)
  %5721 = urem i32 %5720, 1000
  %5722 = zext i32 %5721 to i64
  %5723 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5722
  %5724 = bitcast i32* %5723 to i64*
  %5725 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5724, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5726 = trunc i64 %5725 to i32
  %5727 = add nsw i32 %5726, 1
  %5728 = bitcast [1 x %struct.ds_base]* %394 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5728, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5729 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %394, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5727, i32* nonnull %5723, %struct.ds_base* nonnull %5729, i32 1, i32 undef) #14
  %5730 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 394) to i64*), align 8, !tbaa !25
  %5731 = trunc i64 %5730 to i32
  %5732 = call i32 @llvm.abs.i32(i32 %5731, i1 false)
  %5733 = urem i32 %5732, 1000
  %5734 = zext i32 %5733 to i64
  %5735 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5734
  %5736 = bitcast i32* %5735 to i64*
  %5737 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5736, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5738 = trunc i64 %5737 to i32
  %5739 = add nsw i32 %5738, 1
  %5740 = bitcast [1 x %struct.ds_base]* %395 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5740, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5741 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %395, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5739, i32* nonnull %5735, %struct.ds_base* nonnull %5741, i32 1, i32 undef) #14
  %5742 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 395) to i64*), align 8, !tbaa !25
  %5743 = trunc i64 %5742 to i32
  %5744 = call i32 @llvm.abs.i32(i32 %5743, i1 false)
  %5745 = urem i32 %5744, 1000
  %5746 = zext i32 %5745 to i64
  %5747 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5746
  %5748 = bitcast i32* %5747 to i64*
  %5749 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5748, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5750 = trunc i64 %5749 to i32
  %5751 = add nsw i32 %5750, 1
  %5752 = bitcast [1 x %struct.ds_base]* %396 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5752, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5753 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %396, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5751, i32* nonnull %5747, %struct.ds_base* nonnull %5753, i32 1, i32 undef) #14
  %5754 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 396) to i64*), align 16, !tbaa !25
  %5755 = trunc i64 %5754 to i32
  %5756 = call i32 @llvm.abs.i32(i32 %5755, i1 false)
  %5757 = urem i32 %5756, 1000
  %5758 = zext i32 %5757 to i64
  %5759 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5758
  %5760 = bitcast i32* %5759 to i64*
  %5761 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5760, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5762 = trunc i64 %5761 to i32
  %5763 = add nsw i32 %5762, 1
  %5764 = bitcast [1 x %struct.ds_base]* %397 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5764, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5765 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %397, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5763, i32* nonnull %5759, %struct.ds_base* nonnull %5765, i32 1, i32 undef) #14
  %5766 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 397) to i64*), align 8, !tbaa !25
  %5767 = trunc i64 %5766 to i32
  %5768 = call i32 @llvm.abs.i32(i32 %5767, i1 false)
  %5769 = urem i32 %5768, 1000
  %5770 = zext i32 %5769 to i64
  %5771 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5770
  %5772 = bitcast i32* %5771 to i64*
  %5773 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5772, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5774 = trunc i64 %5773 to i32
  %5775 = add nsw i32 %5774, 1
  %5776 = bitcast [1 x %struct.ds_base]* %398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5776, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5777 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %398, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5775, i32* nonnull %5771, %struct.ds_base* nonnull %5777, i32 1, i32 undef) #14
  %5778 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 398) to i64*), align 8, !tbaa !25
  %5779 = trunc i64 %5778 to i32
  %5780 = call i32 @llvm.abs.i32(i32 %5779, i1 false)
  %5781 = urem i32 %5780, 1000
  %5782 = zext i32 %5781 to i64
  %5783 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5782
  %5784 = bitcast i32* %5783 to i64*
  %5785 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5784, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5786 = trunc i64 %5785 to i32
  %5787 = add nsw i32 %5786, 1
  %5788 = bitcast [1 x %struct.ds_base]* %399 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5788, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5789 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %399, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5787, i32* nonnull %5783, %struct.ds_base* nonnull %5789, i32 1, i32 undef) #14
  %5790 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 399) to i64*), align 8, !tbaa !25
  %5791 = trunc i64 %5790 to i32
  %5792 = call i32 @llvm.abs.i32(i32 %5791, i1 false)
  %5793 = urem i32 %5792, 1000
  %5794 = zext i32 %5793 to i64
  %5795 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5794
  %5796 = bitcast i32* %5795 to i64*
  %5797 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5796, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5798 = trunc i64 %5797 to i32
  %5799 = add nsw i32 %5798, 1
  %5800 = bitcast [1 x %struct.ds_base]* %400 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5800, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5801 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %400, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5799, i32* nonnull %5795, %struct.ds_base* nonnull %5801, i32 1, i32 undef) #14
  %5802 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 400) to i64*), align 16, !tbaa !25
  %5803 = trunc i64 %5802 to i32
  %5804 = call i32 @llvm.abs.i32(i32 %5803, i1 false)
  %5805 = urem i32 %5804, 1000
  %5806 = zext i32 %5805 to i64
  %5807 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5806
  %5808 = bitcast i32* %5807 to i64*
  %5809 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5808, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5810 = trunc i64 %5809 to i32
  %5811 = add nsw i32 %5810, 1
  %5812 = bitcast [1 x %struct.ds_base]* %401 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5812, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5813 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %401, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5811, i32* nonnull %5807, %struct.ds_base* nonnull %5813, i32 1, i32 undef) #14
  %5814 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 401) to i64*), align 8, !tbaa !25
  %5815 = trunc i64 %5814 to i32
  %5816 = call i32 @llvm.abs.i32(i32 %5815, i1 false)
  %5817 = urem i32 %5816, 1000
  %5818 = zext i32 %5817 to i64
  %5819 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5818
  %5820 = bitcast i32* %5819 to i64*
  %5821 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5820, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5822 = trunc i64 %5821 to i32
  %5823 = add nsw i32 %5822, 1
  %5824 = bitcast [1 x %struct.ds_base]* %402 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5824, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5825 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %402, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5823, i32* nonnull %5819, %struct.ds_base* nonnull %5825, i32 1, i32 undef) #14
  %5826 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 402) to i64*), align 8, !tbaa !25
  %5827 = trunc i64 %5826 to i32
  %5828 = call i32 @llvm.abs.i32(i32 %5827, i1 false)
  %5829 = urem i32 %5828, 1000
  %5830 = zext i32 %5829 to i64
  %5831 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5830
  %5832 = bitcast i32* %5831 to i64*
  %5833 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5832, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5834 = trunc i64 %5833 to i32
  %5835 = add nsw i32 %5834, 1
  %5836 = bitcast [1 x %struct.ds_base]* %403 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5836, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5837 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %403, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5835, i32* nonnull %5831, %struct.ds_base* nonnull %5837, i32 1, i32 undef) #14
  %5838 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 403) to i64*), align 8, !tbaa !25
  %5839 = trunc i64 %5838 to i32
  %5840 = call i32 @llvm.abs.i32(i32 %5839, i1 false)
  %5841 = urem i32 %5840, 1000
  %5842 = zext i32 %5841 to i64
  %5843 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5842
  %5844 = bitcast i32* %5843 to i64*
  %5845 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5844, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5846 = trunc i64 %5845 to i32
  %5847 = add nsw i32 %5846, 1
  %5848 = bitcast [1 x %struct.ds_base]* %404 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5848, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5849 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %404, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5847, i32* nonnull %5843, %struct.ds_base* nonnull %5849, i32 1, i32 undef) #14
  %5850 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 404) to i64*), align 16, !tbaa !25
  %5851 = trunc i64 %5850 to i32
  %5852 = call i32 @llvm.abs.i32(i32 %5851, i1 false)
  %5853 = urem i32 %5852, 1000
  %5854 = zext i32 %5853 to i64
  %5855 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5854
  %5856 = bitcast i32* %5855 to i64*
  %5857 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5856, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5858 = trunc i64 %5857 to i32
  %5859 = add nsw i32 %5858, 1
  %5860 = bitcast [1 x %struct.ds_base]* %405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5860, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5861 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %405, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5859, i32* nonnull %5855, %struct.ds_base* nonnull %5861, i32 1, i32 undef) #14
  %5862 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 405) to i64*), align 8, !tbaa !25
  %5863 = trunc i64 %5862 to i32
  %5864 = call i32 @llvm.abs.i32(i32 %5863, i1 false)
  %5865 = urem i32 %5864, 1000
  %5866 = zext i32 %5865 to i64
  %5867 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5866
  %5868 = bitcast i32* %5867 to i64*
  %5869 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5868, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5870 = trunc i64 %5869 to i32
  %5871 = add nsw i32 %5870, 1
  %5872 = bitcast [1 x %struct.ds_base]* %406 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5872, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5873 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %406, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5871, i32* nonnull %5867, %struct.ds_base* nonnull %5873, i32 1, i32 undef) #14
  %5874 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 406) to i64*), align 8, !tbaa !25
  %5875 = trunc i64 %5874 to i32
  %5876 = call i32 @llvm.abs.i32(i32 %5875, i1 false)
  %5877 = urem i32 %5876, 1000
  %5878 = zext i32 %5877 to i64
  %5879 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5878
  %5880 = bitcast i32* %5879 to i64*
  %5881 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5880, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5882 = trunc i64 %5881 to i32
  %5883 = add nsw i32 %5882, 1
  %5884 = bitcast [1 x %struct.ds_base]* %407 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5884, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5885 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %407, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5883, i32* nonnull %5879, %struct.ds_base* nonnull %5885, i32 1, i32 undef) #14
  %5886 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 407) to i64*), align 8, !tbaa !25
  %5887 = trunc i64 %5886 to i32
  %5888 = call i32 @llvm.abs.i32(i32 %5887, i1 false)
  %5889 = urem i32 %5888, 1000
  %5890 = zext i32 %5889 to i64
  %5891 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5890
  %5892 = bitcast i32* %5891 to i64*
  %5893 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5892, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5894 = trunc i64 %5893 to i32
  %5895 = add nsw i32 %5894, 1
  %5896 = bitcast [1 x %struct.ds_base]* %408 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5896, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5897 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %408, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5895, i32* nonnull %5891, %struct.ds_base* nonnull %5897, i32 1, i32 undef) #14
  %5898 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 408) to i64*), align 16, !tbaa !25
  %5899 = trunc i64 %5898 to i32
  %5900 = call i32 @llvm.abs.i32(i32 %5899, i1 false)
  %5901 = urem i32 %5900, 1000
  %5902 = zext i32 %5901 to i64
  %5903 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5902
  %5904 = bitcast i32* %5903 to i64*
  %5905 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5904, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5906 = trunc i64 %5905 to i32
  %5907 = add nsw i32 %5906, 1
  %5908 = bitcast [1 x %struct.ds_base]* %409 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5908, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5909 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %409, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5907, i32* nonnull %5903, %struct.ds_base* nonnull %5909, i32 1, i32 undef) #14
  %5910 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 409) to i64*), align 8, !tbaa !25
  %5911 = trunc i64 %5910 to i32
  %5912 = call i32 @llvm.abs.i32(i32 %5911, i1 false)
  %5913 = urem i32 %5912, 1000
  %5914 = zext i32 %5913 to i64
  %5915 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5914
  %5916 = bitcast i32* %5915 to i64*
  %5917 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5916, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5918 = trunc i64 %5917 to i32
  %5919 = add nsw i32 %5918, 1
  %5920 = bitcast [1 x %struct.ds_base]* %410 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5920, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5921 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %410, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5919, i32* nonnull %5915, %struct.ds_base* nonnull %5921, i32 1, i32 undef) #14
  %5922 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 410) to i64*), align 8, !tbaa !25
  %5923 = trunc i64 %5922 to i32
  %5924 = call i32 @llvm.abs.i32(i32 %5923, i1 false)
  %5925 = urem i32 %5924, 1000
  %5926 = zext i32 %5925 to i64
  %5927 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5926
  %5928 = bitcast i32* %5927 to i64*
  %5929 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5928, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5930 = trunc i64 %5929 to i32
  %5931 = add nsw i32 %5930, 1
  %5932 = bitcast [1 x %struct.ds_base]* %411 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5932, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5933 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %411, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5931, i32* nonnull %5927, %struct.ds_base* nonnull %5933, i32 1, i32 undef) #14
  %5934 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 411) to i64*), align 8, !tbaa !25
  %5935 = trunc i64 %5934 to i32
  %5936 = call i32 @llvm.abs.i32(i32 %5935, i1 false)
  %5937 = urem i32 %5936, 1000
  %5938 = zext i32 %5937 to i64
  %5939 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5938
  %5940 = bitcast i32* %5939 to i64*
  %5941 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5940, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5942 = trunc i64 %5941 to i32
  %5943 = add nsw i32 %5942, 1
  %5944 = bitcast [1 x %struct.ds_base]* %412 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5944, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5945 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %412, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5943, i32* nonnull %5939, %struct.ds_base* nonnull %5945, i32 1, i32 undef) #14
  %5946 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 412) to i64*), align 16, !tbaa !25
  %5947 = trunc i64 %5946 to i32
  %5948 = call i32 @llvm.abs.i32(i32 %5947, i1 false)
  %5949 = urem i32 %5948, 1000
  %5950 = zext i32 %5949 to i64
  %5951 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5950
  %5952 = bitcast i32* %5951 to i64*
  %5953 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5952, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5954 = trunc i64 %5953 to i32
  %5955 = add nsw i32 %5954, 1
  %5956 = bitcast [1 x %struct.ds_base]* %413 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5956, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5957 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %413, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5955, i32* nonnull %5951, %struct.ds_base* nonnull %5957, i32 1, i32 undef) #14
  %5958 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 413) to i64*), align 8, !tbaa !25
  %5959 = trunc i64 %5958 to i32
  %5960 = call i32 @llvm.abs.i32(i32 %5959, i1 false)
  %5961 = urem i32 %5960, 1000
  %5962 = zext i32 %5961 to i64
  %5963 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5962
  %5964 = bitcast i32* %5963 to i64*
  %5965 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5964, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5966 = trunc i64 %5965 to i32
  %5967 = add nsw i32 %5966, 1
  %5968 = bitcast [1 x %struct.ds_base]* %414 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5968, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5969 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %414, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5967, i32* nonnull %5963, %struct.ds_base* nonnull %5969, i32 1, i32 undef) #14
  %5970 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 414) to i64*), align 8, !tbaa !25
  %5971 = trunc i64 %5970 to i32
  %5972 = call i32 @llvm.abs.i32(i32 %5971, i1 false)
  %5973 = urem i32 %5972, 1000
  %5974 = zext i32 %5973 to i64
  %5975 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5974
  %5976 = bitcast i32* %5975 to i64*
  %5977 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5976, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5978 = trunc i64 %5977 to i32
  %5979 = add nsw i32 %5978, 1
  %5980 = bitcast [1 x %struct.ds_base]* %415 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5980, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5981 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %415, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5979, i32* nonnull %5975, %struct.ds_base* nonnull %5981, i32 1, i32 undef) #14
  %5982 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 415) to i64*), align 8, !tbaa !25
  %5983 = trunc i64 %5982 to i32
  %5984 = call i32 @llvm.abs.i32(i32 %5983, i1 false)
  %5985 = urem i32 %5984, 1000
  %5986 = zext i32 %5985 to i64
  %5987 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5986
  %5988 = bitcast i32* %5987 to i64*
  %5989 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %5988, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %5990 = trunc i64 %5989 to i32
  %5991 = add nsw i32 %5990, 1
  %5992 = bitcast [1 x %struct.ds_base]* %416 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %5992, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %5993 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %416, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %5991, i32* nonnull %5987, %struct.ds_base* nonnull %5993, i32 1, i32 undef) #14
  %5994 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 416) to i64*), align 16, !tbaa !25
  %5995 = trunc i64 %5994 to i32
  %5996 = call i32 @llvm.abs.i32(i32 %5995, i1 false)
  %5997 = urem i32 %5996, 1000
  %5998 = zext i32 %5997 to i64
  %5999 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %5998
  %6000 = bitcast i32* %5999 to i64*
  %6001 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6000, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6002 = trunc i64 %6001 to i32
  %6003 = add nsw i32 %6002, 1
  %6004 = bitcast [1 x %struct.ds_base]* %417 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6004, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6005 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %417, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6003, i32* nonnull %5999, %struct.ds_base* nonnull %6005, i32 1, i32 undef) #14
  %6006 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 417) to i64*), align 8, !tbaa !25
  %6007 = trunc i64 %6006 to i32
  %6008 = call i32 @llvm.abs.i32(i32 %6007, i1 false)
  %6009 = urem i32 %6008, 1000
  %6010 = zext i32 %6009 to i64
  %6011 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6010
  %6012 = bitcast i32* %6011 to i64*
  %6013 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6012, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6014 = trunc i64 %6013 to i32
  %6015 = add nsw i32 %6014, 1
  %6016 = bitcast [1 x %struct.ds_base]* %418 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6016, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6017 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %418, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6015, i32* nonnull %6011, %struct.ds_base* nonnull %6017, i32 1, i32 undef) #14
  %6018 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 418) to i64*), align 8, !tbaa !25
  %6019 = trunc i64 %6018 to i32
  %6020 = call i32 @llvm.abs.i32(i32 %6019, i1 false)
  %6021 = urem i32 %6020, 1000
  %6022 = zext i32 %6021 to i64
  %6023 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6022
  %6024 = bitcast i32* %6023 to i64*
  %6025 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6024, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6026 = trunc i64 %6025 to i32
  %6027 = add nsw i32 %6026, 1
  %6028 = bitcast [1 x %struct.ds_base]* %419 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6028, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6029 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %419, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6027, i32* nonnull %6023, %struct.ds_base* nonnull %6029, i32 1, i32 undef) #14
  %6030 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 419) to i64*), align 8, !tbaa !25
  %6031 = trunc i64 %6030 to i32
  %6032 = call i32 @llvm.abs.i32(i32 %6031, i1 false)
  %6033 = urem i32 %6032, 1000
  %6034 = zext i32 %6033 to i64
  %6035 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6034
  %6036 = bitcast i32* %6035 to i64*
  %6037 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6036, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6038 = trunc i64 %6037 to i32
  %6039 = add nsw i32 %6038, 1
  %6040 = bitcast [1 x %struct.ds_base]* %420 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6040, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6041 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %420, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6039, i32* nonnull %6035, %struct.ds_base* nonnull %6041, i32 1, i32 undef) #14
  %6042 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 420) to i64*), align 16, !tbaa !25
  %6043 = trunc i64 %6042 to i32
  %6044 = call i32 @llvm.abs.i32(i32 %6043, i1 false)
  %6045 = urem i32 %6044, 1000
  %6046 = zext i32 %6045 to i64
  %6047 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6046
  %6048 = bitcast i32* %6047 to i64*
  %6049 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6048, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6050 = trunc i64 %6049 to i32
  %6051 = add nsw i32 %6050, 1
  %6052 = bitcast [1 x %struct.ds_base]* %421 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6052, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6053 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %421, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6051, i32* nonnull %6047, %struct.ds_base* nonnull %6053, i32 1, i32 undef) #14
  %6054 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 421) to i64*), align 8, !tbaa !25
  %6055 = trunc i64 %6054 to i32
  %6056 = call i32 @llvm.abs.i32(i32 %6055, i1 false)
  %6057 = urem i32 %6056, 1000
  %6058 = zext i32 %6057 to i64
  %6059 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6058
  %6060 = bitcast i32* %6059 to i64*
  %6061 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6060, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6062 = trunc i64 %6061 to i32
  %6063 = add nsw i32 %6062, 1
  %6064 = bitcast [1 x %struct.ds_base]* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6064, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6065 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %422, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6063, i32* nonnull %6059, %struct.ds_base* nonnull %6065, i32 1, i32 undef) #14
  %6066 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 422) to i64*), align 8, !tbaa !25
  %6067 = trunc i64 %6066 to i32
  %6068 = call i32 @llvm.abs.i32(i32 %6067, i1 false)
  %6069 = urem i32 %6068, 1000
  %6070 = zext i32 %6069 to i64
  %6071 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6070
  %6072 = bitcast i32* %6071 to i64*
  %6073 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6072, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6074 = trunc i64 %6073 to i32
  %6075 = add nsw i32 %6074, 1
  %6076 = bitcast [1 x %struct.ds_base]* %423 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6076, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6077 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %423, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6075, i32* nonnull %6071, %struct.ds_base* nonnull %6077, i32 1, i32 undef) #14
  %6078 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 423) to i64*), align 8, !tbaa !25
  %6079 = trunc i64 %6078 to i32
  %6080 = call i32 @llvm.abs.i32(i32 %6079, i1 false)
  %6081 = urem i32 %6080, 1000
  %6082 = zext i32 %6081 to i64
  %6083 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6082
  %6084 = bitcast i32* %6083 to i64*
  %6085 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6084, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6086 = trunc i64 %6085 to i32
  %6087 = add nsw i32 %6086, 1
  %6088 = bitcast [1 x %struct.ds_base]* %424 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6088, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6089 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %424, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6087, i32* nonnull %6083, %struct.ds_base* nonnull %6089, i32 1, i32 undef) #14
  %6090 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 424) to i64*), align 16, !tbaa !25
  %6091 = trunc i64 %6090 to i32
  %6092 = call i32 @llvm.abs.i32(i32 %6091, i1 false)
  %6093 = urem i32 %6092, 1000
  %6094 = zext i32 %6093 to i64
  %6095 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6094
  %6096 = bitcast i32* %6095 to i64*
  %6097 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6096, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6098 = trunc i64 %6097 to i32
  %6099 = add nsw i32 %6098, 1
  %6100 = bitcast [1 x %struct.ds_base]* %425 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6100, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6101 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %425, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6099, i32* nonnull %6095, %struct.ds_base* nonnull %6101, i32 1, i32 undef) #14
  %6102 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 425) to i64*), align 8, !tbaa !25
  %6103 = trunc i64 %6102 to i32
  %6104 = call i32 @llvm.abs.i32(i32 %6103, i1 false)
  %6105 = urem i32 %6104, 1000
  %6106 = zext i32 %6105 to i64
  %6107 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6106
  %6108 = bitcast i32* %6107 to i64*
  %6109 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6108, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6110 = trunc i64 %6109 to i32
  %6111 = add nsw i32 %6110, 1
  %6112 = bitcast [1 x %struct.ds_base]* %426 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6112, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6113 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %426, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6111, i32* nonnull %6107, %struct.ds_base* nonnull %6113, i32 1, i32 undef) #14
  %6114 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 426) to i64*), align 8, !tbaa !25
  %6115 = trunc i64 %6114 to i32
  %6116 = call i32 @llvm.abs.i32(i32 %6115, i1 false)
  %6117 = urem i32 %6116, 1000
  %6118 = zext i32 %6117 to i64
  %6119 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6118
  %6120 = bitcast i32* %6119 to i64*
  %6121 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6120, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6122 = trunc i64 %6121 to i32
  %6123 = add nsw i32 %6122, 1
  %6124 = bitcast [1 x %struct.ds_base]* %427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6124, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6125 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %427, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6123, i32* nonnull %6119, %struct.ds_base* nonnull %6125, i32 1, i32 undef) #14
  %6126 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 427) to i64*), align 8, !tbaa !25
  %6127 = trunc i64 %6126 to i32
  %6128 = call i32 @llvm.abs.i32(i32 %6127, i1 false)
  %6129 = urem i32 %6128, 1000
  %6130 = zext i32 %6129 to i64
  %6131 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6130
  %6132 = bitcast i32* %6131 to i64*
  %6133 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6132, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6134 = trunc i64 %6133 to i32
  %6135 = add nsw i32 %6134, 1
  %6136 = bitcast [1 x %struct.ds_base]* %428 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6136, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6137 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %428, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6135, i32* nonnull %6131, %struct.ds_base* nonnull %6137, i32 1, i32 undef) #14
  %6138 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 428) to i64*), align 16, !tbaa !25
  %6139 = trunc i64 %6138 to i32
  %6140 = call i32 @llvm.abs.i32(i32 %6139, i1 false)
  %6141 = urem i32 %6140, 1000
  %6142 = zext i32 %6141 to i64
  %6143 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6142
  %6144 = bitcast i32* %6143 to i64*
  %6145 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6144, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6146 = trunc i64 %6145 to i32
  %6147 = add nsw i32 %6146, 1
  %6148 = bitcast [1 x %struct.ds_base]* %429 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6148, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6149 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %429, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6147, i32* nonnull %6143, %struct.ds_base* nonnull %6149, i32 1, i32 undef) #14
  %6150 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 429) to i64*), align 8, !tbaa !25
  %6151 = trunc i64 %6150 to i32
  %6152 = call i32 @llvm.abs.i32(i32 %6151, i1 false)
  %6153 = urem i32 %6152, 1000
  %6154 = zext i32 %6153 to i64
  %6155 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6154
  %6156 = bitcast i32* %6155 to i64*
  %6157 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6156, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6158 = trunc i64 %6157 to i32
  %6159 = add nsw i32 %6158, 1
  %6160 = bitcast [1 x %struct.ds_base]* %430 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6160, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6161 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %430, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6159, i32* nonnull %6155, %struct.ds_base* nonnull %6161, i32 1, i32 undef) #14
  %6162 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 430) to i64*), align 8, !tbaa !25
  %6163 = trunc i64 %6162 to i32
  %6164 = call i32 @llvm.abs.i32(i32 %6163, i1 false)
  %6165 = urem i32 %6164, 1000
  %6166 = zext i32 %6165 to i64
  %6167 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6166
  %6168 = bitcast i32* %6167 to i64*
  %6169 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6168, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6170 = trunc i64 %6169 to i32
  %6171 = add nsw i32 %6170, 1
  %6172 = bitcast [1 x %struct.ds_base]* %431 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6172, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6173 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %431, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6171, i32* nonnull %6167, %struct.ds_base* nonnull %6173, i32 1, i32 undef) #14
  %6174 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 431) to i64*), align 8, !tbaa !25
  %6175 = trunc i64 %6174 to i32
  %6176 = call i32 @llvm.abs.i32(i32 %6175, i1 false)
  %6177 = urem i32 %6176, 1000
  %6178 = zext i32 %6177 to i64
  %6179 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6178
  %6180 = bitcast i32* %6179 to i64*
  %6181 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6180, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6182 = trunc i64 %6181 to i32
  %6183 = add nsw i32 %6182, 1
  %6184 = bitcast [1 x %struct.ds_base]* %432 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6184, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6185 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %432, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6183, i32* nonnull %6179, %struct.ds_base* nonnull %6185, i32 1, i32 undef) #14
  %6186 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 432) to i64*), align 16, !tbaa !25
  %6187 = trunc i64 %6186 to i32
  %6188 = call i32 @llvm.abs.i32(i32 %6187, i1 false)
  %6189 = urem i32 %6188, 1000
  %6190 = zext i32 %6189 to i64
  %6191 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6190
  %6192 = bitcast i32* %6191 to i64*
  %6193 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6192, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6194 = trunc i64 %6193 to i32
  %6195 = add nsw i32 %6194, 1
  %6196 = bitcast [1 x %struct.ds_base]* %433 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6196, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6197 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %433, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6195, i32* nonnull %6191, %struct.ds_base* nonnull %6197, i32 1, i32 undef) #14
  %6198 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 433) to i64*), align 8, !tbaa !25
  %6199 = trunc i64 %6198 to i32
  %6200 = call i32 @llvm.abs.i32(i32 %6199, i1 false)
  %6201 = urem i32 %6200, 1000
  %6202 = zext i32 %6201 to i64
  %6203 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6202
  %6204 = bitcast i32* %6203 to i64*
  %6205 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6204, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6206 = trunc i64 %6205 to i32
  %6207 = add nsw i32 %6206, 1
  %6208 = bitcast [1 x %struct.ds_base]* %434 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6208, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6209 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %434, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6207, i32* nonnull %6203, %struct.ds_base* nonnull %6209, i32 1, i32 undef) #14
  %6210 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 434) to i64*), align 8, !tbaa !25
  %6211 = trunc i64 %6210 to i32
  %6212 = call i32 @llvm.abs.i32(i32 %6211, i1 false)
  %6213 = urem i32 %6212, 1000
  %6214 = zext i32 %6213 to i64
  %6215 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6214
  %6216 = bitcast i32* %6215 to i64*
  %6217 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6216, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6218 = trunc i64 %6217 to i32
  %6219 = add nsw i32 %6218, 1
  %6220 = bitcast [1 x %struct.ds_base]* %435 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6220, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6221 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %435, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6219, i32* nonnull %6215, %struct.ds_base* nonnull %6221, i32 1, i32 undef) #14
  %6222 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 435) to i64*), align 8, !tbaa !25
  %6223 = trunc i64 %6222 to i32
  %6224 = call i32 @llvm.abs.i32(i32 %6223, i1 false)
  %6225 = urem i32 %6224, 1000
  %6226 = zext i32 %6225 to i64
  %6227 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6226
  %6228 = bitcast i32* %6227 to i64*
  %6229 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6228, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6230 = trunc i64 %6229 to i32
  %6231 = add nsw i32 %6230, 1
  %6232 = bitcast [1 x %struct.ds_base]* %436 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6232, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6233 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %436, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6231, i32* nonnull %6227, %struct.ds_base* nonnull %6233, i32 1, i32 undef) #14
  %6234 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 436) to i64*), align 16, !tbaa !25
  %6235 = trunc i64 %6234 to i32
  %6236 = call i32 @llvm.abs.i32(i32 %6235, i1 false)
  %6237 = urem i32 %6236, 1000
  %6238 = zext i32 %6237 to i64
  %6239 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6238
  %6240 = bitcast i32* %6239 to i64*
  %6241 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6240, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6242 = trunc i64 %6241 to i32
  %6243 = add nsw i32 %6242, 1
  %6244 = bitcast [1 x %struct.ds_base]* %437 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6244, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6245 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %437, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6243, i32* nonnull %6239, %struct.ds_base* nonnull %6245, i32 1, i32 undef) #14
  %6246 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 437) to i64*), align 8, !tbaa !25
  %6247 = trunc i64 %6246 to i32
  %6248 = call i32 @llvm.abs.i32(i32 %6247, i1 false)
  %6249 = urem i32 %6248, 1000
  %6250 = zext i32 %6249 to i64
  %6251 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6250
  %6252 = bitcast i32* %6251 to i64*
  %6253 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6252, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6254 = trunc i64 %6253 to i32
  %6255 = add nsw i32 %6254, 1
  %6256 = bitcast [1 x %struct.ds_base]* %438 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6256, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6257 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %438, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6255, i32* nonnull %6251, %struct.ds_base* nonnull %6257, i32 1, i32 undef) #14
  %6258 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 438) to i64*), align 8, !tbaa !25
  %6259 = trunc i64 %6258 to i32
  %6260 = call i32 @llvm.abs.i32(i32 %6259, i1 false)
  %6261 = urem i32 %6260, 1000
  %6262 = zext i32 %6261 to i64
  %6263 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6262
  %6264 = bitcast i32* %6263 to i64*
  %6265 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6264, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6266 = trunc i64 %6265 to i32
  %6267 = add nsw i32 %6266, 1
  %6268 = bitcast [1 x %struct.ds_base]* %439 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6268, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6269 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %439, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6267, i32* nonnull %6263, %struct.ds_base* nonnull %6269, i32 1, i32 undef) #14
  %6270 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 439) to i64*), align 8, !tbaa !25
  %6271 = trunc i64 %6270 to i32
  %6272 = call i32 @llvm.abs.i32(i32 %6271, i1 false)
  %6273 = urem i32 %6272, 1000
  %6274 = zext i32 %6273 to i64
  %6275 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6274
  %6276 = bitcast i32* %6275 to i64*
  %6277 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6276, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6278 = trunc i64 %6277 to i32
  %6279 = add nsw i32 %6278, 1
  %6280 = bitcast [1 x %struct.ds_base]* %440 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6280, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6281 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %440, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6279, i32* nonnull %6275, %struct.ds_base* nonnull %6281, i32 1, i32 undef) #14
  %6282 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 440) to i64*), align 16, !tbaa !25
  %6283 = trunc i64 %6282 to i32
  %6284 = call i32 @llvm.abs.i32(i32 %6283, i1 false)
  %6285 = urem i32 %6284, 1000
  %6286 = zext i32 %6285 to i64
  %6287 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6286
  %6288 = bitcast i32* %6287 to i64*
  %6289 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6288, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6290 = trunc i64 %6289 to i32
  %6291 = add nsw i32 %6290, 1
  %6292 = bitcast [1 x %struct.ds_base]* %441 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6292, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6293 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %441, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6291, i32* nonnull %6287, %struct.ds_base* nonnull %6293, i32 1, i32 undef) #14
  %6294 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 441) to i64*), align 8, !tbaa !25
  %6295 = trunc i64 %6294 to i32
  %6296 = call i32 @llvm.abs.i32(i32 %6295, i1 false)
  %6297 = urem i32 %6296, 1000
  %6298 = zext i32 %6297 to i64
  %6299 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6298
  %6300 = bitcast i32* %6299 to i64*
  %6301 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6300, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6302 = trunc i64 %6301 to i32
  %6303 = add nsw i32 %6302, 1
  %6304 = bitcast [1 x %struct.ds_base]* %442 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6304, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6305 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %442, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6303, i32* nonnull %6299, %struct.ds_base* nonnull %6305, i32 1, i32 undef) #14
  %6306 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 442) to i64*), align 8, !tbaa !25
  %6307 = trunc i64 %6306 to i32
  %6308 = call i32 @llvm.abs.i32(i32 %6307, i1 false)
  %6309 = urem i32 %6308, 1000
  %6310 = zext i32 %6309 to i64
  %6311 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6310
  %6312 = bitcast i32* %6311 to i64*
  %6313 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6312, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6314 = trunc i64 %6313 to i32
  %6315 = add nsw i32 %6314, 1
  %6316 = bitcast [1 x %struct.ds_base]* %443 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6316, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6317 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %443, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6315, i32* nonnull %6311, %struct.ds_base* nonnull %6317, i32 1, i32 undef) #14
  %6318 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 443) to i64*), align 8, !tbaa !25
  %6319 = trunc i64 %6318 to i32
  %6320 = call i32 @llvm.abs.i32(i32 %6319, i1 false)
  %6321 = urem i32 %6320, 1000
  %6322 = zext i32 %6321 to i64
  %6323 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6322
  %6324 = bitcast i32* %6323 to i64*
  %6325 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6324, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6326 = trunc i64 %6325 to i32
  %6327 = add nsw i32 %6326, 1
  %6328 = bitcast [1 x %struct.ds_base]* %444 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6328, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6329 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %444, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6327, i32* nonnull %6323, %struct.ds_base* nonnull %6329, i32 1, i32 undef) #14
  %6330 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 444) to i64*), align 16, !tbaa !25
  %6331 = trunc i64 %6330 to i32
  %6332 = call i32 @llvm.abs.i32(i32 %6331, i1 false)
  %6333 = urem i32 %6332, 1000
  %6334 = zext i32 %6333 to i64
  %6335 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6334
  %6336 = bitcast i32* %6335 to i64*
  %6337 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6336, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6338 = trunc i64 %6337 to i32
  %6339 = add nsw i32 %6338, 1
  %6340 = bitcast [1 x %struct.ds_base]* %445 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6340, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6341 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %445, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6339, i32* nonnull %6335, %struct.ds_base* nonnull %6341, i32 1, i32 undef) #14
  %6342 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 445) to i64*), align 8, !tbaa !25
  %6343 = trunc i64 %6342 to i32
  %6344 = call i32 @llvm.abs.i32(i32 %6343, i1 false)
  %6345 = urem i32 %6344, 1000
  %6346 = zext i32 %6345 to i64
  %6347 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6346
  %6348 = bitcast i32* %6347 to i64*
  %6349 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6348, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6350 = trunc i64 %6349 to i32
  %6351 = add nsw i32 %6350, 1
  %6352 = bitcast [1 x %struct.ds_base]* %446 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6352, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6353 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %446, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6351, i32* nonnull %6347, %struct.ds_base* nonnull %6353, i32 1, i32 undef) #14
  %6354 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 446) to i64*), align 8, !tbaa !25
  %6355 = trunc i64 %6354 to i32
  %6356 = call i32 @llvm.abs.i32(i32 %6355, i1 false)
  %6357 = urem i32 %6356, 1000
  %6358 = zext i32 %6357 to i64
  %6359 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6358
  %6360 = bitcast i32* %6359 to i64*
  %6361 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6360, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6362 = trunc i64 %6361 to i32
  %6363 = add nsw i32 %6362, 1
  %6364 = bitcast [1 x %struct.ds_base]* %447 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6364, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6365 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %447, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6363, i32* nonnull %6359, %struct.ds_base* nonnull %6365, i32 1, i32 undef) #14
  %6366 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 447) to i64*), align 8, !tbaa !25
  %6367 = trunc i64 %6366 to i32
  %6368 = call i32 @llvm.abs.i32(i32 %6367, i1 false)
  %6369 = urem i32 %6368, 1000
  %6370 = zext i32 %6369 to i64
  %6371 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6370
  %6372 = bitcast i32* %6371 to i64*
  %6373 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6372, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6374 = trunc i64 %6373 to i32
  %6375 = add nsw i32 %6374, 1
  %6376 = bitcast [1 x %struct.ds_base]* %448 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6376, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6377 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %448, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6375, i32* nonnull %6371, %struct.ds_base* nonnull %6377, i32 1, i32 undef) #14
  %6378 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 448) to i64*), align 16, !tbaa !25
  %6379 = trunc i64 %6378 to i32
  %6380 = call i32 @llvm.abs.i32(i32 %6379, i1 false)
  %6381 = urem i32 %6380, 1000
  %6382 = zext i32 %6381 to i64
  %6383 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6382
  %6384 = bitcast i32* %6383 to i64*
  %6385 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6384, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6386 = trunc i64 %6385 to i32
  %6387 = add nsw i32 %6386, 1
  %6388 = bitcast [1 x %struct.ds_base]* %449 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6388, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6389 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %449, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6387, i32* nonnull %6383, %struct.ds_base* nonnull %6389, i32 1, i32 undef) #14
  %6390 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 449) to i64*), align 8, !tbaa !25
  %6391 = trunc i64 %6390 to i32
  %6392 = call i32 @llvm.abs.i32(i32 %6391, i1 false)
  %6393 = urem i32 %6392, 1000
  %6394 = zext i32 %6393 to i64
  %6395 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6394
  %6396 = bitcast i32* %6395 to i64*
  %6397 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6396, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6398 = trunc i64 %6397 to i32
  %6399 = add nsw i32 %6398, 1
  %6400 = bitcast [1 x %struct.ds_base]* %450 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6400, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6401 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %450, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6399, i32* nonnull %6395, %struct.ds_base* nonnull %6401, i32 1, i32 undef) #14
  %6402 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 450) to i64*), align 8, !tbaa !25
  %6403 = trunc i64 %6402 to i32
  %6404 = call i32 @llvm.abs.i32(i32 %6403, i1 false)
  %6405 = urem i32 %6404, 1000
  %6406 = zext i32 %6405 to i64
  %6407 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6406
  %6408 = bitcast i32* %6407 to i64*
  %6409 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6408, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6410 = trunc i64 %6409 to i32
  %6411 = add nsw i32 %6410, 1
  %6412 = bitcast [1 x %struct.ds_base]* %451 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6412, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6413 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %451, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6411, i32* nonnull %6407, %struct.ds_base* nonnull %6413, i32 1, i32 undef) #14
  %6414 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 451) to i64*), align 8, !tbaa !25
  %6415 = trunc i64 %6414 to i32
  %6416 = call i32 @llvm.abs.i32(i32 %6415, i1 false)
  %6417 = urem i32 %6416, 1000
  %6418 = zext i32 %6417 to i64
  %6419 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6418
  %6420 = bitcast i32* %6419 to i64*
  %6421 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6420, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6422 = trunc i64 %6421 to i32
  %6423 = add nsw i32 %6422, 1
  %6424 = bitcast [1 x %struct.ds_base]* %452 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6424, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6425 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %452, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6423, i32* nonnull %6419, %struct.ds_base* nonnull %6425, i32 1, i32 undef) #14
  %6426 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 452) to i64*), align 16, !tbaa !25
  %6427 = trunc i64 %6426 to i32
  %6428 = call i32 @llvm.abs.i32(i32 %6427, i1 false)
  %6429 = urem i32 %6428, 1000
  %6430 = zext i32 %6429 to i64
  %6431 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6430
  %6432 = bitcast i32* %6431 to i64*
  %6433 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6432, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6434 = trunc i64 %6433 to i32
  %6435 = add nsw i32 %6434, 1
  %6436 = bitcast [1 x %struct.ds_base]* %453 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6436, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6437 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %453, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6435, i32* nonnull %6431, %struct.ds_base* nonnull %6437, i32 1, i32 undef) #14
  %6438 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 453) to i64*), align 8, !tbaa !25
  %6439 = trunc i64 %6438 to i32
  %6440 = call i32 @llvm.abs.i32(i32 %6439, i1 false)
  %6441 = urem i32 %6440, 1000
  %6442 = zext i32 %6441 to i64
  %6443 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6442
  %6444 = bitcast i32* %6443 to i64*
  %6445 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6444, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6446 = trunc i64 %6445 to i32
  %6447 = add nsw i32 %6446, 1
  %6448 = bitcast [1 x %struct.ds_base]* %454 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6448, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6449 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %454, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6447, i32* nonnull %6443, %struct.ds_base* nonnull %6449, i32 1, i32 undef) #14
  %6450 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 454) to i64*), align 8, !tbaa !25
  %6451 = trunc i64 %6450 to i32
  %6452 = call i32 @llvm.abs.i32(i32 %6451, i1 false)
  %6453 = urem i32 %6452, 1000
  %6454 = zext i32 %6453 to i64
  %6455 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6454
  %6456 = bitcast i32* %6455 to i64*
  %6457 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6456, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6458 = trunc i64 %6457 to i32
  %6459 = add nsw i32 %6458, 1
  %6460 = bitcast [1 x %struct.ds_base]* %455 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6460, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6461 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %455, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6459, i32* nonnull %6455, %struct.ds_base* nonnull %6461, i32 1, i32 undef) #14
  %6462 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 455) to i64*), align 8, !tbaa !25
  %6463 = trunc i64 %6462 to i32
  %6464 = call i32 @llvm.abs.i32(i32 %6463, i1 false)
  %6465 = urem i32 %6464, 1000
  %6466 = zext i32 %6465 to i64
  %6467 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6466
  %6468 = bitcast i32* %6467 to i64*
  %6469 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6468, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6470 = trunc i64 %6469 to i32
  %6471 = add nsw i32 %6470, 1
  %6472 = bitcast [1 x %struct.ds_base]* %456 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6472, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6473 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %456, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6471, i32* nonnull %6467, %struct.ds_base* nonnull %6473, i32 1, i32 undef) #14
  %6474 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 456) to i64*), align 16, !tbaa !25
  %6475 = trunc i64 %6474 to i32
  %6476 = call i32 @llvm.abs.i32(i32 %6475, i1 false)
  %6477 = urem i32 %6476, 1000
  %6478 = zext i32 %6477 to i64
  %6479 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6478
  %6480 = bitcast i32* %6479 to i64*
  %6481 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6480, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6482 = trunc i64 %6481 to i32
  %6483 = add nsw i32 %6482, 1
  %6484 = bitcast [1 x %struct.ds_base]* %457 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6484, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6485 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %457, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6483, i32* nonnull %6479, %struct.ds_base* nonnull %6485, i32 1, i32 undef) #14
  %6486 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 457) to i64*), align 8, !tbaa !25
  %6487 = trunc i64 %6486 to i32
  %6488 = call i32 @llvm.abs.i32(i32 %6487, i1 false)
  %6489 = urem i32 %6488, 1000
  %6490 = zext i32 %6489 to i64
  %6491 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6490
  %6492 = bitcast i32* %6491 to i64*
  %6493 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6492, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6494 = trunc i64 %6493 to i32
  %6495 = add nsw i32 %6494, 1
  %6496 = bitcast [1 x %struct.ds_base]* %458 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6496, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6497 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %458, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6495, i32* nonnull %6491, %struct.ds_base* nonnull %6497, i32 1, i32 undef) #14
  %6498 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 458) to i64*), align 8, !tbaa !25
  %6499 = trunc i64 %6498 to i32
  %6500 = call i32 @llvm.abs.i32(i32 %6499, i1 false)
  %6501 = urem i32 %6500, 1000
  %6502 = zext i32 %6501 to i64
  %6503 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6502
  %6504 = bitcast i32* %6503 to i64*
  %6505 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6504, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6506 = trunc i64 %6505 to i32
  %6507 = add nsw i32 %6506, 1
  %6508 = bitcast [1 x %struct.ds_base]* %459 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6508, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6509 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %459, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6507, i32* nonnull %6503, %struct.ds_base* nonnull %6509, i32 1, i32 undef) #14
  %6510 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 459) to i64*), align 8, !tbaa !25
  %6511 = trunc i64 %6510 to i32
  %6512 = call i32 @llvm.abs.i32(i32 %6511, i1 false)
  %6513 = urem i32 %6512, 1000
  %6514 = zext i32 %6513 to i64
  %6515 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6514
  %6516 = bitcast i32* %6515 to i64*
  %6517 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6516, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6518 = trunc i64 %6517 to i32
  %6519 = add nsw i32 %6518, 1
  %6520 = bitcast [1 x %struct.ds_base]* %460 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6520, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6521 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %460, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6519, i32* nonnull %6515, %struct.ds_base* nonnull %6521, i32 1, i32 undef) #14
  %6522 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 460) to i64*), align 16, !tbaa !25
  %6523 = trunc i64 %6522 to i32
  %6524 = call i32 @llvm.abs.i32(i32 %6523, i1 false)
  %6525 = urem i32 %6524, 1000
  %6526 = zext i32 %6525 to i64
  %6527 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6526
  %6528 = bitcast i32* %6527 to i64*
  %6529 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6528, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6530 = trunc i64 %6529 to i32
  %6531 = add nsw i32 %6530, 1
  %6532 = bitcast [1 x %struct.ds_base]* %461 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6532, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6533 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %461, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6531, i32* nonnull %6527, %struct.ds_base* nonnull %6533, i32 1, i32 undef) #14
  %6534 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 461) to i64*), align 8, !tbaa !25
  %6535 = trunc i64 %6534 to i32
  %6536 = call i32 @llvm.abs.i32(i32 %6535, i1 false)
  %6537 = urem i32 %6536, 1000
  %6538 = zext i32 %6537 to i64
  %6539 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6538
  %6540 = bitcast i32* %6539 to i64*
  %6541 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6540, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6542 = trunc i64 %6541 to i32
  %6543 = add nsw i32 %6542, 1
  %6544 = bitcast [1 x %struct.ds_base]* %462 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6544, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6545 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %462, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6543, i32* nonnull %6539, %struct.ds_base* nonnull %6545, i32 1, i32 undef) #14
  %6546 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 462) to i64*), align 8, !tbaa !25
  %6547 = trunc i64 %6546 to i32
  %6548 = call i32 @llvm.abs.i32(i32 %6547, i1 false)
  %6549 = urem i32 %6548, 1000
  %6550 = zext i32 %6549 to i64
  %6551 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6550
  %6552 = bitcast i32* %6551 to i64*
  %6553 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6552, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6554 = trunc i64 %6553 to i32
  %6555 = add nsw i32 %6554, 1
  %6556 = bitcast [1 x %struct.ds_base]* %463 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6556, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6557 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %463, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6555, i32* nonnull %6551, %struct.ds_base* nonnull %6557, i32 1, i32 undef) #14
  %6558 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 463) to i64*), align 8, !tbaa !25
  %6559 = trunc i64 %6558 to i32
  %6560 = call i32 @llvm.abs.i32(i32 %6559, i1 false)
  %6561 = urem i32 %6560, 1000
  %6562 = zext i32 %6561 to i64
  %6563 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6562
  %6564 = bitcast i32* %6563 to i64*
  %6565 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6564, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6566 = trunc i64 %6565 to i32
  %6567 = add nsw i32 %6566, 1
  %6568 = bitcast [1 x %struct.ds_base]* %464 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6568, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6569 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %464, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6567, i32* nonnull %6563, %struct.ds_base* nonnull %6569, i32 1, i32 undef) #14
  %6570 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 464) to i64*), align 16, !tbaa !25
  %6571 = trunc i64 %6570 to i32
  %6572 = call i32 @llvm.abs.i32(i32 %6571, i1 false)
  %6573 = urem i32 %6572, 1000
  %6574 = zext i32 %6573 to i64
  %6575 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6574
  %6576 = bitcast i32* %6575 to i64*
  %6577 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6576, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6578 = trunc i64 %6577 to i32
  %6579 = add nsw i32 %6578, 1
  %6580 = bitcast [1 x %struct.ds_base]* %465 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6580, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6581 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %465, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6579, i32* nonnull %6575, %struct.ds_base* nonnull %6581, i32 1, i32 undef) #14
  %6582 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 465) to i64*), align 8, !tbaa !25
  %6583 = trunc i64 %6582 to i32
  %6584 = call i32 @llvm.abs.i32(i32 %6583, i1 false)
  %6585 = urem i32 %6584, 1000
  %6586 = zext i32 %6585 to i64
  %6587 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6586
  %6588 = bitcast i32* %6587 to i64*
  %6589 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6588, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6590 = trunc i64 %6589 to i32
  %6591 = add nsw i32 %6590, 1
  %6592 = bitcast [1 x %struct.ds_base]* %466 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6592, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6593 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %466, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6591, i32* nonnull %6587, %struct.ds_base* nonnull %6593, i32 1, i32 undef) #14
  %6594 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 466) to i64*), align 8, !tbaa !25
  %6595 = trunc i64 %6594 to i32
  %6596 = call i32 @llvm.abs.i32(i32 %6595, i1 false)
  %6597 = urem i32 %6596, 1000
  %6598 = zext i32 %6597 to i64
  %6599 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6598
  %6600 = bitcast i32* %6599 to i64*
  %6601 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6600, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6602 = trunc i64 %6601 to i32
  %6603 = add nsw i32 %6602, 1
  %6604 = bitcast [1 x %struct.ds_base]* %467 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6604, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6605 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %467, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6603, i32* nonnull %6599, %struct.ds_base* nonnull %6605, i32 1, i32 undef) #14
  %6606 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 467) to i64*), align 8, !tbaa !25
  %6607 = trunc i64 %6606 to i32
  %6608 = call i32 @llvm.abs.i32(i32 %6607, i1 false)
  %6609 = urem i32 %6608, 1000
  %6610 = zext i32 %6609 to i64
  %6611 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6610
  %6612 = bitcast i32* %6611 to i64*
  %6613 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6612, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6614 = trunc i64 %6613 to i32
  %6615 = add nsw i32 %6614, 1
  %6616 = bitcast [1 x %struct.ds_base]* %468 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6616, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6617 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %468, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6615, i32* nonnull %6611, %struct.ds_base* nonnull %6617, i32 1, i32 undef) #14
  %6618 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 468) to i64*), align 16, !tbaa !25
  %6619 = trunc i64 %6618 to i32
  %6620 = call i32 @llvm.abs.i32(i32 %6619, i1 false)
  %6621 = urem i32 %6620, 1000
  %6622 = zext i32 %6621 to i64
  %6623 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6622
  %6624 = bitcast i32* %6623 to i64*
  %6625 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6624, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6626 = trunc i64 %6625 to i32
  %6627 = add nsw i32 %6626, 1
  %6628 = bitcast [1 x %struct.ds_base]* %469 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6628, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6629 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %469, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6627, i32* nonnull %6623, %struct.ds_base* nonnull %6629, i32 1, i32 undef) #14
  %6630 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 469) to i64*), align 8, !tbaa !25
  %6631 = trunc i64 %6630 to i32
  %6632 = call i32 @llvm.abs.i32(i32 %6631, i1 false)
  %6633 = urem i32 %6632, 1000
  %6634 = zext i32 %6633 to i64
  %6635 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6634
  %6636 = bitcast i32* %6635 to i64*
  %6637 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6636, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6638 = trunc i64 %6637 to i32
  %6639 = add nsw i32 %6638, 1
  %6640 = bitcast [1 x %struct.ds_base]* %470 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6640, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6641 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %470, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6639, i32* nonnull %6635, %struct.ds_base* nonnull %6641, i32 1, i32 undef) #14
  %6642 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 470) to i64*), align 8, !tbaa !25
  %6643 = trunc i64 %6642 to i32
  %6644 = call i32 @llvm.abs.i32(i32 %6643, i1 false)
  %6645 = urem i32 %6644, 1000
  %6646 = zext i32 %6645 to i64
  %6647 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6646
  %6648 = bitcast i32* %6647 to i64*
  %6649 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6648, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6650 = trunc i64 %6649 to i32
  %6651 = add nsw i32 %6650, 1
  %6652 = bitcast [1 x %struct.ds_base]* %471 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6652, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6653 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %471, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6651, i32* nonnull %6647, %struct.ds_base* nonnull %6653, i32 1, i32 undef) #14
  %6654 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 471) to i64*), align 8, !tbaa !25
  %6655 = trunc i64 %6654 to i32
  %6656 = call i32 @llvm.abs.i32(i32 %6655, i1 false)
  %6657 = urem i32 %6656, 1000
  %6658 = zext i32 %6657 to i64
  %6659 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6658
  %6660 = bitcast i32* %6659 to i64*
  %6661 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6660, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6662 = trunc i64 %6661 to i32
  %6663 = add nsw i32 %6662, 1
  %6664 = bitcast [1 x %struct.ds_base]* %472 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6664, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6665 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %472, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6663, i32* nonnull %6659, %struct.ds_base* nonnull %6665, i32 1, i32 undef) #14
  %6666 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 472) to i64*), align 16, !tbaa !25
  %6667 = trunc i64 %6666 to i32
  %6668 = call i32 @llvm.abs.i32(i32 %6667, i1 false)
  %6669 = urem i32 %6668, 1000
  %6670 = zext i32 %6669 to i64
  %6671 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6670
  %6672 = bitcast i32* %6671 to i64*
  %6673 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6672, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6674 = trunc i64 %6673 to i32
  %6675 = add nsw i32 %6674, 1
  %6676 = bitcast [1 x %struct.ds_base]* %473 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6676, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6677 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %473, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6675, i32* nonnull %6671, %struct.ds_base* nonnull %6677, i32 1, i32 undef) #14
  %6678 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 473) to i64*), align 8, !tbaa !25
  %6679 = trunc i64 %6678 to i32
  %6680 = call i32 @llvm.abs.i32(i32 %6679, i1 false)
  %6681 = urem i32 %6680, 1000
  %6682 = zext i32 %6681 to i64
  %6683 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6682
  %6684 = bitcast i32* %6683 to i64*
  %6685 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6684, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6686 = trunc i64 %6685 to i32
  %6687 = add nsw i32 %6686, 1
  %6688 = bitcast [1 x %struct.ds_base]* %474 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6688, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6689 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %474, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6687, i32* nonnull %6683, %struct.ds_base* nonnull %6689, i32 1, i32 undef) #14
  %6690 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 474) to i64*), align 8, !tbaa !25
  %6691 = trunc i64 %6690 to i32
  %6692 = call i32 @llvm.abs.i32(i32 %6691, i1 false)
  %6693 = urem i32 %6692, 1000
  %6694 = zext i32 %6693 to i64
  %6695 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6694
  %6696 = bitcast i32* %6695 to i64*
  %6697 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6696, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6698 = trunc i64 %6697 to i32
  %6699 = add nsw i32 %6698, 1
  %6700 = bitcast [1 x %struct.ds_base]* %475 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6700, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6701 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %475, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6699, i32* nonnull %6695, %struct.ds_base* nonnull %6701, i32 1, i32 undef) #14
  %6702 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 475) to i64*), align 8, !tbaa !25
  %6703 = trunc i64 %6702 to i32
  %6704 = call i32 @llvm.abs.i32(i32 %6703, i1 false)
  %6705 = urem i32 %6704, 1000
  %6706 = zext i32 %6705 to i64
  %6707 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6706
  %6708 = bitcast i32* %6707 to i64*
  %6709 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6708, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6710 = trunc i64 %6709 to i32
  %6711 = add nsw i32 %6710, 1
  %6712 = bitcast [1 x %struct.ds_base]* %476 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6712, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6713 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %476, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6711, i32* nonnull %6707, %struct.ds_base* nonnull %6713, i32 1, i32 undef) #14
  %6714 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 476) to i64*), align 16, !tbaa !25
  %6715 = trunc i64 %6714 to i32
  %6716 = call i32 @llvm.abs.i32(i32 %6715, i1 false)
  %6717 = urem i32 %6716, 1000
  %6718 = zext i32 %6717 to i64
  %6719 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6718
  %6720 = bitcast i32* %6719 to i64*
  %6721 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6720, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6722 = trunc i64 %6721 to i32
  %6723 = add nsw i32 %6722, 1
  %6724 = bitcast [1 x %struct.ds_base]* %477 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6724, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6725 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %477, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6723, i32* nonnull %6719, %struct.ds_base* nonnull %6725, i32 1, i32 undef) #14
  %6726 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 477) to i64*), align 8, !tbaa !25
  %6727 = trunc i64 %6726 to i32
  %6728 = call i32 @llvm.abs.i32(i32 %6727, i1 false)
  %6729 = urem i32 %6728, 1000
  %6730 = zext i32 %6729 to i64
  %6731 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6730
  %6732 = bitcast i32* %6731 to i64*
  %6733 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6732, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6734 = trunc i64 %6733 to i32
  %6735 = add nsw i32 %6734, 1
  %6736 = bitcast [1 x %struct.ds_base]* %478 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6736, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6737 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %478, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6735, i32* nonnull %6731, %struct.ds_base* nonnull %6737, i32 1, i32 undef) #14
  %6738 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 478) to i64*), align 8, !tbaa !25
  %6739 = trunc i64 %6738 to i32
  %6740 = call i32 @llvm.abs.i32(i32 %6739, i1 false)
  %6741 = urem i32 %6740, 1000
  %6742 = zext i32 %6741 to i64
  %6743 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6742
  %6744 = bitcast i32* %6743 to i64*
  %6745 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6744, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6746 = trunc i64 %6745 to i32
  %6747 = add nsw i32 %6746, 1
  %6748 = bitcast [1 x %struct.ds_base]* %479 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6748, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6749 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %479, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6747, i32* nonnull %6743, %struct.ds_base* nonnull %6749, i32 1, i32 undef) #14
  %6750 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 479) to i64*), align 8, !tbaa !25
  %6751 = trunc i64 %6750 to i32
  %6752 = call i32 @llvm.abs.i32(i32 %6751, i1 false)
  %6753 = urem i32 %6752, 1000
  %6754 = zext i32 %6753 to i64
  %6755 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6754
  %6756 = bitcast i32* %6755 to i64*
  %6757 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6756, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6758 = trunc i64 %6757 to i32
  %6759 = add nsw i32 %6758, 1
  %6760 = bitcast [1 x %struct.ds_base]* %480 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6760, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6761 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %480, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6759, i32* nonnull %6755, %struct.ds_base* nonnull %6761, i32 1, i32 undef) #14
  %6762 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 480) to i64*), align 16, !tbaa !25
  %6763 = trunc i64 %6762 to i32
  %6764 = call i32 @llvm.abs.i32(i32 %6763, i1 false)
  %6765 = urem i32 %6764, 1000
  %6766 = zext i32 %6765 to i64
  %6767 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6766
  %6768 = bitcast i32* %6767 to i64*
  %6769 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6768, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6770 = trunc i64 %6769 to i32
  %6771 = add nsw i32 %6770, 1
  %6772 = bitcast [1 x %struct.ds_base]* %481 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6772, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6773 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %481, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6771, i32* nonnull %6767, %struct.ds_base* nonnull %6773, i32 1, i32 undef) #14
  %6774 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 481) to i64*), align 8, !tbaa !25
  %6775 = trunc i64 %6774 to i32
  %6776 = call i32 @llvm.abs.i32(i32 %6775, i1 false)
  %6777 = urem i32 %6776, 1000
  %6778 = zext i32 %6777 to i64
  %6779 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6778
  %6780 = bitcast i32* %6779 to i64*
  %6781 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6780, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6782 = trunc i64 %6781 to i32
  %6783 = add nsw i32 %6782, 1
  %6784 = bitcast [1 x %struct.ds_base]* %482 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6784, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6785 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %482, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6783, i32* nonnull %6779, %struct.ds_base* nonnull %6785, i32 1, i32 undef) #14
  %6786 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 482) to i64*), align 8, !tbaa !25
  %6787 = trunc i64 %6786 to i32
  %6788 = call i32 @llvm.abs.i32(i32 %6787, i1 false)
  %6789 = urem i32 %6788, 1000
  %6790 = zext i32 %6789 to i64
  %6791 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6790
  %6792 = bitcast i32* %6791 to i64*
  %6793 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6792, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6794 = trunc i64 %6793 to i32
  %6795 = add nsw i32 %6794, 1
  %6796 = bitcast [1 x %struct.ds_base]* %483 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6796, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6797 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %483, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6795, i32* nonnull %6791, %struct.ds_base* nonnull %6797, i32 1, i32 undef) #14
  %6798 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 483) to i64*), align 8, !tbaa !25
  %6799 = trunc i64 %6798 to i32
  %6800 = call i32 @llvm.abs.i32(i32 %6799, i1 false)
  %6801 = urem i32 %6800, 1000
  %6802 = zext i32 %6801 to i64
  %6803 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6802
  %6804 = bitcast i32* %6803 to i64*
  %6805 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6804, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6806 = trunc i64 %6805 to i32
  %6807 = add nsw i32 %6806, 1
  %6808 = bitcast [1 x %struct.ds_base]* %484 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6808, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6809 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %484, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6807, i32* nonnull %6803, %struct.ds_base* nonnull %6809, i32 1, i32 undef) #14
  %6810 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 484) to i64*), align 16, !tbaa !25
  %6811 = trunc i64 %6810 to i32
  %6812 = call i32 @llvm.abs.i32(i32 %6811, i1 false)
  %6813 = urem i32 %6812, 1000
  %6814 = zext i32 %6813 to i64
  %6815 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6814
  %6816 = bitcast i32* %6815 to i64*
  %6817 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6816, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6818 = trunc i64 %6817 to i32
  %6819 = add nsw i32 %6818, 1
  %6820 = bitcast [1 x %struct.ds_base]* %485 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6820, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6821 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %485, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6819, i32* nonnull %6815, %struct.ds_base* nonnull %6821, i32 1, i32 undef) #14
  %6822 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 485) to i64*), align 8, !tbaa !25
  %6823 = trunc i64 %6822 to i32
  %6824 = call i32 @llvm.abs.i32(i32 %6823, i1 false)
  %6825 = urem i32 %6824, 1000
  %6826 = zext i32 %6825 to i64
  %6827 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6826
  %6828 = bitcast i32* %6827 to i64*
  %6829 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6828, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6830 = trunc i64 %6829 to i32
  %6831 = add nsw i32 %6830, 1
  %6832 = bitcast [1 x %struct.ds_base]* %486 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6832, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6833 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %486, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6831, i32* nonnull %6827, %struct.ds_base* nonnull %6833, i32 1, i32 undef) #14
  %6834 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 486) to i64*), align 8, !tbaa !25
  %6835 = trunc i64 %6834 to i32
  %6836 = call i32 @llvm.abs.i32(i32 %6835, i1 false)
  %6837 = urem i32 %6836, 1000
  %6838 = zext i32 %6837 to i64
  %6839 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6838
  %6840 = bitcast i32* %6839 to i64*
  %6841 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6840, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6842 = trunc i64 %6841 to i32
  %6843 = add nsw i32 %6842, 1
  %6844 = bitcast [1 x %struct.ds_base]* %487 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6844, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6845 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %487, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6843, i32* nonnull %6839, %struct.ds_base* nonnull %6845, i32 1, i32 undef) #14
  %6846 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 487) to i64*), align 8, !tbaa !25
  %6847 = trunc i64 %6846 to i32
  %6848 = call i32 @llvm.abs.i32(i32 %6847, i1 false)
  %6849 = urem i32 %6848, 1000
  %6850 = zext i32 %6849 to i64
  %6851 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6850
  %6852 = bitcast i32* %6851 to i64*
  %6853 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6852, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6854 = trunc i64 %6853 to i32
  %6855 = add nsw i32 %6854, 1
  %6856 = bitcast [1 x %struct.ds_base]* %488 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6856, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6857 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %488, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6855, i32* nonnull %6851, %struct.ds_base* nonnull %6857, i32 1, i32 undef) #14
  %6858 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 488) to i64*), align 16, !tbaa !25
  %6859 = trunc i64 %6858 to i32
  %6860 = call i32 @llvm.abs.i32(i32 %6859, i1 false)
  %6861 = urem i32 %6860, 1000
  %6862 = zext i32 %6861 to i64
  %6863 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6862
  %6864 = bitcast i32* %6863 to i64*
  %6865 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6864, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6866 = trunc i64 %6865 to i32
  %6867 = add nsw i32 %6866, 1
  %6868 = bitcast [1 x %struct.ds_base]* %489 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6868, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6869 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %489, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6867, i32* nonnull %6863, %struct.ds_base* nonnull %6869, i32 1, i32 undef) #14
  %6870 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 489) to i64*), align 8, !tbaa !25
  %6871 = trunc i64 %6870 to i32
  %6872 = call i32 @llvm.abs.i32(i32 %6871, i1 false)
  %6873 = urem i32 %6872, 1000
  %6874 = zext i32 %6873 to i64
  %6875 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6874
  %6876 = bitcast i32* %6875 to i64*
  %6877 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6876, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6878 = trunc i64 %6877 to i32
  %6879 = add nsw i32 %6878, 1
  %6880 = bitcast [1 x %struct.ds_base]* %490 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6880, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6881 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %490, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6879, i32* nonnull %6875, %struct.ds_base* nonnull %6881, i32 1, i32 undef) #14
  %6882 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 490) to i64*), align 8, !tbaa !25
  %6883 = trunc i64 %6882 to i32
  %6884 = call i32 @llvm.abs.i32(i32 %6883, i1 false)
  %6885 = urem i32 %6884, 1000
  %6886 = zext i32 %6885 to i64
  %6887 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6886
  %6888 = bitcast i32* %6887 to i64*
  %6889 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6888, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6890 = trunc i64 %6889 to i32
  %6891 = add nsw i32 %6890, 1
  %6892 = bitcast [1 x %struct.ds_base]* %491 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6892, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6893 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %491, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6891, i32* nonnull %6887, %struct.ds_base* nonnull %6893, i32 1, i32 undef) #14
  %6894 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 491) to i64*), align 8, !tbaa !25
  %6895 = trunc i64 %6894 to i32
  %6896 = call i32 @llvm.abs.i32(i32 %6895, i1 false)
  %6897 = urem i32 %6896, 1000
  %6898 = zext i32 %6897 to i64
  %6899 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6898
  %6900 = bitcast i32* %6899 to i64*
  %6901 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6900, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6902 = trunc i64 %6901 to i32
  %6903 = add nsw i32 %6902, 1
  %6904 = bitcast [1 x %struct.ds_base]* %492 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6904, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6905 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %492, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6903, i32* nonnull %6899, %struct.ds_base* nonnull %6905, i32 1, i32 undef) #14
  %6906 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 492) to i64*), align 16, !tbaa !25
  %6907 = trunc i64 %6906 to i32
  %6908 = call i32 @llvm.abs.i32(i32 %6907, i1 false)
  %6909 = urem i32 %6908, 1000
  %6910 = zext i32 %6909 to i64
  %6911 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6910
  %6912 = bitcast i32* %6911 to i64*
  %6913 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6912, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6914 = trunc i64 %6913 to i32
  %6915 = add nsw i32 %6914, 1
  %6916 = bitcast [1 x %struct.ds_base]* %493 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6916, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6917 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %493, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6915, i32* nonnull %6911, %struct.ds_base* nonnull %6917, i32 1, i32 undef) #14
  %6918 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 493) to i64*), align 8, !tbaa !25
  %6919 = trunc i64 %6918 to i32
  %6920 = call i32 @llvm.abs.i32(i32 %6919, i1 false)
  %6921 = urem i32 %6920, 1000
  %6922 = zext i32 %6921 to i64
  %6923 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6922
  %6924 = bitcast i32* %6923 to i64*
  %6925 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6924, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6926 = trunc i64 %6925 to i32
  %6927 = add nsw i32 %6926, 1
  %6928 = bitcast [1 x %struct.ds_base]* %494 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6928, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6929 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %494, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6927, i32* nonnull %6923, %struct.ds_base* nonnull %6929, i32 1, i32 undef) #14
  %6930 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 494) to i64*), align 8, !tbaa !25
  %6931 = trunc i64 %6930 to i32
  %6932 = call i32 @llvm.abs.i32(i32 %6931, i1 false)
  %6933 = urem i32 %6932, 1000
  %6934 = zext i32 %6933 to i64
  %6935 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6934
  %6936 = bitcast i32* %6935 to i64*
  %6937 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6936, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6938 = trunc i64 %6937 to i32
  %6939 = add nsw i32 %6938, 1
  %6940 = bitcast [1 x %struct.ds_base]* %495 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6940, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6941 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %495, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6939, i32* nonnull %6935, %struct.ds_base* nonnull %6941, i32 1, i32 undef) #14
  %6942 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 495) to i64*), align 8, !tbaa !25
  %6943 = trunc i64 %6942 to i32
  %6944 = call i32 @llvm.abs.i32(i32 %6943, i1 false)
  %6945 = urem i32 %6944, 1000
  %6946 = zext i32 %6945 to i64
  %6947 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6946
  %6948 = bitcast i32* %6947 to i64*
  %6949 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6948, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6950 = trunc i64 %6949 to i32
  %6951 = add nsw i32 %6950, 1
  %6952 = bitcast [1 x %struct.ds_base]* %496 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6952, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6953 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %496, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6951, i32* nonnull %6947, %struct.ds_base* nonnull %6953, i32 1, i32 undef) #14
  %6954 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 496) to i64*), align 16, !tbaa !25
  %6955 = trunc i64 %6954 to i32
  %6956 = call i32 @llvm.abs.i32(i32 %6955, i1 false)
  %6957 = urem i32 %6956, 1000
  %6958 = zext i32 %6957 to i64
  %6959 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6958
  %6960 = bitcast i32* %6959 to i64*
  %6961 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6960, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6962 = trunc i64 %6961 to i32
  %6963 = add nsw i32 %6962, 1
  %6964 = bitcast [1 x %struct.ds_base]* %497 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6964, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6965 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %497, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6963, i32* nonnull %6959, %struct.ds_base* nonnull %6965, i32 1, i32 undef) #14
  %6966 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 497) to i64*), align 8, !tbaa !25
  %6967 = trunc i64 %6966 to i32
  %6968 = call i32 @llvm.abs.i32(i32 %6967, i1 false)
  %6969 = urem i32 %6968, 1000
  %6970 = zext i32 %6969 to i64
  %6971 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6970
  %6972 = bitcast i32* %6971 to i64*
  %6973 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6972, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6974 = trunc i64 %6973 to i32
  %6975 = add nsw i32 %6974, 1
  %6976 = bitcast [1 x %struct.ds_base]* %498 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6976, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6977 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %498, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6975, i32* nonnull %6971, %struct.ds_base* nonnull %6977, i32 1, i32 undef) #14
  %6978 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 498) to i64*), align 8, !tbaa !25
  %6979 = trunc i64 %6978 to i32
  %6980 = call i32 @llvm.abs.i32(i32 %6979, i1 false)
  %6981 = urem i32 %6980, 1000
  %6982 = zext i32 %6981 to i64
  %6983 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6982
  %6984 = bitcast i32* %6983 to i64*
  %6985 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6984, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6986 = trunc i64 %6985 to i32
  %6987 = add nsw i32 %6986, 1
  %6988 = bitcast [1 x %struct.ds_base]* %499 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6988, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %6989 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %499, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6987, i32* nonnull %6983, %struct.ds_base* nonnull %6989, i32 1, i32 undef) #14
  %6990 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 499) to i64*), align 8, !tbaa !25
  %6991 = trunc i64 %6990 to i32
  %6992 = call i32 @llvm.abs.i32(i32 %6991, i1 false)
  %6993 = urem i32 %6992, 1000
  %6994 = zext i32 %6993 to i64
  %6995 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %6994
  %6996 = bitcast i32* %6995 to i64*
  %6997 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %6996, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %6998 = trunc i64 %6997 to i32
  %6999 = add nsw i32 %6998, 1
  %7000 = bitcast [1 x %struct.ds_base]* %500 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7000, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7001 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %500, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %6999, i32* nonnull %6995, %struct.ds_base* nonnull %7001, i32 1, i32 undef) #14
  %7002 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 500) to i64*), align 16, !tbaa !25
  %7003 = trunc i64 %7002 to i32
  %7004 = call i32 @llvm.abs.i32(i32 %7003, i1 false)
  %7005 = urem i32 %7004, 1000
  %7006 = zext i32 %7005 to i64
  %7007 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7006
  %7008 = bitcast i32* %7007 to i64*
  %7009 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7008, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7010 = trunc i64 %7009 to i32
  %7011 = add nsw i32 %7010, 1
  %7012 = bitcast [1 x %struct.ds_base]* %501 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7012, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7013 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %501, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7011, i32* nonnull %7007, %struct.ds_base* nonnull %7013, i32 1, i32 undef) #14
  %7014 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 501) to i64*), align 8, !tbaa !25
  %7015 = trunc i64 %7014 to i32
  %7016 = call i32 @llvm.abs.i32(i32 %7015, i1 false)
  %7017 = urem i32 %7016, 1000
  %7018 = zext i32 %7017 to i64
  %7019 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7018
  %7020 = bitcast i32* %7019 to i64*
  %7021 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7020, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7022 = trunc i64 %7021 to i32
  %7023 = add nsw i32 %7022, 1
  %7024 = bitcast [1 x %struct.ds_base]* %502 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7024, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7025 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %502, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7023, i32* nonnull %7019, %struct.ds_base* nonnull %7025, i32 1, i32 undef) #14
  %7026 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 502) to i64*), align 8, !tbaa !25
  %7027 = trunc i64 %7026 to i32
  %7028 = call i32 @llvm.abs.i32(i32 %7027, i1 false)
  %7029 = urem i32 %7028, 1000
  %7030 = zext i32 %7029 to i64
  %7031 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7030
  %7032 = bitcast i32* %7031 to i64*
  %7033 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7032, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7034 = trunc i64 %7033 to i32
  %7035 = add nsw i32 %7034, 1
  %7036 = bitcast [1 x %struct.ds_base]* %503 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7036, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7037 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %503, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7035, i32* nonnull %7031, %struct.ds_base* nonnull %7037, i32 1, i32 undef) #14
  %7038 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 503) to i64*), align 8, !tbaa !25
  %7039 = trunc i64 %7038 to i32
  %7040 = call i32 @llvm.abs.i32(i32 %7039, i1 false)
  %7041 = urem i32 %7040, 1000
  %7042 = zext i32 %7041 to i64
  %7043 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7042
  %7044 = bitcast i32* %7043 to i64*
  %7045 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7044, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7046 = trunc i64 %7045 to i32
  %7047 = add nsw i32 %7046, 1
  %7048 = bitcast [1 x %struct.ds_base]* %504 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7048, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7049 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %504, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7047, i32* nonnull %7043, %struct.ds_base* nonnull %7049, i32 1, i32 undef) #14
  %7050 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 504) to i64*), align 16, !tbaa !25
  %7051 = trunc i64 %7050 to i32
  %7052 = call i32 @llvm.abs.i32(i32 %7051, i1 false)
  %7053 = urem i32 %7052, 1000
  %7054 = zext i32 %7053 to i64
  %7055 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7054
  %7056 = bitcast i32* %7055 to i64*
  %7057 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7056, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7058 = trunc i64 %7057 to i32
  %7059 = add nsw i32 %7058, 1
  %7060 = bitcast [1 x %struct.ds_base]* %505 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7060, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7061 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %505, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7059, i32* nonnull %7055, %struct.ds_base* nonnull %7061, i32 1, i32 undef) #14
  %7062 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 505) to i64*), align 8, !tbaa !25
  %7063 = trunc i64 %7062 to i32
  %7064 = call i32 @llvm.abs.i32(i32 %7063, i1 false)
  %7065 = urem i32 %7064, 1000
  %7066 = zext i32 %7065 to i64
  %7067 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7066
  %7068 = bitcast i32* %7067 to i64*
  %7069 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7068, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7070 = trunc i64 %7069 to i32
  %7071 = add nsw i32 %7070, 1
  %7072 = bitcast [1 x %struct.ds_base]* %506 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7072, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7073 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %506, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7071, i32* nonnull %7067, %struct.ds_base* nonnull %7073, i32 1, i32 undef) #14
  %7074 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 506) to i64*), align 8, !tbaa !25
  %7075 = trunc i64 %7074 to i32
  %7076 = call i32 @llvm.abs.i32(i32 %7075, i1 false)
  %7077 = urem i32 %7076, 1000
  %7078 = zext i32 %7077 to i64
  %7079 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7078
  %7080 = bitcast i32* %7079 to i64*
  %7081 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7080, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7082 = trunc i64 %7081 to i32
  %7083 = add nsw i32 %7082, 1
  %7084 = bitcast [1 x %struct.ds_base]* %507 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7084, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7085 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %507, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7083, i32* nonnull %7079, %struct.ds_base* nonnull %7085, i32 1, i32 undef) #14
  %7086 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 507) to i64*), align 8, !tbaa !25
  %7087 = trunc i64 %7086 to i32
  %7088 = call i32 @llvm.abs.i32(i32 %7087, i1 false)
  %7089 = urem i32 %7088, 1000
  %7090 = zext i32 %7089 to i64
  %7091 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7090
  %7092 = bitcast i32* %7091 to i64*
  %7093 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7092, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7094 = trunc i64 %7093 to i32
  %7095 = add nsw i32 %7094, 1
  %7096 = bitcast [1 x %struct.ds_base]* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7096, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7097 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %508, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7095, i32* nonnull %7091, %struct.ds_base* nonnull %7097, i32 1, i32 undef) #14
  %7098 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 508) to i64*), align 16, !tbaa !25
  %7099 = trunc i64 %7098 to i32
  %7100 = call i32 @llvm.abs.i32(i32 %7099, i1 false)
  %7101 = urem i32 %7100, 1000
  %7102 = zext i32 %7101 to i64
  %7103 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7102
  %7104 = bitcast i32* %7103 to i64*
  %7105 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7104, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7106 = trunc i64 %7105 to i32
  %7107 = add nsw i32 %7106, 1
  %7108 = bitcast [1 x %struct.ds_base]* %509 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7108, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7109 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %509, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7107, i32* nonnull %7103, %struct.ds_base* nonnull %7109, i32 1, i32 undef) #14
  %7110 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 509) to i64*), align 8, !tbaa !25
  %7111 = trunc i64 %7110 to i32
  %7112 = call i32 @llvm.abs.i32(i32 %7111, i1 false)
  %7113 = urem i32 %7112, 1000
  %7114 = zext i32 %7113 to i64
  %7115 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7114
  %7116 = bitcast i32* %7115 to i64*
  %7117 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7116, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7118 = trunc i64 %7117 to i32
  %7119 = add nsw i32 %7118, 1
  %7120 = bitcast [1 x %struct.ds_base]* %510 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7120, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7121 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %510, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7119, i32* nonnull %7115, %struct.ds_base* nonnull %7121, i32 1, i32 undef) #14
  %7122 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 510) to i64*), align 8, !tbaa !25
  %7123 = trunc i64 %7122 to i32
  %7124 = call i32 @llvm.abs.i32(i32 %7123, i1 false)
  %7125 = urem i32 %7124, 1000
  %7126 = zext i32 %7125 to i64
  %7127 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7126
  %7128 = bitcast i32* %7127 to i64*
  %7129 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7128, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7130 = trunc i64 %7129 to i32
  %7131 = add nsw i32 %7130, 1
  %7132 = bitcast [1 x %struct.ds_base]* %511 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7132, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7133 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %511, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7131, i32* nonnull %7127, %struct.ds_base* nonnull %7133, i32 1, i32 undef) #14
  %7134 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 511) to i64*), align 8, !tbaa !25
  %7135 = trunc i64 %7134 to i32
  %7136 = call i32 @llvm.abs.i32(i32 %7135, i1 false)
  %7137 = urem i32 %7136, 1000
  %7138 = zext i32 %7137 to i64
  %7139 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7138
  %7140 = bitcast i32* %7139 to i64*
  %7141 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7140, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7142 = trunc i64 %7141 to i32
  %7143 = add nsw i32 %7142, 1
  %7144 = bitcast [1 x %struct.ds_base]* %512 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7144, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7145 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %512, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7143, i32* nonnull %7139, %struct.ds_base* nonnull %7145, i32 1, i32 undef) #14
  %7146 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 512) to i64*), align 16, !tbaa !25
  %7147 = trunc i64 %7146 to i32
  %7148 = call i32 @llvm.abs.i32(i32 %7147, i1 false)
  %7149 = urem i32 %7148, 1000
  %7150 = zext i32 %7149 to i64
  %7151 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7150
  %7152 = bitcast i32* %7151 to i64*
  %7153 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7152, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7154 = trunc i64 %7153 to i32
  %7155 = add nsw i32 %7154, 1
  %7156 = bitcast [1 x %struct.ds_base]* %513 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7156, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7157 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %513, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7155, i32* nonnull %7151, %struct.ds_base* nonnull %7157, i32 1, i32 undef) #14
  %7158 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 513) to i64*), align 8, !tbaa !25
  %7159 = trunc i64 %7158 to i32
  %7160 = call i32 @llvm.abs.i32(i32 %7159, i1 false)
  %7161 = urem i32 %7160, 1000
  %7162 = zext i32 %7161 to i64
  %7163 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7162
  %7164 = bitcast i32* %7163 to i64*
  %7165 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7164, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7166 = trunc i64 %7165 to i32
  %7167 = add nsw i32 %7166, 1
  %7168 = bitcast [1 x %struct.ds_base]* %514 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7168, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7169 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %514, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7167, i32* nonnull %7163, %struct.ds_base* nonnull %7169, i32 1, i32 undef) #14
  %7170 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 514) to i64*), align 8, !tbaa !25
  %7171 = trunc i64 %7170 to i32
  %7172 = call i32 @llvm.abs.i32(i32 %7171, i1 false)
  %7173 = urem i32 %7172, 1000
  %7174 = zext i32 %7173 to i64
  %7175 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7174
  %7176 = bitcast i32* %7175 to i64*
  %7177 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7176, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7178 = trunc i64 %7177 to i32
  %7179 = add nsw i32 %7178, 1
  %7180 = bitcast [1 x %struct.ds_base]* %515 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7180, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7181 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %515, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7179, i32* nonnull %7175, %struct.ds_base* nonnull %7181, i32 1, i32 undef) #14
  %7182 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 515) to i64*), align 8, !tbaa !25
  %7183 = trunc i64 %7182 to i32
  %7184 = call i32 @llvm.abs.i32(i32 %7183, i1 false)
  %7185 = urem i32 %7184, 1000
  %7186 = zext i32 %7185 to i64
  %7187 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7186
  %7188 = bitcast i32* %7187 to i64*
  %7189 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7188, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7190 = trunc i64 %7189 to i32
  %7191 = add nsw i32 %7190, 1
  %7192 = bitcast [1 x %struct.ds_base]* %516 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7192, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7193 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %516, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7191, i32* nonnull %7187, %struct.ds_base* nonnull %7193, i32 1, i32 undef) #14
  %7194 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 516) to i64*), align 16, !tbaa !25
  %7195 = trunc i64 %7194 to i32
  %7196 = call i32 @llvm.abs.i32(i32 %7195, i1 false)
  %7197 = urem i32 %7196, 1000
  %7198 = zext i32 %7197 to i64
  %7199 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7198
  %7200 = bitcast i32* %7199 to i64*
  %7201 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7200, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7202 = trunc i64 %7201 to i32
  %7203 = add nsw i32 %7202, 1
  %7204 = bitcast [1 x %struct.ds_base]* %517 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7204, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7205 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %517, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7203, i32* nonnull %7199, %struct.ds_base* nonnull %7205, i32 1, i32 undef) #14
  %7206 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 517) to i64*), align 8, !tbaa !25
  %7207 = trunc i64 %7206 to i32
  %7208 = call i32 @llvm.abs.i32(i32 %7207, i1 false)
  %7209 = urem i32 %7208, 1000
  %7210 = zext i32 %7209 to i64
  %7211 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7210
  %7212 = bitcast i32* %7211 to i64*
  %7213 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7212, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7214 = trunc i64 %7213 to i32
  %7215 = add nsw i32 %7214, 1
  %7216 = bitcast [1 x %struct.ds_base]* %518 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7216, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7217 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %518, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7215, i32* nonnull %7211, %struct.ds_base* nonnull %7217, i32 1, i32 undef) #14
  %7218 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 518) to i64*), align 8, !tbaa !25
  %7219 = trunc i64 %7218 to i32
  %7220 = call i32 @llvm.abs.i32(i32 %7219, i1 false)
  %7221 = urem i32 %7220, 1000
  %7222 = zext i32 %7221 to i64
  %7223 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7222
  %7224 = bitcast i32* %7223 to i64*
  %7225 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7224, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7226 = trunc i64 %7225 to i32
  %7227 = add nsw i32 %7226, 1
  %7228 = bitcast [1 x %struct.ds_base]* %519 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7228, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7229 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %519, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7227, i32* nonnull %7223, %struct.ds_base* nonnull %7229, i32 1, i32 undef) #14
  %7230 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 519) to i64*), align 8, !tbaa !25
  %7231 = trunc i64 %7230 to i32
  %7232 = call i32 @llvm.abs.i32(i32 %7231, i1 false)
  %7233 = urem i32 %7232, 1000
  %7234 = zext i32 %7233 to i64
  %7235 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7234
  %7236 = bitcast i32* %7235 to i64*
  %7237 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7236, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7238 = trunc i64 %7237 to i32
  %7239 = add nsw i32 %7238, 1
  %7240 = bitcast [1 x %struct.ds_base]* %520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7240, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7241 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %520, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7239, i32* nonnull %7235, %struct.ds_base* nonnull %7241, i32 1, i32 undef) #14
  %7242 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 520) to i64*), align 16, !tbaa !25
  %7243 = trunc i64 %7242 to i32
  %7244 = call i32 @llvm.abs.i32(i32 %7243, i1 false)
  %7245 = urem i32 %7244, 1000
  %7246 = zext i32 %7245 to i64
  %7247 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7246
  %7248 = bitcast i32* %7247 to i64*
  %7249 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7248, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7250 = trunc i64 %7249 to i32
  %7251 = add nsw i32 %7250, 1
  %7252 = bitcast [1 x %struct.ds_base]* %521 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7252, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7253 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %521, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7251, i32* nonnull %7247, %struct.ds_base* nonnull %7253, i32 1, i32 undef) #14
  %7254 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 521) to i64*), align 8, !tbaa !25
  %7255 = trunc i64 %7254 to i32
  %7256 = call i32 @llvm.abs.i32(i32 %7255, i1 false)
  %7257 = urem i32 %7256, 1000
  %7258 = zext i32 %7257 to i64
  %7259 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7258
  %7260 = bitcast i32* %7259 to i64*
  %7261 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7260, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7262 = trunc i64 %7261 to i32
  %7263 = add nsw i32 %7262, 1
  %7264 = bitcast [1 x %struct.ds_base]* %522 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7264, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7265 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %522, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7263, i32* nonnull %7259, %struct.ds_base* nonnull %7265, i32 1, i32 undef) #14
  %7266 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 522) to i64*), align 8, !tbaa !25
  %7267 = trunc i64 %7266 to i32
  %7268 = call i32 @llvm.abs.i32(i32 %7267, i1 false)
  %7269 = urem i32 %7268, 1000
  %7270 = zext i32 %7269 to i64
  %7271 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7270
  %7272 = bitcast i32* %7271 to i64*
  %7273 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7272, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7274 = trunc i64 %7273 to i32
  %7275 = add nsw i32 %7274, 1
  %7276 = bitcast [1 x %struct.ds_base]* %523 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7276, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7277 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %523, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7275, i32* nonnull %7271, %struct.ds_base* nonnull %7277, i32 1, i32 undef) #14
  %7278 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 523) to i64*), align 8, !tbaa !25
  %7279 = trunc i64 %7278 to i32
  %7280 = call i32 @llvm.abs.i32(i32 %7279, i1 false)
  %7281 = urem i32 %7280, 1000
  %7282 = zext i32 %7281 to i64
  %7283 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7282
  %7284 = bitcast i32* %7283 to i64*
  %7285 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7284, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7286 = trunc i64 %7285 to i32
  %7287 = add nsw i32 %7286, 1
  %7288 = bitcast [1 x %struct.ds_base]* %524 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7288, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7289 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %524, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7287, i32* nonnull %7283, %struct.ds_base* nonnull %7289, i32 1, i32 undef) #14
  %7290 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 524) to i64*), align 16, !tbaa !25
  %7291 = trunc i64 %7290 to i32
  %7292 = call i32 @llvm.abs.i32(i32 %7291, i1 false)
  %7293 = urem i32 %7292, 1000
  %7294 = zext i32 %7293 to i64
  %7295 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7294
  %7296 = bitcast i32* %7295 to i64*
  %7297 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7296, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7298 = trunc i64 %7297 to i32
  %7299 = add nsw i32 %7298, 1
  %7300 = bitcast [1 x %struct.ds_base]* %525 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7300, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7301 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %525, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7299, i32* nonnull %7295, %struct.ds_base* nonnull %7301, i32 1, i32 undef) #14
  %7302 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 525) to i64*), align 8, !tbaa !25
  %7303 = trunc i64 %7302 to i32
  %7304 = call i32 @llvm.abs.i32(i32 %7303, i1 false)
  %7305 = urem i32 %7304, 1000
  %7306 = zext i32 %7305 to i64
  %7307 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7306
  %7308 = bitcast i32* %7307 to i64*
  %7309 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7308, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7310 = trunc i64 %7309 to i32
  %7311 = add nsw i32 %7310, 1
  %7312 = bitcast [1 x %struct.ds_base]* %526 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7312, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7313 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %526, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7311, i32* nonnull %7307, %struct.ds_base* nonnull %7313, i32 1, i32 undef) #14
  %7314 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 526) to i64*), align 8, !tbaa !25
  %7315 = trunc i64 %7314 to i32
  %7316 = call i32 @llvm.abs.i32(i32 %7315, i1 false)
  %7317 = urem i32 %7316, 1000
  %7318 = zext i32 %7317 to i64
  %7319 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7318
  %7320 = bitcast i32* %7319 to i64*
  %7321 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7320, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7322 = trunc i64 %7321 to i32
  %7323 = add nsw i32 %7322, 1
  %7324 = bitcast [1 x %struct.ds_base]* %527 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7324, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7325 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %527, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7323, i32* nonnull %7319, %struct.ds_base* nonnull %7325, i32 1, i32 undef) #14
  %7326 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 527) to i64*), align 8, !tbaa !25
  %7327 = trunc i64 %7326 to i32
  %7328 = call i32 @llvm.abs.i32(i32 %7327, i1 false)
  %7329 = urem i32 %7328, 1000
  %7330 = zext i32 %7329 to i64
  %7331 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7330
  %7332 = bitcast i32* %7331 to i64*
  %7333 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7332, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7334 = trunc i64 %7333 to i32
  %7335 = add nsw i32 %7334, 1
  %7336 = bitcast [1 x %struct.ds_base]* %528 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7336, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7337 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %528, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7335, i32* nonnull %7331, %struct.ds_base* nonnull %7337, i32 1, i32 undef) #14
  %7338 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 528) to i64*), align 16, !tbaa !25
  %7339 = trunc i64 %7338 to i32
  %7340 = call i32 @llvm.abs.i32(i32 %7339, i1 false)
  %7341 = urem i32 %7340, 1000
  %7342 = zext i32 %7341 to i64
  %7343 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7342
  %7344 = bitcast i32* %7343 to i64*
  %7345 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7344, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7346 = trunc i64 %7345 to i32
  %7347 = add nsw i32 %7346, 1
  %7348 = bitcast [1 x %struct.ds_base]* %529 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7348, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7349 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %529, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7347, i32* nonnull %7343, %struct.ds_base* nonnull %7349, i32 1, i32 undef) #14
  %7350 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 529) to i64*), align 8, !tbaa !25
  %7351 = trunc i64 %7350 to i32
  %7352 = call i32 @llvm.abs.i32(i32 %7351, i1 false)
  %7353 = urem i32 %7352, 1000
  %7354 = zext i32 %7353 to i64
  %7355 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7354
  %7356 = bitcast i32* %7355 to i64*
  %7357 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7356, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7358 = trunc i64 %7357 to i32
  %7359 = add nsw i32 %7358, 1
  %7360 = bitcast [1 x %struct.ds_base]* %530 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7360, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7361 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %530, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7359, i32* nonnull %7355, %struct.ds_base* nonnull %7361, i32 1, i32 undef) #14
  %7362 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 530) to i64*), align 8, !tbaa !25
  %7363 = trunc i64 %7362 to i32
  %7364 = call i32 @llvm.abs.i32(i32 %7363, i1 false)
  %7365 = urem i32 %7364, 1000
  %7366 = zext i32 %7365 to i64
  %7367 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7366
  %7368 = bitcast i32* %7367 to i64*
  %7369 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7368, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7370 = trunc i64 %7369 to i32
  %7371 = add nsw i32 %7370, 1
  %7372 = bitcast [1 x %struct.ds_base]* %531 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7372, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7373 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %531, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7371, i32* nonnull %7367, %struct.ds_base* nonnull %7373, i32 1, i32 undef) #14
  %7374 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 531) to i64*), align 8, !tbaa !25
  %7375 = trunc i64 %7374 to i32
  %7376 = call i32 @llvm.abs.i32(i32 %7375, i1 false)
  %7377 = urem i32 %7376, 1000
  %7378 = zext i32 %7377 to i64
  %7379 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7378
  %7380 = bitcast i32* %7379 to i64*
  %7381 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7380, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7382 = trunc i64 %7381 to i32
  %7383 = add nsw i32 %7382, 1
  %7384 = bitcast [1 x %struct.ds_base]* %532 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7384, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7385 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %532, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7383, i32* nonnull %7379, %struct.ds_base* nonnull %7385, i32 1, i32 undef) #14
  %7386 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 532) to i64*), align 16, !tbaa !25
  %7387 = trunc i64 %7386 to i32
  %7388 = call i32 @llvm.abs.i32(i32 %7387, i1 false)
  %7389 = urem i32 %7388, 1000
  %7390 = zext i32 %7389 to i64
  %7391 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7390
  %7392 = bitcast i32* %7391 to i64*
  %7393 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7392, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7394 = trunc i64 %7393 to i32
  %7395 = add nsw i32 %7394, 1
  %7396 = bitcast [1 x %struct.ds_base]* %533 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7396, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7397 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %533, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7395, i32* nonnull %7391, %struct.ds_base* nonnull %7397, i32 1, i32 undef) #14
  %7398 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 533) to i64*), align 8, !tbaa !25
  %7399 = trunc i64 %7398 to i32
  %7400 = call i32 @llvm.abs.i32(i32 %7399, i1 false)
  %7401 = urem i32 %7400, 1000
  %7402 = zext i32 %7401 to i64
  %7403 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7402
  %7404 = bitcast i32* %7403 to i64*
  %7405 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7404, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7406 = trunc i64 %7405 to i32
  %7407 = add nsw i32 %7406, 1
  %7408 = bitcast [1 x %struct.ds_base]* %534 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7408, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7409 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %534, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7407, i32* nonnull %7403, %struct.ds_base* nonnull %7409, i32 1, i32 undef) #14
  %7410 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 534) to i64*), align 8, !tbaa !25
  %7411 = trunc i64 %7410 to i32
  %7412 = call i32 @llvm.abs.i32(i32 %7411, i1 false)
  %7413 = urem i32 %7412, 1000
  %7414 = zext i32 %7413 to i64
  %7415 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7414
  %7416 = bitcast i32* %7415 to i64*
  %7417 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7416, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7418 = trunc i64 %7417 to i32
  %7419 = add nsw i32 %7418, 1
  %7420 = bitcast [1 x %struct.ds_base]* %535 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7420, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7421 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %535, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7419, i32* nonnull %7415, %struct.ds_base* nonnull %7421, i32 1, i32 undef) #14
  %7422 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 535) to i64*), align 8, !tbaa !25
  %7423 = trunc i64 %7422 to i32
  %7424 = call i32 @llvm.abs.i32(i32 %7423, i1 false)
  %7425 = urem i32 %7424, 1000
  %7426 = zext i32 %7425 to i64
  %7427 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7426
  %7428 = bitcast i32* %7427 to i64*
  %7429 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7428, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7430 = trunc i64 %7429 to i32
  %7431 = add nsw i32 %7430, 1
  %7432 = bitcast [1 x %struct.ds_base]* %536 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7432, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7433 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %536, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7431, i32* nonnull %7427, %struct.ds_base* nonnull %7433, i32 1, i32 undef) #14
  %7434 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 536) to i64*), align 16, !tbaa !25
  %7435 = trunc i64 %7434 to i32
  %7436 = call i32 @llvm.abs.i32(i32 %7435, i1 false)
  %7437 = urem i32 %7436, 1000
  %7438 = zext i32 %7437 to i64
  %7439 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7438
  %7440 = bitcast i32* %7439 to i64*
  %7441 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7440, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7442 = trunc i64 %7441 to i32
  %7443 = add nsw i32 %7442, 1
  %7444 = bitcast [1 x %struct.ds_base]* %537 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7444, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7445 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %537, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7443, i32* nonnull %7439, %struct.ds_base* nonnull %7445, i32 1, i32 undef) #14
  %7446 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 537) to i64*), align 8, !tbaa !25
  %7447 = trunc i64 %7446 to i32
  %7448 = call i32 @llvm.abs.i32(i32 %7447, i1 false)
  %7449 = urem i32 %7448, 1000
  %7450 = zext i32 %7449 to i64
  %7451 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7450
  %7452 = bitcast i32* %7451 to i64*
  %7453 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7452, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7454 = trunc i64 %7453 to i32
  %7455 = add nsw i32 %7454, 1
  %7456 = bitcast [1 x %struct.ds_base]* %538 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7456, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7457 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %538, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7455, i32* nonnull %7451, %struct.ds_base* nonnull %7457, i32 1, i32 undef) #14
  %7458 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 538) to i64*), align 8, !tbaa !25
  %7459 = trunc i64 %7458 to i32
  %7460 = call i32 @llvm.abs.i32(i32 %7459, i1 false)
  %7461 = urem i32 %7460, 1000
  %7462 = zext i32 %7461 to i64
  %7463 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7462
  %7464 = bitcast i32* %7463 to i64*
  %7465 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7464, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7466 = trunc i64 %7465 to i32
  %7467 = add nsw i32 %7466, 1
  %7468 = bitcast [1 x %struct.ds_base]* %539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7468, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7469 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %539, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7467, i32* nonnull %7463, %struct.ds_base* nonnull %7469, i32 1, i32 undef) #14
  %7470 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 539) to i64*), align 8, !tbaa !25
  %7471 = trunc i64 %7470 to i32
  %7472 = call i32 @llvm.abs.i32(i32 %7471, i1 false)
  %7473 = urem i32 %7472, 1000
  %7474 = zext i32 %7473 to i64
  %7475 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7474
  %7476 = bitcast i32* %7475 to i64*
  %7477 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7476, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7478 = trunc i64 %7477 to i32
  %7479 = add nsw i32 %7478, 1
  %7480 = bitcast [1 x %struct.ds_base]* %540 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7480, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7481 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %540, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7479, i32* nonnull %7475, %struct.ds_base* nonnull %7481, i32 1, i32 undef) #14
  %7482 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 540) to i64*), align 16, !tbaa !25
  %7483 = trunc i64 %7482 to i32
  %7484 = call i32 @llvm.abs.i32(i32 %7483, i1 false)
  %7485 = urem i32 %7484, 1000
  %7486 = zext i32 %7485 to i64
  %7487 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7486
  %7488 = bitcast i32* %7487 to i64*
  %7489 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7488, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7490 = trunc i64 %7489 to i32
  %7491 = add nsw i32 %7490, 1
  %7492 = bitcast [1 x %struct.ds_base]* %541 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7492, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7493 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %541, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7491, i32* nonnull %7487, %struct.ds_base* nonnull %7493, i32 1, i32 undef) #14
  %7494 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 541) to i64*), align 8, !tbaa !25
  %7495 = trunc i64 %7494 to i32
  %7496 = call i32 @llvm.abs.i32(i32 %7495, i1 false)
  %7497 = urem i32 %7496, 1000
  %7498 = zext i32 %7497 to i64
  %7499 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7498
  %7500 = bitcast i32* %7499 to i64*
  %7501 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7500, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7502 = trunc i64 %7501 to i32
  %7503 = add nsw i32 %7502, 1
  %7504 = bitcast [1 x %struct.ds_base]* %542 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7504, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7505 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %542, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7503, i32* nonnull %7499, %struct.ds_base* nonnull %7505, i32 1, i32 undef) #14
  %7506 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 542) to i64*), align 8, !tbaa !25
  %7507 = trunc i64 %7506 to i32
  %7508 = call i32 @llvm.abs.i32(i32 %7507, i1 false)
  %7509 = urem i32 %7508, 1000
  %7510 = zext i32 %7509 to i64
  %7511 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7510
  %7512 = bitcast i32* %7511 to i64*
  %7513 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7512, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7514 = trunc i64 %7513 to i32
  %7515 = add nsw i32 %7514, 1
  %7516 = bitcast [1 x %struct.ds_base]* %543 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7516, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7517 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %543, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7515, i32* nonnull %7511, %struct.ds_base* nonnull %7517, i32 1, i32 undef) #14
  %7518 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 543) to i64*), align 8, !tbaa !25
  %7519 = trunc i64 %7518 to i32
  %7520 = call i32 @llvm.abs.i32(i32 %7519, i1 false)
  %7521 = urem i32 %7520, 1000
  %7522 = zext i32 %7521 to i64
  %7523 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7522
  %7524 = bitcast i32* %7523 to i64*
  %7525 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7524, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7526 = trunc i64 %7525 to i32
  %7527 = add nsw i32 %7526, 1
  %7528 = bitcast [1 x %struct.ds_base]* %544 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7528, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7529 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %544, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7527, i32* nonnull %7523, %struct.ds_base* nonnull %7529, i32 1, i32 undef) #14
  %7530 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 544) to i64*), align 16, !tbaa !25
  %7531 = trunc i64 %7530 to i32
  %7532 = call i32 @llvm.abs.i32(i32 %7531, i1 false)
  %7533 = urem i32 %7532, 1000
  %7534 = zext i32 %7533 to i64
  %7535 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7534
  %7536 = bitcast i32* %7535 to i64*
  %7537 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7536, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7538 = trunc i64 %7537 to i32
  %7539 = add nsw i32 %7538, 1
  %7540 = bitcast [1 x %struct.ds_base]* %545 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7540, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7541 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %545, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7539, i32* nonnull %7535, %struct.ds_base* nonnull %7541, i32 1, i32 undef) #14
  %7542 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 545) to i64*), align 8, !tbaa !25
  %7543 = trunc i64 %7542 to i32
  %7544 = call i32 @llvm.abs.i32(i32 %7543, i1 false)
  %7545 = urem i32 %7544, 1000
  %7546 = zext i32 %7545 to i64
  %7547 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7546
  %7548 = bitcast i32* %7547 to i64*
  %7549 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7548, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7550 = trunc i64 %7549 to i32
  %7551 = add nsw i32 %7550, 1
  %7552 = bitcast [1 x %struct.ds_base]* %546 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7552, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7553 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %546, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7551, i32* nonnull %7547, %struct.ds_base* nonnull %7553, i32 1, i32 undef) #14
  %7554 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 546) to i64*), align 8, !tbaa !25
  %7555 = trunc i64 %7554 to i32
  %7556 = call i32 @llvm.abs.i32(i32 %7555, i1 false)
  %7557 = urem i32 %7556, 1000
  %7558 = zext i32 %7557 to i64
  %7559 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7558
  %7560 = bitcast i32* %7559 to i64*
  %7561 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7560, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7562 = trunc i64 %7561 to i32
  %7563 = add nsw i32 %7562, 1
  %7564 = bitcast [1 x %struct.ds_base]* %547 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7564, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7565 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %547, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7563, i32* nonnull %7559, %struct.ds_base* nonnull %7565, i32 1, i32 undef) #14
  %7566 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 547) to i64*), align 8, !tbaa !25
  %7567 = trunc i64 %7566 to i32
  %7568 = call i32 @llvm.abs.i32(i32 %7567, i1 false)
  %7569 = urem i32 %7568, 1000
  %7570 = zext i32 %7569 to i64
  %7571 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7570
  %7572 = bitcast i32* %7571 to i64*
  %7573 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7572, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7574 = trunc i64 %7573 to i32
  %7575 = add nsw i32 %7574, 1
  %7576 = bitcast [1 x %struct.ds_base]* %548 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7576, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7577 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %548, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7575, i32* nonnull %7571, %struct.ds_base* nonnull %7577, i32 1, i32 undef) #14
  %7578 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 548) to i64*), align 16, !tbaa !25
  %7579 = trunc i64 %7578 to i32
  %7580 = call i32 @llvm.abs.i32(i32 %7579, i1 false)
  %7581 = urem i32 %7580, 1000
  %7582 = zext i32 %7581 to i64
  %7583 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7582
  %7584 = bitcast i32* %7583 to i64*
  %7585 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7584, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7586 = trunc i64 %7585 to i32
  %7587 = add nsw i32 %7586, 1
  %7588 = bitcast [1 x %struct.ds_base]* %549 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7588, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7589 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %549, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7587, i32* nonnull %7583, %struct.ds_base* nonnull %7589, i32 1, i32 undef) #14
  %7590 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 549) to i64*), align 8, !tbaa !25
  %7591 = trunc i64 %7590 to i32
  %7592 = call i32 @llvm.abs.i32(i32 %7591, i1 false)
  %7593 = urem i32 %7592, 1000
  %7594 = zext i32 %7593 to i64
  %7595 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7594
  %7596 = bitcast i32* %7595 to i64*
  %7597 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7596, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7598 = trunc i64 %7597 to i32
  %7599 = add nsw i32 %7598, 1
  %7600 = bitcast [1 x %struct.ds_base]* %550 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7600, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7601 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %550, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7599, i32* nonnull %7595, %struct.ds_base* nonnull %7601, i32 1, i32 undef) #14
  %7602 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 550) to i64*), align 8, !tbaa !25
  %7603 = trunc i64 %7602 to i32
  %7604 = call i32 @llvm.abs.i32(i32 %7603, i1 false)
  %7605 = urem i32 %7604, 1000
  %7606 = zext i32 %7605 to i64
  %7607 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7606
  %7608 = bitcast i32* %7607 to i64*
  %7609 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7608, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7610 = trunc i64 %7609 to i32
  %7611 = add nsw i32 %7610, 1
  %7612 = bitcast [1 x %struct.ds_base]* %551 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7612, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7613 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %551, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7611, i32* nonnull %7607, %struct.ds_base* nonnull %7613, i32 1, i32 undef) #14
  %7614 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 551) to i64*), align 8, !tbaa !25
  %7615 = trunc i64 %7614 to i32
  %7616 = call i32 @llvm.abs.i32(i32 %7615, i1 false)
  %7617 = urem i32 %7616, 1000
  %7618 = zext i32 %7617 to i64
  %7619 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7618
  %7620 = bitcast i32* %7619 to i64*
  %7621 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7620, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7622 = trunc i64 %7621 to i32
  %7623 = add nsw i32 %7622, 1
  %7624 = bitcast [1 x %struct.ds_base]* %552 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7624, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7625 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %552, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7623, i32* nonnull %7619, %struct.ds_base* nonnull %7625, i32 1, i32 undef) #14
  %7626 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 552) to i64*), align 16, !tbaa !25
  %7627 = trunc i64 %7626 to i32
  %7628 = call i32 @llvm.abs.i32(i32 %7627, i1 false)
  %7629 = urem i32 %7628, 1000
  %7630 = zext i32 %7629 to i64
  %7631 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7630
  %7632 = bitcast i32* %7631 to i64*
  %7633 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7632, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7634 = trunc i64 %7633 to i32
  %7635 = add nsw i32 %7634, 1
  %7636 = bitcast [1 x %struct.ds_base]* %553 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7636, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7637 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %553, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7635, i32* nonnull %7631, %struct.ds_base* nonnull %7637, i32 1, i32 undef) #14
  %7638 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 553) to i64*), align 8, !tbaa !25
  %7639 = trunc i64 %7638 to i32
  %7640 = call i32 @llvm.abs.i32(i32 %7639, i1 false)
  %7641 = urem i32 %7640, 1000
  %7642 = zext i32 %7641 to i64
  %7643 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7642
  %7644 = bitcast i32* %7643 to i64*
  %7645 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7644, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7646 = trunc i64 %7645 to i32
  %7647 = add nsw i32 %7646, 1
  %7648 = bitcast [1 x %struct.ds_base]* %554 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7648, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7649 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %554, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7647, i32* nonnull %7643, %struct.ds_base* nonnull %7649, i32 1, i32 undef) #14
  %7650 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 554) to i64*), align 8, !tbaa !25
  %7651 = trunc i64 %7650 to i32
  %7652 = call i32 @llvm.abs.i32(i32 %7651, i1 false)
  %7653 = urem i32 %7652, 1000
  %7654 = zext i32 %7653 to i64
  %7655 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7654
  %7656 = bitcast i32* %7655 to i64*
  %7657 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7656, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7658 = trunc i64 %7657 to i32
  %7659 = add nsw i32 %7658, 1
  %7660 = bitcast [1 x %struct.ds_base]* %555 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7660, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7661 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %555, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7659, i32* nonnull %7655, %struct.ds_base* nonnull %7661, i32 1, i32 undef) #14
  %7662 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 555) to i64*), align 8, !tbaa !25
  %7663 = trunc i64 %7662 to i32
  %7664 = call i32 @llvm.abs.i32(i32 %7663, i1 false)
  %7665 = urem i32 %7664, 1000
  %7666 = zext i32 %7665 to i64
  %7667 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7666
  %7668 = bitcast i32* %7667 to i64*
  %7669 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7668, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7670 = trunc i64 %7669 to i32
  %7671 = add nsw i32 %7670, 1
  %7672 = bitcast [1 x %struct.ds_base]* %556 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7672, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7673 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %556, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7671, i32* nonnull %7667, %struct.ds_base* nonnull %7673, i32 1, i32 undef) #14
  %7674 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 556) to i64*), align 16, !tbaa !25
  %7675 = trunc i64 %7674 to i32
  %7676 = call i32 @llvm.abs.i32(i32 %7675, i1 false)
  %7677 = urem i32 %7676, 1000
  %7678 = zext i32 %7677 to i64
  %7679 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7678
  %7680 = bitcast i32* %7679 to i64*
  %7681 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7680, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7682 = trunc i64 %7681 to i32
  %7683 = add nsw i32 %7682, 1
  %7684 = bitcast [1 x %struct.ds_base]* %557 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7684, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7685 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %557, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7683, i32* nonnull %7679, %struct.ds_base* nonnull %7685, i32 1, i32 undef) #14
  %7686 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 557) to i64*), align 8, !tbaa !25
  %7687 = trunc i64 %7686 to i32
  %7688 = call i32 @llvm.abs.i32(i32 %7687, i1 false)
  %7689 = urem i32 %7688, 1000
  %7690 = zext i32 %7689 to i64
  %7691 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7690
  %7692 = bitcast i32* %7691 to i64*
  %7693 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7692, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7694 = trunc i64 %7693 to i32
  %7695 = add nsw i32 %7694, 1
  %7696 = bitcast [1 x %struct.ds_base]* %558 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7696, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7697 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %558, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7695, i32* nonnull %7691, %struct.ds_base* nonnull %7697, i32 1, i32 undef) #14
  %7698 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 558) to i64*), align 8, !tbaa !25
  %7699 = trunc i64 %7698 to i32
  %7700 = call i32 @llvm.abs.i32(i32 %7699, i1 false)
  %7701 = urem i32 %7700, 1000
  %7702 = zext i32 %7701 to i64
  %7703 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7702
  %7704 = bitcast i32* %7703 to i64*
  %7705 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7704, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7706 = trunc i64 %7705 to i32
  %7707 = add nsw i32 %7706, 1
  %7708 = bitcast [1 x %struct.ds_base]* %559 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7708, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7709 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %559, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7707, i32* nonnull %7703, %struct.ds_base* nonnull %7709, i32 1, i32 undef) #14
  %7710 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 559) to i64*), align 8, !tbaa !25
  %7711 = trunc i64 %7710 to i32
  %7712 = call i32 @llvm.abs.i32(i32 %7711, i1 false)
  %7713 = urem i32 %7712, 1000
  %7714 = zext i32 %7713 to i64
  %7715 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7714
  %7716 = bitcast i32* %7715 to i64*
  %7717 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7716, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7718 = trunc i64 %7717 to i32
  %7719 = add nsw i32 %7718, 1
  %7720 = bitcast [1 x %struct.ds_base]* %560 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7720, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7721 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %560, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7719, i32* nonnull %7715, %struct.ds_base* nonnull %7721, i32 1, i32 undef) #14
  %7722 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 560) to i64*), align 16, !tbaa !25
  %7723 = trunc i64 %7722 to i32
  %7724 = call i32 @llvm.abs.i32(i32 %7723, i1 false)
  %7725 = urem i32 %7724, 1000
  %7726 = zext i32 %7725 to i64
  %7727 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7726
  %7728 = bitcast i32* %7727 to i64*
  %7729 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7728, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7730 = trunc i64 %7729 to i32
  %7731 = add nsw i32 %7730, 1
  %7732 = bitcast [1 x %struct.ds_base]* %561 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7732, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7733 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %561, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7731, i32* nonnull %7727, %struct.ds_base* nonnull %7733, i32 1, i32 undef) #14
  %7734 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 561) to i64*), align 8, !tbaa !25
  %7735 = trunc i64 %7734 to i32
  %7736 = call i32 @llvm.abs.i32(i32 %7735, i1 false)
  %7737 = urem i32 %7736, 1000
  %7738 = zext i32 %7737 to i64
  %7739 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7738
  %7740 = bitcast i32* %7739 to i64*
  %7741 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7740, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7742 = trunc i64 %7741 to i32
  %7743 = add nsw i32 %7742, 1
  %7744 = bitcast [1 x %struct.ds_base]* %562 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7744, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7745 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %562, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7743, i32* nonnull %7739, %struct.ds_base* nonnull %7745, i32 1, i32 undef) #14
  %7746 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 562) to i64*), align 8, !tbaa !25
  %7747 = trunc i64 %7746 to i32
  %7748 = call i32 @llvm.abs.i32(i32 %7747, i1 false)
  %7749 = urem i32 %7748, 1000
  %7750 = zext i32 %7749 to i64
  %7751 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7750
  %7752 = bitcast i32* %7751 to i64*
  %7753 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7752, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7754 = trunc i64 %7753 to i32
  %7755 = add nsw i32 %7754, 1
  %7756 = bitcast [1 x %struct.ds_base]* %563 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7756, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7757 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %563, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7755, i32* nonnull %7751, %struct.ds_base* nonnull %7757, i32 1, i32 undef) #14
  %7758 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 563) to i64*), align 8, !tbaa !25
  %7759 = trunc i64 %7758 to i32
  %7760 = call i32 @llvm.abs.i32(i32 %7759, i1 false)
  %7761 = urem i32 %7760, 1000
  %7762 = zext i32 %7761 to i64
  %7763 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7762
  %7764 = bitcast i32* %7763 to i64*
  %7765 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7764, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7766 = trunc i64 %7765 to i32
  %7767 = add nsw i32 %7766, 1
  %7768 = bitcast [1 x %struct.ds_base]* %564 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7768, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7769 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %564, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7767, i32* nonnull %7763, %struct.ds_base* nonnull %7769, i32 1, i32 undef) #14
  %7770 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 564) to i64*), align 16, !tbaa !25
  %7771 = trunc i64 %7770 to i32
  %7772 = call i32 @llvm.abs.i32(i32 %7771, i1 false)
  %7773 = urem i32 %7772, 1000
  %7774 = zext i32 %7773 to i64
  %7775 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7774
  %7776 = bitcast i32* %7775 to i64*
  %7777 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7776, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7778 = trunc i64 %7777 to i32
  %7779 = add nsw i32 %7778, 1
  %7780 = bitcast [1 x %struct.ds_base]* %565 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7780, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7781 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %565, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7779, i32* nonnull %7775, %struct.ds_base* nonnull %7781, i32 1, i32 undef) #14
  %7782 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 565) to i64*), align 8, !tbaa !25
  %7783 = trunc i64 %7782 to i32
  %7784 = call i32 @llvm.abs.i32(i32 %7783, i1 false)
  %7785 = urem i32 %7784, 1000
  %7786 = zext i32 %7785 to i64
  %7787 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7786
  %7788 = bitcast i32* %7787 to i64*
  %7789 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7788, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7790 = trunc i64 %7789 to i32
  %7791 = add nsw i32 %7790, 1
  %7792 = bitcast [1 x %struct.ds_base]* %566 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7792, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7793 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %566, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7791, i32* nonnull %7787, %struct.ds_base* nonnull %7793, i32 1, i32 undef) #14
  %7794 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 566) to i64*), align 8, !tbaa !25
  %7795 = trunc i64 %7794 to i32
  %7796 = call i32 @llvm.abs.i32(i32 %7795, i1 false)
  %7797 = urem i32 %7796, 1000
  %7798 = zext i32 %7797 to i64
  %7799 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7798
  %7800 = bitcast i32* %7799 to i64*
  %7801 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7800, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7802 = trunc i64 %7801 to i32
  %7803 = add nsw i32 %7802, 1
  %7804 = bitcast [1 x %struct.ds_base]* %567 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7804, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7805 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %567, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7803, i32* nonnull %7799, %struct.ds_base* nonnull %7805, i32 1, i32 undef) #14
  %7806 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 567) to i64*), align 8, !tbaa !25
  %7807 = trunc i64 %7806 to i32
  %7808 = call i32 @llvm.abs.i32(i32 %7807, i1 false)
  %7809 = urem i32 %7808, 1000
  %7810 = zext i32 %7809 to i64
  %7811 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7810
  %7812 = bitcast i32* %7811 to i64*
  %7813 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7812, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7814 = trunc i64 %7813 to i32
  %7815 = add nsw i32 %7814, 1
  %7816 = bitcast [1 x %struct.ds_base]* %568 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7816, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7817 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %568, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7815, i32* nonnull %7811, %struct.ds_base* nonnull %7817, i32 1, i32 undef) #14
  %7818 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 568) to i64*), align 16, !tbaa !25
  %7819 = trunc i64 %7818 to i32
  %7820 = call i32 @llvm.abs.i32(i32 %7819, i1 false)
  %7821 = urem i32 %7820, 1000
  %7822 = zext i32 %7821 to i64
  %7823 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7822
  %7824 = bitcast i32* %7823 to i64*
  %7825 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7824, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7826 = trunc i64 %7825 to i32
  %7827 = add nsw i32 %7826, 1
  %7828 = bitcast [1 x %struct.ds_base]* %569 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7828, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7829 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %569, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7827, i32* nonnull %7823, %struct.ds_base* nonnull %7829, i32 1, i32 undef) #14
  %7830 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 569) to i64*), align 8, !tbaa !25
  %7831 = trunc i64 %7830 to i32
  %7832 = call i32 @llvm.abs.i32(i32 %7831, i1 false)
  %7833 = urem i32 %7832, 1000
  %7834 = zext i32 %7833 to i64
  %7835 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7834
  %7836 = bitcast i32* %7835 to i64*
  %7837 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7836, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7838 = trunc i64 %7837 to i32
  %7839 = add nsw i32 %7838, 1
  %7840 = bitcast [1 x %struct.ds_base]* %570 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7840, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7841 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %570, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7839, i32* nonnull %7835, %struct.ds_base* nonnull %7841, i32 1, i32 undef) #14
  %7842 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 570) to i64*), align 8, !tbaa !25
  %7843 = trunc i64 %7842 to i32
  %7844 = call i32 @llvm.abs.i32(i32 %7843, i1 false)
  %7845 = urem i32 %7844, 1000
  %7846 = zext i32 %7845 to i64
  %7847 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7846
  %7848 = bitcast i32* %7847 to i64*
  %7849 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7848, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7850 = trunc i64 %7849 to i32
  %7851 = add nsw i32 %7850, 1
  %7852 = bitcast [1 x %struct.ds_base]* %571 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7852, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7853 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %571, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7851, i32* nonnull %7847, %struct.ds_base* nonnull %7853, i32 1, i32 undef) #14
  %7854 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 571) to i64*), align 8, !tbaa !25
  %7855 = trunc i64 %7854 to i32
  %7856 = call i32 @llvm.abs.i32(i32 %7855, i1 false)
  %7857 = urem i32 %7856, 1000
  %7858 = zext i32 %7857 to i64
  %7859 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7858
  %7860 = bitcast i32* %7859 to i64*
  %7861 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7860, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7862 = trunc i64 %7861 to i32
  %7863 = add nsw i32 %7862, 1
  %7864 = bitcast [1 x %struct.ds_base]* %572 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7864, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7865 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %572, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7863, i32* nonnull %7859, %struct.ds_base* nonnull %7865, i32 1, i32 undef) #14
  %7866 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 572) to i64*), align 16, !tbaa !25
  %7867 = trunc i64 %7866 to i32
  %7868 = call i32 @llvm.abs.i32(i32 %7867, i1 false)
  %7869 = urem i32 %7868, 1000
  %7870 = zext i32 %7869 to i64
  %7871 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7870
  %7872 = bitcast i32* %7871 to i64*
  %7873 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7872, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7874 = trunc i64 %7873 to i32
  %7875 = add nsw i32 %7874, 1
  %7876 = bitcast [1 x %struct.ds_base]* %573 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7876, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7877 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %573, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7875, i32* nonnull %7871, %struct.ds_base* nonnull %7877, i32 1, i32 undef) #14
  %7878 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 573) to i64*), align 8, !tbaa !25
  %7879 = trunc i64 %7878 to i32
  %7880 = call i32 @llvm.abs.i32(i32 %7879, i1 false)
  %7881 = urem i32 %7880, 1000
  %7882 = zext i32 %7881 to i64
  %7883 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7882
  %7884 = bitcast i32* %7883 to i64*
  %7885 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7884, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7886 = trunc i64 %7885 to i32
  %7887 = add nsw i32 %7886, 1
  %7888 = bitcast [1 x %struct.ds_base]* %574 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7888, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7889 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %574, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7887, i32* nonnull %7883, %struct.ds_base* nonnull %7889, i32 1, i32 undef) #14
  %7890 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 574) to i64*), align 8, !tbaa !25
  %7891 = trunc i64 %7890 to i32
  %7892 = call i32 @llvm.abs.i32(i32 %7891, i1 false)
  %7893 = urem i32 %7892, 1000
  %7894 = zext i32 %7893 to i64
  %7895 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7894
  %7896 = bitcast i32* %7895 to i64*
  %7897 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7896, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7898 = trunc i64 %7897 to i32
  %7899 = add nsw i32 %7898, 1
  %7900 = bitcast [1 x %struct.ds_base]* %575 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7900, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7901 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %575, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7899, i32* nonnull %7895, %struct.ds_base* nonnull %7901, i32 1, i32 undef) #14
  %7902 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 575) to i64*), align 8, !tbaa !25
  %7903 = trunc i64 %7902 to i32
  %7904 = call i32 @llvm.abs.i32(i32 %7903, i1 false)
  %7905 = urem i32 %7904, 1000
  %7906 = zext i32 %7905 to i64
  %7907 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7906
  %7908 = bitcast i32* %7907 to i64*
  %7909 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7908, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7910 = trunc i64 %7909 to i32
  %7911 = add nsw i32 %7910, 1
  %7912 = bitcast [1 x %struct.ds_base]* %576 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7912, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7913 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %576, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7911, i32* nonnull %7907, %struct.ds_base* nonnull %7913, i32 1, i32 undef) #14
  %7914 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 576) to i64*), align 16, !tbaa !25
  %7915 = trunc i64 %7914 to i32
  %7916 = call i32 @llvm.abs.i32(i32 %7915, i1 false)
  %7917 = urem i32 %7916, 1000
  %7918 = zext i32 %7917 to i64
  %7919 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7918
  %7920 = bitcast i32* %7919 to i64*
  %7921 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7920, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7922 = trunc i64 %7921 to i32
  %7923 = add nsw i32 %7922, 1
  %7924 = bitcast [1 x %struct.ds_base]* %577 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7924, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7925 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %577, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7923, i32* nonnull %7919, %struct.ds_base* nonnull %7925, i32 1, i32 undef) #14
  %7926 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 577) to i64*), align 8, !tbaa !25
  %7927 = trunc i64 %7926 to i32
  %7928 = call i32 @llvm.abs.i32(i32 %7927, i1 false)
  %7929 = urem i32 %7928, 1000
  %7930 = zext i32 %7929 to i64
  %7931 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7930
  %7932 = bitcast i32* %7931 to i64*
  %7933 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7932, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7934 = trunc i64 %7933 to i32
  %7935 = add nsw i32 %7934, 1
  %7936 = bitcast [1 x %struct.ds_base]* %578 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7936, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7937 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %578, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7935, i32* nonnull %7931, %struct.ds_base* nonnull %7937, i32 1, i32 undef) #14
  %7938 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 578) to i64*), align 8, !tbaa !25
  %7939 = trunc i64 %7938 to i32
  %7940 = call i32 @llvm.abs.i32(i32 %7939, i1 false)
  %7941 = urem i32 %7940, 1000
  %7942 = zext i32 %7941 to i64
  %7943 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7942
  %7944 = bitcast i32* %7943 to i64*
  %7945 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7944, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7946 = trunc i64 %7945 to i32
  %7947 = add nsw i32 %7946, 1
  %7948 = bitcast [1 x %struct.ds_base]* %579 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7948, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7949 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %579, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7947, i32* nonnull %7943, %struct.ds_base* nonnull %7949, i32 1, i32 undef) #14
  %7950 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 579) to i64*), align 8, !tbaa !25
  %7951 = trunc i64 %7950 to i32
  %7952 = call i32 @llvm.abs.i32(i32 %7951, i1 false)
  %7953 = urem i32 %7952, 1000
  %7954 = zext i32 %7953 to i64
  %7955 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7954
  %7956 = bitcast i32* %7955 to i64*
  %7957 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7956, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7958 = trunc i64 %7957 to i32
  %7959 = add nsw i32 %7958, 1
  %7960 = bitcast [1 x %struct.ds_base]* %580 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7960, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7961 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %580, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7959, i32* nonnull %7955, %struct.ds_base* nonnull %7961, i32 1, i32 undef) #14
  %7962 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 580) to i64*), align 16, !tbaa !25
  %7963 = trunc i64 %7962 to i32
  %7964 = call i32 @llvm.abs.i32(i32 %7963, i1 false)
  %7965 = urem i32 %7964, 1000
  %7966 = zext i32 %7965 to i64
  %7967 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7966
  %7968 = bitcast i32* %7967 to i64*
  %7969 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7968, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7970 = trunc i64 %7969 to i32
  %7971 = add nsw i32 %7970, 1
  %7972 = bitcast [1 x %struct.ds_base]* %581 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7972, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7973 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %581, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7971, i32* nonnull %7967, %struct.ds_base* nonnull %7973, i32 1, i32 undef) #14
  %7974 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 581) to i64*), align 8, !tbaa !25
  %7975 = trunc i64 %7974 to i32
  %7976 = call i32 @llvm.abs.i32(i32 %7975, i1 false)
  %7977 = urem i32 %7976, 1000
  %7978 = zext i32 %7977 to i64
  %7979 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7978
  %7980 = bitcast i32* %7979 to i64*
  %7981 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7980, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7982 = trunc i64 %7981 to i32
  %7983 = add nsw i32 %7982, 1
  %7984 = bitcast [1 x %struct.ds_base]* %582 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7984, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7985 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %582, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7983, i32* nonnull %7979, %struct.ds_base* nonnull %7985, i32 1, i32 undef) #14
  %7986 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 582) to i64*), align 8, !tbaa !25
  %7987 = trunc i64 %7986 to i32
  %7988 = call i32 @llvm.abs.i32(i32 %7987, i1 false)
  %7989 = urem i32 %7988, 1000
  %7990 = zext i32 %7989 to i64
  %7991 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %7990
  %7992 = bitcast i32* %7991 to i64*
  %7993 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %7992, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %7994 = trunc i64 %7993 to i32
  %7995 = add nsw i32 %7994, 1
  %7996 = bitcast [1 x %struct.ds_base]* %583 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7996, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %7997 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %583, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %7995, i32* nonnull %7991, %struct.ds_base* nonnull %7997, i32 1, i32 undef) #14
  %7998 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 583) to i64*), align 8, !tbaa !25
  %7999 = trunc i64 %7998 to i32
  %8000 = call i32 @llvm.abs.i32(i32 %7999, i1 false)
  %8001 = urem i32 %8000, 1000
  %8002 = zext i32 %8001 to i64
  %8003 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8002
  %8004 = bitcast i32* %8003 to i64*
  %8005 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8004, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8006 = trunc i64 %8005 to i32
  %8007 = add nsw i32 %8006, 1
  %8008 = bitcast [1 x %struct.ds_base]* %584 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8008, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8009 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %584, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8007, i32* nonnull %8003, %struct.ds_base* nonnull %8009, i32 1, i32 undef) #14
  %8010 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 584) to i64*), align 16, !tbaa !25
  %8011 = trunc i64 %8010 to i32
  %8012 = call i32 @llvm.abs.i32(i32 %8011, i1 false)
  %8013 = urem i32 %8012, 1000
  %8014 = zext i32 %8013 to i64
  %8015 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8014
  %8016 = bitcast i32* %8015 to i64*
  %8017 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8016, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8018 = trunc i64 %8017 to i32
  %8019 = add nsw i32 %8018, 1
  %8020 = bitcast [1 x %struct.ds_base]* %585 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8020, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8021 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %585, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8019, i32* nonnull %8015, %struct.ds_base* nonnull %8021, i32 1, i32 undef) #14
  %8022 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 585) to i64*), align 8, !tbaa !25
  %8023 = trunc i64 %8022 to i32
  %8024 = call i32 @llvm.abs.i32(i32 %8023, i1 false)
  %8025 = urem i32 %8024, 1000
  %8026 = zext i32 %8025 to i64
  %8027 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8026
  %8028 = bitcast i32* %8027 to i64*
  %8029 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8028, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8030 = trunc i64 %8029 to i32
  %8031 = add nsw i32 %8030, 1
  %8032 = bitcast [1 x %struct.ds_base]* %586 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8032, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8033 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %586, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8031, i32* nonnull %8027, %struct.ds_base* nonnull %8033, i32 1, i32 undef) #14
  %8034 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 586) to i64*), align 8, !tbaa !25
  %8035 = trunc i64 %8034 to i32
  %8036 = call i32 @llvm.abs.i32(i32 %8035, i1 false)
  %8037 = urem i32 %8036, 1000
  %8038 = zext i32 %8037 to i64
  %8039 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8038
  %8040 = bitcast i32* %8039 to i64*
  %8041 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8040, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8042 = trunc i64 %8041 to i32
  %8043 = add nsw i32 %8042, 1
  %8044 = bitcast [1 x %struct.ds_base]* %587 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8044, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8045 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %587, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8043, i32* nonnull %8039, %struct.ds_base* nonnull %8045, i32 1, i32 undef) #14
  %8046 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 587) to i64*), align 8, !tbaa !25
  %8047 = trunc i64 %8046 to i32
  %8048 = call i32 @llvm.abs.i32(i32 %8047, i1 false)
  %8049 = urem i32 %8048, 1000
  %8050 = zext i32 %8049 to i64
  %8051 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8050
  %8052 = bitcast i32* %8051 to i64*
  %8053 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8052, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8054 = trunc i64 %8053 to i32
  %8055 = add nsw i32 %8054, 1
  %8056 = bitcast [1 x %struct.ds_base]* %588 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8056, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8057 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %588, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8055, i32* nonnull %8051, %struct.ds_base* nonnull %8057, i32 1, i32 undef) #14
  %8058 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 588) to i64*), align 16, !tbaa !25
  %8059 = trunc i64 %8058 to i32
  %8060 = call i32 @llvm.abs.i32(i32 %8059, i1 false)
  %8061 = urem i32 %8060, 1000
  %8062 = zext i32 %8061 to i64
  %8063 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8062
  %8064 = bitcast i32* %8063 to i64*
  %8065 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8064, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8066 = trunc i64 %8065 to i32
  %8067 = add nsw i32 %8066, 1
  %8068 = bitcast [1 x %struct.ds_base]* %589 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8068, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8069 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %589, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8067, i32* nonnull %8063, %struct.ds_base* nonnull %8069, i32 1, i32 undef) #14
  %8070 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 589) to i64*), align 8, !tbaa !25
  %8071 = trunc i64 %8070 to i32
  %8072 = call i32 @llvm.abs.i32(i32 %8071, i1 false)
  %8073 = urem i32 %8072, 1000
  %8074 = zext i32 %8073 to i64
  %8075 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8074
  %8076 = bitcast i32* %8075 to i64*
  %8077 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8076, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8078 = trunc i64 %8077 to i32
  %8079 = add nsw i32 %8078, 1
  %8080 = bitcast [1 x %struct.ds_base]* %590 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8080, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8081 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %590, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8079, i32* nonnull %8075, %struct.ds_base* nonnull %8081, i32 1, i32 undef) #14
  %8082 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 590) to i64*), align 8, !tbaa !25
  %8083 = trunc i64 %8082 to i32
  %8084 = call i32 @llvm.abs.i32(i32 %8083, i1 false)
  %8085 = urem i32 %8084, 1000
  %8086 = zext i32 %8085 to i64
  %8087 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8086
  %8088 = bitcast i32* %8087 to i64*
  %8089 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8088, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8090 = trunc i64 %8089 to i32
  %8091 = add nsw i32 %8090, 1
  %8092 = bitcast [1 x %struct.ds_base]* %591 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8092, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8093 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %591, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8091, i32* nonnull %8087, %struct.ds_base* nonnull %8093, i32 1, i32 undef) #14
  %8094 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 591) to i64*), align 8, !tbaa !25
  %8095 = trunc i64 %8094 to i32
  %8096 = call i32 @llvm.abs.i32(i32 %8095, i1 false)
  %8097 = urem i32 %8096, 1000
  %8098 = zext i32 %8097 to i64
  %8099 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8098
  %8100 = bitcast i32* %8099 to i64*
  %8101 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8100, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8102 = trunc i64 %8101 to i32
  %8103 = add nsw i32 %8102, 1
  %8104 = bitcast [1 x %struct.ds_base]* %592 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8104, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8105 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %592, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8103, i32* nonnull %8099, %struct.ds_base* nonnull %8105, i32 1, i32 undef) #14
  %8106 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 592) to i64*), align 16, !tbaa !25
  %8107 = trunc i64 %8106 to i32
  %8108 = call i32 @llvm.abs.i32(i32 %8107, i1 false)
  %8109 = urem i32 %8108, 1000
  %8110 = zext i32 %8109 to i64
  %8111 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8110
  %8112 = bitcast i32* %8111 to i64*
  %8113 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8112, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8114 = trunc i64 %8113 to i32
  %8115 = add nsw i32 %8114, 1
  %8116 = bitcast [1 x %struct.ds_base]* %593 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8116, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8117 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %593, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8115, i32* nonnull %8111, %struct.ds_base* nonnull %8117, i32 1, i32 undef) #14
  %8118 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 593) to i64*), align 8, !tbaa !25
  %8119 = trunc i64 %8118 to i32
  %8120 = call i32 @llvm.abs.i32(i32 %8119, i1 false)
  %8121 = urem i32 %8120, 1000
  %8122 = zext i32 %8121 to i64
  %8123 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8122
  %8124 = bitcast i32* %8123 to i64*
  %8125 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8124, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8126 = trunc i64 %8125 to i32
  %8127 = add nsw i32 %8126, 1
  %8128 = bitcast [1 x %struct.ds_base]* %594 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8128, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8129 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %594, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8127, i32* nonnull %8123, %struct.ds_base* nonnull %8129, i32 1, i32 undef) #14
  %8130 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 594) to i64*), align 8, !tbaa !25
  %8131 = trunc i64 %8130 to i32
  %8132 = call i32 @llvm.abs.i32(i32 %8131, i1 false)
  %8133 = urem i32 %8132, 1000
  %8134 = zext i32 %8133 to i64
  %8135 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8134
  %8136 = bitcast i32* %8135 to i64*
  %8137 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8136, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8138 = trunc i64 %8137 to i32
  %8139 = add nsw i32 %8138, 1
  %8140 = bitcast [1 x %struct.ds_base]* %595 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8140, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8141 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %595, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8139, i32* nonnull %8135, %struct.ds_base* nonnull %8141, i32 1, i32 undef) #14
  %8142 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 595) to i64*), align 8, !tbaa !25
  %8143 = trunc i64 %8142 to i32
  %8144 = call i32 @llvm.abs.i32(i32 %8143, i1 false)
  %8145 = urem i32 %8144, 1000
  %8146 = zext i32 %8145 to i64
  %8147 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8146
  %8148 = bitcast i32* %8147 to i64*
  %8149 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8148, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8150 = trunc i64 %8149 to i32
  %8151 = add nsw i32 %8150, 1
  %8152 = bitcast [1 x %struct.ds_base]* %596 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8152, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8153 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %596, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8151, i32* nonnull %8147, %struct.ds_base* nonnull %8153, i32 1, i32 undef) #14
  %8154 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 596) to i64*), align 16, !tbaa !25
  %8155 = trunc i64 %8154 to i32
  %8156 = call i32 @llvm.abs.i32(i32 %8155, i1 false)
  %8157 = urem i32 %8156, 1000
  %8158 = zext i32 %8157 to i64
  %8159 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8158
  %8160 = bitcast i32* %8159 to i64*
  %8161 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8160, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8162 = trunc i64 %8161 to i32
  %8163 = add nsw i32 %8162, 1
  %8164 = bitcast [1 x %struct.ds_base]* %597 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8164, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8165 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %597, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8163, i32* nonnull %8159, %struct.ds_base* nonnull %8165, i32 1, i32 undef) #14
  %8166 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 597) to i64*), align 8, !tbaa !25
  %8167 = trunc i64 %8166 to i32
  %8168 = call i32 @llvm.abs.i32(i32 %8167, i1 false)
  %8169 = urem i32 %8168, 1000
  %8170 = zext i32 %8169 to i64
  %8171 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8170
  %8172 = bitcast i32* %8171 to i64*
  %8173 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8172, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8174 = trunc i64 %8173 to i32
  %8175 = add nsw i32 %8174, 1
  %8176 = bitcast [1 x %struct.ds_base]* %598 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8176, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8177 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %598, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8175, i32* nonnull %8171, %struct.ds_base* nonnull %8177, i32 1, i32 undef) #14
  %8178 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 598) to i64*), align 8, !tbaa !25
  %8179 = trunc i64 %8178 to i32
  %8180 = call i32 @llvm.abs.i32(i32 %8179, i1 false)
  %8181 = urem i32 %8180, 1000
  %8182 = zext i32 %8181 to i64
  %8183 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8182
  %8184 = bitcast i32* %8183 to i64*
  %8185 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8184, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8186 = trunc i64 %8185 to i32
  %8187 = add nsw i32 %8186, 1
  %8188 = bitcast [1 x %struct.ds_base]* %599 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8188, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8189 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %599, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8187, i32* nonnull %8183, %struct.ds_base* nonnull %8189, i32 1, i32 undef) #14
  %8190 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 599) to i64*), align 8, !tbaa !25
  %8191 = trunc i64 %8190 to i32
  %8192 = call i32 @llvm.abs.i32(i32 %8191, i1 false)
  %8193 = urem i32 %8192, 1000
  %8194 = zext i32 %8193 to i64
  %8195 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8194
  %8196 = bitcast i32* %8195 to i64*
  %8197 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8196, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8198 = trunc i64 %8197 to i32
  %8199 = add nsw i32 %8198, 1
  %8200 = bitcast [1 x %struct.ds_base]* %600 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8200, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8201 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %600, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8199, i32* nonnull %8195, %struct.ds_base* nonnull %8201, i32 1, i32 undef) #14
  %8202 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 600) to i64*), align 16, !tbaa !25
  %8203 = trunc i64 %8202 to i32
  %8204 = call i32 @llvm.abs.i32(i32 %8203, i1 false)
  %8205 = urem i32 %8204, 1000
  %8206 = zext i32 %8205 to i64
  %8207 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8206
  %8208 = bitcast i32* %8207 to i64*
  %8209 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8208, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8210 = trunc i64 %8209 to i32
  %8211 = add nsw i32 %8210, 1
  %8212 = bitcast [1 x %struct.ds_base]* %601 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8212, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8213 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %601, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8211, i32* nonnull %8207, %struct.ds_base* nonnull %8213, i32 1, i32 undef) #14
  %8214 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 601) to i64*), align 8, !tbaa !25
  %8215 = trunc i64 %8214 to i32
  %8216 = call i32 @llvm.abs.i32(i32 %8215, i1 false)
  %8217 = urem i32 %8216, 1000
  %8218 = zext i32 %8217 to i64
  %8219 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8218
  %8220 = bitcast i32* %8219 to i64*
  %8221 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8220, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8222 = trunc i64 %8221 to i32
  %8223 = add nsw i32 %8222, 1
  %8224 = bitcast [1 x %struct.ds_base]* %602 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8224, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8225 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %602, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8223, i32* nonnull %8219, %struct.ds_base* nonnull %8225, i32 1, i32 undef) #14
  %8226 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 602) to i64*), align 8, !tbaa !25
  %8227 = trunc i64 %8226 to i32
  %8228 = call i32 @llvm.abs.i32(i32 %8227, i1 false)
  %8229 = urem i32 %8228, 1000
  %8230 = zext i32 %8229 to i64
  %8231 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8230
  %8232 = bitcast i32* %8231 to i64*
  %8233 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8232, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8234 = trunc i64 %8233 to i32
  %8235 = add nsw i32 %8234, 1
  %8236 = bitcast [1 x %struct.ds_base]* %603 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8236, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8237 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %603, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8235, i32* nonnull %8231, %struct.ds_base* nonnull %8237, i32 1, i32 undef) #14
  %8238 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 603) to i64*), align 8, !tbaa !25
  %8239 = trunc i64 %8238 to i32
  %8240 = call i32 @llvm.abs.i32(i32 %8239, i1 false)
  %8241 = urem i32 %8240, 1000
  %8242 = zext i32 %8241 to i64
  %8243 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8242
  %8244 = bitcast i32* %8243 to i64*
  %8245 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8244, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8246 = trunc i64 %8245 to i32
  %8247 = add nsw i32 %8246, 1
  %8248 = bitcast [1 x %struct.ds_base]* %604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8248, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8249 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %604, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8247, i32* nonnull %8243, %struct.ds_base* nonnull %8249, i32 1, i32 undef) #14
  %8250 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 604) to i64*), align 16, !tbaa !25
  %8251 = trunc i64 %8250 to i32
  %8252 = call i32 @llvm.abs.i32(i32 %8251, i1 false)
  %8253 = urem i32 %8252, 1000
  %8254 = zext i32 %8253 to i64
  %8255 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8254
  %8256 = bitcast i32* %8255 to i64*
  %8257 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8256, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8258 = trunc i64 %8257 to i32
  %8259 = add nsw i32 %8258, 1
  %8260 = bitcast [1 x %struct.ds_base]* %605 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8260, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8261 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %605, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8259, i32* nonnull %8255, %struct.ds_base* nonnull %8261, i32 1, i32 undef) #14
  %8262 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 605) to i64*), align 8, !tbaa !25
  %8263 = trunc i64 %8262 to i32
  %8264 = call i32 @llvm.abs.i32(i32 %8263, i1 false)
  %8265 = urem i32 %8264, 1000
  %8266 = zext i32 %8265 to i64
  %8267 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8266
  %8268 = bitcast i32* %8267 to i64*
  %8269 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8268, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8270 = trunc i64 %8269 to i32
  %8271 = add nsw i32 %8270, 1
  %8272 = bitcast [1 x %struct.ds_base]* %606 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8272, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8273 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %606, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8271, i32* nonnull %8267, %struct.ds_base* nonnull %8273, i32 1, i32 undef) #14
  %8274 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 606) to i64*), align 8, !tbaa !25
  %8275 = trunc i64 %8274 to i32
  %8276 = call i32 @llvm.abs.i32(i32 %8275, i1 false)
  %8277 = urem i32 %8276, 1000
  %8278 = zext i32 %8277 to i64
  %8279 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8278
  %8280 = bitcast i32* %8279 to i64*
  %8281 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8280, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8282 = trunc i64 %8281 to i32
  %8283 = add nsw i32 %8282, 1
  %8284 = bitcast [1 x %struct.ds_base]* %607 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8284, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8285 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %607, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8283, i32* nonnull %8279, %struct.ds_base* nonnull %8285, i32 1, i32 undef) #14
  %8286 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 607) to i64*), align 8, !tbaa !25
  %8287 = trunc i64 %8286 to i32
  %8288 = call i32 @llvm.abs.i32(i32 %8287, i1 false)
  %8289 = urem i32 %8288, 1000
  %8290 = zext i32 %8289 to i64
  %8291 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8290
  %8292 = bitcast i32* %8291 to i64*
  %8293 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8292, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8294 = trunc i64 %8293 to i32
  %8295 = add nsw i32 %8294, 1
  %8296 = bitcast [1 x %struct.ds_base]* %608 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8296, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8297 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %608, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8295, i32* nonnull %8291, %struct.ds_base* nonnull %8297, i32 1, i32 undef) #14
  %8298 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 608) to i64*), align 16, !tbaa !25
  %8299 = trunc i64 %8298 to i32
  %8300 = call i32 @llvm.abs.i32(i32 %8299, i1 false)
  %8301 = urem i32 %8300, 1000
  %8302 = zext i32 %8301 to i64
  %8303 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8302
  %8304 = bitcast i32* %8303 to i64*
  %8305 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8304, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8306 = trunc i64 %8305 to i32
  %8307 = add nsw i32 %8306, 1
  %8308 = bitcast [1 x %struct.ds_base]* %609 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8308, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8309 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %609, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8307, i32* nonnull %8303, %struct.ds_base* nonnull %8309, i32 1, i32 undef) #14
  %8310 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 609) to i64*), align 8, !tbaa !25
  %8311 = trunc i64 %8310 to i32
  %8312 = call i32 @llvm.abs.i32(i32 %8311, i1 false)
  %8313 = urem i32 %8312, 1000
  %8314 = zext i32 %8313 to i64
  %8315 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8314
  %8316 = bitcast i32* %8315 to i64*
  %8317 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8316, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8318 = trunc i64 %8317 to i32
  %8319 = add nsw i32 %8318, 1
  %8320 = bitcast [1 x %struct.ds_base]* %610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8320, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8321 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %610, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8319, i32* nonnull %8315, %struct.ds_base* nonnull %8321, i32 1, i32 undef) #14
  %8322 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 610) to i64*), align 8, !tbaa !25
  %8323 = trunc i64 %8322 to i32
  %8324 = call i32 @llvm.abs.i32(i32 %8323, i1 false)
  %8325 = urem i32 %8324, 1000
  %8326 = zext i32 %8325 to i64
  %8327 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8326
  %8328 = bitcast i32* %8327 to i64*
  %8329 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8328, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8330 = trunc i64 %8329 to i32
  %8331 = add nsw i32 %8330, 1
  %8332 = bitcast [1 x %struct.ds_base]* %611 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8332, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8333 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %611, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8331, i32* nonnull %8327, %struct.ds_base* nonnull %8333, i32 1, i32 undef) #14
  %8334 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 611) to i64*), align 8, !tbaa !25
  %8335 = trunc i64 %8334 to i32
  %8336 = call i32 @llvm.abs.i32(i32 %8335, i1 false)
  %8337 = urem i32 %8336, 1000
  %8338 = zext i32 %8337 to i64
  %8339 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8338
  %8340 = bitcast i32* %8339 to i64*
  %8341 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8340, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8342 = trunc i64 %8341 to i32
  %8343 = add nsw i32 %8342, 1
  %8344 = bitcast [1 x %struct.ds_base]* %612 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8344, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8345 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %612, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8343, i32* nonnull %8339, %struct.ds_base* nonnull %8345, i32 1, i32 undef) #14
  %8346 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 612) to i64*), align 16, !tbaa !25
  %8347 = trunc i64 %8346 to i32
  %8348 = call i32 @llvm.abs.i32(i32 %8347, i1 false)
  %8349 = urem i32 %8348, 1000
  %8350 = zext i32 %8349 to i64
  %8351 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8350
  %8352 = bitcast i32* %8351 to i64*
  %8353 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8352, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8354 = trunc i64 %8353 to i32
  %8355 = add nsw i32 %8354, 1
  %8356 = bitcast [1 x %struct.ds_base]* %613 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8356, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8357 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %613, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8355, i32* nonnull %8351, %struct.ds_base* nonnull %8357, i32 1, i32 undef) #14
  %8358 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 613) to i64*), align 8, !tbaa !25
  %8359 = trunc i64 %8358 to i32
  %8360 = call i32 @llvm.abs.i32(i32 %8359, i1 false)
  %8361 = urem i32 %8360, 1000
  %8362 = zext i32 %8361 to i64
  %8363 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8362
  %8364 = bitcast i32* %8363 to i64*
  %8365 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8364, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8366 = trunc i64 %8365 to i32
  %8367 = add nsw i32 %8366, 1
  %8368 = bitcast [1 x %struct.ds_base]* %614 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8368, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8369 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %614, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8367, i32* nonnull %8363, %struct.ds_base* nonnull %8369, i32 1, i32 undef) #14
  %8370 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 614) to i64*), align 8, !tbaa !25
  %8371 = trunc i64 %8370 to i32
  %8372 = call i32 @llvm.abs.i32(i32 %8371, i1 false)
  %8373 = urem i32 %8372, 1000
  %8374 = zext i32 %8373 to i64
  %8375 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8374
  %8376 = bitcast i32* %8375 to i64*
  %8377 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8376, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8378 = trunc i64 %8377 to i32
  %8379 = add nsw i32 %8378, 1
  %8380 = bitcast [1 x %struct.ds_base]* %615 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8380, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8381 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %615, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8379, i32* nonnull %8375, %struct.ds_base* nonnull %8381, i32 1, i32 undef) #14
  %8382 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 615) to i64*), align 8, !tbaa !25
  %8383 = trunc i64 %8382 to i32
  %8384 = call i32 @llvm.abs.i32(i32 %8383, i1 false)
  %8385 = urem i32 %8384, 1000
  %8386 = zext i32 %8385 to i64
  %8387 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8386
  %8388 = bitcast i32* %8387 to i64*
  %8389 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8388, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8390 = trunc i64 %8389 to i32
  %8391 = add nsw i32 %8390, 1
  %8392 = bitcast [1 x %struct.ds_base]* %616 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8392, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8393 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %616, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8391, i32* nonnull %8387, %struct.ds_base* nonnull %8393, i32 1, i32 undef) #14
  %8394 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 616) to i64*), align 16, !tbaa !25
  %8395 = trunc i64 %8394 to i32
  %8396 = call i32 @llvm.abs.i32(i32 %8395, i1 false)
  %8397 = urem i32 %8396, 1000
  %8398 = zext i32 %8397 to i64
  %8399 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8398
  %8400 = bitcast i32* %8399 to i64*
  %8401 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8400, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8402 = trunc i64 %8401 to i32
  %8403 = add nsw i32 %8402, 1
  %8404 = bitcast [1 x %struct.ds_base]* %617 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8404, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8405 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %617, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8403, i32* nonnull %8399, %struct.ds_base* nonnull %8405, i32 1, i32 undef) #14
  %8406 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 617) to i64*), align 8, !tbaa !25
  %8407 = trunc i64 %8406 to i32
  %8408 = call i32 @llvm.abs.i32(i32 %8407, i1 false)
  %8409 = urem i32 %8408, 1000
  %8410 = zext i32 %8409 to i64
  %8411 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8410
  %8412 = bitcast i32* %8411 to i64*
  %8413 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8412, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8414 = trunc i64 %8413 to i32
  %8415 = add nsw i32 %8414, 1
  %8416 = bitcast [1 x %struct.ds_base]* %618 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8416, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8417 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %618, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8415, i32* nonnull %8411, %struct.ds_base* nonnull %8417, i32 1, i32 undef) #14
  %8418 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 618) to i64*), align 8, !tbaa !25
  %8419 = trunc i64 %8418 to i32
  %8420 = call i32 @llvm.abs.i32(i32 %8419, i1 false)
  %8421 = urem i32 %8420, 1000
  %8422 = zext i32 %8421 to i64
  %8423 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8422
  %8424 = bitcast i32* %8423 to i64*
  %8425 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8424, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8426 = trunc i64 %8425 to i32
  %8427 = add nsw i32 %8426, 1
  %8428 = bitcast [1 x %struct.ds_base]* %619 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8428, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8429 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %619, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8427, i32* nonnull %8423, %struct.ds_base* nonnull %8429, i32 1, i32 undef) #14
  %8430 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 619) to i64*), align 8, !tbaa !25
  %8431 = trunc i64 %8430 to i32
  %8432 = call i32 @llvm.abs.i32(i32 %8431, i1 false)
  %8433 = urem i32 %8432, 1000
  %8434 = zext i32 %8433 to i64
  %8435 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8434
  %8436 = bitcast i32* %8435 to i64*
  %8437 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8436, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8438 = trunc i64 %8437 to i32
  %8439 = add nsw i32 %8438, 1
  %8440 = bitcast [1 x %struct.ds_base]* %620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8440, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8441 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %620, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8439, i32* nonnull %8435, %struct.ds_base* nonnull %8441, i32 1, i32 undef) #14
  %8442 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 620) to i64*), align 16, !tbaa !25
  %8443 = trunc i64 %8442 to i32
  %8444 = call i32 @llvm.abs.i32(i32 %8443, i1 false)
  %8445 = urem i32 %8444, 1000
  %8446 = zext i32 %8445 to i64
  %8447 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8446
  %8448 = bitcast i32* %8447 to i64*
  %8449 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8448, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8450 = trunc i64 %8449 to i32
  %8451 = add nsw i32 %8450, 1
  %8452 = bitcast [1 x %struct.ds_base]* %621 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8452, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8453 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %621, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8451, i32* nonnull %8447, %struct.ds_base* nonnull %8453, i32 1, i32 undef) #14
  %8454 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 621) to i64*), align 8, !tbaa !25
  %8455 = trunc i64 %8454 to i32
  %8456 = call i32 @llvm.abs.i32(i32 %8455, i1 false)
  %8457 = urem i32 %8456, 1000
  %8458 = zext i32 %8457 to i64
  %8459 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8458
  %8460 = bitcast i32* %8459 to i64*
  %8461 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8460, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8462 = trunc i64 %8461 to i32
  %8463 = add nsw i32 %8462, 1
  %8464 = bitcast [1 x %struct.ds_base]* %622 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8464, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8465 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %622, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8463, i32* nonnull %8459, %struct.ds_base* nonnull %8465, i32 1, i32 undef) #14
  %8466 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 622) to i64*), align 8, !tbaa !25
  %8467 = trunc i64 %8466 to i32
  %8468 = call i32 @llvm.abs.i32(i32 %8467, i1 false)
  %8469 = urem i32 %8468, 1000
  %8470 = zext i32 %8469 to i64
  %8471 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8470
  %8472 = bitcast i32* %8471 to i64*
  %8473 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8472, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8474 = trunc i64 %8473 to i32
  %8475 = add nsw i32 %8474, 1
  %8476 = bitcast [1 x %struct.ds_base]* %623 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8476, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8477 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %623, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8475, i32* nonnull %8471, %struct.ds_base* nonnull %8477, i32 1, i32 undef) #14
  %8478 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 623) to i64*), align 8, !tbaa !25
  %8479 = trunc i64 %8478 to i32
  %8480 = call i32 @llvm.abs.i32(i32 %8479, i1 false)
  %8481 = urem i32 %8480, 1000
  %8482 = zext i32 %8481 to i64
  %8483 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8482
  %8484 = bitcast i32* %8483 to i64*
  %8485 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8484, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8486 = trunc i64 %8485 to i32
  %8487 = add nsw i32 %8486, 1
  %8488 = bitcast [1 x %struct.ds_base]* %624 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8488, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8489 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %624, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8487, i32* nonnull %8483, %struct.ds_base* nonnull %8489, i32 1, i32 undef) #14
  %8490 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 624) to i64*), align 16, !tbaa !25
  %8491 = trunc i64 %8490 to i32
  %8492 = call i32 @llvm.abs.i32(i32 %8491, i1 false)
  %8493 = urem i32 %8492, 1000
  %8494 = zext i32 %8493 to i64
  %8495 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8494
  %8496 = bitcast i32* %8495 to i64*
  %8497 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8496, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8498 = trunc i64 %8497 to i32
  %8499 = add nsw i32 %8498, 1
  %8500 = bitcast [1 x %struct.ds_base]* %625 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8500, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8501 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %625, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8499, i32* nonnull %8495, %struct.ds_base* nonnull %8501, i32 1, i32 undef) #14
  %8502 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 625) to i64*), align 8, !tbaa !25
  %8503 = trunc i64 %8502 to i32
  %8504 = call i32 @llvm.abs.i32(i32 %8503, i1 false)
  %8505 = urem i32 %8504, 1000
  %8506 = zext i32 %8505 to i64
  %8507 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8506
  %8508 = bitcast i32* %8507 to i64*
  %8509 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8508, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8510 = trunc i64 %8509 to i32
  %8511 = add nsw i32 %8510, 1
  %8512 = bitcast [1 x %struct.ds_base]* %626 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8512, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8513 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %626, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8511, i32* nonnull %8507, %struct.ds_base* nonnull %8513, i32 1, i32 undef) #14
  %8514 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 626) to i64*), align 8, !tbaa !25
  %8515 = trunc i64 %8514 to i32
  %8516 = call i32 @llvm.abs.i32(i32 %8515, i1 false)
  %8517 = urem i32 %8516, 1000
  %8518 = zext i32 %8517 to i64
  %8519 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8518
  %8520 = bitcast i32* %8519 to i64*
  %8521 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8520, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8522 = trunc i64 %8521 to i32
  %8523 = add nsw i32 %8522, 1
  %8524 = bitcast [1 x %struct.ds_base]* %627 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8524, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8525 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %627, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8523, i32* nonnull %8519, %struct.ds_base* nonnull %8525, i32 1, i32 undef) #14
  %8526 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 627) to i64*), align 8, !tbaa !25
  %8527 = trunc i64 %8526 to i32
  %8528 = call i32 @llvm.abs.i32(i32 %8527, i1 false)
  %8529 = urem i32 %8528, 1000
  %8530 = zext i32 %8529 to i64
  %8531 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8530
  %8532 = bitcast i32* %8531 to i64*
  %8533 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8532, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8534 = trunc i64 %8533 to i32
  %8535 = add nsw i32 %8534, 1
  %8536 = bitcast [1 x %struct.ds_base]* %628 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8536, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8537 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %628, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8535, i32* nonnull %8531, %struct.ds_base* nonnull %8537, i32 1, i32 undef) #14
  %8538 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 628) to i64*), align 16, !tbaa !25
  %8539 = trunc i64 %8538 to i32
  %8540 = call i32 @llvm.abs.i32(i32 %8539, i1 false)
  %8541 = urem i32 %8540, 1000
  %8542 = zext i32 %8541 to i64
  %8543 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8542
  %8544 = bitcast i32* %8543 to i64*
  %8545 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8544, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8546 = trunc i64 %8545 to i32
  %8547 = add nsw i32 %8546, 1
  %8548 = bitcast [1 x %struct.ds_base]* %629 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8548, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8549 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %629, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8547, i32* nonnull %8543, %struct.ds_base* nonnull %8549, i32 1, i32 undef) #14
  %8550 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 629) to i64*), align 8, !tbaa !25
  %8551 = trunc i64 %8550 to i32
  %8552 = call i32 @llvm.abs.i32(i32 %8551, i1 false)
  %8553 = urem i32 %8552, 1000
  %8554 = zext i32 %8553 to i64
  %8555 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8554
  %8556 = bitcast i32* %8555 to i64*
  %8557 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8556, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8558 = trunc i64 %8557 to i32
  %8559 = add nsw i32 %8558, 1
  %8560 = bitcast [1 x %struct.ds_base]* %630 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8560, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8561 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %630, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8559, i32* nonnull %8555, %struct.ds_base* nonnull %8561, i32 1, i32 undef) #14
  %8562 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 630) to i64*), align 8, !tbaa !25
  %8563 = trunc i64 %8562 to i32
  %8564 = call i32 @llvm.abs.i32(i32 %8563, i1 false)
  %8565 = urem i32 %8564, 1000
  %8566 = zext i32 %8565 to i64
  %8567 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8566
  %8568 = bitcast i32* %8567 to i64*
  %8569 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8568, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8570 = trunc i64 %8569 to i32
  %8571 = add nsw i32 %8570, 1
  %8572 = bitcast [1 x %struct.ds_base]* %631 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8572, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8573 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %631, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8571, i32* nonnull %8567, %struct.ds_base* nonnull %8573, i32 1, i32 undef) #14
  %8574 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 631) to i64*), align 8, !tbaa !25
  %8575 = trunc i64 %8574 to i32
  %8576 = call i32 @llvm.abs.i32(i32 %8575, i1 false)
  %8577 = urem i32 %8576, 1000
  %8578 = zext i32 %8577 to i64
  %8579 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8578
  %8580 = bitcast i32* %8579 to i64*
  %8581 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8580, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8582 = trunc i64 %8581 to i32
  %8583 = add nsw i32 %8582, 1
  %8584 = bitcast [1 x %struct.ds_base]* %632 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8584, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8585 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %632, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8583, i32* nonnull %8579, %struct.ds_base* nonnull %8585, i32 1, i32 undef) #14
  %8586 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 632) to i64*), align 16, !tbaa !25
  %8587 = trunc i64 %8586 to i32
  %8588 = call i32 @llvm.abs.i32(i32 %8587, i1 false)
  %8589 = urem i32 %8588, 1000
  %8590 = zext i32 %8589 to i64
  %8591 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8590
  %8592 = bitcast i32* %8591 to i64*
  %8593 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8592, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8594 = trunc i64 %8593 to i32
  %8595 = add nsw i32 %8594, 1
  %8596 = bitcast [1 x %struct.ds_base]* %633 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8596, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8597 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %633, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8595, i32* nonnull %8591, %struct.ds_base* nonnull %8597, i32 1, i32 undef) #14
  %8598 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 633) to i64*), align 8, !tbaa !25
  %8599 = trunc i64 %8598 to i32
  %8600 = call i32 @llvm.abs.i32(i32 %8599, i1 false)
  %8601 = urem i32 %8600, 1000
  %8602 = zext i32 %8601 to i64
  %8603 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8602
  %8604 = bitcast i32* %8603 to i64*
  %8605 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8604, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8606 = trunc i64 %8605 to i32
  %8607 = add nsw i32 %8606, 1
  %8608 = bitcast [1 x %struct.ds_base]* %634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8608, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8609 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %634, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8607, i32* nonnull %8603, %struct.ds_base* nonnull %8609, i32 1, i32 undef) #14
  %8610 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 634) to i64*), align 8, !tbaa !25
  %8611 = trunc i64 %8610 to i32
  %8612 = call i32 @llvm.abs.i32(i32 %8611, i1 false)
  %8613 = urem i32 %8612, 1000
  %8614 = zext i32 %8613 to i64
  %8615 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8614
  %8616 = bitcast i32* %8615 to i64*
  %8617 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8616, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8618 = trunc i64 %8617 to i32
  %8619 = add nsw i32 %8618, 1
  %8620 = bitcast [1 x %struct.ds_base]* %635 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8620, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8621 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %635, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8619, i32* nonnull %8615, %struct.ds_base* nonnull %8621, i32 1, i32 undef) #14
  %8622 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 635) to i64*), align 8, !tbaa !25
  %8623 = trunc i64 %8622 to i32
  %8624 = call i32 @llvm.abs.i32(i32 %8623, i1 false)
  %8625 = urem i32 %8624, 1000
  %8626 = zext i32 %8625 to i64
  %8627 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8626
  %8628 = bitcast i32* %8627 to i64*
  %8629 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8628, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8630 = trunc i64 %8629 to i32
  %8631 = add nsw i32 %8630, 1
  %8632 = bitcast [1 x %struct.ds_base]* %636 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8632, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8633 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %636, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8631, i32* nonnull %8627, %struct.ds_base* nonnull %8633, i32 1, i32 undef) #14
  %8634 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 636) to i64*), align 16, !tbaa !25
  %8635 = trunc i64 %8634 to i32
  %8636 = call i32 @llvm.abs.i32(i32 %8635, i1 false)
  %8637 = urem i32 %8636, 1000
  %8638 = zext i32 %8637 to i64
  %8639 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8638
  %8640 = bitcast i32* %8639 to i64*
  %8641 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8640, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8642 = trunc i64 %8641 to i32
  %8643 = add nsw i32 %8642, 1
  %8644 = bitcast [1 x %struct.ds_base]* %637 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8644, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8645 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %637, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8643, i32* nonnull %8639, %struct.ds_base* nonnull %8645, i32 1, i32 undef) #14
  %8646 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 637) to i64*), align 8, !tbaa !25
  %8647 = trunc i64 %8646 to i32
  %8648 = call i32 @llvm.abs.i32(i32 %8647, i1 false)
  %8649 = urem i32 %8648, 1000
  %8650 = zext i32 %8649 to i64
  %8651 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8650
  %8652 = bitcast i32* %8651 to i64*
  %8653 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8652, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8654 = trunc i64 %8653 to i32
  %8655 = add nsw i32 %8654, 1
  %8656 = bitcast [1 x %struct.ds_base]* %638 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8656, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8657 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %638, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8655, i32* nonnull %8651, %struct.ds_base* nonnull %8657, i32 1, i32 undef) #14
  %8658 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 638) to i64*), align 8, !tbaa !25
  %8659 = trunc i64 %8658 to i32
  %8660 = call i32 @llvm.abs.i32(i32 %8659, i1 false)
  %8661 = urem i32 %8660, 1000
  %8662 = zext i32 %8661 to i64
  %8663 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8662
  %8664 = bitcast i32* %8663 to i64*
  %8665 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8664, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8666 = trunc i64 %8665 to i32
  %8667 = add nsw i32 %8666, 1
  %8668 = bitcast [1 x %struct.ds_base]* %639 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8668, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8669 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %639, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8667, i32* nonnull %8663, %struct.ds_base* nonnull %8669, i32 1, i32 undef) #14
  %8670 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 639) to i64*), align 8, !tbaa !25
  %8671 = trunc i64 %8670 to i32
  %8672 = call i32 @llvm.abs.i32(i32 %8671, i1 false)
  %8673 = urem i32 %8672, 1000
  %8674 = zext i32 %8673 to i64
  %8675 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8674
  %8676 = bitcast i32* %8675 to i64*
  %8677 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8676, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8678 = trunc i64 %8677 to i32
  %8679 = add nsw i32 %8678, 1
  %8680 = bitcast [1 x %struct.ds_base]* %640 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8680, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8681 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %640, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8679, i32* nonnull %8675, %struct.ds_base* nonnull %8681, i32 1, i32 undef) #14
  %8682 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 640) to i64*), align 16, !tbaa !25
  %8683 = trunc i64 %8682 to i32
  %8684 = call i32 @llvm.abs.i32(i32 %8683, i1 false)
  %8685 = urem i32 %8684, 1000
  %8686 = zext i32 %8685 to i64
  %8687 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8686
  %8688 = bitcast i32* %8687 to i64*
  %8689 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8688, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8690 = trunc i64 %8689 to i32
  %8691 = add nsw i32 %8690, 1
  %8692 = bitcast [1 x %struct.ds_base]* %641 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8692, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8693 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %641, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8691, i32* nonnull %8687, %struct.ds_base* nonnull %8693, i32 1, i32 undef) #14
  %8694 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 641) to i64*), align 8, !tbaa !25
  %8695 = trunc i64 %8694 to i32
  %8696 = call i32 @llvm.abs.i32(i32 %8695, i1 false)
  %8697 = urem i32 %8696, 1000
  %8698 = zext i32 %8697 to i64
  %8699 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8698
  %8700 = bitcast i32* %8699 to i64*
  %8701 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8700, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8702 = trunc i64 %8701 to i32
  %8703 = add nsw i32 %8702, 1
  %8704 = bitcast [1 x %struct.ds_base]* %642 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8704, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8705 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %642, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8703, i32* nonnull %8699, %struct.ds_base* nonnull %8705, i32 1, i32 undef) #14
  %8706 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 642) to i64*), align 8, !tbaa !25
  %8707 = trunc i64 %8706 to i32
  %8708 = call i32 @llvm.abs.i32(i32 %8707, i1 false)
  %8709 = urem i32 %8708, 1000
  %8710 = zext i32 %8709 to i64
  %8711 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8710
  %8712 = bitcast i32* %8711 to i64*
  %8713 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8712, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8714 = trunc i64 %8713 to i32
  %8715 = add nsw i32 %8714, 1
  %8716 = bitcast [1 x %struct.ds_base]* %643 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8716, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8717 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %643, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8715, i32* nonnull %8711, %struct.ds_base* nonnull %8717, i32 1, i32 undef) #14
  %8718 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 643) to i64*), align 8, !tbaa !25
  %8719 = trunc i64 %8718 to i32
  %8720 = call i32 @llvm.abs.i32(i32 %8719, i1 false)
  %8721 = urem i32 %8720, 1000
  %8722 = zext i32 %8721 to i64
  %8723 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8722
  %8724 = bitcast i32* %8723 to i64*
  %8725 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8724, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8726 = trunc i64 %8725 to i32
  %8727 = add nsw i32 %8726, 1
  %8728 = bitcast [1 x %struct.ds_base]* %644 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8728, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8729 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %644, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8727, i32* nonnull %8723, %struct.ds_base* nonnull %8729, i32 1, i32 undef) #14
  %8730 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 644) to i64*), align 16, !tbaa !25
  %8731 = trunc i64 %8730 to i32
  %8732 = call i32 @llvm.abs.i32(i32 %8731, i1 false)
  %8733 = urem i32 %8732, 1000
  %8734 = zext i32 %8733 to i64
  %8735 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8734
  %8736 = bitcast i32* %8735 to i64*
  %8737 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8736, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8738 = trunc i64 %8737 to i32
  %8739 = add nsw i32 %8738, 1
  %8740 = bitcast [1 x %struct.ds_base]* %645 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8740, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8741 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %645, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8739, i32* nonnull %8735, %struct.ds_base* nonnull %8741, i32 1, i32 undef) #14
  %8742 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 645) to i64*), align 8, !tbaa !25
  %8743 = trunc i64 %8742 to i32
  %8744 = call i32 @llvm.abs.i32(i32 %8743, i1 false)
  %8745 = urem i32 %8744, 1000
  %8746 = zext i32 %8745 to i64
  %8747 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8746
  %8748 = bitcast i32* %8747 to i64*
  %8749 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8748, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8750 = trunc i64 %8749 to i32
  %8751 = add nsw i32 %8750, 1
  %8752 = bitcast [1 x %struct.ds_base]* %646 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8752, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8753 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %646, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8751, i32* nonnull %8747, %struct.ds_base* nonnull %8753, i32 1, i32 undef) #14
  %8754 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 646) to i64*), align 8, !tbaa !25
  %8755 = trunc i64 %8754 to i32
  %8756 = call i32 @llvm.abs.i32(i32 %8755, i1 false)
  %8757 = urem i32 %8756, 1000
  %8758 = zext i32 %8757 to i64
  %8759 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8758
  %8760 = bitcast i32* %8759 to i64*
  %8761 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8760, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8762 = trunc i64 %8761 to i32
  %8763 = add nsw i32 %8762, 1
  %8764 = bitcast [1 x %struct.ds_base]* %647 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8764, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8765 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %647, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8763, i32* nonnull %8759, %struct.ds_base* nonnull %8765, i32 1, i32 undef) #14
  %8766 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 647) to i64*), align 8, !tbaa !25
  %8767 = trunc i64 %8766 to i32
  %8768 = call i32 @llvm.abs.i32(i32 %8767, i1 false)
  %8769 = urem i32 %8768, 1000
  %8770 = zext i32 %8769 to i64
  %8771 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8770
  %8772 = bitcast i32* %8771 to i64*
  %8773 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8772, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8774 = trunc i64 %8773 to i32
  %8775 = add nsw i32 %8774, 1
  %8776 = bitcast [1 x %struct.ds_base]* %648 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8776, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8777 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %648, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8775, i32* nonnull %8771, %struct.ds_base* nonnull %8777, i32 1, i32 undef) #14
  %8778 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 648) to i64*), align 16, !tbaa !25
  %8779 = trunc i64 %8778 to i32
  %8780 = call i32 @llvm.abs.i32(i32 %8779, i1 false)
  %8781 = urem i32 %8780, 1000
  %8782 = zext i32 %8781 to i64
  %8783 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8782
  %8784 = bitcast i32* %8783 to i64*
  %8785 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8784, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8786 = trunc i64 %8785 to i32
  %8787 = add nsw i32 %8786, 1
  %8788 = bitcast [1 x %struct.ds_base]* %649 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8788, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8789 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %649, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8787, i32* nonnull %8783, %struct.ds_base* nonnull %8789, i32 1, i32 undef) #14
  %8790 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 649) to i64*), align 8, !tbaa !25
  %8791 = trunc i64 %8790 to i32
  %8792 = call i32 @llvm.abs.i32(i32 %8791, i1 false)
  %8793 = urem i32 %8792, 1000
  %8794 = zext i32 %8793 to i64
  %8795 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8794
  %8796 = bitcast i32* %8795 to i64*
  %8797 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8796, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8798 = trunc i64 %8797 to i32
  %8799 = add nsw i32 %8798, 1
  %8800 = bitcast [1 x %struct.ds_base]* %650 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8800, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8801 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %650, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8799, i32* nonnull %8795, %struct.ds_base* nonnull %8801, i32 1, i32 undef) #14
  %8802 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 650) to i64*), align 8, !tbaa !25
  %8803 = trunc i64 %8802 to i32
  %8804 = call i32 @llvm.abs.i32(i32 %8803, i1 false)
  %8805 = urem i32 %8804, 1000
  %8806 = zext i32 %8805 to i64
  %8807 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8806
  %8808 = bitcast i32* %8807 to i64*
  %8809 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8808, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8810 = trunc i64 %8809 to i32
  %8811 = add nsw i32 %8810, 1
  %8812 = bitcast [1 x %struct.ds_base]* %651 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8812, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8813 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %651, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8811, i32* nonnull %8807, %struct.ds_base* nonnull %8813, i32 1, i32 undef) #14
  %8814 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 651) to i64*), align 8, !tbaa !25
  %8815 = trunc i64 %8814 to i32
  %8816 = call i32 @llvm.abs.i32(i32 %8815, i1 false)
  %8817 = urem i32 %8816, 1000
  %8818 = zext i32 %8817 to i64
  %8819 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8818
  %8820 = bitcast i32* %8819 to i64*
  %8821 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8820, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8822 = trunc i64 %8821 to i32
  %8823 = add nsw i32 %8822, 1
  %8824 = bitcast [1 x %struct.ds_base]* %652 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8824, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8825 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %652, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8823, i32* nonnull %8819, %struct.ds_base* nonnull %8825, i32 1, i32 undef) #14
  %8826 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 652) to i64*), align 16, !tbaa !25
  %8827 = trunc i64 %8826 to i32
  %8828 = call i32 @llvm.abs.i32(i32 %8827, i1 false)
  %8829 = urem i32 %8828, 1000
  %8830 = zext i32 %8829 to i64
  %8831 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8830
  %8832 = bitcast i32* %8831 to i64*
  %8833 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8832, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8834 = trunc i64 %8833 to i32
  %8835 = add nsw i32 %8834, 1
  %8836 = bitcast [1 x %struct.ds_base]* %653 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8836, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8837 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %653, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8835, i32* nonnull %8831, %struct.ds_base* nonnull %8837, i32 1, i32 undef) #14
  %8838 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 653) to i64*), align 8, !tbaa !25
  %8839 = trunc i64 %8838 to i32
  %8840 = call i32 @llvm.abs.i32(i32 %8839, i1 false)
  %8841 = urem i32 %8840, 1000
  %8842 = zext i32 %8841 to i64
  %8843 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8842
  %8844 = bitcast i32* %8843 to i64*
  %8845 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8844, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8846 = trunc i64 %8845 to i32
  %8847 = add nsw i32 %8846, 1
  %8848 = bitcast [1 x %struct.ds_base]* %654 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8848, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8849 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %654, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8847, i32* nonnull %8843, %struct.ds_base* nonnull %8849, i32 1, i32 undef) #14
  %8850 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 654) to i64*), align 8, !tbaa !25
  %8851 = trunc i64 %8850 to i32
  %8852 = call i32 @llvm.abs.i32(i32 %8851, i1 false)
  %8853 = urem i32 %8852, 1000
  %8854 = zext i32 %8853 to i64
  %8855 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8854
  %8856 = bitcast i32* %8855 to i64*
  %8857 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8856, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8858 = trunc i64 %8857 to i32
  %8859 = add nsw i32 %8858, 1
  %8860 = bitcast [1 x %struct.ds_base]* %655 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8860, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8861 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %655, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8859, i32* nonnull %8855, %struct.ds_base* nonnull %8861, i32 1, i32 undef) #14
  %8862 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 655) to i64*), align 8, !tbaa !25
  %8863 = trunc i64 %8862 to i32
  %8864 = call i32 @llvm.abs.i32(i32 %8863, i1 false)
  %8865 = urem i32 %8864, 1000
  %8866 = zext i32 %8865 to i64
  %8867 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8866
  %8868 = bitcast i32* %8867 to i64*
  %8869 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8868, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8870 = trunc i64 %8869 to i32
  %8871 = add nsw i32 %8870, 1
  %8872 = bitcast [1 x %struct.ds_base]* %656 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8872, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8873 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %656, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8871, i32* nonnull %8867, %struct.ds_base* nonnull %8873, i32 1, i32 undef) #14
  %8874 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 656) to i64*), align 16, !tbaa !25
  %8875 = trunc i64 %8874 to i32
  %8876 = call i32 @llvm.abs.i32(i32 %8875, i1 false)
  %8877 = urem i32 %8876, 1000
  %8878 = zext i32 %8877 to i64
  %8879 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8878
  %8880 = bitcast i32* %8879 to i64*
  %8881 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8880, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8882 = trunc i64 %8881 to i32
  %8883 = add nsw i32 %8882, 1
  %8884 = bitcast [1 x %struct.ds_base]* %657 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8884, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8885 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %657, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8883, i32* nonnull %8879, %struct.ds_base* nonnull %8885, i32 1, i32 undef) #14
  %8886 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 657) to i64*), align 8, !tbaa !25
  %8887 = trunc i64 %8886 to i32
  %8888 = call i32 @llvm.abs.i32(i32 %8887, i1 false)
  %8889 = urem i32 %8888, 1000
  %8890 = zext i32 %8889 to i64
  %8891 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8890
  %8892 = bitcast i32* %8891 to i64*
  %8893 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8892, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8894 = trunc i64 %8893 to i32
  %8895 = add nsw i32 %8894, 1
  %8896 = bitcast [1 x %struct.ds_base]* %658 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8896, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8897 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %658, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8895, i32* nonnull %8891, %struct.ds_base* nonnull %8897, i32 1, i32 undef) #14
  %8898 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 658) to i64*), align 8, !tbaa !25
  %8899 = trunc i64 %8898 to i32
  %8900 = call i32 @llvm.abs.i32(i32 %8899, i1 false)
  %8901 = urem i32 %8900, 1000
  %8902 = zext i32 %8901 to i64
  %8903 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8902
  %8904 = bitcast i32* %8903 to i64*
  %8905 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8904, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8906 = trunc i64 %8905 to i32
  %8907 = add nsw i32 %8906, 1
  %8908 = bitcast [1 x %struct.ds_base]* %659 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8908, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8909 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %659, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8907, i32* nonnull %8903, %struct.ds_base* nonnull %8909, i32 1, i32 undef) #14
  %8910 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 659) to i64*), align 8, !tbaa !25
  %8911 = trunc i64 %8910 to i32
  %8912 = call i32 @llvm.abs.i32(i32 %8911, i1 false)
  %8913 = urem i32 %8912, 1000
  %8914 = zext i32 %8913 to i64
  %8915 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8914
  %8916 = bitcast i32* %8915 to i64*
  %8917 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8916, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8918 = trunc i64 %8917 to i32
  %8919 = add nsw i32 %8918, 1
  %8920 = bitcast [1 x %struct.ds_base]* %660 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8920, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8921 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %660, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8919, i32* nonnull %8915, %struct.ds_base* nonnull %8921, i32 1, i32 undef) #14
  %8922 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 660) to i64*), align 16, !tbaa !25
  %8923 = trunc i64 %8922 to i32
  %8924 = call i32 @llvm.abs.i32(i32 %8923, i1 false)
  %8925 = urem i32 %8924, 1000
  %8926 = zext i32 %8925 to i64
  %8927 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8926
  %8928 = bitcast i32* %8927 to i64*
  %8929 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8928, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8930 = trunc i64 %8929 to i32
  %8931 = add nsw i32 %8930, 1
  %8932 = bitcast [1 x %struct.ds_base]* %661 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8932, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8933 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %661, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8931, i32* nonnull %8927, %struct.ds_base* nonnull %8933, i32 1, i32 undef) #14
  %8934 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 661) to i64*), align 8, !tbaa !25
  %8935 = trunc i64 %8934 to i32
  %8936 = call i32 @llvm.abs.i32(i32 %8935, i1 false)
  %8937 = urem i32 %8936, 1000
  %8938 = zext i32 %8937 to i64
  %8939 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8938
  %8940 = bitcast i32* %8939 to i64*
  %8941 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8940, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8942 = trunc i64 %8941 to i32
  %8943 = add nsw i32 %8942, 1
  %8944 = bitcast [1 x %struct.ds_base]* %662 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8944, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8945 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %662, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8943, i32* nonnull %8939, %struct.ds_base* nonnull %8945, i32 1, i32 undef) #14
  %8946 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 662) to i64*), align 8, !tbaa !25
  %8947 = trunc i64 %8946 to i32
  %8948 = call i32 @llvm.abs.i32(i32 %8947, i1 false)
  %8949 = urem i32 %8948, 1000
  %8950 = zext i32 %8949 to i64
  %8951 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8950
  %8952 = bitcast i32* %8951 to i64*
  %8953 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8952, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8954 = trunc i64 %8953 to i32
  %8955 = add nsw i32 %8954, 1
  %8956 = bitcast [1 x %struct.ds_base]* %663 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8956, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8957 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %663, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8955, i32* nonnull %8951, %struct.ds_base* nonnull %8957, i32 1, i32 undef) #14
  %8958 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 663) to i64*), align 8, !tbaa !25
  %8959 = trunc i64 %8958 to i32
  %8960 = call i32 @llvm.abs.i32(i32 %8959, i1 false)
  %8961 = urem i32 %8960, 1000
  %8962 = zext i32 %8961 to i64
  %8963 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8962
  %8964 = bitcast i32* %8963 to i64*
  %8965 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8964, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8966 = trunc i64 %8965 to i32
  %8967 = add nsw i32 %8966, 1
  %8968 = bitcast [1 x %struct.ds_base]* %664 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8968, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8969 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %664, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8967, i32* nonnull %8963, %struct.ds_base* nonnull %8969, i32 1, i32 undef) #14
  %8970 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 664) to i64*), align 16, !tbaa !25
  %8971 = trunc i64 %8970 to i32
  %8972 = call i32 @llvm.abs.i32(i32 %8971, i1 false)
  %8973 = urem i32 %8972, 1000
  %8974 = zext i32 %8973 to i64
  %8975 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8974
  %8976 = bitcast i32* %8975 to i64*
  %8977 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8976, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8978 = trunc i64 %8977 to i32
  %8979 = add nsw i32 %8978, 1
  %8980 = bitcast [1 x %struct.ds_base]* %665 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8980, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8981 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %665, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8979, i32* nonnull %8975, %struct.ds_base* nonnull %8981, i32 1, i32 undef) #14
  %8982 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 665) to i64*), align 8, !tbaa !25
  %8983 = trunc i64 %8982 to i32
  %8984 = call i32 @llvm.abs.i32(i32 %8983, i1 false)
  %8985 = urem i32 %8984, 1000
  %8986 = zext i32 %8985 to i64
  %8987 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8986
  %8988 = bitcast i32* %8987 to i64*
  %8989 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %8988, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %8990 = trunc i64 %8989 to i32
  %8991 = add nsw i32 %8990, 1
  %8992 = bitcast [1 x %struct.ds_base]* %666 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %8992, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %8993 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %666, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %8991, i32* nonnull %8987, %struct.ds_base* nonnull %8993, i32 1, i32 undef) #14
  %8994 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 666) to i64*), align 8, !tbaa !25
  %8995 = trunc i64 %8994 to i32
  %8996 = call i32 @llvm.abs.i32(i32 %8995, i1 false)
  %8997 = urem i32 %8996, 1000
  %8998 = zext i32 %8997 to i64
  %8999 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %8998
  %9000 = bitcast i32* %8999 to i64*
  %9001 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9000, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9002 = trunc i64 %9001 to i32
  %9003 = add nsw i32 %9002, 1
  %9004 = bitcast [1 x %struct.ds_base]* %667 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9004, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9005 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %667, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9003, i32* nonnull %8999, %struct.ds_base* nonnull %9005, i32 1, i32 undef) #14
  %9006 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 667) to i64*), align 8, !tbaa !25
  %9007 = trunc i64 %9006 to i32
  %9008 = call i32 @llvm.abs.i32(i32 %9007, i1 false)
  %9009 = urem i32 %9008, 1000
  %9010 = zext i32 %9009 to i64
  %9011 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9010
  %9012 = bitcast i32* %9011 to i64*
  %9013 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9012, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9014 = trunc i64 %9013 to i32
  %9015 = add nsw i32 %9014, 1
  %9016 = bitcast [1 x %struct.ds_base]* %668 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9016, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9017 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %668, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9015, i32* nonnull %9011, %struct.ds_base* nonnull %9017, i32 1, i32 undef) #14
  %9018 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 668) to i64*), align 16, !tbaa !25
  %9019 = trunc i64 %9018 to i32
  %9020 = call i32 @llvm.abs.i32(i32 %9019, i1 false)
  %9021 = urem i32 %9020, 1000
  %9022 = zext i32 %9021 to i64
  %9023 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9022
  %9024 = bitcast i32* %9023 to i64*
  %9025 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9024, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9026 = trunc i64 %9025 to i32
  %9027 = add nsw i32 %9026, 1
  %9028 = bitcast [1 x %struct.ds_base]* %669 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9028, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9029 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %669, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9027, i32* nonnull %9023, %struct.ds_base* nonnull %9029, i32 1, i32 undef) #14
  %9030 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 669) to i64*), align 8, !tbaa !25
  %9031 = trunc i64 %9030 to i32
  %9032 = call i32 @llvm.abs.i32(i32 %9031, i1 false)
  %9033 = urem i32 %9032, 1000
  %9034 = zext i32 %9033 to i64
  %9035 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9034
  %9036 = bitcast i32* %9035 to i64*
  %9037 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9036, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9038 = trunc i64 %9037 to i32
  %9039 = add nsw i32 %9038, 1
  %9040 = bitcast [1 x %struct.ds_base]* %670 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9040, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9041 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %670, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9039, i32* nonnull %9035, %struct.ds_base* nonnull %9041, i32 1, i32 undef) #14
  %9042 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 670) to i64*), align 8, !tbaa !25
  %9043 = trunc i64 %9042 to i32
  %9044 = call i32 @llvm.abs.i32(i32 %9043, i1 false)
  %9045 = urem i32 %9044, 1000
  %9046 = zext i32 %9045 to i64
  %9047 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9046
  %9048 = bitcast i32* %9047 to i64*
  %9049 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9048, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9050 = trunc i64 %9049 to i32
  %9051 = add nsw i32 %9050, 1
  %9052 = bitcast [1 x %struct.ds_base]* %671 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9052, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9053 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %671, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9051, i32* nonnull %9047, %struct.ds_base* nonnull %9053, i32 1, i32 undef) #14
  %9054 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 671) to i64*), align 8, !tbaa !25
  %9055 = trunc i64 %9054 to i32
  %9056 = call i32 @llvm.abs.i32(i32 %9055, i1 false)
  %9057 = urem i32 %9056, 1000
  %9058 = zext i32 %9057 to i64
  %9059 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9058
  %9060 = bitcast i32* %9059 to i64*
  %9061 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9060, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9062 = trunc i64 %9061 to i32
  %9063 = add nsw i32 %9062, 1
  %9064 = bitcast [1 x %struct.ds_base]* %672 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9064, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9065 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %672, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9063, i32* nonnull %9059, %struct.ds_base* nonnull %9065, i32 1, i32 undef) #14
  %9066 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 672) to i64*), align 16, !tbaa !25
  %9067 = trunc i64 %9066 to i32
  %9068 = call i32 @llvm.abs.i32(i32 %9067, i1 false)
  %9069 = urem i32 %9068, 1000
  %9070 = zext i32 %9069 to i64
  %9071 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9070
  %9072 = bitcast i32* %9071 to i64*
  %9073 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9072, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9074 = trunc i64 %9073 to i32
  %9075 = add nsw i32 %9074, 1
  %9076 = bitcast [1 x %struct.ds_base]* %673 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9076, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9077 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %673, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9075, i32* nonnull %9071, %struct.ds_base* nonnull %9077, i32 1, i32 undef) #14
  %9078 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 673) to i64*), align 8, !tbaa !25
  %9079 = trunc i64 %9078 to i32
  %9080 = call i32 @llvm.abs.i32(i32 %9079, i1 false)
  %9081 = urem i32 %9080, 1000
  %9082 = zext i32 %9081 to i64
  %9083 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9082
  %9084 = bitcast i32* %9083 to i64*
  %9085 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9084, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9086 = trunc i64 %9085 to i32
  %9087 = add nsw i32 %9086, 1
  %9088 = bitcast [1 x %struct.ds_base]* %674 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9088, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9089 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %674, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9087, i32* nonnull %9083, %struct.ds_base* nonnull %9089, i32 1, i32 undef) #14
  %9090 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 674) to i64*), align 8, !tbaa !25
  %9091 = trunc i64 %9090 to i32
  %9092 = call i32 @llvm.abs.i32(i32 %9091, i1 false)
  %9093 = urem i32 %9092, 1000
  %9094 = zext i32 %9093 to i64
  %9095 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9094
  %9096 = bitcast i32* %9095 to i64*
  %9097 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9096, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9098 = trunc i64 %9097 to i32
  %9099 = add nsw i32 %9098, 1
  %9100 = bitcast [1 x %struct.ds_base]* %675 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9100, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9101 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %675, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9099, i32* nonnull %9095, %struct.ds_base* nonnull %9101, i32 1, i32 undef) #14
  %9102 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 675) to i64*), align 8, !tbaa !25
  %9103 = trunc i64 %9102 to i32
  %9104 = call i32 @llvm.abs.i32(i32 %9103, i1 false)
  %9105 = urem i32 %9104, 1000
  %9106 = zext i32 %9105 to i64
  %9107 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9106
  %9108 = bitcast i32* %9107 to i64*
  %9109 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9108, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9110 = trunc i64 %9109 to i32
  %9111 = add nsw i32 %9110, 1
  %9112 = bitcast [1 x %struct.ds_base]* %676 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9112, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9113 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %676, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9111, i32* nonnull %9107, %struct.ds_base* nonnull %9113, i32 1, i32 undef) #14
  %9114 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 676) to i64*), align 16, !tbaa !25
  %9115 = trunc i64 %9114 to i32
  %9116 = call i32 @llvm.abs.i32(i32 %9115, i1 false)
  %9117 = urem i32 %9116, 1000
  %9118 = zext i32 %9117 to i64
  %9119 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9118
  %9120 = bitcast i32* %9119 to i64*
  %9121 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9120, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9122 = trunc i64 %9121 to i32
  %9123 = add nsw i32 %9122, 1
  %9124 = bitcast [1 x %struct.ds_base]* %677 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9124, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9125 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %677, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9123, i32* nonnull %9119, %struct.ds_base* nonnull %9125, i32 1, i32 undef) #14
  %9126 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 677) to i64*), align 8, !tbaa !25
  %9127 = trunc i64 %9126 to i32
  %9128 = call i32 @llvm.abs.i32(i32 %9127, i1 false)
  %9129 = urem i32 %9128, 1000
  %9130 = zext i32 %9129 to i64
  %9131 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9130
  %9132 = bitcast i32* %9131 to i64*
  %9133 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9132, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9134 = trunc i64 %9133 to i32
  %9135 = add nsw i32 %9134, 1
  %9136 = bitcast [1 x %struct.ds_base]* %678 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9136, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9137 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %678, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9135, i32* nonnull %9131, %struct.ds_base* nonnull %9137, i32 1, i32 undef) #14
  %9138 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 678) to i64*), align 8, !tbaa !25
  %9139 = trunc i64 %9138 to i32
  %9140 = call i32 @llvm.abs.i32(i32 %9139, i1 false)
  %9141 = urem i32 %9140, 1000
  %9142 = zext i32 %9141 to i64
  %9143 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9142
  %9144 = bitcast i32* %9143 to i64*
  %9145 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9144, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9146 = trunc i64 %9145 to i32
  %9147 = add nsw i32 %9146, 1
  %9148 = bitcast [1 x %struct.ds_base]* %679 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9148, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9149 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %679, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9147, i32* nonnull %9143, %struct.ds_base* nonnull %9149, i32 1, i32 undef) #14
  %9150 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 679) to i64*), align 8, !tbaa !25
  %9151 = trunc i64 %9150 to i32
  %9152 = call i32 @llvm.abs.i32(i32 %9151, i1 false)
  %9153 = urem i32 %9152, 1000
  %9154 = zext i32 %9153 to i64
  %9155 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9154
  %9156 = bitcast i32* %9155 to i64*
  %9157 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9156, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9158 = trunc i64 %9157 to i32
  %9159 = add nsw i32 %9158, 1
  %9160 = bitcast [1 x %struct.ds_base]* %680 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9160, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9161 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %680, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9159, i32* nonnull %9155, %struct.ds_base* nonnull %9161, i32 1, i32 undef) #14
  %9162 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 680) to i64*), align 16, !tbaa !25
  %9163 = trunc i64 %9162 to i32
  %9164 = call i32 @llvm.abs.i32(i32 %9163, i1 false)
  %9165 = urem i32 %9164, 1000
  %9166 = zext i32 %9165 to i64
  %9167 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9166
  %9168 = bitcast i32* %9167 to i64*
  %9169 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9168, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9170 = trunc i64 %9169 to i32
  %9171 = add nsw i32 %9170, 1
  %9172 = bitcast [1 x %struct.ds_base]* %681 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9172, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9173 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %681, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9171, i32* nonnull %9167, %struct.ds_base* nonnull %9173, i32 1, i32 undef) #14
  %9174 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 681) to i64*), align 8, !tbaa !25
  %9175 = trunc i64 %9174 to i32
  %9176 = call i32 @llvm.abs.i32(i32 %9175, i1 false)
  %9177 = urem i32 %9176, 1000
  %9178 = zext i32 %9177 to i64
  %9179 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9178
  %9180 = bitcast i32* %9179 to i64*
  %9181 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9180, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9182 = trunc i64 %9181 to i32
  %9183 = add nsw i32 %9182, 1
  %9184 = bitcast [1 x %struct.ds_base]* %682 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9184, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9185 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %682, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9183, i32* nonnull %9179, %struct.ds_base* nonnull %9185, i32 1, i32 undef) #14
  %9186 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 682) to i64*), align 8, !tbaa !25
  %9187 = trunc i64 %9186 to i32
  %9188 = call i32 @llvm.abs.i32(i32 %9187, i1 false)
  %9189 = urem i32 %9188, 1000
  %9190 = zext i32 %9189 to i64
  %9191 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9190
  %9192 = bitcast i32* %9191 to i64*
  %9193 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9192, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9194 = trunc i64 %9193 to i32
  %9195 = add nsw i32 %9194, 1
  %9196 = bitcast [1 x %struct.ds_base]* %683 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9196, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9197 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %683, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9195, i32* nonnull %9191, %struct.ds_base* nonnull %9197, i32 1, i32 undef) #14
  %9198 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 683) to i64*), align 8, !tbaa !25
  %9199 = trunc i64 %9198 to i32
  %9200 = call i32 @llvm.abs.i32(i32 %9199, i1 false)
  %9201 = urem i32 %9200, 1000
  %9202 = zext i32 %9201 to i64
  %9203 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9202
  %9204 = bitcast i32* %9203 to i64*
  %9205 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9204, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9206 = trunc i64 %9205 to i32
  %9207 = add nsw i32 %9206, 1
  %9208 = bitcast [1 x %struct.ds_base]* %684 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9208, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9209 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %684, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9207, i32* nonnull %9203, %struct.ds_base* nonnull %9209, i32 1, i32 undef) #14
  %9210 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 684) to i64*), align 16, !tbaa !25
  %9211 = trunc i64 %9210 to i32
  %9212 = call i32 @llvm.abs.i32(i32 %9211, i1 false)
  %9213 = urem i32 %9212, 1000
  %9214 = zext i32 %9213 to i64
  %9215 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9214
  %9216 = bitcast i32* %9215 to i64*
  %9217 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9216, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9218 = trunc i64 %9217 to i32
  %9219 = add nsw i32 %9218, 1
  %9220 = bitcast [1 x %struct.ds_base]* %685 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9220, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9221 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %685, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9219, i32* nonnull %9215, %struct.ds_base* nonnull %9221, i32 1, i32 undef) #14
  %9222 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 685) to i64*), align 8, !tbaa !25
  %9223 = trunc i64 %9222 to i32
  %9224 = call i32 @llvm.abs.i32(i32 %9223, i1 false)
  %9225 = urem i32 %9224, 1000
  %9226 = zext i32 %9225 to i64
  %9227 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9226
  %9228 = bitcast i32* %9227 to i64*
  %9229 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9228, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9230 = trunc i64 %9229 to i32
  %9231 = add nsw i32 %9230, 1
  %9232 = bitcast [1 x %struct.ds_base]* %686 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9232, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9233 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %686, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9231, i32* nonnull %9227, %struct.ds_base* nonnull %9233, i32 1, i32 undef) #14
  %9234 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 686) to i64*), align 8, !tbaa !25
  %9235 = trunc i64 %9234 to i32
  %9236 = call i32 @llvm.abs.i32(i32 %9235, i1 false)
  %9237 = urem i32 %9236, 1000
  %9238 = zext i32 %9237 to i64
  %9239 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9238
  %9240 = bitcast i32* %9239 to i64*
  %9241 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9240, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9242 = trunc i64 %9241 to i32
  %9243 = add nsw i32 %9242, 1
  %9244 = bitcast [1 x %struct.ds_base]* %687 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9244, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9245 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %687, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9243, i32* nonnull %9239, %struct.ds_base* nonnull %9245, i32 1, i32 undef) #14
  %9246 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 687) to i64*), align 8, !tbaa !25
  %9247 = trunc i64 %9246 to i32
  %9248 = call i32 @llvm.abs.i32(i32 %9247, i1 false)
  %9249 = urem i32 %9248, 1000
  %9250 = zext i32 %9249 to i64
  %9251 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9250
  %9252 = bitcast i32* %9251 to i64*
  %9253 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9252, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9254 = trunc i64 %9253 to i32
  %9255 = add nsw i32 %9254, 1
  %9256 = bitcast [1 x %struct.ds_base]* %688 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9256, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9257 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %688, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9255, i32* nonnull %9251, %struct.ds_base* nonnull %9257, i32 1, i32 undef) #14
  %9258 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 688) to i64*), align 16, !tbaa !25
  %9259 = trunc i64 %9258 to i32
  %9260 = call i32 @llvm.abs.i32(i32 %9259, i1 false)
  %9261 = urem i32 %9260, 1000
  %9262 = zext i32 %9261 to i64
  %9263 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9262
  %9264 = bitcast i32* %9263 to i64*
  %9265 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9264, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9266 = trunc i64 %9265 to i32
  %9267 = add nsw i32 %9266, 1
  %9268 = bitcast [1 x %struct.ds_base]* %689 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9268, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9269 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %689, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9267, i32* nonnull %9263, %struct.ds_base* nonnull %9269, i32 1, i32 undef) #14
  %9270 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 689) to i64*), align 8, !tbaa !25
  %9271 = trunc i64 %9270 to i32
  %9272 = call i32 @llvm.abs.i32(i32 %9271, i1 false)
  %9273 = urem i32 %9272, 1000
  %9274 = zext i32 %9273 to i64
  %9275 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9274
  %9276 = bitcast i32* %9275 to i64*
  %9277 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9276, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9278 = trunc i64 %9277 to i32
  %9279 = add nsw i32 %9278, 1
  %9280 = bitcast [1 x %struct.ds_base]* %690 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9280, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9281 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %690, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9279, i32* nonnull %9275, %struct.ds_base* nonnull %9281, i32 1, i32 undef) #14
  %9282 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 690) to i64*), align 8, !tbaa !25
  %9283 = trunc i64 %9282 to i32
  %9284 = call i32 @llvm.abs.i32(i32 %9283, i1 false)
  %9285 = urem i32 %9284, 1000
  %9286 = zext i32 %9285 to i64
  %9287 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9286
  %9288 = bitcast i32* %9287 to i64*
  %9289 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9288, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9290 = trunc i64 %9289 to i32
  %9291 = add nsw i32 %9290, 1
  %9292 = bitcast [1 x %struct.ds_base]* %691 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9292, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9293 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %691, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9291, i32* nonnull %9287, %struct.ds_base* nonnull %9293, i32 1, i32 undef) #14
  %9294 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 691) to i64*), align 8, !tbaa !25
  %9295 = trunc i64 %9294 to i32
  %9296 = call i32 @llvm.abs.i32(i32 %9295, i1 false)
  %9297 = urem i32 %9296, 1000
  %9298 = zext i32 %9297 to i64
  %9299 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9298
  %9300 = bitcast i32* %9299 to i64*
  %9301 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9300, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9302 = trunc i64 %9301 to i32
  %9303 = add nsw i32 %9302, 1
  %9304 = bitcast [1 x %struct.ds_base]* %692 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9304, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9305 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %692, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9303, i32* nonnull %9299, %struct.ds_base* nonnull %9305, i32 1, i32 undef) #14
  %9306 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 692) to i64*), align 16, !tbaa !25
  %9307 = trunc i64 %9306 to i32
  %9308 = call i32 @llvm.abs.i32(i32 %9307, i1 false)
  %9309 = urem i32 %9308, 1000
  %9310 = zext i32 %9309 to i64
  %9311 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9310
  %9312 = bitcast i32* %9311 to i64*
  %9313 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9312, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9314 = trunc i64 %9313 to i32
  %9315 = add nsw i32 %9314, 1
  %9316 = bitcast [1 x %struct.ds_base]* %693 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9316, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9317 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %693, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9315, i32* nonnull %9311, %struct.ds_base* nonnull %9317, i32 1, i32 undef) #14
  %9318 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 693) to i64*), align 8, !tbaa !25
  %9319 = trunc i64 %9318 to i32
  %9320 = call i32 @llvm.abs.i32(i32 %9319, i1 false)
  %9321 = urem i32 %9320, 1000
  %9322 = zext i32 %9321 to i64
  %9323 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9322
  %9324 = bitcast i32* %9323 to i64*
  %9325 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9324, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9326 = trunc i64 %9325 to i32
  %9327 = add nsw i32 %9326, 1
  %9328 = bitcast [1 x %struct.ds_base]* %694 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9328, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9329 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %694, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9327, i32* nonnull %9323, %struct.ds_base* nonnull %9329, i32 1, i32 undef) #14
  %9330 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 694) to i64*), align 8, !tbaa !25
  %9331 = trunc i64 %9330 to i32
  %9332 = call i32 @llvm.abs.i32(i32 %9331, i1 false)
  %9333 = urem i32 %9332, 1000
  %9334 = zext i32 %9333 to i64
  %9335 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9334
  %9336 = bitcast i32* %9335 to i64*
  %9337 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9336, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9338 = trunc i64 %9337 to i32
  %9339 = add nsw i32 %9338, 1
  %9340 = bitcast [1 x %struct.ds_base]* %695 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9340, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9341 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %695, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9339, i32* nonnull %9335, %struct.ds_base* nonnull %9341, i32 1, i32 undef) #14
  %9342 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 695) to i64*), align 8, !tbaa !25
  %9343 = trunc i64 %9342 to i32
  %9344 = call i32 @llvm.abs.i32(i32 %9343, i1 false)
  %9345 = urem i32 %9344, 1000
  %9346 = zext i32 %9345 to i64
  %9347 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9346
  %9348 = bitcast i32* %9347 to i64*
  %9349 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9348, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9350 = trunc i64 %9349 to i32
  %9351 = add nsw i32 %9350, 1
  %9352 = bitcast [1 x %struct.ds_base]* %696 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9352, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9353 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %696, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9351, i32* nonnull %9347, %struct.ds_base* nonnull %9353, i32 1, i32 undef) #14
  %9354 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 696) to i64*), align 16, !tbaa !25
  %9355 = trunc i64 %9354 to i32
  %9356 = call i32 @llvm.abs.i32(i32 %9355, i1 false)
  %9357 = urem i32 %9356, 1000
  %9358 = zext i32 %9357 to i64
  %9359 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9358
  %9360 = bitcast i32* %9359 to i64*
  %9361 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9360, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9362 = trunc i64 %9361 to i32
  %9363 = add nsw i32 %9362, 1
  %9364 = bitcast [1 x %struct.ds_base]* %697 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9364, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9365 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %697, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9363, i32* nonnull %9359, %struct.ds_base* nonnull %9365, i32 1, i32 undef) #14
  %9366 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 697) to i64*), align 8, !tbaa !25
  %9367 = trunc i64 %9366 to i32
  %9368 = call i32 @llvm.abs.i32(i32 %9367, i1 false)
  %9369 = urem i32 %9368, 1000
  %9370 = zext i32 %9369 to i64
  %9371 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9370
  %9372 = bitcast i32* %9371 to i64*
  %9373 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9372, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9374 = trunc i64 %9373 to i32
  %9375 = add nsw i32 %9374, 1
  %9376 = bitcast [1 x %struct.ds_base]* %698 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9376, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9377 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %698, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9375, i32* nonnull %9371, %struct.ds_base* nonnull %9377, i32 1, i32 undef) #14
  %9378 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 698) to i64*), align 8, !tbaa !25
  %9379 = trunc i64 %9378 to i32
  %9380 = call i32 @llvm.abs.i32(i32 %9379, i1 false)
  %9381 = urem i32 %9380, 1000
  %9382 = zext i32 %9381 to i64
  %9383 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9382
  %9384 = bitcast i32* %9383 to i64*
  %9385 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9384, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9386 = trunc i64 %9385 to i32
  %9387 = add nsw i32 %9386, 1
  %9388 = bitcast [1 x %struct.ds_base]* %699 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9388, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9389 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %699, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9387, i32* nonnull %9383, %struct.ds_base* nonnull %9389, i32 1, i32 undef) #14
  %9390 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 699) to i64*), align 8, !tbaa !25
  %9391 = trunc i64 %9390 to i32
  %9392 = call i32 @llvm.abs.i32(i32 %9391, i1 false)
  %9393 = urem i32 %9392, 1000
  %9394 = zext i32 %9393 to i64
  %9395 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9394
  %9396 = bitcast i32* %9395 to i64*
  %9397 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9396, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9398 = trunc i64 %9397 to i32
  %9399 = add nsw i32 %9398, 1
  %9400 = bitcast [1 x %struct.ds_base]* %700 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9400, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9401 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %700, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9399, i32* nonnull %9395, %struct.ds_base* nonnull %9401, i32 1, i32 undef) #14
  %9402 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 700) to i64*), align 16, !tbaa !25
  %9403 = trunc i64 %9402 to i32
  %9404 = call i32 @llvm.abs.i32(i32 %9403, i1 false)
  %9405 = urem i32 %9404, 1000
  %9406 = zext i32 %9405 to i64
  %9407 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9406
  %9408 = bitcast i32* %9407 to i64*
  %9409 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9408, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9410 = trunc i64 %9409 to i32
  %9411 = add nsw i32 %9410, 1
  %9412 = bitcast [1 x %struct.ds_base]* %701 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9412, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9413 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %701, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9411, i32* nonnull %9407, %struct.ds_base* nonnull %9413, i32 1, i32 undef) #14
  %9414 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 701) to i64*), align 8, !tbaa !25
  %9415 = trunc i64 %9414 to i32
  %9416 = call i32 @llvm.abs.i32(i32 %9415, i1 false)
  %9417 = urem i32 %9416, 1000
  %9418 = zext i32 %9417 to i64
  %9419 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9418
  %9420 = bitcast i32* %9419 to i64*
  %9421 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9420, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9422 = trunc i64 %9421 to i32
  %9423 = add nsw i32 %9422, 1
  %9424 = bitcast [1 x %struct.ds_base]* %702 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9424, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9425 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %702, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9423, i32* nonnull %9419, %struct.ds_base* nonnull %9425, i32 1, i32 undef) #14
  %9426 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 702) to i64*), align 8, !tbaa !25
  %9427 = trunc i64 %9426 to i32
  %9428 = call i32 @llvm.abs.i32(i32 %9427, i1 false)
  %9429 = urem i32 %9428, 1000
  %9430 = zext i32 %9429 to i64
  %9431 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9430
  %9432 = bitcast i32* %9431 to i64*
  %9433 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9432, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9434 = trunc i64 %9433 to i32
  %9435 = add nsw i32 %9434, 1
  %9436 = bitcast [1 x %struct.ds_base]* %703 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9436, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9437 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %703, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9435, i32* nonnull %9431, %struct.ds_base* nonnull %9437, i32 1, i32 undef) #14
  %9438 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 703) to i64*), align 8, !tbaa !25
  %9439 = trunc i64 %9438 to i32
  %9440 = call i32 @llvm.abs.i32(i32 %9439, i1 false)
  %9441 = urem i32 %9440, 1000
  %9442 = zext i32 %9441 to i64
  %9443 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9442
  %9444 = bitcast i32* %9443 to i64*
  %9445 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9444, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9446 = trunc i64 %9445 to i32
  %9447 = add nsw i32 %9446, 1
  %9448 = bitcast [1 x %struct.ds_base]* %704 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9448, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9449 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %704, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9447, i32* nonnull %9443, %struct.ds_base* nonnull %9449, i32 1, i32 undef) #14
  %9450 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 704) to i64*), align 16, !tbaa !25
  %9451 = trunc i64 %9450 to i32
  %9452 = call i32 @llvm.abs.i32(i32 %9451, i1 false)
  %9453 = urem i32 %9452, 1000
  %9454 = zext i32 %9453 to i64
  %9455 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9454
  %9456 = bitcast i32* %9455 to i64*
  %9457 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9456, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9458 = trunc i64 %9457 to i32
  %9459 = add nsw i32 %9458, 1
  %9460 = bitcast [1 x %struct.ds_base]* %705 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9460, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9461 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %705, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9459, i32* nonnull %9455, %struct.ds_base* nonnull %9461, i32 1, i32 undef) #14
  %9462 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 705) to i64*), align 8, !tbaa !25
  %9463 = trunc i64 %9462 to i32
  %9464 = call i32 @llvm.abs.i32(i32 %9463, i1 false)
  %9465 = urem i32 %9464, 1000
  %9466 = zext i32 %9465 to i64
  %9467 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9466
  %9468 = bitcast i32* %9467 to i64*
  %9469 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9468, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9470 = trunc i64 %9469 to i32
  %9471 = add nsw i32 %9470, 1
  %9472 = bitcast [1 x %struct.ds_base]* %706 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9472, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9473 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %706, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9471, i32* nonnull %9467, %struct.ds_base* nonnull %9473, i32 1, i32 undef) #14
  %9474 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 706) to i64*), align 8, !tbaa !25
  %9475 = trunc i64 %9474 to i32
  %9476 = call i32 @llvm.abs.i32(i32 %9475, i1 false)
  %9477 = urem i32 %9476, 1000
  %9478 = zext i32 %9477 to i64
  %9479 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9478
  %9480 = bitcast i32* %9479 to i64*
  %9481 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9480, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9482 = trunc i64 %9481 to i32
  %9483 = add nsw i32 %9482, 1
  %9484 = bitcast [1 x %struct.ds_base]* %707 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9484, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9485 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %707, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9483, i32* nonnull %9479, %struct.ds_base* nonnull %9485, i32 1, i32 undef) #14
  %9486 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 707) to i64*), align 8, !tbaa !25
  %9487 = trunc i64 %9486 to i32
  %9488 = call i32 @llvm.abs.i32(i32 %9487, i1 false)
  %9489 = urem i32 %9488, 1000
  %9490 = zext i32 %9489 to i64
  %9491 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9490
  %9492 = bitcast i32* %9491 to i64*
  %9493 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9492, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9494 = trunc i64 %9493 to i32
  %9495 = add nsw i32 %9494, 1
  %9496 = bitcast [1 x %struct.ds_base]* %708 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9496, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9497 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %708, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9495, i32* nonnull %9491, %struct.ds_base* nonnull %9497, i32 1, i32 undef) #14
  %9498 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 708) to i64*), align 16, !tbaa !25
  %9499 = trunc i64 %9498 to i32
  %9500 = call i32 @llvm.abs.i32(i32 %9499, i1 false)
  %9501 = urem i32 %9500, 1000
  %9502 = zext i32 %9501 to i64
  %9503 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9502
  %9504 = bitcast i32* %9503 to i64*
  %9505 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9504, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9506 = trunc i64 %9505 to i32
  %9507 = add nsw i32 %9506, 1
  %9508 = bitcast [1 x %struct.ds_base]* %709 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9508, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9509 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %709, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9507, i32* nonnull %9503, %struct.ds_base* nonnull %9509, i32 1, i32 undef) #14
  %9510 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 709) to i64*), align 8, !tbaa !25
  %9511 = trunc i64 %9510 to i32
  %9512 = call i32 @llvm.abs.i32(i32 %9511, i1 false)
  %9513 = urem i32 %9512, 1000
  %9514 = zext i32 %9513 to i64
  %9515 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9514
  %9516 = bitcast i32* %9515 to i64*
  %9517 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9516, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9518 = trunc i64 %9517 to i32
  %9519 = add nsw i32 %9518, 1
  %9520 = bitcast [1 x %struct.ds_base]* %710 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9520, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9521 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %710, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9519, i32* nonnull %9515, %struct.ds_base* nonnull %9521, i32 1, i32 undef) #14
  %9522 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 710) to i64*), align 8, !tbaa !25
  %9523 = trunc i64 %9522 to i32
  %9524 = call i32 @llvm.abs.i32(i32 %9523, i1 false)
  %9525 = urem i32 %9524, 1000
  %9526 = zext i32 %9525 to i64
  %9527 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9526
  %9528 = bitcast i32* %9527 to i64*
  %9529 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9528, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9530 = trunc i64 %9529 to i32
  %9531 = add nsw i32 %9530, 1
  %9532 = bitcast [1 x %struct.ds_base]* %711 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9532, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9533 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %711, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9531, i32* nonnull %9527, %struct.ds_base* nonnull %9533, i32 1, i32 undef) #14
  %9534 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 711) to i64*), align 8, !tbaa !25
  %9535 = trunc i64 %9534 to i32
  %9536 = call i32 @llvm.abs.i32(i32 %9535, i1 false)
  %9537 = urem i32 %9536, 1000
  %9538 = zext i32 %9537 to i64
  %9539 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9538
  %9540 = bitcast i32* %9539 to i64*
  %9541 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9540, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9542 = trunc i64 %9541 to i32
  %9543 = add nsw i32 %9542, 1
  %9544 = bitcast [1 x %struct.ds_base]* %712 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9544, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9545 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %712, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9543, i32* nonnull %9539, %struct.ds_base* nonnull %9545, i32 1, i32 undef) #14
  %9546 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 712) to i64*), align 16, !tbaa !25
  %9547 = trunc i64 %9546 to i32
  %9548 = call i32 @llvm.abs.i32(i32 %9547, i1 false)
  %9549 = urem i32 %9548, 1000
  %9550 = zext i32 %9549 to i64
  %9551 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9550
  %9552 = bitcast i32* %9551 to i64*
  %9553 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9552, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9554 = trunc i64 %9553 to i32
  %9555 = add nsw i32 %9554, 1
  %9556 = bitcast [1 x %struct.ds_base]* %713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9556, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9557 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %713, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9555, i32* nonnull %9551, %struct.ds_base* nonnull %9557, i32 1, i32 undef) #14
  %9558 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 713) to i64*), align 8, !tbaa !25
  %9559 = trunc i64 %9558 to i32
  %9560 = call i32 @llvm.abs.i32(i32 %9559, i1 false)
  %9561 = urem i32 %9560, 1000
  %9562 = zext i32 %9561 to i64
  %9563 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9562
  %9564 = bitcast i32* %9563 to i64*
  %9565 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9564, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9566 = trunc i64 %9565 to i32
  %9567 = add nsw i32 %9566, 1
  %9568 = bitcast [1 x %struct.ds_base]* %714 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9568, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9569 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %714, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9567, i32* nonnull %9563, %struct.ds_base* nonnull %9569, i32 1, i32 undef) #14
  %9570 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 714) to i64*), align 8, !tbaa !25
  %9571 = trunc i64 %9570 to i32
  %9572 = call i32 @llvm.abs.i32(i32 %9571, i1 false)
  %9573 = urem i32 %9572, 1000
  %9574 = zext i32 %9573 to i64
  %9575 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9574
  %9576 = bitcast i32* %9575 to i64*
  %9577 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9576, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9578 = trunc i64 %9577 to i32
  %9579 = add nsw i32 %9578, 1
  %9580 = bitcast [1 x %struct.ds_base]* %715 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9580, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9581 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %715, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9579, i32* nonnull %9575, %struct.ds_base* nonnull %9581, i32 1, i32 undef) #14
  %9582 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 715) to i64*), align 8, !tbaa !25
  %9583 = trunc i64 %9582 to i32
  %9584 = call i32 @llvm.abs.i32(i32 %9583, i1 false)
  %9585 = urem i32 %9584, 1000
  %9586 = zext i32 %9585 to i64
  %9587 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9586
  %9588 = bitcast i32* %9587 to i64*
  %9589 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9588, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9590 = trunc i64 %9589 to i32
  %9591 = add nsw i32 %9590, 1
  %9592 = bitcast [1 x %struct.ds_base]* %716 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9592, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9593 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %716, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9591, i32* nonnull %9587, %struct.ds_base* nonnull %9593, i32 1, i32 undef) #14
  %9594 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 716) to i64*), align 16, !tbaa !25
  %9595 = trunc i64 %9594 to i32
  %9596 = call i32 @llvm.abs.i32(i32 %9595, i1 false)
  %9597 = urem i32 %9596, 1000
  %9598 = zext i32 %9597 to i64
  %9599 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9598
  %9600 = bitcast i32* %9599 to i64*
  %9601 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9600, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9602 = trunc i64 %9601 to i32
  %9603 = add nsw i32 %9602, 1
  %9604 = bitcast [1 x %struct.ds_base]* %717 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9604, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9605 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %717, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9603, i32* nonnull %9599, %struct.ds_base* nonnull %9605, i32 1, i32 undef) #14
  %9606 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 717) to i64*), align 8, !tbaa !25
  %9607 = trunc i64 %9606 to i32
  %9608 = call i32 @llvm.abs.i32(i32 %9607, i1 false)
  %9609 = urem i32 %9608, 1000
  %9610 = zext i32 %9609 to i64
  %9611 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9610
  %9612 = bitcast i32* %9611 to i64*
  %9613 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9612, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9614 = trunc i64 %9613 to i32
  %9615 = add nsw i32 %9614, 1
  %9616 = bitcast [1 x %struct.ds_base]* %718 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9616, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9617 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %718, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9615, i32* nonnull %9611, %struct.ds_base* nonnull %9617, i32 1, i32 undef) #14
  %9618 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 718) to i64*), align 8, !tbaa !25
  %9619 = trunc i64 %9618 to i32
  %9620 = call i32 @llvm.abs.i32(i32 %9619, i1 false)
  %9621 = urem i32 %9620, 1000
  %9622 = zext i32 %9621 to i64
  %9623 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9622
  %9624 = bitcast i32* %9623 to i64*
  %9625 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9624, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9626 = trunc i64 %9625 to i32
  %9627 = add nsw i32 %9626, 1
  %9628 = bitcast [1 x %struct.ds_base]* %719 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9628, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9629 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %719, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9627, i32* nonnull %9623, %struct.ds_base* nonnull %9629, i32 1, i32 undef) #14
  %9630 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 719) to i64*), align 8, !tbaa !25
  %9631 = trunc i64 %9630 to i32
  %9632 = call i32 @llvm.abs.i32(i32 %9631, i1 false)
  %9633 = urem i32 %9632, 1000
  %9634 = zext i32 %9633 to i64
  %9635 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9634
  %9636 = bitcast i32* %9635 to i64*
  %9637 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9636, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9638 = trunc i64 %9637 to i32
  %9639 = add nsw i32 %9638, 1
  %9640 = bitcast [1 x %struct.ds_base]* %720 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9640, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9641 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %720, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9639, i32* nonnull %9635, %struct.ds_base* nonnull %9641, i32 1, i32 undef) #14
  %9642 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 720) to i64*), align 16, !tbaa !25
  %9643 = trunc i64 %9642 to i32
  %9644 = call i32 @llvm.abs.i32(i32 %9643, i1 false)
  %9645 = urem i32 %9644, 1000
  %9646 = zext i32 %9645 to i64
  %9647 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9646
  %9648 = bitcast i32* %9647 to i64*
  %9649 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9648, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9650 = trunc i64 %9649 to i32
  %9651 = add nsw i32 %9650, 1
  %9652 = bitcast [1 x %struct.ds_base]* %721 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9652, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9653 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %721, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9651, i32* nonnull %9647, %struct.ds_base* nonnull %9653, i32 1, i32 undef) #14
  %9654 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 721) to i64*), align 8, !tbaa !25
  %9655 = trunc i64 %9654 to i32
  %9656 = call i32 @llvm.abs.i32(i32 %9655, i1 false)
  %9657 = urem i32 %9656, 1000
  %9658 = zext i32 %9657 to i64
  %9659 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9658
  %9660 = bitcast i32* %9659 to i64*
  %9661 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9660, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9662 = trunc i64 %9661 to i32
  %9663 = add nsw i32 %9662, 1
  %9664 = bitcast [1 x %struct.ds_base]* %722 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9664, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9665 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %722, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9663, i32* nonnull %9659, %struct.ds_base* nonnull %9665, i32 1, i32 undef) #14
  %9666 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 722) to i64*), align 8, !tbaa !25
  %9667 = trunc i64 %9666 to i32
  %9668 = call i32 @llvm.abs.i32(i32 %9667, i1 false)
  %9669 = urem i32 %9668, 1000
  %9670 = zext i32 %9669 to i64
  %9671 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9670
  %9672 = bitcast i32* %9671 to i64*
  %9673 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9672, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9674 = trunc i64 %9673 to i32
  %9675 = add nsw i32 %9674, 1
  %9676 = bitcast [1 x %struct.ds_base]* %723 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9676, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9677 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %723, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9675, i32* nonnull %9671, %struct.ds_base* nonnull %9677, i32 1, i32 undef) #14
  %9678 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 723) to i64*), align 8, !tbaa !25
  %9679 = trunc i64 %9678 to i32
  %9680 = call i32 @llvm.abs.i32(i32 %9679, i1 false)
  %9681 = urem i32 %9680, 1000
  %9682 = zext i32 %9681 to i64
  %9683 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9682
  %9684 = bitcast i32* %9683 to i64*
  %9685 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9684, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9686 = trunc i64 %9685 to i32
  %9687 = add nsw i32 %9686, 1
  %9688 = bitcast [1 x %struct.ds_base]* %724 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9688, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9689 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %724, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9687, i32* nonnull %9683, %struct.ds_base* nonnull %9689, i32 1, i32 undef) #14
  %9690 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 724) to i64*), align 16, !tbaa !25
  %9691 = trunc i64 %9690 to i32
  %9692 = call i32 @llvm.abs.i32(i32 %9691, i1 false)
  %9693 = urem i32 %9692, 1000
  %9694 = zext i32 %9693 to i64
  %9695 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9694
  %9696 = bitcast i32* %9695 to i64*
  %9697 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9696, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9698 = trunc i64 %9697 to i32
  %9699 = add nsw i32 %9698, 1
  %9700 = bitcast [1 x %struct.ds_base]* %725 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9700, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9701 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %725, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9699, i32* nonnull %9695, %struct.ds_base* nonnull %9701, i32 1, i32 undef) #14
  %9702 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 725) to i64*), align 8, !tbaa !25
  %9703 = trunc i64 %9702 to i32
  %9704 = call i32 @llvm.abs.i32(i32 %9703, i1 false)
  %9705 = urem i32 %9704, 1000
  %9706 = zext i32 %9705 to i64
  %9707 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9706
  %9708 = bitcast i32* %9707 to i64*
  %9709 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9708, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9710 = trunc i64 %9709 to i32
  %9711 = add nsw i32 %9710, 1
  %9712 = bitcast [1 x %struct.ds_base]* %726 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9712, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9713 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %726, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9711, i32* nonnull %9707, %struct.ds_base* nonnull %9713, i32 1, i32 undef) #14
  %9714 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 726) to i64*), align 8, !tbaa !25
  %9715 = trunc i64 %9714 to i32
  %9716 = call i32 @llvm.abs.i32(i32 %9715, i1 false)
  %9717 = urem i32 %9716, 1000
  %9718 = zext i32 %9717 to i64
  %9719 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9718
  %9720 = bitcast i32* %9719 to i64*
  %9721 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9720, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9722 = trunc i64 %9721 to i32
  %9723 = add nsw i32 %9722, 1
  %9724 = bitcast [1 x %struct.ds_base]* %727 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9724, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9725 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %727, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9723, i32* nonnull %9719, %struct.ds_base* nonnull %9725, i32 1, i32 undef) #14
  %9726 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 727) to i64*), align 8, !tbaa !25
  %9727 = trunc i64 %9726 to i32
  %9728 = call i32 @llvm.abs.i32(i32 %9727, i1 false)
  %9729 = urem i32 %9728, 1000
  %9730 = zext i32 %9729 to i64
  %9731 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9730
  %9732 = bitcast i32* %9731 to i64*
  %9733 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9732, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9734 = trunc i64 %9733 to i32
  %9735 = add nsw i32 %9734, 1
  %9736 = bitcast [1 x %struct.ds_base]* %728 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9736, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9737 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %728, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9735, i32* nonnull %9731, %struct.ds_base* nonnull %9737, i32 1, i32 undef) #14
  %9738 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 728) to i64*), align 16, !tbaa !25
  %9739 = trunc i64 %9738 to i32
  %9740 = call i32 @llvm.abs.i32(i32 %9739, i1 false)
  %9741 = urem i32 %9740, 1000
  %9742 = zext i32 %9741 to i64
  %9743 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9742
  %9744 = bitcast i32* %9743 to i64*
  %9745 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9744, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9746 = trunc i64 %9745 to i32
  %9747 = add nsw i32 %9746, 1
  %9748 = bitcast [1 x %struct.ds_base]* %729 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9748, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9749 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %729, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9747, i32* nonnull %9743, %struct.ds_base* nonnull %9749, i32 1, i32 undef) #14
  %9750 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 729) to i64*), align 8, !tbaa !25
  %9751 = trunc i64 %9750 to i32
  %9752 = call i32 @llvm.abs.i32(i32 %9751, i1 false)
  %9753 = urem i32 %9752, 1000
  %9754 = zext i32 %9753 to i64
  %9755 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9754
  %9756 = bitcast i32* %9755 to i64*
  %9757 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9756, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9758 = trunc i64 %9757 to i32
  %9759 = add nsw i32 %9758, 1
  %9760 = bitcast [1 x %struct.ds_base]* %730 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9760, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9761 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %730, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9759, i32* nonnull %9755, %struct.ds_base* nonnull %9761, i32 1, i32 undef) #14
  %9762 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 730) to i64*), align 8, !tbaa !25
  %9763 = trunc i64 %9762 to i32
  %9764 = call i32 @llvm.abs.i32(i32 %9763, i1 false)
  %9765 = urem i32 %9764, 1000
  %9766 = zext i32 %9765 to i64
  %9767 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9766
  %9768 = bitcast i32* %9767 to i64*
  %9769 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9768, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9770 = trunc i64 %9769 to i32
  %9771 = add nsw i32 %9770, 1
  %9772 = bitcast [1 x %struct.ds_base]* %731 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9772, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9773 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %731, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9771, i32* nonnull %9767, %struct.ds_base* nonnull %9773, i32 1, i32 undef) #14
  %9774 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 731) to i64*), align 8, !tbaa !25
  %9775 = trunc i64 %9774 to i32
  %9776 = call i32 @llvm.abs.i32(i32 %9775, i1 false)
  %9777 = urem i32 %9776, 1000
  %9778 = zext i32 %9777 to i64
  %9779 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9778
  %9780 = bitcast i32* %9779 to i64*
  %9781 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9780, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9782 = trunc i64 %9781 to i32
  %9783 = add nsw i32 %9782, 1
  %9784 = bitcast [1 x %struct.ds_base]* %732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9784, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9785 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %732, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9783, i32* nonnull %9779, %struct.ds_base* nonnull %9785, i32 1, i32 undef) #14
  %9786 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 732) to i64*), align 16, !tbaa !25
  %9787 = trunc i64 %9786 to i32
  %9788 = call i32 @llvm.abs.i32(i32 %9787, i1 false)
  %9789 = urem i32 %9788, 1000
  %9790 = zext i32 %9789 to i64
  %9791 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9790
  %9792 = bitcast i32* %9791 to i64*
  %9793 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9792, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9794 = trunc i64 %9793 to i32
  %9795 = add nsw i32 %9794, 1
  %9796 = bitcast [1 x %struct.ds_base]* %733 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9796, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9797 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %733, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9795, i32* nonnull %9791, %struct.ds_base* nonnull %9797, i32 1, i32 undef) #14
  %9798 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 733) to i64*), align 8, !tbaa !25
  %9799 = trunc i64 %9798 to i32
  %9800 = call i32 @llvm.abs.i32(i32 %9799, i1 false)
  %9801 = urem i32 %9800, 1000
  %9802 = zext i32 %9801 to i64
  %9803 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9802
  %9804 = bitcast i32* %9803 to i64*
  %9805 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9804, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9806 = trunc i64 %9805 to i32
  %9807 = add nsw i32 %9806, 1
  %9808 = bitcast [1 x %struct.ds_base]* %734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9808, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9809 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %734, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9807, i32* nonnull %9803, %struct.ds_base* nonnull %9809, i32 1, i32 undef) #14
  %9810 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 734) to i64*), align 8, !tbaa !25
  %9811 = trunc i64 %9810 to i32
  %9812 = call i32 @llvm.abs.i32(i32 %9811, i1 false)
  %9813 = urem i32 %9812, 1000
  %9814 = zext i32 %9813 to i64
  %9815 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9814
  %9816 = bitcast i32* %9815 to i64*
  %9817 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9816, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9818 = trunc i64 %9817 to i32
  %9819 = add nsw i32 %9818, 1
  %9820 = bitcast [1 x %struct.ds_base]* %735 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9820, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9821 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %735, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9819, i32* nonnull %9815, %struct.ds_base* nonnull %9821, i32 1, i32 undef) #14
  %9822 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 735) to i64*), align 8, !tbaa !25
  %9823 = trunc i64 %9822 to i32
  %9824 = call i32 @llvm.abs.i32(i32 %9823, i1 false)
  %9825 = urem i32 %9824, 1000
  %9826 = zext i32 %9825 to i64
  %9827 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9826
  %9828 = bitcast i32* %9827 to i64*
  %9829 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9828, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9830 = trunc i64 %9829 to i32
  %9831 = add nsw i32 %9830, 1
  %9832 = bitcast [1 x %struct.ds_base]* %736 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9832, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9833 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %736, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9831, i32* nonnull %9827, %struct.ds_base* nonnull %9833, i32 1, i32 undef) #14
  %9834 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 736) to i64*), align 16, !tbaa !25
  %9835 = trunc i64 %9834 to i32
  %9836 = call i32 @llvm.abs.i32(i32 %9835, i1 false)
  %9837 = urem i32 %9836, 1000
  %9838 = zext i32 %9837 to i64
  %9839 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9838
  %9840 = bitcast i32* %9839 to i64*
  %9841 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9840, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9842 = trunc i64 %9841 to i32
  %9843 = add nsw i32 %9842, 1
  %9844 = bitcast [1 x %struct.ds_base]* %737 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9844, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9845 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %737, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9843, i32* nonnull %9839, %struct.ds_base* nonnull %9845, i32 1, i32 undef) #14
  %9846 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 737) to i64*), align 8, !tbaa !25
  %9847 = trunc i64 %9846 to i32
  %9848 = call i32 @llvm.abs.i32(i32 %9847, i1 false)
  %9849 = urem i32 %9848, 1000
  %9850 = zext i32 %9849 to i64
  %9851 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9850
  %9852 = bitcast i32* %9851 to i64*
  %9853 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9852, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9854 = trunc i64 %9853 to i32
  %9855 = add nsw i32 %9854, 1
  %9856 = bitcast [1 x %struct.ds_base]* %738 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9856, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9857 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %738, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9855, i32* nonnull %9851, %struct.ds_base* nonnull %9857, i32 1, i32 undef) #14
  %9858 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 738) to i64*), align 8, !tbaa !25
  %9859 = trunc i64 %9858 to i32
  %9860 = call i32 @llvm.abs.i32(i32 %9859, i1 false)
  %9861 = urem i32 %9860, 1000
  %9862 = zext i32 %9861 to i64
  %9863 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9862
  %9864 = bitcast i32* %9863 to i64*
  %9865 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9864, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9866 = trunc i64 %9865 to i32
  %9867 = add nsw i32 %9866, 1
  %9868 = bitcast [1 x %struct.ds_base]* %739 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9868, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9869 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %739, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9867, i32* nonnull %9863, %struct.ds_base* nonnull %9869, i32 1, i32 undef) #14
  %9870 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 739) to i64*), align 8, !tbaa !25
  %9871 = trunc i64 %9870 to i32
  %9872 = call i32 @llvm.abs.i32(i32 %9871, i1 false)
  %9873 = urem i32 %9872, 1000
  %9874 = zext i32 %9873 to i64
  %9875 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9874
  %9876 = bitcast i32* %9875 to i64*
  %9877 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9876, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9878 = trunc i64 %9877 to i32
  %9879 = add nsw i32 %9878, 1
  %9880 = bitcast [1 x %struct.ds_base]* %740 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9880, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9881 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %740, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9879, i32* nonnull %9875, %struct.ds_base* nonnull %9881, i32 1, i32 undef) #14
  %9882 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 740) to i64*), align 16, !tbaa !25
  %9883 = trunc i64 %9882 to i32
  %9884 = call i32 @llvm.abs.i32(i32 %9883, i1 false)
  %9885 = urem i32 %9884, 1000
  %9886 = zext i32 %9885 to i64
  %9887 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9886
  %9888 = bitcast i32* %9887 to i64*
  %9889 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9888, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9890 = trunc i64 %9889 to i32
  %9891 = add nsw i32 %9890, 1
  %9892 = bitcast [1 x %struct.ds_base]* %741 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9892, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9893 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %741, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9891, i32* nonnull %9887, %struct.ds_base* nonnull %9893, i32 1, i32 undef) #14
  %9894 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 741) to i64*), align 8, !tbaa !25
  %9895 = trunc i64 %9894 to i32
  %9896 = call i32 @llvm.abs.i32(i32 %9895, i1 false)
  %9897 = urem i32 %9896, 1000
  %9898 = zext i32 %9897 to i64
  %9899 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9898
  %9900 = bitcast i32* %9899 to i64*
  %9901 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9900, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9902 = trunc i64 %9901 to i32
  %9903 = add nsw i32 %9902, 1
  %9904 = bitcast [1 x %struct.ds_base]* %742 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9904, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9905 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %742, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9903, i32* nonnull %9899, %struct.ds_base* nonnull %9905, i32 1, i32 undef) #14
  %9906 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 742) to i64*), align 8, !tbaa !25
  %9907 = trunc i64 %9906 to i32
  %9908 = call i32 @llvm.abs.i32(i32 %9907, i1 false)
  %9909 = urem i32 %9908, 1000
  %9910 = zext i32 %9909 to i64
  %9911 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9910
  %9912 = bitcast i32* %9911 to i64*
  %9913 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9912, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9914 = trunc i64 %9913 to i32
  %9915 = add nsw i32 %9914, 1
  %9916 = bitcast [1 x %struct.ds_base]* %743 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9916, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9917 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %743, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9915, i32* nonnull %9911, %struct.ds_base* nonnull %9917, i32 1, i32 undef) #14
  %9918 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 743) to i64*), align 8, !tbaa !25
  %9919 = trunc i64 %9918 to i32
  %9920 = call i32 @llvm.abs.i32(i32 %9919, i1 false)
  %9921 = urem i32 %9920, 1000
  %9922 = zext i32 %9921 to i64
  %9923 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9922
  %9924 = bitcast i32* %9923 to i64*
  %9925 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9924, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9926 = trunc i64 %9925 to i32
  %9927 = add nsw i32 %9926, 1
  %9928 = bitcast [1 x %struct.ds_base]* %744 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9928, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9929 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %744, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9927, i32* nonnull %9923, %struct.ds_base* nonnull %9929, i32 1, i32 undef) #14
  %9930 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 744) to i64*), align 16, !tbaa !25
  %9931 = trunc i64 %9930 to i32
  %9932 = call i32 @llvm.abs.i32(i32 %9931, i1 false)
  %9933 = urem i32 %9932, 1000
  %9934 = zext i32 %9933 to i64
  %9935 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9934
  %9936 = bitcast i32* %9935 to i64*
  %9937 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9936, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9938 = trunc i64 %9937 to i32
  %9939 = add nsw i32 %9938, 1
  %9940 = bitcast [1 x %struct.ds_base]* %745 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9940, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9941 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %745, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9939, i32* nonnull %9935, %struct.ds_base* nonnull %9941, i32 1, i32 undef) #14
  %9942 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 745) to i64*), align 8, !tbaa !25
  %9943 = trunc i64 %9942 to i32
  %9944 = call i32 @llvm.abs.i32(i32 %9943, i1 false)
  %9945 = urem i32 %9944, 1000
  %9946 = zext i32 %9945 to i64
  %9947 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9946
  %9948 = bitcast i32* %9947 to i64*
  %9949 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9948, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9950 = trunc i64 %9949 to i32
  %9951 = add nsw i32 %9950, 1
  %9952 = bitcast [1 x %struct.ds_base]* %746 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9952, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9953 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %746, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9951, i32* nonnull %9947, %struct.ds_base* nonnull %9953, i32 1, i32 undef) #14
  %9954 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 746) to i64*), align 8, !tbaa !25
  %9955 = trunc i64 %9954 to i32
  %9956 = call i32 @llvm.abs.i32(i32 %9955, i1 false)
  %9957 = urem i32 %9956, 1000
  %9958 = zext i32 %9957 to i64
  %9959 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9958
  %9960 = bitcast i32* %9959 to i64*
  %9961 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9960, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9962 = trunc i64 %9961 to i32
  %9963 = add nsw i32 %9962, 1
  %9964 = bitcast [1 x %struct.ds_base]* %747 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9964, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9965 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %747, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9963, i32* nonnull %9959, %struct.ds_base* nonnull %9965, i32 1, i32 undef) #14
  %9966 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 747) to i64*), align 8, !tbaa !25
  %9967 = trunc i64 %9966 to i32
  %9968 = call i32 @llvm.abs.i32(i32 %9967, i1 false)
  %9969 = urem i32 %9968, 1000
  %9970 = zext i32 %9969 to i64
  %9971 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9970
  %9972 = bitcast i32* %9971 to i64*
  %9973 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9972, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9974 = trunc i64 %9973 to i32
  %9975 = add nsw i32 %9974, 1
  %9976 = bitcast [1 x %struct.ds_base]* %748 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9976, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9977 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %748, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9975, i32* nonnull %9971, %struct.ds_base* nonnull %9977, i32 1, i32 undef) #14
  %9978 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 748) to i64*), align 16, !tbaa !25
  %9979 = trunc i64 %9978 to i32
  %9980 = call i32 @llvm.abs.i32(i32 %9979, i1 false)
  %9981 = urem i32 %9980, 1000
  %9982 = zext i32 %9981 to i64
  %9983 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9982
  %9984 = bitcast i32* %9983 to i64*
  %9985 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9984, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9986 = trunc i64 %9985 to i32
  %9987 = add nsw i32 %9986, 1
  %9988 = bitcast [1 x %struct.ds_base]* %749 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9988, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %9989 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %749, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9987, i32* nonnull %9983, %struct.ds_base* nonnull %9989, i32 1, i32 undef) #14
  %9990 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 749) to i64*), align 8, !tbaa !25
  %9991 = trunc i64 %9990 to i32
  %9992 = call i32 @llvm.abs.i32(i32 %9991, i1 false)
  %9993 = urem i32 %9992, 1000
  %9994 = zext i32 %9993 to i64
  %9995 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %9994
  %9996 = bitcast i32* %9995 to i64*
  %9997 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %9996, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %9998 = trunc i64 %9997 to i32
  %9999 = add nsw i32 %9998, 1
  %10000 = bitcast [1 x %struct.ds_base]* %750 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10000, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10001 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %750, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %9999, i32* nonnull %9995, %struct.ds_base* nonnull %10001, i32 1, i32 undef) #14
  %10002 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 750) to i64*), align 8, !tbaa !25
  %10003 = trunc i64 %10002 to i32
  %10004 = call i32 @llvm.abs.i32(i32 %10003, i1 false)
  %10005 = urem i32 %10004, 1000
  %10006 = zext i32 %10005 to i64
  %10007 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10006
  %10008 = bitcast i32* %10007 to i64*
  %10009 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10008, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10010 = trunc i64 %10009 to i32
  %10011 = add nsw i32 %10010, 1
  %10012 = bitcast [1 x %struct.ds_base]* %751 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10012, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10013 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %751, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10011, i32* nonnull %10007, %struct.ds_base* nonnull %10013, i32 1, i32 undef) #14
  %10014 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 751) to i64*), align 8, !tbaa !25
  %10015 = trunc i64 %10014 to i32
  %10016 = call i32 @llvm.abs.i32(i32 %10015, i1 false)
  %10017 = urem i32 %10016, 1000
  %10018 = zext i32 %10017 to i64
  %10019 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10018
  %10020 = bitcast i32* %10019 to i64*
  %10021 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10020, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10022 = trunc i64 %10021 to i32
  %10023 = add nsw i32 %10022, 1
  %10024 = bitcast [1 x %struct.ds_base]* %752 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10024, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10025 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %752, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10023, i32* nonnull %10019, %struct.ds_base* nonnull %10025, i32 1, i32 undef) #14
  %10026 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 752) to i64*), align 16, !tbaa !25
  %10027 = trunc i64 %10026 to i32
  %10028 = call i32 @llvm.abs.i32(i32 %10027, i1 false)
  %10029 = urem i32 %10028, 1000
  %10030 = zext i32 %10029 to i64
  %10031 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10030
  %10032 = bitcast i32* %10031 to i64*
  %10033 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10032, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10034 = trunc i64 %10033 to i32
  %10035 = add nsw i32 %10034, 1
  %10036 = bitcast [1 x %struct.ds_base]* %753 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10036, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10037 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %753, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10035, i32* nonnull %10031, %struct.ds_base* nonnull %10037, i32 1, i32 undef) #14
  %10038 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 753) to i64*), align 8, !tbaa !25
  %10039 = trunc i64 %10038 to i32
  %10040 = call i32 @llvm.abs.i32(i32 %10039, i1 false)
  %10041 = urem i32 %10040, 1000
  %10042 = zext i32 %10041 to i64
  %10043 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10042
  %10044 = bitcast i32* %10043 to i64*
  %10045 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10044, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10046 = trunc i64 %10045 to i32
  %10047 = add nsw i32 %10046, 1
  %10048 = bitcast [1 x %struct.ds_base]* %754 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10048, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10049 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %754, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10047, i32* nonnull %10043, %struct.ds_base* nonnull %10049, i32 1, i32 undef) #14
  %10050 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 754) to i64*), align 8, !tbaa !25
  %10051 = trunc i64 %10050 to i32
  %10052 = call i32 @llvm.abs.i32(i32 %10051, i1 false)
  %10053 = urem i32 %10052, 1000
  %10054 = zext i32 %10053 to i64
  %10055 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10054
  %10056 = bitcast i32* %10055 to i64*
  %10057 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10056, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10058 = trunc i64 %10057 to i32
  %10059 = add nsw i32 %10058, 1
  %10060 = bitcast [1 x %struct.ds_base]* %755 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10060, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10061 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %755, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10059, i32* nonnull %10055, %struct.ds_base* nonnull %10061, i32 1, i32 undef) #14
  %10062 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 755) to i64*), align 8, !tbaa !25
  %10063 = trunc i64 %10062 to i32
  %10064 = call i32 @llvm.abs.i32(i32 %10063, i1 false)
  %10065 = urem i32 %10064, 1000
  %10066 = zext i32 %10065 to i64
  %10067 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10066
  %10068 = bitcast i32* %10067 to i64*
  %10069 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10068, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10070 = trunc i64 %10069 to i32
  %10071 = add nsw i32 %10070, 1
  %10072 = bitcast [1 x %struct.ds_base]* %756 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10072, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10073 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %756, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10071, i32* nonnull %10067, %struct.ds_base* nonnull %10073, i32 1, i32 undef) #14
  %10074 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 756) to i64*), align 16, !tbaa !25
  %10075 = trunc i64 %10074 to i32
  %10076 = call i32 @llvm.abs.i32(i32 %10075, i1 false)
  %10077 = urem i32 %10076, 1000
  %10078 = zext i32 %10077 to i64
  %10079 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10078
  %10080 = bitcast i32* %10079 to i64*
  %10081 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10080, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10082 = trunc i64 %10081 to i32
  %10083 = add nsw i32 %10082, 1
  %10084 = bitcast [1 x %struct.ds_base]* %757 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10084, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10085 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %757, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10083, i32* nonnull %10079, %struct.ds_base* nonnull %10085, i32 1, i32 undef) #14
  %10086 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 757) to i64*), align 8, !tbaa !25
  %10087 = trunc i64 %10086 to i32
  %10088 = call i32 @llvm.abs.i32(i32 %10087, i1 false)
  %10089 = urem i32 %10088, 1000
  %10090 = zext i32 %10089 to i64
  %10091 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10090
  %10092 = bitcast i32* %10091 to i64*
  %10093 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10092, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10094 = trunc i64 %10093 to i32
  %10095 = add nsw i32 %10094, 1
  %10096 = bitcast [1 x %struct.ds_base]* %758 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10096, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10097 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %758, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10095, i32* nonnull %10091, %struct.ds_base* nonnull %10097, i32 1, i32 undef) #14
  %10098 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 758) to i64*), align 8, !tbaa !25
  %10099 = trunc i64 %10098 to i32
  %10100 = call i32 @llvm.abs.i32(i32 %10099, i1 false)
  %10101 = urem i32 %10100, 1000
  %10102 = zext i32 %10101 to i64
  %10103 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10102
  %10104 = bitcast i32* %10103 to i64*
  %10105 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10104, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10106 = trunc i64 %10105 to i32
  %10107 = add nsw i32 %10106, 1
  %10108 = bitcast [1 x %struct.ds_base]* %759 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10108, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10109 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %759, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10107, i32* nonnull %10103, %struct.ds_base* nonnull %10109, i32 1, i32 undef) #14
  %10110 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 759) to i64*), align 8, !tbaa !25
  %10111 = trunc i64 %10110 to i32
  %10112 = call i32 @llvm.abs.i32(i32 %10111, i1 false)
  %10113 = urem i32 %10112, 1000
  %10114 = zext i32 %10113 to i64
  %10115 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10114
  %10116 = bitcast i32* %10115 to i64*
  %10117 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10116, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10118 = trunc i64 %10117 to i32
  %10119 = add nsw i32 %10118, 1
  %10120 = bitcast [1 x %struct.ds_base]* %760 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10120, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10121 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %760, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10119, i32* nonnull %10115, %struct.ds_base* nonnull %10121, i32 1, i32 undef) #14
  %10122 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 760) to i64*), align 16, !tbaa !25
  %10123 = trunc i64 %10122 to i32
  %10124 = call i32 @llvm.abs.i32(i32 %10123, i1 false)
  %10125 = urem i32 %10124, 1000
  %10126 = zext i32 %10125 to i64
  %10127 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10126
  %10128 = bitcast i32* %10127 to i64*
  %10129 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10128, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10130 = trunc i64 %10129 to i32
  %10131 = add nsw i32 %10130, 1
  %10132 = bitcast [1 x %struct.ds_base]* %761 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10132, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10133 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %761, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10131, i32* nonnull %10127, %struct.ds_base* nonnull %10133, i32 1, i32 undef) #14
  %10134 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 761) to i64*), align 8, !tbaa !25
  %10135 = trunc i64 %10134 to i32
  %10136 = call i32 @llvm.abs.i32(i32 %10135, i1 false)
  %10137 = urem i32 %10136, 1000
  %10138 = zext i32 %10137 to i64
  %10139 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10138
  %10140 = bitcast i32* %10139 to i64*
  %10141 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10140, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10142 = trunc i64 %10141 to i32
  %10143 = add nsw i32 %10142, 1
  %10144 = bitcast [1 x %struct.ds_base]* %762 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10144, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10145 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %762, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10143, i32* nonnull %10139, %struct.ds_base* nonnull %10145, i32 1, i32 undef) #14
  %10146 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 762) to i64*), align 8, !tbaa !25
  %10147 = trunc i64 %10146 to i32
  %10148 = call i32 @llvm.abs.i32(i32 %10147, i1 false)
  %10149 = urem i32 %10148, 1000
  %10150 = zext i32 %10149 to i64
  %10151 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10150
  %10152 = bitcast i32* %10151 to i64*
  %10153 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10152, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10154 = trunc i64 %10153 to i32
  %10155 = add nsw i32 %10154, 1
  %10156 = bitcast [1 x %struct.ds_base]* %763 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10156, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10157 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %763, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10155, i32* nonnull %10151, %struct.ds_base* nonnull %10157, i32 1, i32 undef) #14
  %10158 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 763) to i64*), align 8, !tbaa !25
  %10159 = trunc i64 %10158 to i32
  %10160 = call i32 @llvm.abs.i32(i32 %10159, i1 false)
  %10161 = urem i32 %10160, 1000
  %10162 = zext i32 %10161 to i64
  %10163 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10162
  %10164 = bitcast i32* %10163 to i64*
  %10165 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10164, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10166 = trunc i64 %10165 to i32
  %10167 = add nsw i32 %10166, 1
  %10168 = bitcast [1 x %struct.ds_base]* %764 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10168, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10169 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %764, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10167, i32* nonnull %10163, %struct.ds_base* nonnull %10169, i32 1, i32 undef) #14
  %10170 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 764) to i64*), align 16, !tbaa !25
  %10171 = trunc i64 %10170 to i32
  %10172 = call i32 @llvm.abs.i32(i32 %10171, i1 false)
  %10173 = urem i32 %10172, 1000
  %10174 = zext i32 %10173 to i64
  %10175 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10174
  %10176 = bitcast i32* %10175 to i64*
  %10177 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10176, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10178 = trunc i64 %10177 to i32
  %10179 = add nsw i32 %10178, 1
  %10180 = bitcast [1 x %struct.ds_base]* %765 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10180, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10181 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %765, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10179, i32* nonnull %10175, %struct.ds_base* nonnull %10181, i32 1, i32 undef) #14
  %10182 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 765) to i64*), align 8, !tbaa !25
  %10183 = trunc i64 %10182 to i32
  %10184 = call i32 @llvm.abs.i32(i32 %10183, i1 false)
  %10185 = urem i32 %10184, 1000
  %10186 = zext i32 %10185 to i64
  %10187 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10186
  %10188 = bitcast i32* %10187 to i64*
  %10189 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10188, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10190 = trunc i64 %10189 to i32
  %10191 = add nsw i32 %10190, 1
  %10192 = bitcast [1 x %struct.ds_base]* %766 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10192, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10193 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %766, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10191, i32* nonnull %10187, %struct.ds_base* nonnull %10193, i32 1, i32 undef) #14
  %10194 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 766) to i64*), align 8, !tbaa !25
  %10195 = trunc i64 %10194 to i32
  %10196 = call i32 @llvm.abs.i32(i32 %10195, i1 false)
  %10197 = urem i32 %10196, 1000
  %10198 = zext i32 %10197 to i64
  %10199 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10198
  %10200 = bitcast i32* %10199 to i64*
  %10201 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10200, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10202 = trunc i64 %10201 to i32
  %10203 = add nsw i32 %10202, 1
  %10204 = bitcast [1 x %struct.ds_base]* %767 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10204, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10205 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %767, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10203, i32* nonnull %10199, %struct.ds_base* nonnull %10205, i32 1, i32 undef) #14
  %10206 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 767) to i64*), align 8, !tbaa !25
  %10207 = trunc i64 %10206 to i32
  %10208 = call i32 @llvm.abs.i32(i32 %10207, i1 false)
  %10209 = urem i32 %10208, 1000
  %10210 = zext i32 %10209 to i64
  %10211 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10210
  %10212 = bitcast i32* %10211 to i64*
  %10213 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10212, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10214 = trunc i64 %10213 to i32
  %10215 = add nsw i32 %10214, 1
  %10216 = bitcast [1 x %struct.ds_base]* %768 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10216, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10217 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %768, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10215, i32* nonnull %10211, %struct.ds_base* nonnull %10217, i32 1, i32 undef) #14
  %10218 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 768) to i64*), align 16, !tbaa !25
  %10219 = trunc i64 %10218 to i32
  %10220 = call i32 @llvm.abs.i32(i32 %10219, i1 false)
  %10221 = urem i32 %10220, 1000
  %10222 = zext i32 %10221 to i64
  %10223 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10222
  %10224 = bitcast i32* %10223 to i64*
  %10225 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10224, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10226 = trunc i64 %10225 to i32
  %10227 = add nsw i32 %10226, 1
  %10228 = bitcast [1 x %struct.ds_base]* %769 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10228, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10229 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %769, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10227, i32* nonnull %10223, %struct.ds_base* nonnull %10229, i32 1, i32 undef) #14
  %10230 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 769) to i64*), align 8, !tbaa !25
  %10231 = trunc i64 %10230 to i32
  %10232 = call i32 @llvm.abs.i32(i32 %10231, i1 false)
  %10233 = urem i32 %10232, 1000
  %10234 = zext i32 %10233 to i64
  %10235 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10234
  %10236 = bitcast i32* %10235 to i64*
  %10237 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10236, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10238 = trunc i64 %10237 to i32
  %10239 = add nsw i32 %10238, 1
  %10240 = bitcast [1 x %struct.ds_base]* %770 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10240, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10241 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %770, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10239, i32* nonnull %10235, %struct.ds_base* nonnull %10241, i32 1, i32 undef) #14
  %10242 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 770) to i64*), align 8, !tbaa !25
  %10243 = trunc i64 %10242 to i32
  %10244 = call i32 @llvm.abs.i32(i32 %10243, i1 false)
  %10245 = urem i32 %10244, 1000
  %10246 = zext i32 %10245 to i64
  %10247 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10246
  %10248 = bitcast i32* %10247 to i64*
  %10249 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10248, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10250 = trunc i64 %10249 to i32
  %10251 = add nsw i32 %10250, 1
  %10252 = bitcast [1 x %struct.ds_base]* %771 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10252, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10253 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %771, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10251, i32* nonnull %10247, %struct.ds_base* nonnull %10253, i32 1, i32 undef) #14
  %10254 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 771) to i64*), align 8, !tbaa !25
  %10255 = trunc i64 %10254 to i32
  %10256 = call i32 @llvm.abs.i32(i32 %10255, i1 false)
  %10257 = urem i32 %10256, 1000
  %10258 = zext i32 %10257 to i64
  %10259 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10258
  %10260 = bitcast i32* %10259 to i64*
  %10261 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10260, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10262 = trunc i64 %10261 to i32
  %10263 = add nsw i32 %10262, 1
  %10264 = bitcast [1 x %struct.ds_base]* %772 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10264, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10265 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %772, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10263, i32* nonnull %10259, %struct.ds_base* nonnull %10265, i32 1, i32 undef) #14
  %10266 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 772) to i64*), align 16, !tbaa !25
  %10267 = trunc i64 %10266 to i32
  %10268 = call i32 @llvm.abs.i32(i32 %10267, i1 false)
  %10269 = urem i32 %10268, 1000
  %10270 = zext i32 %10269 to i64
  %10271 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10270
  %10272 = bitcast i32* %10271 to i64*
  %10273 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10272, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10274 = trunc i64 %10273 to i32
  %10275 = add nsw i32 %10274, 1
  %10276 = bitcast [1 x %struct.ds_base]* %773 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10276, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10277 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %773, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10275, i32* nonnull %10271, %struct.ds_base* nonnull %10277, i32 1, i32 undef) #14
  %10278 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 773) to i64*), align 8, !tbaa !25
  %10279 = trunc i64 %10278 to i32
  %10280 = call i32 @llvm.abs.i32(i32 %10279, i1 false)
  %10281 = urem i32 %10280, 1000
  %10282 = zext i32 %10281 to i64
  %10283 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10282
  %10284 = bitcast i32* %10283 to i64*
  %10285 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10284, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10286 = trunc i64 %10285 to i32
  %10287 = add nsw i32 %10286, 1
  %10288 = bitcast [1 x %struct.ds_base]* %774 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10288, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10289 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %774, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10287, i32* nonnull %10283, %struct.ds_base* nonnull %10289, i32 1, i32 undef) #14
  %10290 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 774) to i64*), align 8, !tbaa !25
  %10291 = trunc i64 %10290 to i32
  %10292 = call i32 @llvm.abs.i32(i32 %10291, i1 false)
  %10293 = urem i32 %10292, 1000
  %10294 = zext i32 %10293 to i64
  %10295 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10294
  %10296 = bitcast i32* %10295 to i64*
  %10297 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10296, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10298 = trunc i64 %10297 to i32
  %10299 = add nsw i32 %10298, 1
  %10300 = bitcast [1 x %struct.ds_base]* %775 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10300, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10301 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %775, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10299, i32* nonnull %10295, %struct.ds_base* nonnull %10301, i32 1, i32 undef) #14
  %10302 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 775) to i64*), align 8, !tbaa !25
  %10303 = trunc i64 %10302 to i32
  %10304 = call i32 @llvm.abs.i32(i32 %10303, i1 false)
  %10305 = urem i32 %10304, 1000
  %10306 = zext i32 %10305 to i64
  %10307 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10306
  %10308 = bitcast i32* %10307 to i64*
  %10309 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10308, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10310 = trunc i64 %10309 to i32
  %10311 = add nsw i32 %10310, 1
  %10312 = bitcast [1 x %struct.ds_base]* %776 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10312, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10313 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %776, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10311, i32* nonnull %10307, %struct.ds_base* nonnull %10313, i32 1, i32 undef) #14
  %10314 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 776) to i64*), align 16, !tbaa !25
  %10315 = trunc i64 %10314 to i32
  %10316 = call i32 @llvm.abs.i32(i32 %10315, i1 false)
  %10317 = urem i32 %10316, 1000
  %10318 = zext i32 %10317 to i64
  %10319 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10318
  %10320 = bitcast i32* %10319 to i64*
  %10321 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10320, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10322 = trunc i64 %10321 to i32
  %10323 = add nsw i32 %10322, 1
  %10324 = bitcast [1 x %struct.ds_base]* %777 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10324, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10325 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %777, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10323, i32* nonnull %10319, %struct.ds_base* nonnull %10325, i32 1, i32 undef) #14
  %10326 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 777) to i64*), align 8, !tbaa !25
  %10327 = trunc i64 %10326 to i32
  %10328 = call i32 @llvm.abs.i32(i32 %10327, i1 false)
  %10329 = urem i32 %10328, 1000
  %10330 = zext i32 %10329 to i64
  %10331 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10330
  %10332 = bitcast i32* %10331 to i64*
  %10333 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10332, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10334 = trunc i64 %10333 to i32
  %10335 = add nsw i32 %10334, 1
  %10336 = bitcast [1 x %struct.ds_base]* %778 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10336, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10337 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %778, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10335, i32* nonnull %10331, %struct.ds_base* nonnull %10337, i32 1, i32 undef) #14
  %10338 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 778) to i64*), align 8, !tbaa !25
  %10339 = trunc i64 %10338 to i32
  %10340 = call i32 @llvm.abs.i32(i32 %10339, i1 false)
  %10341 = urem i32 %10340, 1000
  %10342 = zext i32 %10341 to i64
  %10343 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10342
  %10344 = bitcast i32* %10343 to i64*
  %10345 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10344, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10346 = trunc i64 %10345 to i32
  %10347 = add nsw i32 %10346, 1
  %10348 = bitcast [1 x %struct.ds_base]* %779 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10348, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10349 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %779, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10347, i32* nonnull %10343, %struct.ds_base* nonnull %10349, i32 1, i32 undef) #14
  %10350 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 779) to i64*), align 8, !tbaa !25
  %10351 = trunc i64 %10350 to i32
  %10352 = call i32 @llvm.abs.i32(i32 %10351, i1 false)
  %10353 = urem i32 %10352, 1000
  %10354 = zext i32 %10353 to i64
  %10355 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10354
  %10356 = bitcast i32* %10355 to i64*
  %10357 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10356, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10358 = trunc i64 %10357 to i32
  %10359 = add nsw i32 %10358, 1
  %10360 = bitcast [1 x %struct.ds_base]* %780 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10360, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10361 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %780, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10359, i32* nonnull %10355, %struct.ds_base* nonnull %10361, i32 1, i32 undef) #14
  %10362 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 780) to i64*), align 16, !tbaa !25
  %10363 = trunc i64 %10362 to i32
  %10364 = call i32 @llvm.abs.i32(i32 %10363, i1 false)
  %10365 = urem i32 %10364, 1000
  %10366 = zext i32 %10365 to i64
  %10367 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10366
  %10368 = bitcast i32* %10367 to i64*
  %10369 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10368, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10370 = trunc i64 %10369 to i32
  %10371 = add nsw i32 %10370, 1
  %10372 = bitcast [1 x %struct.ds_base]* %781 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10372, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10373 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %781, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10371, i32* nonnull %10367, %struct.ds_base* nonnull %10373, i32 1, i32 undef) #14
  %10374 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 781) to i64*), align 8, !tbaa !25
  %10375 = trunc i64 %10374 to i32
  %10376 = call i32 @llvm.abs.i32(i32 %10375, i1 false)
  %10377 = urem i32 %10376, 1000
  %10378 = zext i32 %10377 to i64
  %10379 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10378
  %10380 = bitcast i32* %10379 to i64*
  %10381 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10380, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10382 = trunc i64 %10381 to i32
  %10383 = add nsw i32 %10382, 1
  %10384 = bitcast [1 x %struct.ds_base]* %782 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10384, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10385 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %782, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10383, i32* nonnull %10379, %struct.ds_base* nonnull %10385, i32 1, i32 undef) #14
  %10386 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 782) to i64*), align 8, !tbaa !25
  %10387 = trunc i64 %10386 to i32
  %10388 = call i32 @llvm.abs.i32(i32 %10387, i1 false)
  %10389 = urem i32 %10388, 1000
  %10390 = zext i32 %10389 to i64
  %10391 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10390
  %10392 = bitcast i32* %10391 to i64*
  %10393 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10392, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10394 = trunc i64 %10393 to i32
  %10395 = add nsw i32 %10394, 1
  %10396 = bitcast [1 x %struct.ds_base]* %783 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10396, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10397 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %783, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10395, i32* nonnull %10391, %struct.ds_base* nonnull %10397, i32 1, i32 undef) #14
  %10398 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 783) to i64*), align 8, !tbaa !25
  %10399 = trunc i64 %10398 to i32
  %10400 = call i32 @llvm.abs.i32(i32 %10399, i1 false)
  %10401 = urem i32 %10400, 1000
  %10402 = zext i32 %10401 to i64
  %10403 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10402
  %10404 = bitcast i32* %10403 to i64*
  %10405 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10404, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10406 = trunc i64 %10405 to i32
  %10407 = add nsw i32 %10406, 1
  %10408 = bitcast [1 x %struct.ds_base]* %784 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10408, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10409 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %784, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10407, i32* nonnull %10403, %struct.ds_base* nonnull %10409, i32 1, i32 undef) #14
  %10410 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 784) to i64*), align 16, !tbaa !25
  %10411 = trunc i64 %10410 to i32
  %10412 = call i32 @llvm.abs.i32(i32 %10411, i1 false)
  %10413 = urem i32 %10412, 1000
  %10414 = zext i32 %10413 to i64
  %10415 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10414
  %10416 = bitcast i32* %10415 to i64*
  %10417 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10416, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10418 = trunc i64 %10417 to i32
  %10419 = add nsw i32 %10418, 1
  %10420 = bitcast [1 x %struct.ds_base]* %785 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10420, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10421 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %785, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10419, i32* nonnull %10415, %struct.ds_base* nonnull %10421, i32 1, i32 undef) #14
  %10422 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 785) to i64*), align 8, !tbaa !25
  %10423 = trunc i64 %10422 to i32
  %10424 = call i32 @llvm.abs.i32(i32 %10423, i1 false)
  %10425 = urem i32 %10424, 1000
  %10426 = zext i32 %10425 to i64
  %10427 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10426
  %10428 = bitcast i32* %10427 to i64*
  %10429 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10428, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10430 = trunc i64 %10429 to i32
  %10431 = add nsw i32 %10430, 1
  %10432 = bitcast [1 x %struct.ds_base]* %786 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10432, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10433 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %786, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10431, i32* nonnull %10427, %struct.ds_base* nonnull %10433, i32 1, i32 undef) #14
  %10434 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 786) to i64*), align 8, !tbaa !25
  %10435 = trunc i64 %10434 to i32
  %10436 = call i32 @llvm.abs.i32(i32 %10435, i1 false)
  %10437 = urem i32 %10436, 1000
  %10438 = zext i32 %10437 to i64
  %10439 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10438
  %10440 = bitcast i32* %10439 to i64*
  %10441 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10440, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10442 = trunc i64 %10441 to i32
  %10443 = add nsw i32 %10442, 1
  %10444 = bitcast [1 x %struct.ds_base]* %787 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10444, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10445 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %787, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10443, i32* nonnull %10439, %struct.ds_base* nonnull %10445, i32 1, i32 undef) #14
  %10446 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 787) to i64*), align 8, !tbaa !25
  %10447 = trunc i64 %10446 to i32
  %10448 = call i32 @llvm.abs.i32(i32 %10447, i1 false)
  %10449 = urem i32 %10448, 1000
  %10450 = zext i32 %10449 to i64
  %10451 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10450
  %10452 = bitcast i32* %10451 to i64*
  %10453 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10452, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10454 = trunc i64 %10453 to i32
  %10455 = add nsw i32 %10454, 1
  %10456 = bitcast [1 x %struct.ds_base]* %788 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10456, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10457 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %788, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10455, i32* nonnull %10451, %struct.ds_base* nonnull %10457, i32 1, i32 undef) #14
  %10458 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 788) to i64*), align 16, !tbaa !25
  %10459 = trunc i64 %10458 to i32
  %10460 = call i32 @llvm.abs.i32(i32 %10459, i1 false)
  %10461 = urem i32 %10460, 1000
  %10462 = zext i32 %10461 to i64
  %10463 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10462
  %10464 = bitcast i32* %10463 to i64*
  %10465 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10464, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10466 = trunc i64 %10465 to i32
  %10467 = add nsw i32 %10466, 1
  %10468 = bitcast [1 x %struct.ds_base]* %789 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10468, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10469 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %789, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10467, i32* nonnull %10463, %struct.ds_base* nonnull %10469, i32 1, i32 undef) #14
  %10470 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 789) to i64*), align 8, !tbaa !25
  %10471 = trunc i64 %10470 to i32
  %10472 = call i32 @llvm.abs.i32(i32 %10471, i1 false)
  %10473 = urem i32 %10472, 1000
  %10474 = zext i32 %10473 to i64
  %10475 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10474
  %10476 = bitcast i32* %10475 to i64*
  %10477 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10476, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10478 = trunc i64 %10477 to i32
  %10479 = add nsw i32 %10478, 1
  %10480 = bitcast [1 x %struct.ds_base]* %790 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10480, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10481 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %790, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10479, i32* nonnull %10475, %struct.ds_base* nonnull %10481, i32 1, i32 undef) #14
  %10482 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 790) to i64*), align 8, !tbaa !25
  %10483 = trunc i64 %10482 to i32
  %10484 = call i32 @llvm.abs.i32(i32 %10483, i1 false)
  %10485 = urem i32 %10484, 1000
  %10486 = zext i32 %10485 to i64
  %10487 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10486
  %10488 = bitcast i32* %10487 to i64*
  %10489 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10488, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10490 = trunc i64 %10489 to i32
  %10491 = add nsw i32 %10490, 1
  %10492 = bitcast [1 x %struct.ds_base]* %791 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10492, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10493 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %791, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10491, i32* nonnull %10487, %struct.ds_base* nonnull %10493, i32 1, i32 undef) #14
  %10494 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 791) to i64*), align 8, !tbaa !25
  %10495 = trunc i64 %10494 to i32
  %10496 = call i32 @llvm.abs.i32(i32 %10495, i1 false)
  %10497 = urem i32 %10496, 1000
  %10498 = zext i32 %10497 to i64
  %10499 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10498
  %10500 = bitcast i32* %10499 to i64*
  %10501 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10500, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10502 = trunc i64 %10501 to i32
  %10503 = add nsw i32 %10502, 1
  %10504 = bitcast [1 x %struct.ds_base]* %792 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10504, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10505 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %792, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10503, i32* nonnull %10499, %struct.ds_base* nonnull %10505, i32 1, i32 undef) #14
  %10506 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 792) to i64*), align 16, !tbaa !25
  %10507 = trunc i64 %10506 to i32
  %10508 = call i32 @llvm.abs.i32(i32 %10507, i1 false)
  %10509 = urem i32 %10508, 1000
  %10510 = zext i32 %10509 to i64
  %10511 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10510
  %10512 = bitcast i32* %10511 to i64*
  %10513 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10512, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10514 = trunc i64 %10513 to i32
  %10515 = add nsw i32 %10514, 1
  %10516 = bitcast [1 x %struct.ds_base]* %793 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10516, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10517 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %793, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10515, i32* nonnull %10511, %struct.ds_base* nonnull %10517, i32 1, i32 undef) #14
  %10518 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 793) to i64*), align 8, !tbaa !25
  %10519 = trunc i64 %10518 to i32
  %10520 = call i32 @llvm.abs.i32(i32 %10519, i1 false)
  %10521 = urem i32 %10520, 1000
  %10522 = zext i32 %10521 to i64
  %10523 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10522
  %10524 = bitcast i32* %10523 to i64*
  %10525 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10524, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10526 = trunc i64 %10525 to i32
  %10527 = add nsw i32 %10526, 1
  %10528 = bitcast [1 x %struct.ds_base]* %794 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10528, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10529 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %794, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10527, i32* nonnull %10523, %struct.ds_base* nonnull %10529, i32 1, i32 undef) #14
  %10530 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 794) to i64*), align 8, !tbaa !25
  %10531 = trunc i64 %10530 to i32
  %10532 = call i32 @llvm.abs.i32(i32 %10531, i1 false)
  %10533 = urem i32 %10532, 1000
  %10534 = zext i32 %10533 to i64
  %10535 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10534
  %10536 = bitcast i32* %10535 to i64*
  %10537 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10536, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10538 = trunc i64 %10537 to i32
  %10539 = add nsw i32 %10538, 1
  %10540 = bitcast [1 x %struct.ds_base]* %795 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10540, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10541 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %795, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10539, i32* nonnull %10535, %struct.ds_base* nonnull %10541, i32 1, i32 undef) #14
  %10542 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 795) to i64*), align 8, !tbaa !25
  %10543 = trunc i64 %10542 to i32
  %10544 = call i32 @llvm.abs.i32(i32 %10543, i1 false)
  %10545 = urem i32 %10544, 1000
  %10546 = zext i32 %10545 to i64
  %10547 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10546
  %10548 = bitcast i32* %10547 to i64*
  %10549 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10548, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10550 = trunc i64 %10549 to i32
  %10551 = add nsw i32 %10550, 1
  %10552 = bitcast [1 x %struct.ds_base]* %796 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10552, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10553 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %796, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10551, i32* nonnull %10547, %struct.ds_base* nonnull %10553, i32 1, i32 undef) #14
  %10554 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 796) to i64*), align 16, !tbaa !25
  %10555 = trunc i64 %10554 to i32
  %10556 = call i32 @llvm.abs.i32(i32 %10555, i1 false)
  %10557 = urem i32 %10556, 1000
  %10558 = zext i32 %10557 to i64
  %10559 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10558
  %10560 = bitcast i32* %10559 to i64*
  %10561 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10560, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10562 = trunc i64 %10561 to i32
  %10563 = add nsw i32 %10562, 1
  %10564 = bitcast [1 x %struct.ds_base]* %797 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10564, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10565 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %797, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10563, i32* nonnull %10559, %struct.ds_base* nonnull %10565, i32 1, i32 undef) #14
  %10566 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 797) to i64*), align 8, !tbaa !25
  %10567 = trunc i64 %10566 to i32
  %10568 = call i32 @llvm.abs.i32(i32 %10567, i1 false)
  %10569 = urem i32 %10568, 1000
  %10570 = zext i32 %10569 to i64
  %10571 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10570
  %10572 = bitcast i32* %10571 to i64*
  %10573 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10572, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10574 = trunc i64 %10573 to i32
  %10575 = add nsw i32 %10574, 1
  %10576 = bitcast [1 x %struct.ds_base]* %798 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10576, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10577 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %798, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10575, i32* nonnull %10571, %struct.ds_base* nonnull %10577, i32 1, i32 undef) #14
  %10578 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 798) to i64*), align 8, !tbaa !25
  %10579 = trunc i64 %10578 to i32
  %10580 = call i32 @llvm.abs.i32(i32 %10579, i1 false)
  %10581 = urem i32 %10580, 1000
  %10582 = zext i32 %10581 to i64
  %10583 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10582
  %10584 = bitcast i32* %10583 to i64*
  %10585 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10584, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10586 = trunc i64 %10585 to i32
  %10587 = add nsw i32 %10586, 1
  %10588 = bitcast [1 x %struct.ds_base]* %799 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10588, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10589 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %799, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10587, i32* nonnull %10583, %struct.ds_base* nonnull %10589, i32 1, i32 undef) #14
  %10590 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 799) to i64*), align 8, !tbaa !25
  %10591 = trunc i64 %10590 to i32
  %10592 = call i32 @llvm.abs.i32(i32 %10591, i1 false)
  %10593 = urem i32 %10592, 1000
  %10594 = zext i32 %10593 to i64
  %10595 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10594
  %10596 = bitcast i32* %10595 to i64*
  %10597 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10596, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10598 = trunc i64 %10597 to i32
  %10599 = add nsw i32 %10598, 1
  %10600 = bitcast [1 x %struct.ds_base]* %800 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10600, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10601 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %800, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10599, i32* nonnull %10595, %struct.ds_base* nonnull %10601, i32 1, i32 undef) #14
  %10602 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 800) to i64*), align 16, !tbaa !25
  %10603 = trunc i64 %10602 to i32
  %10604 = call i32 @llvm.abs.i32(i32 %10603, i1 false)
  %10605 = urem i32 %10604, 1000
  %10606 = zext i32 %10605 to i64
  %10607 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10606
  %10608 = bitcast i32* %10607 to i64*
  %10609 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10608, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10610 = trunc i64 %10609 to i32
  %10611 = add nsw i32 %10610, 1
  %10612 = bitcast [1 x %struct.ds_base]* %801 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10612, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10613 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %801, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10611, i32* nonnull %10607, %struct.ds_base* nonnull %10613, i32 1, i32 undef) #14
  %10614 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 801) to i64*), align 8, !tbaa !25
  %10615 = trunc i64 %10614 to i32
  %10616 = call i32 @llvm.abs.i32(i32 %10615, i1 false)
  %10617 = urem i32 %10616, 1000
  %10618 = zext i32 %10617 to i64
  %10619 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10618
  %10620 = bitcast i32* %10619 to i64*
  %10621 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10620, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10622 = trunc i64 %10621 to i32
  %10623 = add nsw i32 %10622, 1
  %10624 = bitcast [1 x %struct.ds_base]* %802 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10624, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10625 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %802, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10623, i32* nonnull %10619, %struct.ds_base* nonnull %10625, i32 1, i32 undef) #14
  %10626 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 802) to i64*), align 8, !tbaa !25
  %10627 = trunc i64 %10626 to i32
  %10628 = call i32 @llvm.abs.i32(i32 %10627, i1 false)
  %10629 = urem i32 %10628, 1000
  %10630 = zext i32 %10629 to i64
  %10631 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10630
  %10632 = bitcast i32* %10631 to i64*
  %10633 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10632, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10634 = trunc i64 %10633 to i32
  %10635 = add nsw i32 %10634, 1
  %10636 = bitcast [1 x %struct.ds_base]* %803 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10636, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10637 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %803, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10635, i32* nonnull %10631, %struct.ds_base* nonnull %10637, i32 1, i32 undef) #14
  %10638 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 803) to i64*), align 8, !tbaa !25
  %10639 = trunc i64 %10638 to i32
  %10640 = call i32 @llvm.abs.i32(i32 %10639, i1 false)
  %10641 = urem i32 %10640, 1000
  %10642 = zext i32 %10641 to i64
  %10643 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10642
  %10644 = bitcast i32* %10643 to i64*
  %10645 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10644, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10646 = trunc i64 %10645 to i32
  %10647 = add nsw i32 %10646, 1
  %10648 = bitcast [1 x %struct.ds_base]* %804 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10648, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10649 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %804, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10647, i32* nonnull %10643, %struct.ds_base* nonnull %10649, i32 1, i32 undef) #14
  %10650 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 804) to i64*), align 16, !tbaa !25
  %10651 = trunc i64 %10650 to i32
  %10652 = call i32 @llvm.abs.i32(i32 %10651, i1 false)
  %10653 = urem i32 %10652, 1000
  %10654 = zext i32 %10653 to i64
  %10655 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10654
  %10656 = bitcast i32* %10655 to i64*
  %10657 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10656, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10658 = trunc i64 %10657 to i32
  %10659 = add nsw i32 %10658, 1
  %10660 = bitcast [1 x %struct.ds_base]* %805 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10660, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10661 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %805, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10659, i32* nonnull %10655, %struct.ds_base* nonnull %10661, i32 1, i32 undef) #14
  %10662 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 805) to i64*), align 8, !tbaa !25
  %10663 = trunc i64 %10662 to i32
  %10664 = call i32 @llvm.abs.i32(i32 %10663, i1 false)
  %10665 = urem i32 %10664, 1000
  %10666 = zext i32 %10665 to i64
  %10667 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10666
  %10668 = bitcast i32* %10667 to i64*
  %10669 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10668, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10670 = trunc i64 %10669 to i32
  %10671 = add nsw i32 %10670, 1
  %10672 = bitcast [1 x %struct.ds_base]* %806 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10672, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10673 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %806, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10671, i32* nonnull %10667, %struct.ds_base* nonnull %10673, i32 1, i32 undef) #14
  %10674 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 806) to i64*), align 8, !tbaa !25
  %10675 = trunc i64 %10674 to i32
  %10676 = call i32 @llvm.abs.i32(i32 %10675, i1 false)
  %10677 = urem i32 %10676, 1000
  %10678 = zext i32 %10677 to i64
  %10679 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10678
  %10680 = bitcast i32* %10679 to i64*
  %10681 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10680, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10682 = trunc i64 %10681 to i32
  %10683 = add nsw i32 %10682, 1
  %10684 = bitcast [1 x %struct.ds_base]* %807 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10684, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10685 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %807, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10683, i32* nonnull %10679, %struct.ds_base* nonnull %10685, i32 1, i32 undef) #14
  %10686 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 807) to i64*), align 8, !tbaa !25
  %10687 = trunc i64 %10686 to i32
  %10688 = call i32 @llvm.abs.i32(i32 %10687, i1 false)
  %10689 = urem i32 %10688, 1000
  %10690 = zext i32 %10689 to i64
  %10691 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10690
  %10692 = bitcast i32* %10691 to i64*
  %10693 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10692, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10694 = trunc i64 %10693 to i32
  %10695 = add nsw i32 %10694, 1
  %10696 = bitcast [1 x %struct.ds_base]* %808 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10696, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10697 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %808, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10695, i32* nonnull %10691, %struct.ds_base* nonnull %10697, i32 1, i32 undef) #14
  %10698 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 808) to i64*), align 16, !tbaa !25
  %10699 = trunc i64 %10698 to i32
  %10700 = call i32 @llvm.abs.i32(i32 %10699, i1 false)
  %10701 = urem i32 %10700, 1000
  %10702 = zext i32 %10701 to i64
  %10703 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10702
  %10704 = bitcast i32* %10703 to i64*
  %10705 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10704, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10706 = trunc i64 %10705 to i32
  %10707 = add nsw i32 %10706, 1
  %10708 = bitcast [1 x %struct.ds_base]* %809 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10708, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10709 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %809, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10707, i32* nonnull %10703, %struct.ds_base* nonnull %10709, i32 1, i32 undef) #14
  %10710 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 809) to i64*), align 8, !tbaa !25
  %10711 = trunc i64 %10710 to i32
  %10712 = call i32 @llvm.abs.i32(i32 %10711, i1 false)
  %10713 = urem i32 %10712, 1000
  %10714 = zext i32 %10713 to i64
  %10715 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10714
  %10716 = bitcast i32* %10715 to i64*
  %10717 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10716, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10718 = trunc i64 %10717 to i32
  %10719 = add nsw i32 %10718, 1
  %10720 = bitcast [1 x %struct.ds_base]* %810 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10720, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10721 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %810, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10719, i32* nonnull %10715, %struct.ds_base* nonnull %10721, i32 1, i32 undef) #14
  %10722 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 810) to i64*), align 8, !tbaa !25
  %10723 = trunc i64 %10722 to i32
  %10724 = call i32 @llvm.abs.i32(i32 %10723, i1 false)
  %10725 = urem i32 %10724, 1000
  %10726 = zext i32 %10725 to i64
  %10727 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10726
  %10728 = bitcast i32* %10727 to i64*
  %10729 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10728, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10730 = trunc i64 %10729 to i32
  %10731 = add nsw i32 %10730, 1
  %10732 = bitcast [1 x %struct.ds_base]* %811 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10732, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10733 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %811, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10731, i32* nonnull %10727, %struct.ds_base* nonnull %10733, i32 1, i32 undef) #14
  %10734 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 811) to i64*), align 8, !tbaa !25
  %10735 = trunc i64 %10734 to i32
  %10736 = call i32 @llvm.abs.i32(i32 %10735, i1 false)
  %10737 = urem i32 %10736, 1000
  %10738 = zext i32 %10737 to i64
  %10739 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10738
  %10740 = bitcast i32* %10739 to i64*
  %10741 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10740, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10742 = trunc i64 %10741 to i32
  %10743 = add nsw i32 %10742, 1
  %10744 = bitcast [1 x %struct.ds_base]* %812 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10744, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10745 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %812, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10743, i32* nonnull %10739, %struct.ds_base* nonnull %10745, i32 1, i32 undef) #14
  %10746 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 812) to i64*), align 16, !tbaa !25
  %10747 = trunc i64 %10746 to i32
  %10748 = call i32 @llvm.abs.i32(i32 %10747, i1 false)
  %10749 = urem i32 %10748, 1000
  %10750 = zext i32 %10749 to i64
  %10751 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10750
  %10752 = bitcast i32* %10751 to i64*
  %10753 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10752, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10754 = trunc i64 %10753 to i32
  %10755 = add nsw i32 %10754, 1
  %10756 = bitcast [1 x %struct.ds_base]* %813 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10756, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10757 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %813, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10755, i32* nonnull %10751, %struct.ds_base* nonnull %10757, i32 1, i32 undef) #14
  %10758 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 813) to i64*), align 8, !tbaa !25
  %10759 = trunc i64 %10758 to i32
  %10760 = call i32 @llvm.abs.i32(i32 %10759, i1 false)
  %10761 = urem i32 %10760, 1000
  %10762 = zext i32 %10761 to i64
  %10763 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10762
  %10764 = bitcast i32* %10763 to i64*
  %10765 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10764, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10766 = trunc i64 %10765 to i32
  %10767 = add nsw i32 %10766, 1
  %10768 = bitcast [1 x %struct.ds_base]* %814 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10768, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10769 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %814, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10767, i32* nonnull %10763, %struct.ds_base* nonnull %10769, i32 1, i32 undef) #14
  %10770 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 814) to i64*), align 8, !tbaa !25
  %10771 = trunc i64 %10770 to i32
  %10772 = call i32 @llvm.abs.i32(i32 %10771, i1 false)
  %10773 = urem i32 %10772, 1000
  %10774 = zext i32 %10773 to i64
  %10775 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10774
  %10776 = bitcast i32* %10775 to i64*
  %10777 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10776, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10778 = trunc i64 %10777 to i32
  %10779 = add nsw i32 %10778, 1
  %10780 = bitcast [1 x %struct.ds_base]* %815 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10780, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10781 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %815, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10779, i32* nonnull %10775, %struct.ds_base* nonnull %10781, i32 1, i32 undef) #14
  %10782 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 815) to i64*), align 8, !tbaa !25
  %10783 = trunc i64 %10782 to i32
  %10784 = call i32 @llvm.abs.i32(i32 %10783, i1 false)
  %10785 = urem i32 %10784, 1000
  %10786 = zext i32 %10785 to i64
  %10787 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10786
  %10788 = bitcast i32* %10787 to i64*
  %10789 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10788, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10790 = trunc i64 %10789 to i32
  %10791 = add nsw i32 %10790, 1
  %10792 = bitcast [1 x %struct.ds_base]* %816 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10792, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10793 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %816, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10791, i32* nonnull %10787, %struct.ds_base* nonnull %10793, i32 1, i32 undef) #14
  %10794 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 816) to i64*), align 16, !tbaa !25
  %10795 = trunc i64 %10794 to i32
  %10796 = call i32 @llvm.abs.i32(i32 %10795, i1 false)
  %10797 = urem i32 %10796, 1000
  %10798 = zext i32 %10797 to i64
  %10799 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10798
  %10800 = bitcast i32* %10799 to i64*
  %10801 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10800, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10802 = trunc i64 %10801 to i32
  %10803 = add nsw i32 %10802, 1
  %10804 = bitcast [1 x %struct.ds_base]* %817 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10804, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10805 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %817, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10803, i32* nonnull %10799, %struct.ds_base* nonnull %10805, i32 1, i32 undef) #14
  %10806 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 817) to i64*), align 8, !tbaa !25
  %10807 = trunc i64 %10806 to i32
  %10808 = call i32 @llvm.abs.i32(i32 %10807, i1 false)
  %10809 = urem i32 %10808, 1000
  %10810 = zext i32 %10809 to i64
  %10811 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10810
  %10812 = bitcast i32* %10811 to i64*
  %10813 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10812, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10814 = trunc i64 %10813 to i32
  %10815 = add nsw i32 %10814, 1
  %10816 = bitcast [1 x %struct.ds_base]* %818 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10816, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10817 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %818, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10815, i32* nonnull %10811, %struct.ds_base* nonnull %10817, i32 1, i32 undef) #14
  %10818 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 818) to i64*), align 8, !tbaa !25
  %10819 = trunc i64 %10818 to i32
  %10820 = call i32 @llvm.abs.i32(i32 %10819, i1 false)
  %10821 = urem i32 %10820, 1000
  %10822 = zext i32 %10821 to i64
  %10823 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10822
  %10824 = bitcast i32* %10823 to i64*
  %10825 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10824, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10826 = trunc i64 %10825 to i32
  %10827 = add nsw i32 %10826, 1
  %10828 = bitcast [1 x %struct.ds_base]* %819 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10828, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10829 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %819, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10827, i32* nonnull %10823, %struct.ds_base* nonnull %10829, i32 1, i32 undef) #14
  %10830 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 819) to i64*), align 8, !tbaa !25
  %10831 = trunc i64 %10830 to i32
  %10832 = call i32 @llvm.abs.i32(i32 %10831, i1 false)
  %10833 = urem i32 %10832, 1000
  %10834 = zext i32 %10833 to i64
  %10835 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10834
  %10836 = bitcast i32* %10835 to i64*
  %10837 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10836, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10838 = trunc i64 %10837 to i32
  %10839 = add nsw i32 %10838, 1
  %10840 = bitcast [1 x %struct.ds_base]* %820 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10840, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10841 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %820, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10839, i32* nonnull %10835, %struct.ds_base* nonnull %10841, i32 1, i32 undef) #14
  %10842 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 820) to i64*), align 16, !tbaa !25
  %10843 = trunc i64 %10842 to i32
  %10844 = call i32 @llvm.abs.i32(i32 %10843, i1 false)
  %10845 = urem i32 %10844, 1000
  %10846 = zext i32 %10845 to i64
  %10847 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10846
  %10848 = bitcast i32* %10847 to i64*
  %10849 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10848, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10850 = trunc i64 %10849 to i32
  %10851 = add nsw i32 %10850, 1
  %10852 = bitcast [1 x %struct.ds_base]* %821 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10852, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10853 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %821, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10851, i32* nonnull %10847, %struct.ds_base* nonnull %10853, i32 1, i32 undef) #14
  %10854 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 821) to i64*), align 8, !tbaa !25
  %10855 = trunc i64 %10854 to i32
  %10856 = call i32 @llvm.abs.i32(i32 %10855, i1 false)
  %10857 = urem i32 %10856, 1000
  %10858 = zext i32 %10857 to i64
  %10859 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10858
  %10860 = bitcast i32* %10859 to i64*
  %10861 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10860, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10862 = trunc i64 %10861 to i32
  %10863 = add nsw i32 %10862, 1
  %10864 = bitcast [1 x %struct.ds_base]* %822 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10864, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10865 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %822, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10863, i32* nonnull %10859, %struct.ds_base* nonnull %10865, i32 1, i32 undef) #14
  %10866 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 822) to i64*), align 8, !tbaa !25
  %10867 = trunc i64 %10866 to i32
  %10868 = call i32 @llvm.abs.i32(i32 %10867, i1 false)
  %10869 = urem i32 %10868, 1000
  %10870 = zext i32 %10869 to i64
  %10871 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10870
  %10872 = bitcast i32* %10871 to i64*
  %10873 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10872, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10874 = trunc i64 %10873 to i32
  %10875 = add nsw i32 %10874, 1
  %10876 = bitcast [1 x %struct.ds_base]* %823 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10876, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10877 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %823, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10875, i32* nonnull %10871, %struct.ds_base* nonnull %10877, i32 1, i32 undef) #14
  %10878 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 823) to i64*), align 8, !tbaa !25
  %10879 = trunc i64 %10878 to i32
  %10880 = call i32 @llvm.abs.i32(i32 %10879, i1 false)
  %10881 = urem i32 %10880, 1000
  %10882 = zext i32 %10881 to i64
  %10883 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10882
  %10884 = bitcast i32* %10883 to i64*
  %10885 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10884, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10886 = trunc i64 %10885 to i32
  %10887 = add nsw i32 %10886, 1
  %10888 = bitcast [1 x %struct.ds_base]* %824 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10888, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10889 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %824, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10887, i32* nonnull %10883, %struct.ds_base* nonnull %10889, i32 1, i32 undef) #14
  %10890 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 824) to i64*), align 16, !tbaa !25
  %10891 = trunc i64 %10890 to i32
  %10892 = call i32 @llvm.abs.i32(i32 %10891, i1 false)
  %10893 = urem i32 %10892, 1000
  %10894 = zext i32 %10893 to i64
  %10895 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10894
  %10896 = bitcast i32* %10895 to i64*
  %10897 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10896, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10898 = trunc i64 %10897 to i32
  %10899 = add nsw i32 %10898, 1
  %10900 = bitcast [1 x %struct.ds_base]* %825 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10900, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10901 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %825, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10899, i32* nonnull %10895, %struct.ds_base* nonnull %10901, i32 1, i32 undef) #14
  %10902 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 825) to i64*), align 8, !tbaa !25
  %10903 = trunc i64 %10902 to i32
  %10904 = call i32 @llvm.abs.i32(i32 %10903, i1 false)
  %10905 = urem i32 %10904, 1000
  %10906 = zext i32 %10905 to i64
  %10907 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10906
  %10908 = bitcast i32* %10907 to i64*
  %10909 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10908, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10910 = trunc i64 %10909 to i32
  %10911 = add nsw i32 %10910, 1
  %10912 = bitcast [1 x %struct.ds_base]* %826 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10912, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10913 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %826, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10911, i32* nonnull %10907, %struct.ds_base* nonnull %10913, i32 1, i32 undef) #14
  %10914 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 826) to i64*), align 8, !tbaa !25
  %10915 = trunc i64 %10914 to i32
  %10916 = call i32 @llvm.abs.i32(i32 %10915, i1 false)
  %10917 = urem i32 %10916, 1000
  %10918 = zext i32 %10917 to i64
  %10919 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10918
  %10920 = bitcast i32* %10919 to i64*
  %10921 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10920, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10922 = trunc i64 %10921 to i32
  %10923 = add nsw i32 %10922, 1
  %10924 = bitcast [1 x %struct.ds_base]* %827 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10924, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10925 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %827, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10923, i32* nonnull %10919, %struct.ds_base* nonnull %10925, i32 1, i32 undef) #14
  %10926 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 827) to i64*), align 8, !tbaa !25
  %10927 = trunc i64 %10926 to i32
  %10928 = call i32 @llvm.abs.i32(i32 %10927, i1 false)
  %10929 = urem i32 %10928, 1000
  %10930 = zext i32 %10929 to i64
  %10931 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10930
  %10932 = bitcast i32* %10931 to i64*
  %10933 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10932, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10934 = trunc i64 %10933 to i32
  %10935 = add nsw i32 %10934, 1
  %10936 = bitcast [1 x %struct.ds_base]* %828 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10936, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10937 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %828, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10935, i32* nonnull %10931, %struct.ds_base* nonnull %10937, i32 1, i32 undef) #14
  %10938 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 828) to i64*), align 16, !tbaa !25
  %10939 = trunc i64 %10938 to i32
  %10940 = call i32 @llvm.abs.i32(i32 %10939, i1 false)
  %10941 = urem i32 %10940, 1000
  %10942 = zext i32 %10941 to i64
  %10943 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10942
  %10944 = bitcast i32* %10943 to i64*
  %10945 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10944, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10946 = trunc i64 %10945 to i32
  %10947 = add nsw i32 %10946, 1
  %10948 = bitcast [1 x %struct.ds_base]* %829 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10948, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10949 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %829, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10947, i32* nonnull %10943, %struct.ds_base* nonnull %10949, i32 1, i32 undef) #14
  %10950 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 829) to i64*), align 8, !tbaa !25
  %10951 = trunc i64 %10950 to i32
  %10952 = call i32 @llvm.abs.i32(i32 %10951, i1 false)
  %10953 = urem i32 %10952, 1000
  %10954 = zext i32 %10953 to i64
  %10955 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10954
  %10956 = bitcast i32* %10955 to i64*
  %10957 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10956, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10958 = trunc i64 %10957 to i32
  %10959 = add nsw i32 %10958, 1
  %10960 = bitcast [1 x %struct.ds_base]* %830 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10960, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10961 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %830, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10959, i32* nonnull %10955, %struct.ds_base* nonnull %10961, i32 1, i32 undef) #14
  %10962 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 830) to i64*), align 8, !tbaa !25
  %10963 = trunc i64 %10962 to i32
  %10964 = call i32 @llvm.abs.i32(i32 %10963, i1 false)
  %10965 = urem i32 %10964, 1000
  %10966 = zext i32 %10965 to i64
  %10967 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10966
  %10968 = bitcast i32* %10967 to i64*
  %10969 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10968, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10970 = trunc i64 %10969 to i32
  %10971 = add nsw i32 %10970, 1
  %10972 = bitcast [1 x %struct.ds_base]* %831 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10972, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10973 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %831, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10971, i32* nonnull %10967, %struct.ds_base* nonnull %10973, i32 1, i32 undef) #14
  %10974 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 831) to i64*), align 8, !tbaa !25
  %10975 = trunc i64 %10974 to i32
  %10976 = call i32 @llvm.abs.i32(i32 %10975, i1 false)
  %10977 = urem i32 %10976, 1000
  %10978 = zext i32 %10977 to i64
  %10979 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10978
  %10980 = bitcast i32* %10979 to i64*
  %10981 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10980, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10982 = trunc i64 %10981 to i32
  %10983 = add nsw i32 %10982, 1
  %10984 = bitcast [1 x %struct.ds_base]* %832 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10984, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10985 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %832, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10983, i32* nonnull %10979, %struct.ds_base* nonnull %10985, i32 1, i32 undef) #14
  %10986 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 832) to i64*), align 16, !tbaa !25
  %10987 = trunc i64 %10986 to i32
  %10988 = call i32 @llvm.abs.i32(i32 %10987, i1 false)
  %10989 = urem i32 %10988, 1000
  %10990 = zext i32 %10989 to i64
  %10991 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %10990
  %10992 = bitcast i32* %10991 to i64*
  %10993 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %10992, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %10994 = trunc i64 %10993 to i32
  %10995 = add nsw i32 %10994, 1
  %10996 = bitcast [1 x %struct.ds_base]* %833 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10996, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %10997 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %833, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %10995, i32* nonnull %10991, %struct.ds_base* nonnull %10997, i32 1, i32 undef) #14
  %10998 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 833) to i64*), align 8, !tbaa !25
  %10999 = trunc i64 %10998 to i32
  %11000 = call i32 @llvm.abs.i32(i32 %10999, i1 false)
  %11001 = urem i32 %11000, 1000
  %11002 = zext i32 %11001 to i64
  %11003 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11002
  %11004 = bitcast i32* %11003 to i64*
  %11005 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11004, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11006 = trunc i64 %11005 to i32
  %11007 = add nsw i32 %11006, 1
  %11008 = bitcast [1 x %struct.ds_base]* %834 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11008, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11009 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %834, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11007, i32* nonnull %11003, %struct.ds_base* nonnull %11009, i32 1, i32 undef) #14
  %11010 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 834) to i64*), align 8, !tbaa !25
  %11011 = trunc i64 %11010 to i32
  %11012 = call i32 @llvm.abs.i32(i32 %11011, i1 false)
  %11013 = urem i32 %11012, 1000
  %11014 = zext i32 %11013 to i64
  %11015 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11014
  %11016 = bitcast i32* %11015 to i64*
  %11017 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11016, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11018 = trunc i64 %11017 to i32
  %11019 = add nsw i32 %11018, 1
  %11020 = bitcast [1 x %struct.ds_base]* %835 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11020, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11021 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %835, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11019, i32* nonnull %11015, %struct.ds_base* nonnull %11021, i32 1, i32 undef) #14
  %11022 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 835) to i64*), align 8, !tbaa !25
  %11023 = trunc i64 %11022 to i32
  %11024 = call i32 @llvm.abs.i32(i32 %11023, i1 false)
  %11025 = urem i32 %11024, 1000
  %11026 = zext i32 %11025 to i64
  %11027 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11026
  %11028 = bitcast i32* %11027 to i64*
  %11029 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11028, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11030 = trunc i64 %11029 to i32
  %11031 = add nsw i32 %11030, 1
  %11032 = bitcast [1 x %struct.ds_base]* %836 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11032, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11033 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %836, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11031, i32* nonnull %11027, %struct.ds_base* nonnull %11033, i32 1, i32 undef) #14
  %11034 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 836) to i64*), align 16, !tbaa !25
  %11035 = trunc i64 %11034 to i32
  %11036 = call i32 @llvm.abs.i32(i32 %11035, i1 false)
  %11037 = urem i32 %11036, 1000
  %11038 = zext i32 %11037 to i64
  %11039 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11038
  %11040 = bitcast i32* %11039 to i64*
  %11041 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11040, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11042 = trunc i64 %11041 to i32
  %11043 = add nsw i32 %11042, 1
  %11044 = bitcast [1 x %struct.ds_base]* %837 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11044, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11045 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %837, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11043, i32* nonnull %11039, %struct.ds_base* nonnull %11045, i32 1, i32 undef) #14
  %11046 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 837) to i64*), align 8, !tbaa !25
  %11047 = trunc i64 %11046 to i32
  %11048 = call i32 @llvm.abs.i32(i32 %11047, i1 false)
  %11049 = urem i32 %11048, 1000
  %11050 = zext i32 %11049 to i64
  %11051 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11050
  %11052 = bitcast i32* %11051 to i64*
  %11053 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11052, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11054 = trunc i64 %11053 to i32
  %11055 = add nsw i32 %11054, 1
  %11056 = bitcast [1 x %struct.ds_base]* %838 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11056, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11057 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %838, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11055, i32* nonnull %11051, %struct.ds_base* nonnull %11057, i32 1, i32 undef) #14
  %11058 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 838) to i64*), align 8, !tbaa !25
  %11059 = trunc i64 %11058 to i32
  %11060 = call i32 @llvm.abs.i32(i32 %11059, i1 false)
  %11061 = urem i32 %11060, 1000
  %11062 = zext i32 %11061 to i64
  %11063 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11062
  %11064 = bitcast i32* %11063 to i64*
  %11065 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11064, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11066 = trunc i64 %11065 to i32
  %11067 = add nsw i32 %11066, 1
  %11068 = bitcast [1 x %struct.ds_base]* %839 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11068, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11069 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %839, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11067, i32* nonnull %11063, %struct.ds_base* nonnull %11069, i32 1, i32 undef) #14
  %11070 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 839) to i64*), align 8, !tbaa !25
  %11071 = trunc i64 %11070 to i32
  %11072 = call i32 @llvm.abs.i32(i32 %11071, i1 false)
  %11073 = urem i32 %11072, 1000
  %11074 = zext i32 %11073 to i64
  %11075 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11074
  %11076 = bitcast i32* %11075 to i64*
  %11077 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11076, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11078 = trunc i64 %11077 to i32
  %11079 = add nsw i32 %11078, 1
  %11080 = bitcast [1 x %struct.ds_base]* %840 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11080, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11081 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %840, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11079, i32* nonnull %11075, %struct.ds_base* nonnull %11081, i32 1, i32 undef) #14
  %11082 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 840) to i64*), align 16, !tbaa !25
  %11083 = trunc i64 %11082 to i32
  %11084 = call i32 @llvm.abs.i32(i32 %11083, i1 false)
  %11085 = urem i32 %11084, 1000
  %11086 = zext i32 %11085 to i64
  %11087 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11086
  %11088 = bitcast i32* %11087 to i64*
  %11089 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11088, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11090 = trunc i64 %11089 to i32
  %11091 = add nsw i32 %11090, 1
  %11092 = bitcast [1 x %struct.ds_base]* %841 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11092, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11093 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %841, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11091, i32* nonnull %11087, %struct.ds_base* nonnull %11093, i32 1, i32 undef) #14
  %11094 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 841) to i64*), align 8, !tbaa !25
  %11095 = trunc i64 %11094 to i32
  %11096 = call i32 @llvm.abs.i32(i32 %11095, i1 false)
  %11097 = urem i32 %11096, 1000
  %11098 = zext i32 %11097 to i64
  %11099 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11098
  %11100 = bitcast i32* %11099 to i64*
  %11101 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11100, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11102 = trunc i64 %11101 to i32
  %11103 = add nsw i32 %11102, 1
  %11104 = bitcast [1 x %struct.ds_base]* %842 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11104, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11105 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %842, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11103, i32* nonnull %11099, %struct.ds_base* nonnull %11105, i32 1, i32 undef) #14
  %11106 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 842) to i64*), align 8, !tbaa !25
  %11107 = trunc i64 %11106 to i32
  %11108 = call i32 @llvm.abs.i32(i32 %11107, i1 false)
  %11109 = urem i32 %11108, 1000
  %11110 = zext i32 %11109 to i64
  %11111 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11110
  %11112 = bitcast i32* %11111 to i64*
  %11113 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11112, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11114 = trunc i64 %11113 to i32
  %11115 = add nsw i32 %11114, 1
  %11116 = bitcast [1 x %struct.ds_base]* %843 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11116, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11117 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %843, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11115, i32* nonnull %11111, %struct.ds_base* nonnull %11117, i32 1, i32 undef) #14
  %11118 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 843) to i64*), align 8, !tbaa !25
  %11119 = trunc i64 %11118 to i32
  %11120 = call i32 @llvm.abs.i32(i32 %11119, i1 false)
  %11121 = urem i32 %11120, 1000
  %11122 = zext i32 %11121 to i64
  %11123 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11122
  %11124 = bitcast i32* %11123 to i64*
  %11125 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11124, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11126 = trunc i64 %11125 to i32
  %11127 = add nsw i32 %11126, 1
  %11128 = bitcast [1 x %struct.ds_base]* %844 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11128, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11129 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %844, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11127, i32* nonnull %11123, %struct.ds_base* nonnull %11129, i32 1, i32 undef) #14
  %11130 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 844) to i64*), align 16, !tbaa !25
  %11131 = trunc i64 %11130 to i32
  %11132 = call i32 @llvm.abs.i32(i32 %11131, i1 false)
  %11133 = urem i32 %11132, 1000
  %11134 = zext i32 %11133 to i64
  %11135 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11134
  %11136 = bitcast i32* %11135 to i64*
  %11137 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11136, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11138 = trunc i64 %11137 to i32
  %11139 = add nsw i32 %11138, 1
  %11140 = bitcast [1 x %struct.ds_base]* %845 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11140, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11141 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %845, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11139, i32* nonnull %11135, %struct.ds_base* nonnull %11141, i32 1, i32 undef) #14
  %11142 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 845) to i64*), align 8, !tbaa !25
  %11143 = trunc i64 %11142 to i32
  %11144 = call i32 @llvm.abs.i32(i32 %11143, i1 false)
  %11145 = urem i32 %11144, 1000
  %11146 = zext i32 %11145 to i64
  %11147 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11146
  %11148 = bitcast i32* %11147 to i64*
  %11149 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11148, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11150 = trunc i64 %11149 to i32
  %11151 = add nsw i32 %11150, 1
  %11152 = bitcast [1 x %struct.ds_base]* %846 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11152, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11153 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %846, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11151, i32* nonnull %11147, %struct.ds_base* nonnull %11153, i32 1, i32 undef) #14
  %11154 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 846) to i64*), align 8, !tbaa !25
  %11155 = trunc i64 %11154 to i32
  %11156 = call i32 @llvm.abs.i32(i32 %11155, i1 false)
  %11157 = urem i32 %11156, 1000
  %11158 = zext i32 %11157 to i64
  %11159 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11158
  %11160 = bitcast i32* %11159 to i64*
  %11161 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11160, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11162 = trunc i64 %11161 to i32
  %11163 = add nsw i32 %11162, 1
  %11164 = bitcast [1 x %struct.ds_base]* %847 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11164, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11165 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %847, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11163, i32* nonnull %11159, %struct.ds_base* nonnull %11165, i32 1, i32 undef) #14
  %11166 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 847) to i64*), align 8, !tbaa !25
  %11167 = trunc i64 %11166 to i32
  %11168 = call i32 @llvm.abs.i32(i32 %11167, i1 false)
  %11169 = urem i32 %11168, 1000
  %11170 = zext i32 %11169 to i64
  %11171 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11170
  %11172 = bitcast i32* %11171 to i64*
  %11173 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11172, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11174 = trunc i64 %11173 to i32
  %11175 = add nsw i32 %11174, 1
  %11176 = bitcast [1 x %struct.ds_base]* %848 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11176, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11177 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %848, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11175, i32* nonnull %11171, %struct.ds_base* nonnull %11177, i32 1, i32 undef) #14
  %11178 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 848) to i64*), align 16, !tbaa !25
  %11179 = trunc i64 %11178 to i32
  %11180 = call i32 @llvm.abs.i32(i32 %11179, i1 false)
  %11181 = urem i32 %11180, 1000
  %11182 = zext i32 %11181 to i64
  %11183 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11182
  %11184 = bitcast i32* %11183 to i64*
  %11185 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11184, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11186 = trunc i64 %11185 to i32
  %11187 = add nsw i32 %11186, 1
  %11188 = bitcast [1 x %struct.ds_base]* %849 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11188, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11189 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %849, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11187, i32* nonnull %11183, %struct.ds_base* nonnull %11189, i32 1, i32 undef) #14
  %11190 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 849) to i64*), align 8, !tbaa !25
  %11191 = trunc i64 %11190 to i32
  %11192 = call i32 @llvm.abs.i32(i32 %11191, i1 false)
  %11193 = urem i32 %11192, 1000
  %11194 = zext i32 %11193 to i64
  %11195 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11194
  %11196 = bitcast i32* %11195 to i64*
  %11197 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11196, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11198 = trunc i64 %11197 to i32
  %11199 = add nsw i32 %11198, 1
  %11200 = bitcast [1 x %struct.ds_base]* %850 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11200, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11201 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %850, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11199, i32* nonnull %11195, %struct.ds_base* nonnull %11201, i32 1, i32 undef) #14
  %11202 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 850) to i64*), align 8, !tbaa !25
  %11203 = trunc i64 %11202 to i32
  %11204 = call i32 @llvm.abs.i32(i32 %11203, i1 false)
  %11205 = urem i32 %11204, 1000
  %11206 = zext i32 %11205 to i64
  %11207 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11206
  %11208 = bitcast i32* %11207 to i64*
  %11209 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11208, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11210 = trunc i64 %11209 to i32
  %11211 = add nsw i32 %11210, 1
  %11212 = bitcast [1 x %struct.ds_base]* %851 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11212, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11213 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %851, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11211, i32* nonnull %11207, %struct.ds_base* nonnull %11213, i32 1, i32 undef) #14
  %11214 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 851) to i64*), align 8, !tbaa !25
  %11215 = trunc i64 %11214 to i32
  %11216 = call i32 @llvm.abs.i32(i32 %11215, i1 false)
  %11217 = urem i32 %11216, 1000
  %11218 = zext i32 %11217 to i64
  %11219 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11218
  %11220 = bitcast i32* %11219 to i64*
  %11221 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11220, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11222 = trunc i64 %11221 to i32
  %11223 = add nsw i32 %11222, 1
  %11224 = bitcast [1 x %struct.ds_base]* %852 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11224, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11225 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %852, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11223, i32* nonnull %11219, %struct.ds_base* nonnull %11225, i32 1, i32 undef) #14
  %11226 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 852) to i64*), align 16, !tbaa !25
  %11227 = trunc i64 %11226 to i32
  %11228 = call i32 @llvm.abs.i32(i32 %11227, i1 false)
  %11229 = urem i32 %11228, 1000
  %11230 = zext i32 %11229 to i64
  %11231 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11230
  %11232 = bitcast i32* %11231 to i64*
  %11233 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11232, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11234 = trunc i64 %11233 to i32
  %11235 = add nsw i32 %11234, 1
  %11236 = bitcast [1 x %struct.ds_base]* %853 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11236, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11237 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %853, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11235, i32* nonnull %11231, %struct.ds_base* nonnull %11237, i32 1, i32 undef) #14
  %11238 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 853) to i64*), align 8, !tbaa !25
  %11239 = trunc i64 %11238 to i32
  %11240 = call i32 @llvm.abs.i32(i32 %11239, i1 false)
  %11241 = urem i32 %11240, 1000
  %11242 = zext i32 %11241 to i64
  %11243 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11242
  %11244 = bitcast i32* %11243 to i64*
  %11245 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11244, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11246 = trunc i64 %11245 to i32
  %11247 = add nsw i32 %11246, 1
  %11248 = bitcast [1 x %struct.ds_base]* %854 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11248, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11249 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %854, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11247, i32* nonnull %11243, %struct.ds_base* nonnull %11249, i32 1, i32 undef) #14
  %11250 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 854) to i64*), align 8, !tbaa !25
  %11251 = trunc i64 %11250 to i32
  %11252 = call i32 @llvm.abs.i32(i32 %11251, i1 false)
  %11253 = urem i32 %11252, 1000
  %11254 = zext i32 %11253 to i64
  %11255 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11254
  %11256 = bitcast i32* %11255 to i64*
  %11257 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11256, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11258 = trunc i64 %11257 to i32
  %11259 = add nsw i32 %11258, 1
  %11260 = bitcast [1 x %struct.ds_base]* %855 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11260, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11261 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %855, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11259, i32* nonnull %11255, %struct.ds_base* nonnull %11261, i32 1, i32 undef) #14
  %11262 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 855) to i64*), align 8, !tbaa !25
  %11263 = trunc i64 %11262 to i32
  %11264 = call i32 @llvm.abs.i32(i32 %11263, i1 false)
  %11265 = urem i32 %11264, 1000
  %11266 = zext i32 %11265 to i64
  %11267 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11266
  %11268 = bitcast i32* %11267 to i64*
  %11269 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11268, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11270 = trunc i64 %11269 to i32
  %11271 = add nsw i32 %11270, 1
  %11272 = bitcast [1 x %struct.ds_base]* %856 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11272, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11273 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %856, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11271, i32* nonnull %11267, %struct.ds_base* nonnull %11273, i32 1, i32 undef) #14
  %11274 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 856) to i64*), align 16, !tbaa !25
  %11275 = trunc i64 %11274 to i32
  %11276 = call i32 @llvm.abs.i32(i32 %11275, i1 false)
  %11277 = urem i32 %11276, 1000
  %11278 = zext i32 %11277 to i64
  %11279 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11278
  %11280 = bitcast i32* %11279 to i64*
  %11281 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11280, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11282 = trunc i64 %11281 to i32
  %11283 = add nsw i32 %11282, 1
  %11284 = bitcast [1 x %struct.ds_base]* %857 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11284, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11285 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %857, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11283, i32* nonnull %11279, %struct.ds_base* nonnull %11285, i32 1, i32 undef) #14
  %11286 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 857) to i64*), align 8, !tbaa !25
  %11287 = trunc i64 %11286 to i32
  %11288 = call i32 @llvm.abs.i32(i32 %11287, i1 false)
  %11289 = urem i32 %11288, 1000
  %11290 = zext i32 %11289 to i64
  %11291 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11290
  %11292 = bitcast i32* %11291 to i64*
  %11293 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11292, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11294 = trunc i64 %11293 to i32
  %11295 = add nsw i32 %11294, 1
  %11296 = bitcast [1 x %struct.ds_base]* %858 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11296, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11297 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %858, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11295, i32* nonnull %11291, %struct.ds_base* nonnull %11297, i32 1, i32 undef) #14
  %11298 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 858) to i64*), align 8, !tbaa !25
  %11299 = trunc i64 %11298 to i32
  %11300 = call i32 @llvm.abs.i32(i32 %11299, i1 false)
  %11301 = urem i32 %11300, 1000
  %11302 = zext i32 %11301 to i64
  %11303 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11302
  %11304 = bitcast i32* %11303 to i64*
  %11305 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11304, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11306 = trunc i64 %11305 to i32
  %11307 = add nsw i32 %11306, 1
  %11308 = bitcast [1 x %struct.ds_base]* %859 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11308, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11309 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %859, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11307, i32* nonnull %11303, %struct.ds_base* nonnull %11309, i32 1, i32 undef) #14
  %11310 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 859) to i64*), align 8, !tbaa !25
  %11311 = trunc i64 %11310 to i32
  %11312 = call i32 @llvm.abs.i32(i32 %11311, i1 false)
  %11313 = urem i32 %11312, 1000
  %11314 = zext i32 %11313 to i64
  %11315 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11314
  %11316 = bitcast i32* %11315 to i64*
  %11317 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11316, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11318 = trunc i64 %11317 to i32
  %11319 = add nsw i32 %11318, 1
  %11320 = bitcast [1 x %struct.ds_base]* %860 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11320, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11321 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %860, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11319, i32* nonnull %11315, %struct.ds_base* nonnull %11321, i32 1, i32 undef) #14
  %11322 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 860) to i64*), align 16, !tbaa !25
  %11323 = trunc i64 %11322 to i32
  %11324 = call i32 @llvm.abs.i32(i32 %11323, i1 false)
  %11325 = urem i32 %11324, 1000
  %11326 = zext i32 %11325 to i64
  %11327 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11326
  %11328 = bitcast i32* %11327 to i64*
  %11329 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11328, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11330 = trunc i64 %11329 to i32
  %11331 = add nsw i32 %11330, 1
  %11332 = bitcast [1 x %struct.ds_base]* %861 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11332, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11333 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %861, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11331, i32* nonnull %11327, %struct.ds_base* nonnull %11333, i32 1, i32 undef) #14
  %11334 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 861) to i64*), align 8, !tbaa !25
  %11335 = trunc i64 %11334 to i32
  %11336 = call i32 @llvm.abs.i32(i32 %11335, i1 false)
  %11337 = urem i32 %11336, 1000
  %11338 = zext i32 %11337 to i64
  %11339 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11338
  %11340 = bitcast i32* %11339 to i64*
  %11341 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11340, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11342 = trunc i64 %11341 to i32
  %11343 = add nsw i32 %11342, 1
  %11344 = bitcast [1 x %struct.ds_base]* %862 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11344, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11345 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %862, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11343, i32* nonnull %11339, %struct.ds_base* nonnull %11345, i32 1, i32 undef) #14
  %11346 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 862) to i64*), align 8, !tbaa !25
  %11347 = trunc i64 %11346 to i32
  %11348 = call i32 @llvm.abs.i32(i32 %11347, i1 false)
  %11349 = urem i32 %11348, 1000
  %11350 = zext i32 %11349 to i64
  %11351 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11350
  %11352 = bitcast i32* %11351 to i64*
  %11353 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11352, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11354 = trunc i64 %11353 to i32
  %11355 = add nsw i32 %11354, 1
  %11356 = bitcast [1 x %struct.ds_base]* %863 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11356, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11357 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %863, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11355, i32* nonnull %11351, %struct.ds_base* nonnull %11357, i32 1, i32 undef) #14
  %11358 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 863) to i64*), align 8, !tbaa !25
  %11359 = trunc i64 %11358 to i32
  %11360 = call i32 @llvm.abs.i32(i32 %11359, i1 false)
  %11361 = urem i32 %11360, 1000
  %11362 = zext i32 %11361 to i64
  %11363 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11362
  %11364 = bitcast i32* %11363 to i64*
  %11365 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11364, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11366 = trunc i64 %11365 to i32
  %11367 = add nsw i32 %11366, 1
  %11368 = bitcast [1 x %struct.ds_base]* %864 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11368, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11369 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %864, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11367, i32* nonnull %11363, %struct.ds_base* nonnull %11369, i32 1, i32 undef) #14
  %11370 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 864) to i64*), align 16, !tbaa !25
  %11371 = trunc i64 %11370 to i32
  %11372 = call i32 @llvm.abs.i32(i32 %11371, i1 false)
  %11373 = urem i32 %11372, 1000
  %11374 = zext i32 %11373 to i64
  %11375 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11374
  %11376 = bitcast i32* %11375 to i64*
  %11377 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11376, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11378 = trunc i64 %11377 to i32
  %11379 = add nsw i32 %11378, 1
  %11380 = bitcast [1 x %struct.ds_base]* %865 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11380, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11381 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %865, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11379, i32* nonnull %11375, %struct.ds_base* nonnull %11381, i32 1, i32 undef) #14
  %11382 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 865) to i64*), align 8, !tbaa !25
  %11383 = trunc i64 %11382 to i32
  %11384 = call i32 @llvm.abs.i32(i32 %11383, i1 false)
  %11385 = urem i32 %11384, 1000
  %11386 = zext i32 %11385 to i64
  %11387 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11386
  %11388 = bitcast i32* %11387 to i64*
  %11389 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11388, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11390 = trunc i64 %11389 to i32
  %11391 = add nsw i32 %11390, 1
  %11392 = bitcast [1 x %struct.ds_base]* %866 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11392, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11393 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %866, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11391, i32* nonnull %11387, %struct.ds_base* nonnull %11393, i32 1, i32 undef) #14
  %11394 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 866) to i64*), align 8, !tbaa !25
  %11395 = trunc i64 %11394 to i32
  %11396 = call i32 @llvm.abs.i32(i32 %11395, i1 false)
  %11397 = urem i32 %11396, 1000
  %11398 = zext i32 %11397 to i64
  %11399 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11398
  %11400 = bitcast i32* %11399 to i64*
  %11401 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11400, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11402 = trunc i64 %11401 to i32
  %11403 = add nsw i32 %11402, 1
  %11404 = bitcast [1 x %struct.ds_base]* %867 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11404, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11405 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %867, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11403, i32* nonnull %11399, %struct.ds_base* nonnull %11405, i32 1, i32 undef) #14
  %11406 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 867) to i64*), align 8, !tbaa !25
  %11407 = trunc i64 %11406 to i32
  %11408 = call i32 @llvm.abs.i32(i32 %11407, i1 false)
  %11409 = urem i32 %11408, 1000
  %11410 = zext i32 %11409 to i64
  %11411 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11410
  %11412 = bitcast i32* %11411 to i64*
  %11413 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11412, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11414 = trunc i64 %11413 to i32
  %11415 = add nsw i32 %11414, 1
  %11416 = bitcast [1 x %struct.ds_base]* %868 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11416, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11417 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %868, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11415, i32* nonnull %11411, %struct.ds_base* nonnull %11417, i32 1, i32 undef) #14
  %11418 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 868) to i64*), align 16, !tbaa !25
  %11419 = trunc i64 %11418 to i32
  %11420 = call i32 @llvm.abs.i32(i32 %11419, i1 false)
  %11421 = urem i32 %11420, 1000
  %11422 = zext i32 %11421 to i64
  %11423 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11422
  %11424 = bitcast i32* %11423 to i64*
  %11425 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11424, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11426 = trunc i64 %11425 to i32
  %11427 = add nsw i32 %11426, 1
  %11428 = bitcast [1 x %struct.ds_base]* %869 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11428, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11429 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %869, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11427, i32* nonnull %11423, %struct.ds_base* nonnull %11429, i32 1, i32 undef) #14
  %11430 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 869) to i64*), align 8, !tbaa !25
  %11431 = trunc i64 %11430 to i32
  %11432 = call i32 @llvm.abs.i32(i32 %11431, i1 false)
  %11433 = urem i32 %11432, 1000
  %11434 = zext i32 %11433 to i64
  %11435 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11434
  %11436 = bitcast i32* %11435 to i64*
  %11437 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11436, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11438 = trunc i64 %11437 to i32
  %11439 = add nsw i32 %11438, 1
  %11440 = bitcast [1 x %struct.ds_base]* %870 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11440, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11441 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %870, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11439, i32* nonnull %11435, %struct.ds_base* nonnull %11441, i32 1, i32 undef) #14
  %11442 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 870) to i64*), align 8, !tbaa !25
  %11443 = trunc i64 %11442 to i32
  %11444 = call i32 @llvm.abs.i32(i32 %11443, i1 false)
  %11445 = urem i32 %11444, 1000
  %11446 = zext i32 %11445 to i64
  %11447 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11446
  %11448 = bitcast i32* %11447 to i64*
  %11449 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11448, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11450 = trunc i64 %11449 to i32
  %11451 = add nsw i32 %11450, 1
  %11452 = bitcast [1 x %struct.ds_base]* %871 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11452, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11453 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %871, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11451, i32* nonnull %11447, %struct.ds_base* nonnull %11453, i32 1, i32 undef) #14
  %11454 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 871) to i64*), align 8, !tbaa !25
  %11455 = trunc i64 %11454 to i32
  %11456 = call i32 @llvm.abs.i32(i32 %11455, i1 false)
  %11457 = urem i32 %11456, 1000
  %11458 = zext i32 %11457 to i64
  %11459 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11458
  %11460 = bitcast i32* %11459 to i64*
  %11461 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11460, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11462 = trunc i64 %11461 to i32
  %11463 = add nsw i32 %11462, 1
  %11464 = bitcast [1 x %struct.ds_base]* %872 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11464, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11465 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %872, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11463, i32* nonnull %11459, %struct.ds_base* nonnull %11465, i32 1, i32 undef) #14
  %11466 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 872) to i64*), align 16, !tbaa !25
  %11467 = trunc i64 %11466 to i32
  %11468 = call i32 @llvm.abs.i32(i32 %11467, i1 false)
  %11469 = urem i32 %11468, 1000
  %11470 = zext i32 %11469 to i64
  %11471 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11470
  %11472 = bitcast i32* %11471 to i64*
  %11473 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11472, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11474 = trunc i64 %11473 to i32
  %11475 = add nsw i32 %11474, 1
  %11476 = bitcast [1 x %struct.ds_base]* %873 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11476, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11477 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %873, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11475, i32* nonnull %11471, %struct.ds_base* nonnull %11477, i32 1, i32 undef) #14
  %11478 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 873) to i64*), align 8, !tbaa !25
  %11479 = trunc i64 %11478 to i32
  %11480 = call i32 @llvm.abs.i32(i32 %11479, i1 false)
  %11481 = urem i32 %11480, 1000
  %11482 = zext i32 %11481 to i64
  %11483 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11482
  %11484 = bitcast i32* %11483 to i64*
  %11485 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11484, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11486 = trunc i64 %11485 to i32
  %11487 = add nsw i32 %11486, 1
  %11488 = bitcast [1 x %struct.ds_base]* %874 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11488, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11489 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %874, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11487, i32* nonnull %11483, %struct.ds_base* nonnull %11489, i32 1, i32 undef) #14
  %11490 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 874) to i64*), align 8, !tbaa !25
  %11491 = trunc i64 %11490 to i32
  %11492 = call i32 @llvm.abs.i32(i32 %11491, i1 false)
  %11493 = urem i32 %11492, 1000
  %11494 = zext i32 %11493 to i64
  %11495 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11494
  %11496 = bitcast i32* %11495 to i64*
  %11497 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11496, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11498 = trunc i64 %11497 to i32
  %11499 = add nsw i32 %11498, 1
  %11500 = bitcast [1 x %struct.ds_base]* %875 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11500, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11501 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %875, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11499, i32* nonnull %11495, %struct.ds_base* nonnull %11501, i32 1, i32 undef) #14
  %11502 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 875) to i64*), align 8, !tbaa !25
  %11503 = trunc i64 %11502 to i32
  %11504 = call i32 @llvm.abs.i32(i32 %11503, i1 false)
  %11505 = urem i32 %11504, 1000
  %11506 = zext i32 %11505 to i64
  %11507 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11506
  %11508 = bitcast i32* %11507 to i64*
  %11509 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11508, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11510 = trunc i64 %11509 to i32
  %11511 = add nsw i32 %11510, 1
  %11512 = bitcast [1 x %struct.ds_base]* %876 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11512, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11513 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %876, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11511, i32* nonnull %11507, %struct.ds_base* nonnull %11513, i32 1, i32 undef) #14
  %11514 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 876) to i64*), align 16, !tbaa !25
  %11515 = trunc i64 %11514 to i32
  %11516 = call i32 @llvm.abs.i32(i32 %11515, i1 false)
  %11517 = urem i32 %11516, 1000
  %11518 = zext i32 %11517 to i64
  %11519 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11518
  %11520 = bitcast i32* %11519 to i64*
  %11521 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11520, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11522 = trunc i64 %11521 to i32
  %11523 = add nsw i32 %11522, 1
  %11524 = bitcast [1 x %struct.ds_base]* %877 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11524, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11525 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %877, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11523, i32* nonnull %11519, %struct.ds_base* nonnull %11525, i32 1, i32 undef) #14
  %11526 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 877) to i64*), align 8, !tbaa !25
  %11527 = trunc i64 %11526 to i32
  %11528 = call i32 @llvm.abs.i32(i32 %11527, i1 false)
  %11529 = urem i32 %11528, 1000
  %11530 = zext i32 %11529 to i64
  %11531 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11530
  %11532 = bitcast i32* %11531 to i64*
  %11533 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11532, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11534 = trunc i64 %11533 to i32
  %11535 = add nsw i32 %11534, 1
  %11536 = bitcast [1 x %struct.ds_base]* %878 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11536, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11537 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %878, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11535, i32* nonnull %11531, %struct.ds_base* nonnull %11537, i32 1, i32 undef) #14
  %11538 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 878) to i64*), align 8, !tbaa !25
  %11539 = trunc i64 %11538 to i32
  %11540 = call i32 @llvm.abs.i32(i32 %11539, i1 false)
  %11541 = urem i32 %11540, 1000
  %11542 = zext i32 %11541 to i64
  %11543 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11542
  %11544 = bitcast i32* %11543 to i64*
  %11545 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11544, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11546 = trunc i64 %11545 to i32
  %11547 = add nsw i32 %11546, 1
  %11548 = bitcast [1 x %struct.ds_base]* %879 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11548, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11549 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %879, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11547, i32* nonnull %11543, %struct.ds_base* nonnull %11549, i32 1, i32 undef) #14
  %11550 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 879) to i64*), align 8, !tbaa !25
  %11551 = trunc i64 %11550 to i32
  %11552 = call i32 @llvm.abs.i32(i32 %11551, i1 false)
  %11553 = urem i32 %11552, 1000
  %11554 = zext i32 %11553 to i64
  %11555 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11554
  %11556 = bitcast i32* %11555 to i64*
  %11557 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11556, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11558 = trunc i64 %11557 to i32
  %11559 = add nsw i32 %11558, 1
  %11560 = bitcast [1 x %struct.ds_base]* %880 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11560, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11561 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %880, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11559, i32* nonnull %11555, %struct.ds_base* nonnull %11561, i32 1, i32 undef) #14
  %11562 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 880) to i64*), align 16, !tbaa !25
  %11563 = trunc i64 %11562 to i32
  %11564 = call i32 @llvm.abs.i32(i32 %11563, i1 false)
  %11565 = urem i32 %11564, 1000
  %11566 = zext i32 %11565 to i64
  %11567 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11566
  %11568 = bitcast i32* %11567 to i64*
  %11569 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11568, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11570 = trunc i64 %11569 to i32
  %11571 = add nsw i32 %11570, 1
  %11572 = bitcast [1 x %struct.ds_base]* %881 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11572, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11573 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %881, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11571, i32* nonnull %11567, %struct.ds_base* nonnull %11573, i32 1, i32 undef) #14
  %11574 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 881) to i64*), align 8, !tbaa !25
  %11575 = trunc i64 %11574 to i32
  %11576 = call i32 @llvm.abs.i32(i32 %11575, i1 false)
  %11577 = urem i32 %11576, 1000
  %11578 = zext i32 %11577 to i64
  %11579 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11578
  %11580 = bitcast i32* %11579 to i64*
  %11581 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11580, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11582 = trunc i64 %11581 to i32
  %11583 = add nsw i32 %11582, 1
  %11584 = bitcast [1 x %struct.ds_base]* %882 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11584, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11585 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %882, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11583, i32* nonnull %11579, %struct.ds_base* nonnull %11585, i32 1, i32 undef) #14
  %11586 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 882) to i64*), align 8, !tbaa !25
  %11587 = trunc i64 %11586 to i32
  %11588 = call i32 @llvm.abs.i32(i32 %11587, i1 false)
  %11589 = urem i32 %11588, 1000
  %11590 = zext i32 %11589 to i64
  %11591 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11590
  %11592 = bitcast i32* %11591 to i64*
  %11593 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11592, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11594 = trunc i64 %11593 to i32
  %11595 = add nsw i32 %11594, 1
  %11596 = bitcast [1 x %struct.ds_base]* %883 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11596, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11597 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %883, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11595, i32* nonnull %11591, %struct.ds_base* nonnull %11597, i32 1, i32 undef) #14
  %11598 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 883) to i64*), align 8, !tbaa !25
  %11599 = trunc i64 %11598 to i32
  %11600 = call i32 @llvm.abs.i32(i32 %11599, i1 false)
  %11601 = urem i32 %11600, 1000
  %11602 = zext i32 %11601 to i64
  %11603 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11602
  %11604 = bitcast i32* %11603 to i64*
  %11605 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11604, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11606 = trunc i64 %11605 to i32
  %11607 = add nsw i32 %11606, 1
  %11608 = bitcast [1 x %struct.ds_base]* %884 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11608, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11609 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %884, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11607, i32* nonnull %11603, %struct.ds_base* nonnull %11609, i32 1, i32 undef) #14
  %11610 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 884) to i64*), align 16, !tbaa !25
  %11611 = trunc i64 %11610 to i32
  %11612 = call i32 @llvm.abs.i32(i32 %11611, i1 false)
  %11613 = urem i32 %11612, 1000
  %11614 = zext i32 %11613 to i64
  %11615 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11614
  %11616 = bitcast i32* %11615 to i64*
  %11617 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11616, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11618 = trunc i64 %11617 to i32
  %11619 = add nsw i32 %11618, 1
  %11620 = bitcast [1 x %struct.ds_base]* %885 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11620, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11621 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %885, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11619, i32* nonnull %11615, %struct.ds_base* nonnull %11621, i32 1, i32 undef) #14
  %11622 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 885) to i64*), align 8, !tbaa !25
  %11623 = trunc i64 %11622 to i32
  %11624 = call i32 @llvm.abs.i32(i32 %11623, i1 false)
  %11625 = urem i32 %11624, 1000
  %11626 = zext i32 %11625 to i64
  %11627 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11626
  %11628 = bitcast i32* %11627 to i64*
  %11629 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11628, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11630 = trunc i64 %11629 to i32
  %11631 = add nsw i32 %11630, 1
  %11632 = bitcast [1 x %struct.ds_base]* %886 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11632, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11633 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %886, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11631, i32* nonnull %11627, %struct.ds_base* nonnull %11633, i32 1, i32 undef) #14
  %11634 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 886) to i64*), align 8, !tbaa !25
  %11635 = trunc i64 %11634 to i32
  %11636 = call i32 @llvm.abs.i32(i32 %11635, i1 false)
  %11637 = urem i32 %11636, 1000
  %11638 = zext i32 %11637 to i64
  %11639 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11638
  %11640 = bitcast i32* %11639 to i64*
  %11641 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11640, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11642 = trunc i64 %11641 to i32
  %11643 = add nsw i32 %11642, 1
  %11644 = bitcast [1 x %struct.ds_base]* %887 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11644, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11645 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %887, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11643, i32* nonnull %11639, %struct.ds_base* nonnull %11645, i32 1, i32 undef) #14
  %11646 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 887) to i64*), align 8, !tbaa !25
  %11647 = trunc i64 %11646 to i32
  %11648 = call i32 @llvm.abs.i32(i32 %11647, i1 false)
  %11649 = urem i32 %11648, 1000
  %11650 = zext i32 %11649 to i64
  %11651 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11650
  %11652 = bitcast i32* %11651 to i64*
  %11653 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11652, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11654 = trunc i64 %11653 to i32
  %11655 = add nsw i32 %11654, 1
  %11656 = bitcast [1 x %struct.ds_base]* %888 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11656, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11657 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %888, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11655, i32* nonnull %11651, %struct.ds_base* nonnull %11657, i32 1, i32 undef) #14
  %11658 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 888) to i64*), align 16, !tbaa !25
  %11659 = trunc i64 %11658 to i32
  %11660 = call i32 @llvm.abs.i32(i32 %11659, i1 false)
  %11661 = urem i32 %11660, 1000
  %11662 = zext i32 %11661 to i64
  %11663 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11662
  %11664 = bitcast i32* %11663 to i64*
  %11665 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11664, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11666 = trunc i64 %11665 to i32
  %11667 = add nsw i32 %11666, 1
  %11668 = bitcast [1 x %struct.ds_base]* %889 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11668, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11669 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %889, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11667, i32* nonnull %11663, %struct.ds_base* nonnull %11669, i32 1, i32 undef) #14
  %11670 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 889) to i64*), align 8, !tbaa !25
  %11671 = trunc i64 %11670 to i32
  %11672 = call i32 @llvm.abs.i32(i32 %11671, i1 false)
  %11673 = urem i32 %11672, 1000
  %11674 = zext i32 %11673 to i64
  %11675 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11674
  %11676 = bitcast i32* %11675 to i64*
  %11677 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11676, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11678 = trunc i64 %11677 to i32
  %11679 = add nsw i32 %11678, 1
  %11680 = bitcast [1 x %struct.ds_base]* %890 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11680, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11681 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %890, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11679, i32* nonnull %11675, %struct.ds_base* nonnull %11681, i32 1, i32 undef) #14
  %11682 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 890) to i64*), align 8, !tbaa !25
  %11683 = trunc i64 %11682 to i32
  %11684 = call i32 @llvm.abs.i32(i32 %11683, i1 false)
  %11685 = urem i32 %11684, 1000
  %11686 = zext i32 %11685 to i64
  %11687 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11686
  %11688 = bitcast i32* %11687 to i64*
  %11689 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11688, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11690 = trunc i64 %11689 to i32
  %11691 = add nsw i32 %11690, 1
  %11692 = bitcast [1 x %struct.ds_base]* %891 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11692, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11693 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %891, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11691, i32* nonnull %11687, %struct.ds_base* nonnull %11693, i32 1, i32 undef) #14
  %11694 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 891) to i64*), align 8, !tbaa !25
  %11695 = trunc i64 %11694 to i32
  %11696 = call i32 @llvm.abs.i32(i32 %11695, i1 false)
  %11697 = urem i32 %11696, 1000
  %11698 = zext i32 %11697 to i64
  %11699 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11698
  %11700 = bitcast i32* %11699 to i64*
  %11701 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11700, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11702 = trunc i64 %11701 to i32
  %11703 = add nsw i32 %11702, 1
  %11704 = bitcast [1 x %struct.ds_base]* %892 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11704, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11705 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %892, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11703, i32* nonnull %11699, %struct.ds_base* nonnull %11705, i32 1, i32 undef) #14
  %11706 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 892) to i64*), align 16, !tbaa !25
  %11707 = trunc i64 %11706 to i32
  %11708 = call i32 @llvm.abs.i32(i32 %11707, i1 false)
  %11709 = urem i32 %11708, 1000
  %11710 = zext i32 %11709 to i64
  %11711 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11710
  %11712 = bitcast i32* %11711 to i64*
  %11713 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11712, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11714 = trunc i64 %11713 to i32
  %11715 = add nsw i32 %11714, 1
  %11716 = bitcast [1 x %struct.ds_base]* %893 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11716, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11717 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %893, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11715, i32* nonnull %11711, %struct.ds_base* nonnull %11717, i32 1, i32 undef) #14
  %11718 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 893) to i64*), align 8, !tbaa !25
  %11719 = trunc i64 %11718 to i32
  %11720 = call i32 @llvm.abs.i32(i32 %11719, i1 false)
  %11721 = urem i32 %11720, 1000
  %11722 = zext i32 %11721 to i64
  %11723 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11722
  %11724 = bitcast i32* %11723 to i64*
  %11725 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11724, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11726 = trunc i64 %11725 to i32
  %11727 = add nsw i32 %11726, 1
  %11728 = bitcast [1 x %struct.ds_base]* %894 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11728, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11729 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %894, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11727, i32* nonnull %11723, %struct.ds_base* nonnull %11729, i32 1, i32 undef) #14
  %11730 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 894) to i64*), align 8, !tbaa !25
  %11731 = trunc i64 %11730 to i32
  %11732 = call i32 @llvm.abs.i32(i32 %11731, i1 false)
  %11733 = urem i32 %11732, 1000
  %11734 = zext i32 %11733 to i64
  %11735 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11734
  %11736 = bitcast i32* %11735 to i64*
  %11737 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11736, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11738 = trunc i64 %11737 to i32
  %11739 = add nsw i32 %11738, 1
  %11740 = bitcast [1 x %struct.ds_base]* %895 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11740, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11741 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %895, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11739, i32* nonnull %11735, %struct.ds_base* nonnull %11741, i32 1, i32 undef) #14
  %11742 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 895) to i64*), align 8, !tbaa !25
  %11743 = trunc i64 %11742 to i32
  %11744 = call i32 @llvm.abs.i32(i32 %11743, i1 false)
  %11745 = urem i32 %11744, 1000
  %11746 = zext i32 %11745 to i64
  %11747 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11746
  %11748 = bitcast i32* %11747 to i64*
  %11749 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11748, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11750 = trunc i64 %11749 to i32
  %11751 = add nsw i32 %11750, 1
  %11752 = bitcast [1 x %struct.ds_base]* %896 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11752, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11753 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %896, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11751, i32* nonnull %11747, %struct.ds_base* nonnull %11753, i32 1, i32 undef) #14
  %11754 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 896) to i64*), align 16, !tbaa !25
  %11755 = trunc i64 %11754 to i32
  %11756 = call i32 @llvm.abs.i32(i32 %11755, i1 false)
  %11757 = urem i32 %11756, 1000
  %11758 = zext i32 %11757 to i64
  %11759 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11758
  %11760 = bitcast i32* %11759 to i64*
  %11761 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11760, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11762 = trunc i64 %11761 to i32
  %11763 = add nsw i32 %11762, 1
  %11764 = bitcast [1 x %struct.ds_base]* %897 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11764, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11765 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %897, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11763, i32* nonnull %11759, %struct.ds_base* nonnull %11765, i32 1, i32 undef) #14
  %11766 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 897) to i64*), align 8, !tbaa !25
  %11767 = trunc i64 %11766 to i32
  %11768 = call i32 @llvm.abs.i32(i32 %11767, i1 false)
  %11769 = urem i32 %11768, 1000
  %11770 = zext i32 %11769 to i64
  %11771 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11770
  %11772 = bitcast i32* %11771 to i64*
  %11773 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11772, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11774 = trunc i64 %11773 to i32
  %11775 = add nsw i32 %11774, 1
  %11776 = bitcast [1 x %struct.ds_base]* %898 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11776, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11777 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %898, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11775, i32* nonnull %11771, %struct.ds_base* nonnull %11777, i32 1, i32 undef) #14
  %11778 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 898) to i64*), align 8, !tbaa !25
  %11779 = trunc i64 %11778 to i32
  %11780 = call i32 @llvm.abs.i32(i32 %11779, i1 false)
  %11781 = urem i32 %11780, 1000
  %11782 = zext i32 %11781 to i64
  %11783 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11782
  %11784 = bitcast i32* %11783 to i64*
  %11785 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11784, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11786 = trunc i64 %11785 to i32
  %11787 = add nsw i32 %11786, 1
  %11788 = bitcast [1 x %struct.ds_base]* %899 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11788, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11789 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %899, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11787, i32* nonnull %11783, %struct.ds_base* nonnull %11789, i32 1, i32 undef) #14
  %11790 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 899) to i64*), align 8, !tbaa !25
  %11791 = trunc i64 %11790 to i32
  %11792 = call i32 @llvm.abs.i32(i32 %11791, i1 false)
  %11793 = urem i32 %11792, 1000
  %11794 = zext i32 %11793 to i64
  %11795 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11794
  %11796 = bitcast i32* %11795 to i64*
  %11797 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11796, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11798 = trunc i64 %11797 to i32
  %11799 = add nsw i32 %11798, 1
  %11800 = bitcast [1 x %struct.ds_base]* %900 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11800, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11801 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %900, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11799, i32* nonnull %11795, %struct.ds_base* nonnull %11801, i32 1, i32 undef) #14
  %11802 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 900) to i64*), align 16, !tbaa !25
  %11803 = trunc i64 %11802 to i32
  %11804 = call i32 @llvm.abs.i32(i32 %11803, i1 false)
  %11805 = urem i32 %11804, 1000
  %11806 = zext i32 %11805 to i64
  %11807 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11806
  %11808 = bitcast i32* %11807 to i64*
  %11809 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11808, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11810 = trunc i64 %11809 to i32
  %11811 = add nsw i32 %11810, 1
  %11812 = bitcast [1 x %struct.ds_base]* %901 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11812, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11813 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %901, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11811, i32* nonnull %11807, %struct.ds_base* nonnull %11813, i32 1, i32 undef) #14
  %11814 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 901) to i64*), align 8, !tbaa !25
  %11815 = trunc i64 %11814 to i32
  %11816 = call i32 @llvm.abs.i32(i32 %11815, i1 false)
  %11817 = urem i32 %11816, 1000
  %11818 = zext i32 %11817 to i64
  %11819 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11818
  %11820 = bitcast i32* %11819 to i64*
  %11821 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11820, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11822 = trunc i64 %11821 to i32
  %11823 = add nsw i32 %11822, 1
  %11824 = bitcast [1 x %struct.ds_base]* %902 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11824, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11825 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %902, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11823, i32* nonnull %11819, %struct.ds_base* nonnull %11825, i32 1, i32 undef) #14
  %11826 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 902) to i64*), align 8, !tbaa !25
  %11827 = trunc i64 %11826 to i32
  %11828 = call i32 @llvm.abs.i32(i32 %11827, i1 false)
  %11829 = urem i32 %11828, 1000
  %11830 = zext i32 %11829 to i64
  %11831 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11830
  %11832 = bitcast i32* %11831 to i64*
  %11833 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11832, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11834 = trunc i64 %11833 to i32
  %11835 = add nsw i32 %11834, 1
  %11836 = bitcast [1 x %struct.ds_base]* %903 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11836, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11837 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %903, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11835, i32* nonnull %11831, %struct.ds_base* nonnull %11837, i32 1, i32 undef) #14
  %11838 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 903) to i64*), align 8, !tbaa !25
  %11839 = trunc i64 %11838 to i32
  %11840 = call i32 @llvm.abs.i32(i32 %11839, i1 false)
  %11841 = urem i32 %11840, 1000
  %11842 = zext i32 %11841 to i64
  %11843 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11842
  %11844 = bitcast i32* %11843 to i64*
  %11845 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11844, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11846 = trunc i64 %11845 to i32
  %11847 = add nsw i32 %11846, 1
  %11848 = bitcast [1 x %struct.ds_base]* %904 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11848, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11849 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %904, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11847, i32* nonnull %11843, %struct.ds_base* nonnull %11849, i32 1, i32 undef) #14
  %11850 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 904) to i64*), align 16, !tbaa !25
  %11851 = trunc i64 %11850 to i32
  %11852 = call i32 @llvm.abs.i32(i32 %11851, i1 false)
  %11853 = urem i32 %11852, 1000
  %11854 = zext i32 %11853 to i64
  %11855 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11854
  %11856 = bitcast i32* %11855 to i64*
  %11857 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11856, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11858 = trunc i64 %11857 to i32
  %11859 = add nsw i32 %11858, 1
  %11860 = bitcast [1 x %struct.ds_base]* %905 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11860, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11861 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %905, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11859, i32* nonnull %11855, %struct.ds_base* nonnull %11861, i32 1, i32 undef) #14
  %11862 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 905) to i64*), align 8, !tbaa !25
  %11863 = trunc i64 %11862 to i32
  %11864 = call i32 @llvm.abs.i32(i32 %11863, i1 false)
  %11865 = urem i32 %11864, 1000
  %11866 = zext i32 %11865 to i64
  %11867 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11866
  %11868 = bitcast i32* %11867 to i64*
  %11869 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11868, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11870 = trunc i64 %11869 to i32
  %11871 = add nsw i32 %11870, 1
  %11872 = bitcast [1 x %struct.ds_base]* %906 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11872, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11873 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %906, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11871, i32* nonnull %11867, %struct.ds_base* nonnull %11873, i32 1, i32 undef) #14
  %11874 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 906) to i64*), align 8, !tbaa !25
  %11875 = trunc i64 %11874 to i32
  %11876 = call i32 @llvm.abs.i32(i32 %11875, i1 false)
  %11877 = urem i32 %11876, 1000
  %11878 = zext i32 %11877 to i64
  %11879 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11878
  %11880 = bitcast i32* %11879 to i64*
  %11881 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11880, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11882 = trunc i64 %11881 to i32
  %11883 = add nsw i32 %11882, 1
  %11884 = bitcast [1 x %struct.ds_base]* %907 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11884, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11885 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %907, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11883, i32* nonnull %11879, %struct.ds_base* nonnull %11885, i32 1, i32 undef) #14
  %11886 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 907) to i64*), align 8, !tbaa !25
  %11887 = trunc i64 %11886 to i32
  %11888 = call i32 @llvm.abs.i32(i32 %11887, i1 false)
  %11889 = urem i32 %11888, 1000
  %11890 = zext i32 %11889 to i64
  %11891 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11890
  %11892 = bitcast i32* %11891 to i64*
  %11893 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11892, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11894 = trunc i64 %11893 to i32
  %11895 = add nsw i32 %11894, 1
  %11896 = bitcast [1 x %struct.ds_base]* %908 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11896, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11897 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %908, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11895, i32* nonnull %11891, %struct.ds_base* nonnull %11897, i32 1, i32 undef) #14
  %11898 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 908) to i64*), align 16, !tbaa !25
  %11899 = trunc i64 %11898 to i32
  %11900 = call i32 @llvm.abs.i32(i32 %11899, i1 false)
  %11901 = urem i32 %11900, 1000
  %11902 = zext i32 %11901 to i64
  %11903 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11902
  %11904 = bitcast i32* %11903 to i64*
  %11905 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11904, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11906 = trunc i64 %11905 to i32
  %11907 = add nsw i32 %11906, 1
  %11908 = bitcast [1 x %struct.ds_base]* %909 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11908, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11909 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %909, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11907, i32* nonnull %11903, %struct.ds_base* nonnull %11909, i32 1, i32 undef) #14
  %11910 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 909) to i64*), align 8, !tbaa !25
  %11911 = trunc i64 %11910 to i32
  %11912 = call i32 @llvm.abs.i32(i32 %11911, i1 false)
  %11913 = urem i32 %11912, 1000
  %11914 = zext i32 %11913 to i64
  %11915 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11914
  %11916 = bitcast i32* %11915 to i64*
  %11917 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11916, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11918 = trunc i64 %11917 to i32
  %11919 = add nsw i32 %11918, 1
  %11920 = bitcast [1 x %struct.ds_base]* %910 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11920, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11921 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %910, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11919, i32* nonnull %11915, %struct.ds_base* nonnull %11921, i32 1, i32 undef) #14
  %11922 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 910) to i64*), align 8, !tbaa !25
  %11923 = trunc i64 %11922 to i32
  %11924 = call i32 @llvm.abs.i32(i32 %11923, i1 false)
  %11925 = urem i32 %11924, 1000
  %11926 = zext i32 %11925 to i64
  %11927 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11926
  %11928 = bitcast i32* %11927 to i64*
  %11929 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11928, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11930 = trunc i64 %11929 to i32
  %11931 = add nsw i32 %11930, 1
  %11932 = bitcast [1 x %struct.ds_base]* %911 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11932, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11933 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %911, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11931, i32* nonnull %11927, %struct.ds_base* nonnull %11933, i32 1, i32 undef) #14
  %11934 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 911) to i64*), align 8, !tbaa !25
  %11935 = trunc i64 %11934 to i32
  %11936 = call i32 @llvm.abs.i32(i32 %11935, i1 false)
  %11937 = urem i32 %11936, 1000
  %11938 = zext i32 %11937 to i64
  %11939 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11938
  %11940 = bitcast i32* %11939 to i64*
  %11941 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11940, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11942 = trunc i64 %11941 to i32
  %11943 = add nsw i32 %11942, 1
  %11944 = bitcast [1 x %struct.ds_base]* %912 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11944, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11945 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %912, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11943, i32* nonnull %11939, %struct.ds_base* nonnull %11945, i32 1, i32 undef) #14
  %11946 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 912) to i64*), align 16, !tbaa !25
  %11947 = trunc i64 %11946 to i32
  %11948 = call i32 @llvm.abs.i32(i32 %11947, i1 false)
  %11949 = urem i32 %11948, 1000
  %11950 = zext i32 %11949 to i64
  %11951 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11950
  %11952 = bitcast i32* %11951 to i64*
  %11953 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11952, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11954 = trunc i64 %11953 to i32
  %11955 = add nsw i32 %11954, 1
  %11956 = bitcast [1 x %struct.ds_base]* %913 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11956, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11957 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %913, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11955, i32* nonnull %11951, %struct.ds_base* nonnull %11957, i32 1, i32 undef) #14
  %11958 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 913) to i64*), align 8, !tbaa !25
  %11959 = trunc i64 %11958 to i32
  %11960 = call i32 @llvm.abs.i32(i32 %11959, i1 false)
  %11961 = urem i32 %11960, 1000
  %11962 = zext i32 %11961 to i64
  %11963 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11962
  %11964 = bitcast i32* %11963 to i64*
  %11965 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11964, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11966 = trunc i64 %11965 to i32
  %11967 = add nsw i32 %11966, 1
  %11968 = bitcast [1 x %struct.ds_base]* %914 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11968, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11969 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %914, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11967, i32* nonnull %11963, %struct.ds_base* nonnull %11969, i32 1, i32 undef) #14
  %11970 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 914) to i64*), align 8, !tbaa !25
  %11971 = trunc i64 %11970 to i32
  %11972 = call i32 @llvm.abs.i32(i32 %11971, i1 false)
  %11973 = urem i32 %11972, 1000
  %11974 = zext i32 %11973 to i64
  %11975 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11974
  %11976 = bitcast i32* %11975 to i64*
  %11977 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11976, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11978 = trunc i64 %11977 to i32
  %11979 = add nsw i32 %11978, 1
  %11980 = bitcast [1 x %struct.ds_base]* %915 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11980, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11981 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %915, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11979, i32* nonnull %11975, %struct.ds_base* nonnull %11981, i32 1, i32 undef) #14
  %11982 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 915) to i64*), align 8, !tbaa !25
  %11983 = trunc i64 %11982 to i32
  %11984 = call i32 @llvm.abs.i32(i32 %11983, i1 false)
  %11985 = urem i32 %11984, 1000
  %11986 = zext i32 %11985 to i64
  %11987 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11986
  %11988 = bitcast i32* %11987 to i64*
  %11989 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %11988, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %11990 = trunc i64 %11989 to i32
  %11991 = add nsw i32 %11990, 1
  %11992 = bitcast [1 x %struct.ds_base]* %916 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %11992, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %11993 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %916, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %11991, i32* nonnull %11987, %struct.ds_base* nonnull %11993, i32 1, i32 undef) #14
  %11994 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 916) to i64*), align 16, !tbaa !25
  %11995 = trunc i64 %11994 to i32
  %11996 = call i32 @llvm.abs.i32(i32 %11995, i1 false)
  %11997 = urem i32 %11996, 1000
  %11998 = zext i32 %11997 to i64
  %11999 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %11998
  %12000 = bitcast i32* %11999 to i64*
  %12001 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12000, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12002 = trunc i64 %12001 to i32
  %12003 = add nsw i32 %12002, 1
  %12004 = bitcast [1 x %struct.ds_base]* %917 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12004, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12005 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %917, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12003, i32* nonnull %11999, %struct.ds_base* nonnull %12005, i32 1, i32 undef) #14
  %12006 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 917) to i64*), align 8, !tbaa !25
  %12007 = trunc i64 %12006 to i32
  %12008 = call i32 @llvm.abs.i32(i32 %12007, i1 false)
  %12009 = urem i32 %12008, 1000
  %12010 = zext i32 %12009 to i64
  %12011 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12010
  %12012 = bitcast i32* %12011 to i64*
  %12013 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12012, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12014 = trunc i64 %12013 to i32
  %12015 = add nsw i32 %12014, 1
  %12016 = bitcast [1 x %struct.ds_base]* %918 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12016, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12017 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %918, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12015, i32* nonnull %12011, %struct.ds_base* nonnull %12017, i32 1, i32 undef) #14
  %12018 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 918) to i64*), align 8, !tbaa !25
  %12019 = trunc i64 %12018 to i32
  %12020 = call i32 @llvm.abs.i32(i32 %12019, i1 false)
  %12021 = urem i32 %12020, 1000
  %12022 = zext i32 %12021 to i64
  %12023 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12022
  %12024 = bitcast i32* %12023 to i64*
  %12025 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12024, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12026 = trunc i64 %12025 to i32
  %12027 = add nsw i32 %12026, 1
  %12028 = bitcast [1 x %struct.ds_base]* %919 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12028, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12029 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %919, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12027, i32* nonnull %12023, %struct.ds_base* nonnull %12029, i32 1, i32 undef) #14
  %12030 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 919) to i64*), align 8, !tbaa !25
  %12031 = trunc i64 %12030 to i32
  %12032 = call i32 @llvm.abs.i32(i32 %12031, i1 false)
  %12033 = urem i32 %12032, 1000
  %12034 = zext i32 %12033 to i64
  %12035 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12034
  %12036 = bitcast i32* %12035 to i64*
  %12037 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12036, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12038 = trunc i64 %12037 to i32
  %12039 = add nsw i32 %12038, 1
  %12040 = bitcast [1 x %struct.ds_base]* %920 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12040, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12041 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %920, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12039, i32* nonnull %12035, %struct.ds_base* nonnull %12041, i32 1, i32 undef) #14
  %12042 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 920) to i64*), align 16, !tbaa !25
  %12043 = trunc i64 %12042 to i32
  %12044 = call i32 @llvm.abs.i32(i32 %12043, i1 false)
  %12045 = urem i32 %12044, 1000
  %12046 = zext i32 %12045 to i64
  %12047 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12046
  %12048 = bitcast i32* %12047 to i64*
  %12049 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12048, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12050 = trunc i64 %12049 to i32
  %12051 = add nsw i32 %12050, 1
  %12052 = bitcast [1 x %struct.ds_base]* %921 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12052, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12053 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %921, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12051, i32* nonnull %12047, %struct.ds_base* nonnull %12053, i32 1, i32 undef) #14
  %12054 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 921) to i64*), align 8, !tbaa !25
  %12055 = trunc i64 %12054 to i32
  %12056 = call i32 @llvm.abs.i32(i32 %12055, i1 false)
  %12057 = urem i32 %12056, 1000
  %12058 = zext i32 %12057 to i64
  %12059 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12058
  %12060 = bitcast i32* %12059 to i64*
  %12061 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12060, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12062 = trunc i64 %12061 to i32
  %12063 = add nsw i32 %12062, 1
  %12064 = bitcast [1 x %struct.ds_base]* %922 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12064, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12065 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %922, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12063, i32* nonnull %12059, %struct.ds_base* nonnull %12065, i32 1, i32 undef) #14
  %12066 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 922) to i64*), align 8, !tbaa !25
  %12067 = trunc i64 %12066 to i32
  %12068 = call i32 @llvm.abs.i32(i32 %12067, i1 false)
  %12069 = urem i32 %12068, 1000
  %12070 = zext i32 %12069 to i64
  %12071 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12070
  %12072 = bitcast i32* %12071 to i64*
  %12073 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12072, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12074 = trunc i64 %12073 to i32
  %12075 = add nsw i32 %12074, 1
  %12076 = bitcast [1 x %struct.ds_base]* %923 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12076, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12077 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %923, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12075, i32* nonnull %12071, %struct.ds_base* nonnull %12077, i32 1, i32 undef) #14
  %12078 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 923) to i64*), align 8, !tbaa !25
  %12079 = trunc i64 %12078 to i32
  %12080 = call i32 @llvm.abs.i32(i32 %12079, i1 false)
  %12081 = urem i32 %12080, 1000
  %12082 = zext i32 %12081 to i64
  %12083 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12082
  %12084 = bitcast i32* %12083 to i64*
  %12085 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12084, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12086 = trunc i64 %12085 to i32
  %12087 = add nsw i32 %12086, 1
  %12088 = bitcast [1 x %struct.ds_base]* %924 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12088, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12089 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %924, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12087, i32* nonnull %12083, %struct.ds_base* nonnull %12089, i32 1, i32 undef) #14
  %12090 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 924) to i64*), align 16, !tbaa !25
  %12091 = trunc i64 %12090 to i32
  %12092 = call i32 @llvm.abs.i32(i32 %12091, i1 false)
  %12093 = urem i32 %12092, 1000
  %12094 = zext i32 %12093 to i64
  %12095 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12094
  %12096 = bitcast i32* %12095 to i64*
  %12097 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12096, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12098 = trunc i64 %12097 to i32
  %12099 = add nsw i32 %12098, 1
  %12100 = bitcast [1 x %struct.ds_base]* %925 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12100, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12101 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %925, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12099, i32* nonnull %12095, %struct.ds_base* nonnull %12101, i32 1, i32 undef) #14
  %12102 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 925) to i64*), align 8, !tbaa !25
  %12103 = trunc i64 %12102 to i32
  %12104 = call i32 @llvm.abs.i32(i32 %12103, i1 false)
  %12105 = urem i32 %12104, 1000
  %12106 = zext i32 %12105 to i64
  %12107 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12106
  %12108 = bitcast i32* %12107 to i64*
  %12109 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12108, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12110 = trunc i64 %12109 to i32
  %12111 = add nsw i32 %12110, 1
  %12112 = bitcast [1 x %struct.ds_base]* %926 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12112, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12113 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %926, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12111, i32* nonnull %12107, %struct.ds_base* nonnull %12113, i32 1, i32 undef) #14
  %12114 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 926) to i64*), align 8, !tbaa !25
  %12115 = trunc i64 %12114 to i32
  %12116 = call i32 @llvm.abs.i32(i32 %12115, i1 false)
  %12117 = urem i32 %12116, 1000
  %12118 = zext i32 %12117 to i64
  %12119 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12118
  %12120 = bitcast i32* %12119 to i64*
  %12121 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12120, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12122 = trunc i64 %12121 to i32
  %12123 = add nsw i32 %12122, 1
  %12124 = bitcast [1 x %struct.ds_base]* %927 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12124, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12125 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %927, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12123, i32* nonnull %12119, %struct.ds_base* nonnull %12125, i32 1, i32 undef) #14
  %12126 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 927) to i64*), align 8, !tbaa !25
  %12127 = trunc i64 %12126 to i32
  %12128 = call i32 @llvm.abs.i32(i32 %12127, i1 false)
  %12129 = urem i32 %12128, 1000
  %12130 = zext i32 %12129 to i64
  %12131 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12130
  %12132 = bitcast i32* %12131 to i64*
  %12133 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12132, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12134 = trunc i64 %12133 to i32
  %12135 = add nsw i32 %12134, 1
  %12136 = bitcast [1 x %struct.ds_base]* %928 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12136, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12137 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %928, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12135, i32* nonnull %12131, %struct.ds_base* nonnull %12137, i32 1, i32 undef) #14
  %12138 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 928) to i64*), align 16, !tbaa !25
  %12139 = trunc i64 %12138 to i32
  %12140 = call i32 @llvm.abs.i32(i32 %12139, i1 false)
  %12141 = urem i32 %12140, 1000
  %12142 = zext i32 %12141 to i64
  %12143 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12142
  %12144 = bitcast i32* %12143 to i64*
  %12145 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12144, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12146 = trunc i64 %12145 to i32
  %12147 = add nsw i32 %12146, 1
  %12148 = bitcast [1 x %struct.ds_base]* %929 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12148, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12149 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %929, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12147, i32* nonnull %12143, %struct.ds_base* nonnull %12149, i32 1, i32 undef) #14
  %12150 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 929) to i64*), align 8, !tbaa !25
  %12151 = trunc i64 %12150 to i32
  %12152 = call i32 @llvm.abs.i32(i32 %12151, i1 false)
  %12153 = urem i32 %12152, 1000
  %12154 = zext i32 %12153 to i64
  %12155 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12154
  %12156 = bitcast i32* %12155 to i64*
  %12157 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12156, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12158 = trunc i64 %12157 to i32
  %12159 = add nsw i32 %12158, 1
  %12160 = bitcast [1 x %struct.ds_base]* %930 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12160, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12161 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %930, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12159, i32* nonnull %12155, %struct.ds_base* nonnull %12161, i32 1, i32 undef) #14
  %12162 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 930) to i64*), align 8, !tbaa !25
  %12163 = trunc i64 %12162 to i32
  %12164 = call i32 @llvm.abs.i32(i32 %12163, i1 false)
  %12165 = urem i32 %12164, 1000
  %12166 = zext i32 %12165 to i64
  %12167 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12166
  %12168 = bitcast i32* %12167 to i64*
  %12169 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12168, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12170 = trunc i64 %12169 to i32
  %12171 = add nsw i32 %12170, 1
  %12172 = bitcast [1 x %struct.ds_base]* %931 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12172, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12173 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %931, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12171, i32* nonnull %12167, %struct.ds_base* nonnull %12173, i32 1, i32 undef) #14
  %12174 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 931) to i64*), align 8, !tbaa !25
  %12175 = trunc i64 %12174 to i32
  %12176 = call i32 @llvm.abs.i32(i32 %12175, i1 false)
  %12177 = urem i32 %12176, 1000
  %12178 = zext i32 %12177 to i64
  %12179 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12178
  %12180 = bitcast i32* %12179 to i64*
  %12181 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12180, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12182 = trunc i64 %12181 to i32
  %12183 = add nsw i32 %12182, 1
  %12184 = bitcast [1 x %struct.ds_base]* %932 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12184, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12185 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %932, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12183, i32* nonnull %12179, %struct.ds_base* nonnull %12185, i32 1, i32 undef) #14
  %12186 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 932) to i64*), align 16, !tbaa !25
  %12187 = trunc i64 %12186 to i32
  %12188 = call i32 @llvm.abs.i32(i32 %12187, i1 false)
  %12189 = urem i32 %12188, 1000
  %12190 = zext i32 %12189 to i64
  %12191 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12190
  %12192 = bitcast i32* %12191 to i64*
  %12193 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12192, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12194 = trunc i64 %12193 to i32
  %12195 = add nsw i32 %12194, 1
  %12196 = bitcast [1 x %struct.ds_base]* %933 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12196, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12197 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %933, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12195, i32* nonnull %12191, %struct.ds_base* nonnull %12197, i32 1, i32 undef) #14
  %12198 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 933) to i64*), align 8, !tbaa !25
  %12199 = trunc i64 %12198 to i32
  %12200 = call i32 @llvm.abs.i32(i32 %12199, i1 false)
  %12201 = urem i32 %12200, 1000
  %12202 = zext i32 %12201 to i64
  %12203 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12202
  %12204 = bitcast i32* %12203 to i64*
  %12205 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12204, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12206 = trunc i64 %12205 to i32
  %12207 = add nsw i32 %12206, 1
  %12208 = bitcast [1 x %struct.ds_base]* %934 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12208, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12209 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %934, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12207, i32* nonnull %12203, %struct.ds_base* nonnull %12209, i32 1, i32 undef) #14
  %12210 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 934) to i64*), align 8, !tbaa !25
  %12211 = trunc i64 %12210 to i32
  %12212 = call i32 @llvm.abs.i32(i32 %12211, i1 false)
  %12213 = urem i32 %12212, 1000
  %12214 = zext i32 %12213 to i64
  %12215 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12214
  %12216 = bitcast i32* %12215 to i64*
  %12217 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12216, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12218 = trunc i64 %12217 to i32
  %12219 = add nsw i32 %12218, 1
  %12220 = bitcast [1 x %struct.ds_base]* %935 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12220, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12221 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %935, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12219, i32* nonnull %12215, %struct.ds_base* nonnull %12221, i32 1, i32 undef) #14
  %12222 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 935) to i64*), align 8, !tbaa !25
  %12223 = trunc i64 %12222 to i32
  %12224 = call i32 @llvm.abs.i32(i32 %12223, i1 false)
  %12225 = urem i32 %12224, 1000
  %12226 = zext i32 %12225 to i64
  %12227 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12226
  %12228 = bitcast i32* %12227 to i64*
  %12229 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12228, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12230 = trunc i64 %12229 to i32
  %12231 = add nsw i32 %12230, 1
  %12232 = bitcast [1 x %struct.ds_base]* %936 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12232, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12233 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %936, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12231, i32* nonnull %12227, %struct.ds_base* nonnull %12233, i32 1, i32 undef) #14
  %12234 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 936) to i64*), align 16, !tbaa !25
  %12235 = trunc i64 %12234 to i32
  %12236 = call i32 @llvm.abs.i32(i32 %12235, i1 false)
  %12237 = urem i32 %12236, 1000
  %12238 = zext i32 %12237 to i64
  %12239 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12238
  %12240 = bitcast i32* %12239 to i64*
  %12241 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12240, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12242 = trunc i64 %12241 to i32
  %12243 = add nsw i32 %12242, 1
  %12244 = bitcast [1 x %struct.ds_base]* %937 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12244, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12245 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %937, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12243, i32* nonnull %12239, %struct.ds_base* nonnull %12245, i32 1, i32 undef) #14
  %12246 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 937) to i64*), align 8, !tbaa !25
  %12247 = trunc i64 %12246 to i32
  %12248 = call i32 @llvm.abs.i32(i32 %12247, i1 false)
  %12249 = urem i32 %12248, 1000
  %12250 = zext i32 %12249 to i64
  %12251 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12250
  %12252 = bitcast i32* %12251 to i64*
  %12253 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12252, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12254 = trunc i64 %12253 to i32
  %12255 = add nsw i32 %12254, 1
  %12256 = bitcast [1 x %struct.ds_base]* %938 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12256, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12257 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %938, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12255, i32* nonnull %12251, %struct.ds_base* nonnull %12257, i32 1, i32 undef) #14
  %12258 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 938) to i64*), align 8, !tbaa !25
  %12259 = trunc i64 %12258 to i32
  %12260 = call i32 @llvm.abs.i32(i32 %12259, i1 false)
  %12261 = urem i32 %12260, 1000
  %12262 = zext i32 %12261 to i64
  %12263 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12262
  %12264 = bitcast i32* %12263 to i64*
  %12265 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12264, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12266 = trunc i64 %12265 to i32
  %12267 = add nsw i32 %12266, 1
  %12268 = bitcast [1 x %struct.ds_base]* %939 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12268, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12269 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %939, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12267, i32* nonnull %12263, %struct.ds_base* nonnull %12269, i32 1, i32 undef) #14
  %12270 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 939) to i64*), align 8, !tbaa !25
  %12271 = trunc i64 %12270 to i32
  %12272 = call i32 @llvm.abs.i32(i32 %12271, i1 false)
  %12273 = urem i32 %12272, 1000
  %12274 = zext i32 %12273 to i64
  %12275 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12274
  %12276 = bitcast i32* %12275 to i64*
  %12277 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12276, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12278 = trunc i64 %12277 to i32
  %12279 = add nsw i32 %12278, 1
  %12280 = bitcast [1 x %struct.ds_base]* %940 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12280, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12281 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %940, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12279, i32* nonnull %12275, %struct.ds_base* nonnull %12281, i32 1, i32 undef) #14
  %12282 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 940) to i64*), align 16, !tbaa !25
  %12283 = trunc i64 %12282 to i32
  %12284 = call i32 @llvm.abs.i32(i32 %12283, i1 false)
  %12285 = urem i32 %12284, 1000
  %12286 = zext i32 %12285 to i64
  %12287 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12286
  %12288 = bitcast i32* %12287 to i64*
  %12289 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12288, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12290 = trunc i64 %12289 to i32
  %12291 = add nsw i32 %12290, 1
  %12292 = bitcast [1 x %struct.ds_base]* %941 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12292, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12293 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %941, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12291, i32* nonnull %12287, %struct.ds_base* nonnull %12293, i32 1, i32 undef) #14
  %12294 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 941) to i64*), align 8, !tbaa !25
  %12295 = trunc i64 %12294 to i32
  %12296 = call i32 @llvm.abs.i32(i32 %12295, i1 false)
  %12297 = urem i32 %12296, 1000
  %12298 = zext i32 %12297 to i64
  %12299 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12298
  %12300 = bitcast i32* %12299 to i64*
  %12301 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12300, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12302 = trunc i64 %12301 to i32
  %12303 = add nsw i32 %12302, 1
  %12304 = bitcast [1 x %struct.ds_base]* %942 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12304, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12305 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %942, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12303, i32* nonnull %12299, %struct.ds_base* nonnull %12305, i32 1, i32 undef) #14
  %12306 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 942) to i64*), align 8, !tbaa !25
  %12307 = trunc i64 %12306 to i32
  %12308 = call i32 @llvm.abs.i32(i32 %12307, i1 false)
  %12309 = urem i32 %12308, 1000
  %12310 = zext i32 %12309 to i64
  %12311 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12310
  %12312 = bitcast i32* %12311 to i64*
  %12313 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12312, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12314 = trunc i64 %12313 to i32
  %12315 = add nsw i32 %12314, 1
  %12316 = bitcast [1 x %struct.ds_base]* %943 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12316, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12317 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %943, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12315, i32* nonnull %12311, %struct.ds_base* nonnull %12317, i32 1, i32 undef) #14
  %12318 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 943) to i64*), align 8, !tbaa !25
  %12319 = trunc i64 %12318 to i32
  %12320 = call i32 @llvm.abs.i32(i32 %12319, i1 false)
  %12321 = urem i32 %12320, 1000
  %12322 = zext i32 %12321 to i64
  %12323 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12322
  %12324 = bitcast i32* %12323 to i64*
  %12325 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12324, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12326 = trunc i64 %12325 to i32
  %12327 = add nsw i32 %12326, 1
  %12328 = bitcast [1 x %struct.ds_base]* %944 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12328, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12329 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %944, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12327, i32* nonnull %12323, %struct.ds_base* nonnull %12329, i32 1, i32 undef) #14
  %12330 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 944) to i64*), align 16, !tbaa !25
  %12331 = trunc i64 %12330 to i32
  %12332 = call i32 @llvm.abs.i32(i32 %12331, i1 false)
  %12333 = urem i32 %12332, 1000
  %12334 = zext i32 %12333 to i64
  %12335 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12334
  %12336 = bitcast i32* %12335 to i64*
  %12337 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12336, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12338 = trunc i64 %12337 to i32
  %12339 = add nsw i32 %12338, 1
  %12340 = bitcast [1 x %struct.ds_base]* %945 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12340, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12341 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %945, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12339, i32* nonnull %12335, %struct.ds_base* nonnull %12341, i32 1, i32 undef) #14
  %12342 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 945) to i64*), align 8, !tbaa !25
  %12343 = trunc i64 %12342 to i32
  %12344 = call i32 @llvm.abs.i32(i32 %12343, i1 false)
  %12345 = urem i32 %12344, 1000
  %12346 = zext i32 %12345 to i64
  %12347 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12346
  %12348 = bitcast i32* %12347 to i64*
  %12349 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12348, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12350 = trunc i64 %12349 to i32
  %12351 = add nsw i32 %12350, 1
  %12352 = bitcast [1 x %struct.ds_base]* %946 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12352, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12353 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %946, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12351, i32* nonnull %12347, %struct.ds_base* nonnull %12353, i32 1, i32 undef) #14
  %12354 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 946) to i64*), align 8, !tbaa !25
  %12355 = trunc i64 %12354 to i32
  %12356 = call i32 @llvm.abs.i32(i32 %12355, i1 false)
  %12357 = urem i32 %12356, 1000
  %12358 = zext i32 %12357 to i64
  %12359 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12358
  %12360 = bitcast i32* %12359 to i64*
  %12361 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12360, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12362 = trunc i64 %12361 to i32
  %12363 = add nsw i32 %12362, 1
  %12364 = bitcast [1 x %struct.ds_base]* %947 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12364, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12365 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %947, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12363, i32* nonnull %12359, %struct.ds_base* nonnull %12365, i32 1, i32 undef) #14
  %12366 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 947) to i64*), align 8, !tbaa !25
  %12367 = trunc i64 %12366 to i32
  %12368 = call i32 @llvm.abs.i32(i32 %12367, i1 false)
  %12369 = urem i32 %12368, 1000
  %12370 = zext i32 %12369 to i64
  %12371 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12370
  %12372 = bitcast i32* %12371 to i64*
  %12373 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12372, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12374 = trunc i64 %12373 to i32
  %12375 = add nsw i32 %12374, 1
  %12376 = bitcast [1 x %struct.ds_base]* %948 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12376, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12377 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %948, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12375, i32* nonnull %12371, %struct.ds_base* nonnull %12377, i32 1, i32 undef) #14
  %12378 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 948) to i64*), align 16, !tbaa !25
  %12379 = trunc i64 %12378 to i32
  %12380 = call i32 @llvm.abs.i32(i32 %12379, i1 false)
  %12381 = urem i32 %12380, 1000
  %12382 = zext i32 %12381 to i64
  %12383 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12382
  %12384 = bitcast i32* %12383 to i64*
  %12385 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12384, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12386 = trunc i64 %12385 to i32
  %12387 = add nsw i32 %12386, 1
  %12388 = bitcast [1 x %struct.ds_base]* %949 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12388, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12389 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %949, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12387, i32* nonnull %12383, %struct.ds_base* nonnull %12389, i32 1, i32 undef) #14
  %12390 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 949) to i64*), align 8, !tbaa !25
  %12391 = trunc i64 %12390 to i32
  %12392 = call i32 @llvm.abs.i32(i32 %12391, i1 false)
  %12393 = urem i32 %12392, 1000
  %12394 = zext i32 %12393 to i64
  %12395 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12394
  %12396 = bitcast i32* %12395 to i64*
  %12397 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12396, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12398 = trunc i64 %12397 to i32
  %12399 = add nsw i32 %12398, 1
  %12400 = bitcast [1 x %struct.ds_base]* %950 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12400, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12401 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %950, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12399, i32* nonnull %12395, %struct.ds_base* nonnull %12401, i32 1, i32 undef) #14
  %12402 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 950) to i64*), align 8, !tbaa !25
  %12403 = trunc i64 %12402 to i32
  %12404 = call i32 @llvm.abs.i32(i32 %12403, i1 false)
  %12405 = urem i32 %12404, 1000
  %12406 = zext i32 %12405 to i64
  %12407 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12406
  %12408 = bitcast i32* %12407 to i64*
  %12409 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12408, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12410 = trunc i64 %12409 to i32
  %12411 = add nsw i32 %12410, 1
  %12412 = bitcast [1 x %struct.ds_base]* %951 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12412, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12413 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %951, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12411, i32* nonnull %12407, %struct.ds_base* nonnull %12413, i32 1, i32 undef) #14
  %12414 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 951) to i64*), align 8, !tbaa !25
  %12415 = trunc i64 %12414 to i32
  %12416 = call i32 @llvm.abs.i32(i32 %12415, i1 false)
  %12417 = urem i32 %12416, 1000
  %12418 = zext i32 %12417 to i64
  %12419 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12418
  %12420 = bitcast i32* %12419 to i64*
  %12421 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12420, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12422 = trunc i64 %12421 to i32
  %12423 = add nsw i32 %12422, 1
  %12424 = bitcast [1 x %struct.ds_base]* %952 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12424, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12425 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %952, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12423, i32* nonnull %12419, %struct.ds_base* nonnull %12425, i32 1, i32 undef) #14
  %12426 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 952) to i64*), align 16, !tbaa !25
  %12427 = trunc i64 %12426 to i32
  %12428 = call i32 @llvm.abs.i32(i32 %12427, i1 false)
  %12429 = urem i32 %12428, 1000
  %12430 = zext i32 %12429 to i64
  %12431 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12430
  %12432 = bitcast i32* %12431 to i64*
  %12433 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12432, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12434 = trunc i64 %12433 to i32
  %12435 = add nsw i32 %12434, 1
  %12436 = bitcast [1 x %struct.ds_base]* %953 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12436, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12437 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %953, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12435, i32* nonnull %12431, %struct.ds_base* nonnull %12437, i32 1, i32 undef) #14
  %12438 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 953) to i64*), align 8, !tbaa !25
  %12439 = trunc i64 %12438 to i32
  %12440 = call i32 @llvm.abs.i32(i32 %12439, i1 false)
  %12441 = urem i32 %12440, 1000
  %12442 = zext i32 %12441 to i64
  %12443 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12442
  %12444 = bitcast i32* %12443 to i64*
  %12445 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12444, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12446 = trunc i64 %12445 to i32
  %12447 = add nsw i32 %12446, 1
  %12448 = bitcast [1 x %struct.ds_base]* %954 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12448, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12449 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %954, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12447, i32* nonnull %12443, %struct.ds_base* nonnull %12449, i32 1, i32 undef) #14
  %12450 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 954) to i64*), align 8, !tbaa !25
  %12451 = trunc i64 %12450 to i32
  %12452 = call i32 @llvm.abs.i32(i32 %12451, i1 false)
  %12453 = urem i32 %12452, 1000
  %12454 = zext i32 %12453 to i64
  %12455 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12454
  %12456 = bitcast i32* %12455 to i64*
  %12457 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12456, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12458 = trunc i64 %12457 to i32
  %12459 = add nsw i32 %12458, 1
  %12460 = bitcast [1 x %struct.ds_base]* %955 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12460, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12461 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %955, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12459, i32* nonnull %12455, %struct.ds_base* nonnull %12461, i32 1, i32 undef) #14
  %12462 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 955) to i64*), align 8, !tbaa !25
  %12463 = trunc i64 %12462 to i32
  %12464 = call i32 @llvm.abs.i32(i32 %12463, i1 false)
  %12465 = urem i32 %12464, 1000
  %12466 = zext i32 %12465 to i64
  %12467 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12466
  %12468 = bitcast i32* %12467 to i64*
  %12469 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12468, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12470 = trunc i64 %12469 to i32
  %12471 = add nsw i32 %12470, 1
  %12472 = bitcast [1 x %struct.ds_base]* %956 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12472, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12473 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %956, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12471, i32* nonnull %12467, %struct.ds_base* nonnull %12473, i32 1, i32 undef) #14
  %12474 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 956) to i64*), align 16, !tbaa !25
  %12475 = trunc i64 %12474 to i32
  %12476 = call i32 @llvm.abs.i32(i32 %12475, i1 false)
  %12477 = urem i32 %12476, 1000
  %12478 = zext i32 %12477 to i64
  %12479 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12478
  %12480 = bitcast i32* %12479 to i64*
  %12481 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12480, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12482 = trunc i64 %12481 to i32
  %12483 = add nsw i32 %12482, 1
  %12484 = bitcast [1 x %struct.ds_base]* %957 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12484, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12485 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %957, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12483, i32* nonnull %12479, %struct.ds_base* nonnull %12485, i32 1, i32 undef) #14
  %12486 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 957) to i64*), align 8, !tbaa !25
  %12487 = trunc i64 %12486 to i32
  %12488 = call i32 @llvm.abs.i32(i32 %12487, i1 false)
  %12489 = urem i32 %12488, 1000
  %12490 = zext i32 %12489 to i64
  %12491 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12490
  %12492 = bitcast i32* %12491 to i64*
  %12493 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12492, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12494 = trunc i64 %12493 to i32
  %12495 = add nsw i32 %12494, 1
  %12496 = bitcast [1 x %struct.ds_base]* %958 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12496, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12497 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %958, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12495, i32* nonnull %12491, %struct.ds_base* nonnull %12497, i32 1, i32 undef) #14
  %12498 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 958) to i64*), align 8, !tbaa !25
  %12499 = trunc i64 %12498 to i32
  %12500 = call i32 @llvm.abs.i32(i32 %12499, i1 false)
  %12501 = urem i32 %12500, 1000
  %12502 = zext i32 %12501 to i64
  %12503 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12502
  %12504 = bitcast i32* %12503 to i64*
  %12505 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12504, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12506 = trunc i64 %12505 to i32
  %12507 = add nsw i32 %12506, 1
  %12508 = bitcast [1 x %struct.ds_base]* %959 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12508, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12509 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %959, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12507, i32* nonnull %12503, %struct.ds_base* nonnull %12509, i32 1, i32 undef) #14
  %12510 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 959) to i64*), align 8, !tbaa !25
  %12511 = trunc i64 %12510 to i32
  %12512 = call i32 @llvm.abs.i32(i32 %12511, i1 false)
  %12513 = urem i32 %12512, 1000
  %12514 = zext i32 %12513 to i64
  %12515 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12514
  %12516 = bitcast i32* %12515 to i64*
  %12517 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12516, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12518 = trunc i64 %12517 to i32
  %12519 = add nsw i32 %12518, 1
  %12520 = bitcast [1 x %struct.ds_base]* %960 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12520, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12521 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %960, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12519, i32* nonnull %12515, %struct.ds_base* nonnull %12521, i32 1, i32 undef) #14
  %12522 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 960) to i64*), align 16, !tbaa !25
  %12523 = trunc i64 %12522 to i32
  %12524 = call i32 @llvm.abs.i32(i32 %12523, i1 false)
  %12525 = urem i32 %12524, 1000
  %12526 = zext i32 %12525 to i64
  %12527 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12526
  %12528 = bitcast i32* %12527 to i64*
  %12529 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12528, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12530 = trunc i64 %12529 to i32
  %12531 = add nsw i32 %12530, 1
  %12532 = bitcast [1 x %struct.ds_base]* %961 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12532, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12533 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %961, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12531, i32* nonnull %12527, %struct.ds_base* nonnull %12533, i32 1, i32 undef) #14
  %12534 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 961) to i64*), align 8, !tbaa !25
  %12535 = trunc i64 %12534 to i32
  %12536 = call i32 @llvm.abs.i32(i32 %12535, i1 false)
  %12537 = urem i32 %12536, 1000
  %12538 = zext i32 %12537 to i64
  %12539 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12538
  %12540 = bitcast i32* %12539 to i64*
  %12541 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12540, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12542 = trunc i64 %12541 to i32
  %12543 = add nsw i32 %12542, 1
  %12544 = bitcast [1 x %struct.ds_base]* %962 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12544, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12545 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %962, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12543, i32* nonnull %12539, %struct.ds_base* nonnull %12545, i32 1, i32 undef) #14
  %12546 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 962) to i64*), align 8, !tbaa !25
  %12547 = trunc i64 %12546 to i32
  %12548 = call i32 @llvm.abs.i32(i32 %12547, i1 false)
  %12549 = urem i32 %12548, 1000
  %12550 = zext i32 %12549 to i64
  %12551 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12550
  %12552 = bitcast i32* %12551 to i64*
  %12553 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12552, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12554 = trunc i64 %12553 to i32
  %12555 = add nsw i32 %12554, 1
  %12556 = bitcast [1 x %struct.ds_base]* %963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12556, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12557 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %963, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12555, i32* nonnull %12551, %struct.ds_base* nonnull %12557, i32 1, i32 undef) #14
  %12558 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 963) to i64*), align 8, !tbaa !25
  %12559 = trunc i64 %12558 to i32
  %12560 = call i32 @llvm.abs.i32(i32 %12559, i1 false)
  %12561 = urem i32 %12560, 1000
  %12562 = zext i32 %12561 to i64
  %12563 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12562
  %12564 = bitcast i32* %12563 to i64*
  %12565 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12564, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12566 = trunc i64 %12565 to i32
  %12567 = add nsw i32 %12566, 1
  %12568 = bitcast [1 x %struct.ds_base]* %964 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12568, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12569 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %964, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12567, i32* nonnull %12563, %struct.ds_base* nonnull %12569, i32 1, i32 undef) #14
  %12570 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 964) to i64*), align 16, !tbaa !25
  %12571 = trunc i64 %12570 to i32
  %12572 = call i32 @llvm.abs.i32(i32 %12571, i1 false)
  %12573 = urem i32 %12572, 1000
  %12574 = zext i32 %12573 to i64
  %12575 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12574
  %12576 = bitcast i32* %12575 to i64*
  %12577 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12576, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12578 = trunc i64 %12577 to i32
  %12579 = add nsw i32 %12578, 1
  %12580 = bitcast [1 x %struct.ds_base]* %965 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12580, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12581 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %965, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12579, i32* nonnull %12575, %struct.ds_base* nonnull %12581, i32 1, i32 undef) #14
  %12582 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 965) to i64*), align 8, !tbaa !25
  %12583 = trunc i64 %12582 to i32
  %12584 = call i32 @llvm.abs.i32(i32 %12583, i1 false)
  %12585 = urem i32 %12584, 1000
  %12586 = zext i32 %12585 to i64
  %12587 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12586
  %12588 = bitcast i32* %12587 to i64*
  %12589 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12588, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12590 = trunc i64 %12589 to i32
  %12591 = add nsw i32 %12590, 1
  %12592 = bitcast [1 x %struct.ds_base]* %966 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12592, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12593 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %966, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12591, i32* nonnull %12587, %struct.ds_base* nonnull %12593, i32 1, i32 undef) #14
  %12594 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 966) to i64*), align 8, !tbaa !25
  %12595 = trunc i64 %12594 to i32
  %12596 = call i32 @llvm.abs.i32(i32 %12595, i1 false)
  %12597 = urem i32 %12596, 1000
  %12598 = zext i32 %12597 to i64
  %12599 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12598
  %12600 = bitcast i32* %12599 to i64*
  %12601 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12600, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12602 = trunc i64 %12601 to i32
  %12603 = add nsw i32 %12602, 1
  %12604 = bitcast [1 x %struct.ds_base]* %967 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12604, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12605 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %967, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12603, i32* nonnull %12599, %struct.ds_base* nonnull %12605, i32 1, i32 undef) #14
  %12606 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 967) to i64*), align 8, !tbaa !25
  %12607 = trunc i64 %12606 to i32
  %12608 = call i32 @llvm.abs.i32(i32 %12607, i1 false)
  %12609 = urem i32 %12608, 1000
  %12610 = zext i32 %12609 to i64
  %12611 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12610
  %12612 = bitcast i32* %12611 to i64*
  %12613 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12612, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12614 = trunc i64 %12613 to i32
  %12615 = add nsw i32 %12614, 1
  %12616 = bitcast [1 x %struct.ds_base]* %968 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12616, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12617 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %968, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12615, i32* nonnull %12611, %struct.ds_base* nonnull %12617, i32 1, i32 undef) #14
  %12618 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 968) to i64*), align 16, !tbaa !25
  %12619 = trunc i64 %12618 to i32
  %12620 = call i32 @llvm.abs.i32(i32 %12619, i1 false)
  %12621 = urem i32 %12620, 1000
  %12622 = zext i32 %12621 to i64
  %12623 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12622
  %12624 = bitcast i32* %12623 to i64*
  %12625 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12624, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12626 = trunc i64 %12625 to i32
  %12627 = add nsw i32 %12626, 1
  %12628 = bitcast [1 x %struct.ds_base]* %969 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12628, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12629 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %969, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12627, i32* nonnull %12623, %struct.ds_base* nonnull %12629, i32 1, i32 undef) #14
  %12630 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 969) to i64*), align 8, !tbaa !25
  %12631 = trunc i64 %12630 to i32
  %12632 = call i32 @llvm.abs.i32(i32 %12631, i1 false)
  %12633 = urem i32 %12632, 1000
  %12634 = zext i32 %12633 to i64
  %12635 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12634
  %12636 = bitcast i32* %12635 to i64*
  %12637 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12636, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12638 = trunc i64 %12637 to i32
  %12639 = add nsw i32 %12638, 1
  %12640 = bitcast [1 x %struct.ds_base]* %970 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12640, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12641 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %970, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12639, i32* nonnull %12635, %struct.ds_base* nonnull %12641, i32 1, i32 undef) #14
  %12642 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 970) to i64*), align 8, !tbaa !25
  %12643 = trunc i64 %12642 to i32
  %12644 = call i32 @llvm.abs.i32(i32 %12643, i1 false)
  %12645 = urem i32 %12644, 1000
  %12646 = zext i32 %12645 to i64
  %12647 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12646
  %12648 = bitcast i32* %12647 to i64*
  %12649 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12648, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12650 = trunc i64 %12649 to i32
  %12651 = add nsw i32 %12650, 1
  %12652 = bitcast [1 x %struct.ds_base]* %971 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12652, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12653 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %971, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12651, i32* nonnull %12647, %struct.ds_base* nonnull %12653, i32 1, i32 undef) #14
  %12654 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 971) to i64*), align 8, !tbaa !25
  %12655 = trunc i64 %12654 to i32
  %12656 = call i32 @llvm.abs.i32(i32 %12655, i1 false)
  %12657 = urem i32 %12656, 1000
  %12658 = zext i32 %12657 to i64
  %12659 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12658
  %12660 = bitcast i32* %12659 to i64*
  %12661 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12660, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12662 = trunc i64 %12661 to i32
  %12663 = add nsw i32 %12662, 1
  %12664 = bitcast [1 x %struct.ds_base]* %972 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12664, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12665 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %972, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12663, i32* nonnull %12659, %struct.ds_base* nonnull %12665, i32 1, i32 undef) #14
  %12666 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 972) to i64*), align 16, !tbaa !25
  %12667 = trunc i64 %12666 to i32
  %12668 = call i32 @llvm.abs.i32(i32 %12667, i1 false)
  %12669 = urem i32 %12668, 1000
  %12670 = zext i32 %12669 to i64
  %12671 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12670
  %12672 = bitcast i32* %12671 to i64*
  %12673 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12672, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12674 = trunc i64 %12673 to i32
  %12675 = add nsw i32 %12674, 1
  %12676 = bitcast [1 x %struct.ds_base]* %973 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12676, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12677 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %973, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12675, i32* nonnull %12671, %struct.ds_base* nonnull %12677, i32 1, i32 undef) #14
  %12678 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 973) to i64*), align 8, !tbaa !25
  %12679 = trunc i64 %12678 to i32
  %12680 = call i32 @llvm.abs.i32(i32 %12679, i1 false)
  %12681 = urem i32 %12680, 1000
  %12682 = zext i32 %12681 to i64
  %12683 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12682
  %12684 = bitcast i32* %12683 to i64*
  %12685 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12684, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12686 = trunc i64 %12685 to i32
  %12687 = add nsw i32 %12686, 1
  %12688 = bitcast [1 x %struct.ds_base]* %974 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12688, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12689 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %974, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12687, i32* nonnull %12683, %struct.ds_base* nonnull %12689, i32 1, i32 undef) #14
  %12690 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 974) to i64*), align 8, !tbaa !25
  %12691 = trunc i64 %12690 to i32
  %12692 = call i32 @llvm.abs.i32(i32 %12691, i1 false)
  %12693 = urem i32 %12692, 1000
  %12694 = zext i32 %12693 to i64
  %12695 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12694
  %12696 = bitcast i32* %12695 to i64*
  %12697 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12696, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12698 = trunc i64 %12697 to i32
  %12699 = add nsw i32 %12698, 1
  %12700 = bitcast [1 x %struct.ds_base]* %975 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12700, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12701 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %975, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12699, i32* nonnull %12695, %struct.ds_base* nonnull %12701, i32 1, i32 undef) #14
  %12702 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 975) to i64*), align 8, !tbaa !25
  %12703 = trunc i64 %12702 to i32
  %12704 = call i32 @llvm.abs.i32(i32 %12703, i1 false)
  %12705 = urem i32 %12704, 1000
  %12706 = zext i32 %12705 to i64
  %12707 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12706
  %12708 = bitcast i32* %12707 to i64*
  %12709 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12708, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12710 = trunc i64 %12709 to i32
  %12711 = add nsw i32 %12710, 1
  %12712 = bitcast [1 x %struct.ds_base]* %976 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12712, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12713 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %976, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12711, i32* nonnull %12707, %struct.ds_base* nonnull %12713, i32 1, i32 undef) #14
  %12714 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 976) to i64*), align 16, !tbaa !25
  %12715 = trunc i64 %12714 to i32
  %12716 = call i32 @llvm.abs.i32(i32 %12715, i1 false)
  %12717 = urem i32 %12716, 1000
  %12718 = zext i32 %12717 to i64
  %12719 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12718
  %12720 = bitcast i32* %12719 to i64*
  %12721 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12720, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12722 = trunc i64 %12721 to i32
  %12723 = add nsw i32 %12722, 1
  %12724 = bitcast [1 x %struct.ds_base]* %977 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12724, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12725 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %977, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12723, i32* nonnull %12719, %struct.ds_base* nonnull %12725, i32 1, i32 undef) #14
  %12726 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 977) to i64*), align 8, !tbaa !25
  %12727 = trunc i64 %12726 to i32
  %12728 = call i32 @llvm.abs.i32(i32 %12727, i1 false)
  %12729 = urem i32 %12728, 1000
  %12730 = zext i32 %12729 to i64
  %12731 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12730
  %12732 = bitcast i32* %12731 to i64*
  %12733 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12732, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12734 = trunc i64 %12733 to i32
  %12735 = add nsw i32 %12734, 1
  %12736 = bitcast [1 x %struct.ds_base]* %978 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12736, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12737 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %978, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12735, i32* nonnull %12731, %struct.ds_base* nonnull %12737, i32 1, i32 undef) #14
  %12738 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 978) to i64*), align 8, !tbaa !25
  %12739 = trunc i64 %12738 to i32
  %12740 = call i32 @llvm.abs.i32(i32 %12739, i1 false)
  %12741 = urem i32 %12740, 1000
  %12742 = zext i32 %12741 to i64
  %12743 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12742
  %12744 = bitcast i32* %12743 to i64*
  %12745 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12744, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12746 = trunc i64 %12745 to i32
  %12747 = add nsw i32 %12746, 1
  %12748 = bitcast [1 x %struct.ds_base]* %979 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12748, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12749 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %979, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12747, i32* nonnull %12743, %struct.ds_base* nonnull %12749, i32 1, i32 undef) #14
  %12750 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 979) to i64*), align 8, !tbaa !25
  %12751 = trunc i64 %12750 to i32
  %12752 = call i32 @llvm.abs.i32(i32 %12751, i1 false)
  %12753 = urem i32 %12752, 1000
  %12754 = zext i32 %12753 to i64
  %12755 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12754
  %12756 = bitcast i32* %12755 to i64*
  %12757 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12756, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12758 = trunc i64 %12757 to i32
  %12759 = add nsw i32 %12758, 1
  %12760 = bitcast [1 x %struct.ds_base]* %980 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12760, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12761 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %980, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12759, i32* nonnull %12755, %struct.ds_base* nonnull %12761, i32 1, i32 undef) #14
  %12762 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 980) to i64*), align 16, !tbaa !25
  %12763 = trunc i64 %12762 to i32
  %12764 = call i32 @llvm.abs.i32(i32 %12763, i1 false)
  %12765 = urem i32 %12764, 1000
  %12766 = zext i32 %12765 to i64
  %12767 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12766
  %12768 = bitcast i32* %12767 to i64*
  %12769 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12768, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12770 = trunc i64 %12769 to i32
  %12771 = add nsw i32 %12770, 1
  %12772 = bitcast [1 x %struct.ds_base]* %981 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12772, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12773 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %981, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12771, i32* nonnull %12767, %struct.ds_base* nonnull %12773, i32 1, i32 undef) #14
  %12774 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 981) to i64*), align 8, !tbaa !25
  %12775 = trunc i64 %12774 to i32
  %12776 = call i32 @llvm.abs.i32(i32 %12775, i1 false)
  %12777 = urem i32 %12776, 1000
  %12778 = zext i32 %12777 to i64
  %12779 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12778
  %12780 = bitcast i32* %12779 to i64*
  %12781 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12780, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12782 = trunc i64 %12781 to i32
  %12783 = add nsw i32 %12782, 1
  %12784 = bitcast [1 x %struct.ds_base]* %982 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12784, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12785 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %982, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12783, i32* nonnull %12779, %struct.ds_base* nonnull %12785, i32 1, i32 undef) #14
  %12786 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 982) to i64*), align 8, !tbaa !25
  %12787 = trunc i64 %12786 to i32
  %12788 = call i32 @llvm.abs.i32(i32 %12787, i1 false)
  %12789 = urem i32 %12788, 1000
  %12790 = zext i32 %12789 to i64
  %12791 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12790
  %12792 = bitcast i32* %12791 to i64*
  %12793 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12792, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12794 = trunc i64 %12793 to i32
  %12795 = add nsw i32 %12794, 1
  %12796 = bitcast [1 x %struct.ds_base]* %983 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12796, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12797 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %983, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12795, i32* nonnull %12791, %struct.ds_base* nonnull %12797, i32 1, i32 undef) #14
  %12798 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 983) to i64*), align 8, !tbaa !25
  %12799 = trunc i64 %12798 to i32
  %12800 = call i32 @llvm.abs.i32(i32 %12799, i1 false)
  %12801 = urem i32 %12800, 1000
  %12802 = zext i32 %12801 to i64
  %12803 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12802
  %12804 = bitcast i32* %12803 to i64*
  %12805 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12804, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12806 = trunc i64 %12805 to i32
  %12807 = add nsw i32 %12806, 1
  %12808 = bitcast [1 x %struct.ds_base]* %984 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12808, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12809 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %984, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12807, i32* nonnull %12803, %struct.ds_base* nonnull %12809, i32 1, i32 undef) #14
  %12810 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 984) to i64*), align 16, !tbaa !25
  %12811 = trunc i64 %12810 to i32
  %12812 = call i32 @llvm.abs.i32(i32 %12811, i1 false)
  %12813 = urem i32 %12812, 1000
  %12814 = zext i32 %12813 to i64
  %12815 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12814
  %12816 = bitcast i32* %12815 to i64*
  %12817 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12816, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12818 = trunc i64 %12817 to i32
  %12819 = add nsw i32 %12818, 1
  %12820 = bitcast [1 x %struct.ds_base]* %985 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12820, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12821 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %985, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12819, i32* nonnull %12815, %struct.ds_base* nonnull %12821, i32 1, i32 undef) #14
  %12822 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 985) to i64*), align 8, !tbaa !25
  %12823 = trunc i64 %12822 to i32
  %12824 = call i32 @llvm.abs.i32(i32 %12823, i1 false)
  %12825 = urem i32 %12824, 1000
  %12826 = zext i32 %12825 to i64
  %12827 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12826
  %12828 = bitcast i32* %12827 to i64*
  %12829 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12828, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12830 = trunc i64 %12829 to i32
  %12831 = add nsw i32 %12830, 1
  %12832 = bitcast [1 x %struct.ds_base]* %986 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12832, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12833 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %986, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12831, i32* nonnull %12827, %struct.ds_base* nonnull %12833, i32 1, i32 undef) #14
  %12834 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 986) to i64*), align 8, !tbaa !25
  %12835 = trunc i64 %12834 to i32
  %12836 = call i32 @llvm.abs.i32(i32 %12835, i1 false)
  %12837 = urem i32 %12836, 1000
  %12838 = zext i32 %12837 to i64
  %12839 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12838
  %12840 = bitcast i32* %12839 to i64*
  %12841 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12840, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12842 = trunc i64 %12841 to i32
  %12843 = add nsw i32 %12842, 1
  %12844 = bitcast [1 x %struct.ds_base]* %987 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12844, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12845 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %987, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12843, i32* nonnull %12839, %struct.ds_base* nonnull %12845, i32 1, i32 undef) #14
  %12846 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 987) to i64*), align 8, !tbaa !25
  %12847 = trunc i64 %12846 to i32
  %12848 = call i32 @llvm.abs.i32(i32 %12847, i1 false)
  %12849 = urem i32 %12848, 1000
  %12850 = zext i32 %12849 to i64
  %12851 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12850
  %12852 = bitcast i32* %12851 to i64*
  %12853 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12852, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12854 = trunc i64 %12853 to i32
  %12855 = add nsw i32 %12854, 1
  %12856 = bitcast [1 x %struct.ds_base]* %988 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12856, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12857 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %988, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12855, i32* nonnull %12851, %struct.ds_base* nonnull %12857, i32 1, i32 undef) #14
  %12858 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 988) to i64*), align 16, !tbaa !25
  %12859 = trunc i64 %12858 to i32
  %12860 = call i32 @llvm.abs.i32(i32 %12859, i1 false)
  %12861 = urem i32 %12860, 1000
  %12862 = zext i32 %12861 to i64
  %12863 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12862
  %12864 = bitcast i32* %12863 to i64*
  %12865 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12864, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12866 = trunc i64 %12865 to i32
  %12867 = add nsw i32 %12866, 1
  %12868 = bitcast [1 x %struct.ds_base]* %989 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12868, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12869 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %989, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12867, i32* nonnull %12863, %struct.ds_base* nonnull %12869, i32 1, i32 undef) #14
  %12870 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 989) to i64*), align 8, !tbaa !25
  %12871 = trunc i64 %12870 to i32
  %12872 = call i32 @llvm.abs.i32(i32 %12871, i1 false)
  %12873 = urem i32 %12872, 1000
  %12874 = zext i32 %12873 to i64
  %12875 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12874
  %12876 = bitcast i32* %12875 to i64*
  %12877 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12876, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12878 = trunc i64 %12877 to i32
  %12879 = add nsw i32 %12878, 1
  %12880 = bitcast [1 x %struct.ds_base]* %990 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12880, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12881 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %990, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12879, i32* nonnull %12875, %struct.ds_base* nonnull %12881, i32 1, i32 undef) #14
  %12882 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 990) to i64*), align 8, !tbaa !25
  %12883 = trunc i64 %12882 to i32
  %12884 = call i32 @llvm.abs.i32(i32 %12883, i1 false)
  %12885 = urem i32 %12884, 1000
  %12886 = zext i32 %12885 to i64
  %12887 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12886
  %12888 = bitcast i32* %12887 to i64*
  %12889 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12888, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12890 = trunc i64 %12889 to i32
  %12891 = add nsw i32 %12890, 1
  %12892 = bitcast [1 x %struct.ds_base]* %991 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12892, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12893 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %991, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12891, i32* nonnull %12887, %struct.ds_base* nonnull %12893, i32 1, i32 undef) #14
  %12894 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 991) to i64*), align 8, !tbaa !25
  %12895 = trunc i64 %12894 to i32
  %12896 = call i32 @llvm.abs.i32(i32 %12895, i1 false)
  %12897 = urem i32 %12896, 1000
  %12898 = zext i32 %12897 to i64
  %12899 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12898
  %12900 = bitcast i32* %12899 to i64*
  %12901 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12900, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12902 = trunc i64 %12901 to i32
  %12903 = add nsw i32 %12902, 1
  %12904 = bitcast [1 x %struct.ds_base]* %992 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12904, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12905 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %992, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12903, i32* nonnull %12899, %struct.ds_base* nonnull %12905, i32 1, i32 undef) #14
  %12906 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 992) to i64*), align 16, !tbaa !25
  %12907 = trunc i64 %12906 to i32
  %12908 = call i32 @llvm.abs.i32(i32 %12907, i1 false)
  %12909 = urem i32 %12908, 1000
  %12910 = zext i32 %12909 to i64
  %12911 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12910
  %12912 = bitcast i32* %12911 to i64*
  %12913 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12912, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12914 = trunc i64 %12913 to i32
  %12915 = add nsw i32 %12914, 1
  %12916 = bitcast [1 x %struct.ds_base]* %993 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12916, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12917 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %993, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12915, i32* nonnull %12911, %struct.ds_base* nonnull %12917, i32 1, i32 undef) #14
  %12918 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 993) to i64*), align 8, !tbaa !25
  %12919 = trunc i64 %12918 to i32
  %12920 = call i32 @llvm.abs.i32(i32 %12919, i1 false)
  %12921 = urem i32 %12920, 1000
  %12922 = zext i32 %12921 to i64
  %12923 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12922
  %12924 = bitcast i32* %12923 to i64*
  %12925 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12924, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12926 = trunc i64 %12925 to i32
  %12927 = add nsw i32 %12926, 1
  %12928 = bitcast [1 x %struct.ds_base]* %994 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12928, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12929 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %994, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12927, i32* nonnull %12923, %struct.ds_base* nonnull %12929, i32 1, i32 undef) #14
  %12930 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 994) to i64*), align 8, !tbaa !25
  %12931 = trunc i64 %12930 to i32
  %12932 = call i32 @llvm.abs.i32(i32 %12931, i1 false)
  %12933 = urem i32 %12932, 1000
  %12934 = zext i32 %12933 to i64
  %12935 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12934
  %12936 = bitcast i32* %12935 to i64*
  %12937 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12936, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12938 = trunc i64 %12937 to i32
  %12939 = add nsw i32 %12938, 1
  %12940 = bitcast [1 x %struct.ds_base]* %995 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12940, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12941 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %995, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12939, i32* nonnull %12935, %struct.ds_base* nonnull %12941, i32 1, i32 undef) #14
  %12942 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 995) to i64*), align 8, !tbaa !25
  %12943 = trunc i64 %12942 to i32
  %12944 = call i32 @llvm.abs.i32(i32 %12943, i1 false)
  %12945 = urem i32 %12944, 1000
  %12946 = zext i32 %12945 to i64
  %12947 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12946
  %12948 = bitcast i32* %12947 to i64*
  %12949 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12948, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12950 = trunc i64 %12949 to i32
  %12951 = add nsw i32 %12950, 1
  %12952 = bitcast [1 x %struct.ds_base]* %996 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12952, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12953 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %996, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12951, i32* nonnull %12947, %struct.ds_base* nonnull %12953, i32 1, i32 undef) #14
  %12954 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 996) to i64*), align 16, !tbaa !25
  %12955 = trunc i64 %12954 to i32
  %12956 = call i32 @llvm.abs.i32(i32 %12955, i1 false)
  %12957 = urem i32 %12956, 1000
  %12958 = zext i32 %12957 to i64
  %12959 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12958
  %12960 = bitcast i32* %12959 to i64*
  %12961 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12960, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12962 = trunc i64 %12961 to i32
  %12963 = add nsw i32 %12962, 1
  %12964 = bitcast [1 x %struct.ds_base]* %997 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12964, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12965 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %997, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12963, i32* nonnull %12959, %struct.ds_base* nonnull %12965, i32 1, i32 undef) #14
  %12966 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 997) to i64*), align 8, !tbaa !25
  %12967 = trunc i64 %12966 to i32
  %12968 = call i32 @llvm.abs.i32(i32 %12967, i1 false)
  %12969 = urem i32 %12968, 1000
  %12970 = zext i32 %12969 to i64
  %12971 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12970
  %12972 = bitcast i32* %12971 to i64*
  %12973 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12972, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12974 = trunc i64 %12973 to i32
  %12975 = add nsw i32 %12974, 1
  %12976 = bitcast [1 x %struct.ds_base]* %998 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12976, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12977 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %998, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12975, i32* nonnull %12971, %struct.ds_base* nonnull %12977, i32 1, i32 undef) #14
  %12978 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 998) to i64*), align 8, !tbaa !25
  %12979 = trunc i64 %12978 to i32
  %12980 = call i32 @llvm.abs.i32(i32 %12979, i1 false)
  %12981 = urem i32 %12980, 1000
  %12982 = zext i32 %12981 to i64
  %12983 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12982
  %12984 = bitcast i32* %12983 to i64*
  %12985 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12984, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12986 = trunc i64 %12985 to i32
  %12987 = add nsw i32 %12986, 1
  %12988 = bitcast [1 x %struct.ds_base]* %999 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %12988, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %12989 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %999, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12987, i32* nonnull %12983, %struct.ds_base* nonnull %12989, i32 1, i32 undef) #14
  %12990 = load i64, i64* bitcast (i32* getelementptr inbounds ([1000 x i32], [1000 x i32]* @in, i64 0, i64 999) to i64*), align 8, !tbaa !25
  %12991 = trunc i64 %12990 to i32
  %12992 = call i32 @llvm.abs.i32(i32 %12991, i1 false)
  %12993 = urem i32 %12992, 1000
  %12994 = zext i32 %12993 to i64
  %12995 = getelementptr inbounds [1000 x i32], [1000 x i32]* @out, i64 0, i64 %12994
  %12996 = bitcast i32* %12995 to i64*
  %12997 = tail call i64 @uint64_t_secure_load_impl(i64* nonnull %12996, %struct.ds_base* nonnull getelementptr inbounds ([1 x %struct.ds_base], [1 x %struct.ds_base]* @constinit.5998, i64 0, i64 0), i32 1, i32 undef) #14
  %12998 = trunc i64 %12997 to i32
  %12999 = add nsw i32 %12998, 1
  %13000 = bitcast [1 x %struct.ds_base]* %1000 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %13000, i8* noundef nonnull align 8 dereferenceable(32) bitcast ([1 x %struct.ds_base]* @constinit.5998 to i8*), i64 32, i1 false), !tbaa.struct !38
  %13001 = getelementptr inbounds [1 x %struct.ds_base], [1 x %struct.ds_base]* %1000, i64 0, i64 0
  call void @uint32_t_secure_store_impl(i32 %12999, i32* nonnull %12995, %struct.ds_base* nonnull %13001, i32 1, i32 undef) #14
  %13002 = tail call i64 @write(i32 1, i8* bitcast ([1000 x i32]* @out to i8*), i64 4000) #14
  ret i32 0
}

; Function Attrs: nofree
declare dso_local noundef i64 @read(i32 noundef, i8* nocapture noundef, i64 noundef) local_unnamed_addr #9

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

; Function Attrs: nofree
declare dso_local noundef i64 @write(i32 noundef, i8* nocapture noundef readonly, i64 noundef) local_unnamed_addr #9

; Function Attrs: nofree nosync nounwind readnone
declare <32 x i8> @llvm.x86.avx2.pblendvb(<32 x i8>, <32 x i8>, <32 x i8>) #11

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #12

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

attributes #0 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #1 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="256" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #2 = { nofree noinline nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="256" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #3 = { nofree nounwind readonly }
attributes #4 = { nofree nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #5 = { nofree nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #6 = { nofree noinline nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="256" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #7 = { nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #9 = { nofree "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" }
attributes #10 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #11 = { nofree nosync nounwind readnone }
attributes #12 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"Ubuntu clang version 13.0.1-++20211223012851+9468a0f95385-1~exp1~20211223012902.41"}
!3 = !{!4, !9, i64 20}
!4 = !{!"ds_base", !5, i64 0, !5, i64 8, !8, i64 16, !9, i64 20, !8, i64 24, !8, i64 28}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!"int", !6, i64 0}
!9 = !{!"_Bool", !6, i64 0}
!10 = !{i8 0, i8 2}
!11 = !{!4, !5, i64 0}
!12 = !{!4, !8, i64 24}
!13 = !{!4, !8, i64 28}
!14 = !{!6, !6, i64 0}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.mustprogress"}
!17 = !{!4, !8, i64 16}
!18 = !{!4, !5, i64 8}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !16}
!22 = distinct !{!22, !16}
!23 = distinct !{!23, !20}
!24 = distinct !{!24, !16}
!25 = !{!26, !26, i64 0}
!26 = !{!"long", !6, i64 0}
!27 = distinct !{!27, !16}
!28 = distinct !{!28, !16}
!29 = distinct !{!29, !16}
!30 = distinct !{!30, !16}
!31 = distinct !{!31, !16}
!32 = distinct !{!32, !16}
!33 = distinct !{!33, !16}
!34 = distinct !{!34, !16}
!35 = !{!8, !8, i64 0}
!36 = !{!37, !37, i64 0}
!37 = !{!"short", !6, i64 0}
!38 = !{i64 0, i64 32, !14}
