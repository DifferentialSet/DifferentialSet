Reading GOTO program from 'captured'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER__start /* __CPROVER__start */
        // 40 no location
        // Labels: __CPROVER_HIDE
        CALL __CPROVER_initialize()
        // 41 file alignment.c line 1
        CALL main()
        // 42 file alignment.c line 1
        ASSIGN return' := main__return_value
        // 43 file alignment.c line 1
        DEAD main__return_value
        // 44 file alignment.c line 1
        OTHER code #source_location="" statement="output"(address_of("return'"[0]), return')        // 45 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER_initialize /* __CPROVER_initialize */
        // 48 file <built-in-additions> line 20
        // Labels: __CPROVER_HIDE
        ASSIGN __CPROVER_alloca_object := NULL
        // 49 file <built-in-additions> line 14
        ASSIGN __CPROVER_dead_object := NULL
        // 50 file <built-in-additions> line 13
        ASSIGN __CPROVER_deallocated := NULL
        // 51 file <built-in-additions> line 23
        ASSIGN __CPROVER_malloc_failure_mode_assert_then_assume := 2
        // 52 file <built-in-additions> line 22
        ASSIGN __CPROVER_malloc_failure_mode_return_null := 1
        // 53 file <built-in-additions> line 17
        ASSIGN __CPROVER_malloc_is_new_array := 0 ≠ 0
        // 54 file <built-in-additions> line 15
        ASSIGN __CPROVER_malloc_object := NULL
        // 55 file <built-in-additions> line 16
        ASSIGN __CPROVER_malloc_size := 0
        // 56 file <built-in-additions> line 24
        ASSIGN __CPROVER_max_malloc_size := cast(8388608, unsignedbv[32])
        // 57 file <built-in-additions> line 18
        ASSIGN __CPROVER_memory_leak := NULL
        // 58 file <built-in-additions> line 8
        ASSIGN __CPROVER_next_thread_id := cast(0, unsignedbv[32])
        // 59 file <built-in-additions> line 11
        ASSIGN __CPROVER_next_thread_key := cast(0, unsignedbv[32])
        // 60 file <built-in-additions> line 38
        ASSIGN __CPROVER_pipe_count := cast(0, unsignedbv[32])
        // 61 file <built-in-additions> line 29
        ASSIGN __CPROVER_rounding_mode := 0
        // 62 file <built-in-additions> line 6
        ASSIGN __CPROVER_thread_id := cast(0, unsignedbv[32])
        // 63 file <built-in-additions> line 10
        ASSIGN __CPROVER_thread_key_dtors := array_of #source_location=""(NULL)
        // 64 file <built-in-additions> line 9
        ASSIGN __CPROVER_thread_keys := array_of #source_location=""(NULL)
        // 65 file <built-in-additions> line 7
        ASSIGN __CPROVER_threads_exited := array_of #source_location=""(false)
        // 66 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

branch_id /* branch_id */
        // 46 file /tmp/tmp.stdin2865217.JJ0apu.c line 2
        SKIP
        // 47 file /tmp/tmp.stdin2865217.JJ0apu.c line 3 function branch_id
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

main /* main */
        // 0 file alignment.c line 2 function main
        DECL main::1::main_b2 : signedbv[32]
        // 1 file alignment.c line 2 function main
        DECL main::1::main_b1 : signedbv[32]
        // 2 file alignment.c line 2 function main
        DECL main::1::main_b0 : signedbv[32]
        // 3 file alignment.c line 2 function main
        DECL main::1::main_a2 : signedbv[32]
        // 4 file alignment.c line 2 function main
        DECL main::1::main_a1 : signedbv[32]
        // 5 file alignment.c line 2 function main
        DECL main::1::main_a0 : signedbv[32]
        // 6 file alignment.c line 2 function main
        DECL main::1::main_s2 : signedbv[32]
        // 7 file alignment.c line 2 function main
        DECL main::1::main_s1 : signedbv[32]
        // 8 file alignment.c line 2 function main
        DECL main::1::main_s0 : signedbv[32]
        // 9 file alignment.c line 2 function main
        SKIP
        // 10 file alignment.c line 2 function main
        SKIP
        // 11 file alignment.c line 2 function main
        SKIP
        // 12 file alignment.c line 2 function main
        SKIP
        // 13 file alignment.c line 2 function main
        SKIP
        // 14 file alignment.c line 2 function main
        SKIP
        // 15 file alignment.c line 2 function main
        SKIP
        // 16 file alignment.c line 2 function main
        SKIP
        // 17 file alignment.c line 2 function main
        SKIP
        // 18 file alignment.c line 3 function main
        IF main::1::main_s0 ≠ 0 THEN GOTO 1
        // 19 no location
        GOTO 2
        // 20 no location
     1: CALL branch_id(address_of("$0"[0]))
        // 21 file alignment.c line 4 function main
        ASSIGN main::1::main_a0 := main::1::main_a1
        // 22 file alignment.c line 5 function main
        ASSIGN main::1::main_a1 := 1
        // 23 file alignment.c line 6 function main
        ASSIGN main::1::main_a2 := 3
        // 24 file alignment.c line 6 function main
        GOTO 3
        // 25 no location
     2: CALL branch_id(address_of("$1"[0]))
        // 26 file alignment.c line 9 function main
        ASSIGN main::1::main_a0 := main::1::main_a1
        // 27 file alignment.c line 11 function main
     3: ASSIGN main::1::main_b0 := 1
        // 28 file alignment.c line 12 function main
        SKIP
        // 29 file alignment.c line 12 function main
        SKIP
        // 30 file alignment.c line 12 function main
        SKIP
        // 31 file alignment.c line 12 function main
        SKIP
        // 32 file alignment.c line 12 function main
        SKIP
        // 33 file alignment.c line 12 function main
        SKIP
        // 34 file alignment.c line 12 function main
        SKIP
        // 35 file alignment.c line 12 function main
        SKIP
        // 36 file alignment.c line 12 function main
        SKIP
        // 37 file alignment.c line 12 function main
        ASSIGN main__return_value := side_effect #source_location="" statement="nondet" is_nondet_nullable="1"
        // 38 file alignment.c line 12 function main
        ASSERT false // insert-final-assert-false (should fail) 
        // 39 file alignment.c line 12 function main
        END_FUNCTION

