Reading GOTO program from 'captured'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER__start /* __CPROVER__start */
        // 63 no location
        // Labels: __CPROVER_HIDE
        CALL __CPROVER_initialize()
        // 64 file branching.c line 1
        CALL main()
        // 65 file branching.c line 1
        ASSIGN return' := main__return_value
        // 66 file branching.c line 1
        DEAD main__return_value
        // 67 file branching.c line 1
        OTHER code #source_location="" statement="output"(address_of("return'"[0]), return')        // 68 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER_initialize /* __CPROVER_initialize */
        // 69 file <built-in-additions> line 20
        // Labels: __CPROVER_HIDE
        ASSIGN __CPROVER_alloca_object := NULL
        // 70 file <built-in-additions> line 14
        ASSIGN __CPROVER_dead_object := NULL
        // 71 file <built-in-additions> line 13
        ASSIGN __CPROVER_deallocated := NULL
        // 72 file <built-in-additions> line 23
        ASSIGN __CPROVER_malloc_failure_mode_assert_then_assume := 2
        // 73 file <built-in-additions> line 22
        ASSIGN __CPROVER_malloc_failure_mode_return_null := 1
        // 74 file <built-in-additions> line 17
        ASSIGN __CPROVER_malloc_is_new_array := 0 ≠ 0
        // 75 file <built-in-additions> line 15
        ASSIGN __CPROVER_malloc_object := NULL
        // 76 file <built-in-additions> line 16
        ASSIGN __CPROVER_malloc_size := 0
        // 77 file <built-in-additions> line 24
        ASSIGN __CPROVER_max_malloc_size := cast(8388608, unsignedbv[32])
        // 78 file <built-in-additions> line 18
        ASSIGN __CPROVER_memory_leak := NULL
        // 79 file <built-in-additions> line 8
        ASSIGN __CPROVER_next_thread_id := cast(0, unsignedbv[32])
        // 80 file <built-in-additions> line 11
        ASSIGN __CPROVER_next_thread_key := cast(0, unsignedbv[32])
        // 81 file <built-in-additions> line 38
        ASSIGN __CPROVER_pipe_count := cast(0, unsignedbv[32])
        // 82 file <built-in-additions> line 29
        ASSIGN __CPROVER_rounding_mode := 0
        // 83 file <built-in-additions> line 6
        ASSIGN __CPROVER_thread_id := cast(0, unsignedbv[32])
        // 84 file <built-in-additions> line 10
        ASSIGN __CPROVER_thread_key_dtors := array_of #source_location=""(NULL)
        // 85 file <built-in-additions> line 9
        ASSIGN __CPROVER_thread_keys := array_of #source_location=""(NULL)
        // 86 file <built-in-additions> line 7
        ASSIGN __CPROVER_threads_exited := array_of #source_location=""(false)
        // 87 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

branch_id /* branch_id */
        // 61 file /tmp/tmp.stdin3060904.JsdDwp.c line 2
        SKIP
        // 62 file /tmp/tmp.stdin3060904.JsdDwp.c line 3 function branch_id
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

main /* main */
        // 0 file branching.c line 2 function main
        DECL main::1::main_d : signedbv[32]
        // 1 file branching.c line 2 function main
        DECL main::1::main_c : signedbv[32]
        // 2 file branching.c line 2 function main
        DECL main::1::main_b : signedbv[32]
        // 3 file branching.c line 2 function main
        DECL main::1::main_a : signedbv[32]
        // 4 file branching.c line 2 function main
        DECL main::1::main_A : signedbv[32][10]
        // 5 file branching.c line 2 function main
        DECL main::1::main_s3 : signedbv[32]
        // 6 file branching.c line 2 function main
        DECL main::1::main_s2 : signedbv[32]
        // 7 file branching.c line 2 function main
        DECL main::1::main_s1 : signedbv[32]
        // 8 file branching.c line 2 function main
        DECL main::1::main_s0 : signedbv[32]
        // 9 file branching.c line 2 function main
        SKIP
        // 10 file branching.c line 2 function main
        SKIP
        // 11 file branching.c line 2 function main
        SKIP
        // 12 file branching.c line 2 function main
        SKIP
        // 13 file branching.c line 2 function main
        SKIP
        // 14 file branching.c line 2 function main
        SKIP
        // 15 file branching.c line 2 function main
        SKIP
        // 16 file branching.c line 2 function main
        SKIP
        // 17 file branching.c line 2 function main
        SKIP
        // 18 file branching.c line 3 function main
        IF main::1::main_s0 ≠ 0 THEN GOTO 1
        // 19 no location
        CALL branch_id(address_of("$1"[0]))
        // 20 no location
        GOTO 11
        // 21 no location
     1: CALL branch_id(address_of("$0"[0]))
        // 22 file branching.c line 4 function main
        ASSIGN main::1::main_a := 42
        // 23 file branching.c line 5 function main
        IF main::1::main_s1 ≠ 0 THEN GOTO 2
        // 24 no location
        CALL branch_id(address_of("$0$1"[0]))
        // 25 no location
        GOTO 11
        // 26 no location
     2: CALL branch_id(address_of("$0$0"[0]))
        // 27 file branching.c line 6 function main
        ASSIGN main::1::main_b := 42
        // 28 file branching.c line 7 function main
        IF main::1::main_s2 ≠ 0 THEN GOTO 3
        // 29 no location
        GOTO 4
        // 30 no location
     3: CALL branch_id(address_of("$0$0$0"[0]))
        // 31 file branching.c line 8 function main
        ASSIGN main::1::main_c := 42
        // 32 file branching.c line 8 function main
        GOTO 5
        // 33 no location
     4: CALL branch_id(address_of("$0$0$1"[0]))
        // 34 file branching.c line 10 function main
        ASSIGN main::1::main_d := 42
        // 35 file branching.c line 12 function main
     5: IF main::1::main_s2 ≠ 0 THEN GOTO 6
        // 36 no location
        GOTO 7
        // 37 no location
     6: CALL branch_id(address_of("$0$0$2"[0]))
        // 38 file branching.c line 13 function main
        ASSIGN main::1::main_c := 42
        // 39 file branching.c line 13 function main
        GOTO 8
        // 40 no location
     7: CALL branch_id(address_of("$0$0$3"[0]))
        // 41 file branching.c line 15 function main
        ASSIGN main::1::main_d := 42
        // 42 file branching.c line 17 function main
     8: IF main::1::main_s3 ≠ 0 THEN GOTO 9
        // 43 no location
        GOTO 10
        // 44 no location
     9: CALL branch_id(address_of("$0$0$4"[0]))
        // 45 file branching.c line 18 function main
        ASSIGN main::1::main_c := 42
        // 46 file branching.c line 18 function main
        GOTO 11
        // 47 no location
    10: CALL branch_id(address_of("$0$0$5"[0]))
        // 48 file branching.c line 20 function main
        ASSIGN main::1::main_d := 42
        // 49 file branching.c line 24 function main
    11: SKIP
        // 50 file branching.c line 24 function main
        SKIP
        // 51 file branching.c line 24 function main
        SKIP
        // 52 file branching.c line 24 function main
        SKIP
        // 53 file branching.c line 24 function main
        SKIP
        // 54 file branching.c line 24 function main
        SKIP
        // 55 file branching.c line 24 function main
        SKIP
        // 56 file branching.c line 24 function main
        SKIP
        // 57 file branching.c line 24 function main
        SKIP
        // 58 file branching.c line 24 function main
        ASSIGN main__return_value := side_effect #source_location="" statement="nondet" is_nondet_nullable="1"
        // 59 file branching.c line 24 function main
        ASSERT false // insert-final-assert-false (should fail) 
        // 60 file branching.c line 24 function main
        END_FUNCTION

