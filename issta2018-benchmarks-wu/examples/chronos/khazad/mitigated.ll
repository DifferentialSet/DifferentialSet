; ModuleID = 'mitigated.c'
source_filename = "mitigated.c"
target datalayout = "e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128"
target triple = "i386-pc-linux-gnu"

%struct.ds_base = type { i8*, i32*, i32 }

@in_key = internal global [32 x i8] zeroinitializer, align 4
@in_pub = internal global [64 x i8] zeroinitializer, align 8
@T0 = internal unnamed_addr constant [256 x i64] [i64 -4984409015301084671, i64 6123854366938654385, i64 3418720935495406797, i64 8402817199848758097, i64 6049830747628525476, i64 -3213199892606960125, i64 -3284408642092223228, i64 5608997373395240446, i64 5832263832117594797, i64 -5987102330325442461, i64 -8247763811619268988, i64 -4621600891817865958, i64 8111226665027712845, i64 5978059047988518051, i64 -7299399550016153631, i64 5536099739622870777, i64 -1575257779520462676, i64 -3070764835808050159, i64 -7519772291089274686, i64 -3355635052485105651, i64 3699088067404353689, i64 5905161431530226090, i64 6624075055487913884, i64 -6415481002019672491, i64 -2414105863317962464, i64 5249012941331276517, i64 -6276440962522035073, i64 -7370599529445586200, i64 -2634522696396380613, i64 3627307528855870366, i64 -5204782031253203678, i64 -280956921199744306, i64 -2073719300794125421, i64 -7007808980835353603, i64 -7949276726193007920, i64 -7228181961352930074, i64 -2144928050280433516, i64 -4913191426638913274, i64 4738659101275517402, i64 7976620183359317271, i64 -6488932746637757604, i64 -3801025164090124725, i64 7763556884254016012, i64 -7664441590007693620, i64 -6773767745384112320, i64 -934238434085846045, i64 -5634286466359021776, i64 145812877181195790, i64 -3726420984854583458, i64 -4300594649620398234, i64 2100775746835894099, i64 1458128634372988012, i64 -4370695159972229517, i64 7180305650944023092, i64 -2705731445881639620, i64 6766492640760444302, i64 6908910226032960384, i64 -2559918654599801042, i64 9045455198793713774, i64 -3654086300968522663, i64 9187872784068337248, i64 6552303355847902363, i64 7833076698312078105, i64 6693595006988074633, i64 -647116417326649345, i64 2768192866343536626, i64 -63935346073946169, i64 -1357110166910463559, i64 -1718818770718083422, i64 -7081260794169776396, i64 8048391917360115216, i64 -8174311998284854387, i64 1813653764436452175, i64 -6846111233818913721, i64 -1149008243489251606, i64 -8537102409456108904, i64 1085715175492315437, i64 506967335651258645, i64 -5770089508610376342, i64 -355560962997380133, i64 583251508724783160, i64 1531035038603843435, i64 943280067153788707, i64 291625754362391580, i64 72906438590597895, i64 7254329132812053281, i64 -2342897079472960985, i64 8546360616176520543, i64 8758368228703429746, i64 -2487583970713740247, i64 4415767106184131251, i64 1601689711472052834, i64 4558202214520562877, i64 3988461849885932677, i64 7905974332085499934, i64 4055738685195130280, i64 -5055608994733656312, i64 8328793580541782596, i64 -1646484121190711899, i64 3846026672830016139, i64 6196752000711028150, i64 8184124264441396298, i64 8903037613523300988, i64 -8320107265695375997, i64 8257021880900723011, i64 -8609445897891958369, i64 -718325201172699912, i64 3062070077190648790, i64 4486421710331817914, i64 6837138492033214599, i64 2839973370532285685, i64 5100895315570639055, i64 870373662922929188, i64 7327226766585471014, i64 7545989900020473605, i64 7035636334843628602, i64 217593415730732297, i64 -4513130319850366851, i64 6339169517264075704, i64 -2997286659692783336, i64 -2776957787555041227, i64 6406508071257510549, i64 -2849292437081359566, i64 7397872549139823919, i64 -2926077875847785953, i64 4201551493654741926, i64 -4015794904775111870, i64 4342860701954324916, i64 -426769712483692324, i64 -7590989845392759867, i64 -6344263447717239470, i64 -7442943017881435665, i64 -1429444850797569346, i64 -5127952483168453617, i64 -4083573005774085521, i64 -5841307062912813459, i64 7618887499434152962, i64 5466579925561688044, i64 -6061679905992486538, i64 -6204097474087237768, i64 7469644283140617768, i64 729064317186494006, i64 5172667049570388936, i64 -1005447183572154140, i64 -5349451330173730004, i64 2478818912063286254, i64 -1931284106554160767, i64 -1283632059517825872, i64 -4692818446120303075, i64 3133850615739136209, i64 -9106772405875055968, i64 1312315894630753918, i64 -8964354906501876562, i64 1958340672857109825, i64 1013934671302517290, i64 2550599450611769577, i64 -791803377284810255, i64 5030249533017349574, i64 2405912473473742567, i64 -3580608193572736688, i64 5321910540743911906, i64 3203379422929160644, i64 -497996054153949739, i64 -1857805930442042232, i64 -5275999585555636699, i64 2916257268731028952, i64 1673470215661846885, i64 -9035572495165096023, i64 1886560134307577414, i64 -8394684841363460970, i64 -135144129919992640, i64 -8465902430026684527, i64 656157947315376959, i64 -3943460255248793531, i64 -8677268108210284366, i64 5679643224668018935, i64 -2216154460670171747, i64 3346940431306661834, i64 -2003618790441270650, i64 -2288489110197539174, i64 -1504049030034150485, i64 -8021620214628853289, i64 -6561276200712816549, i64 2171430350984630874, i64 -8821937407128711492, i64 6962738735429945149, i64 0, i64 2697538193476377339, i64 -864138061171920138, i64 -1076673593961884179, i64 -7736785044083804725, i64 800844855736026417, i64 -1786597146595991665, i64 8475714833622175830, i64 -1212423275671779401, i64 3773120268600205708, i64 3554401090266318487, i64 -3143099519694106858, i64 -3427969702011428086, i64 -8748485662513769547, i64 9116101050067539303, i64 -5914758876250379420, i64 -208622237312638519, i64 2989163707320577759, i64 3481494651676773776, i64 4273332032203229345, i64 -6936591426531872518, i64 -570330703681321262, i64 -4154781789619082904, i64 1384096433180290425, i64 435186831461464594, i64 364532158593247003, i64 -4228259965734341535, i64 1239409456040164215, i64 8618132350177314392, i64 8972557565020291945, i64 8831265913882245499, i64 8685470629289750389, i64 3916681345697183618, i64 2027869342605034580, i64 4128645123784679087, i64 6479405670670145938, i64 1740747325845858376, i64 6267397783264325823, i64 -5491868966983747266, i64 -5706629954793823177, i64 2624631789246566908, i64 2333006034884197856, i64 -5563086555645922759, i64 -7878076815483056167, i64 -6631350246008846002, i64 -4585464969376689286, i64 4957351899244975809, i64 7108533951302963507, i64 1166503017449566320, i64 -5421794784248788949, i64 -8894280861204822597, i64 4883328417373808596, i64 -7806859226819836706, i64 -4441903909457492620, i64 5394808225921676523, i64 -4766270259457860844, i64 -8103094443981373302, i64 3276285827158966979, i64 -4838613713532923885, i64 -7153604248245883405, i64 7691785184612960523, i64 4665761501862886109, i64 -3509399409727735209, i64 -6702567834671021495, i64 -9179115894310901337, i64 5751414958667764720, i64 2243210855174429021, i64 -3872233913575383732, i64 -6132897494654657935, i64 4811556717733801171], align 8
@T1 = internal unnamed_addr constant [256 x i64] [i64 -3190122131770113686, i64 -264558657006096026, i64 8155899887563754772, i64 -7172904014107553509, i64 -769268561700477865, i64 7553583773335421886, i64 7769480595345114293, i64 -2932577653704360315, i64 -1130388810249687734, i64 -1608868592566180896, i64 -8462964028136127338, i64 -2540177771059668403, i64 -8038734167351145161, i64 -697486927767428260, i64 -5504867337234554601, i64 -3149035192015521394, i64 2587992600787463200, i64 7121781402479366532, i64 -6586530506188930456, i64 7985359755912416680, i64 6139531970917079504, i64 -913940068031550911, i64 -1343433395215557617, i64 -601788404867050066, i64 9213944135872815297, i64 -2861908656282278494, i64 -1898211605228322868, i64 -5288977077667502070, i64 8132252206475787238, i64 6211302575374638811, i64 -4271855669737086443, i64 1872419750503698090, i64 4099199986379559795, i64 -4639028387897934533, i64 -5867645510809956270, i64 -5720753129499269604, i64 4315096808120816760, i64 -3406007924303264159, i64 -4377120497580909839, i64 -5589306176522610715, i64 -962350102314656589, i64 4669036592554330966, i64 -4797500522151605054, i64 -6731197614473491330, i64 -98762814279040865, i64 644886572647375811, i64 -3552970674894983121, i64 432919543926230550, i64 5317866152629788263, i64 5892101631912339007, i64 2818524892638368719, i64 4329160254890208412, i64 6396211168631878414, i64 -6529108329110227814, i64 8348149028485479661, i64 -1775205049000817099, i64 -2206976702786076637, i64 8781046582179147479, i64 -8683620774578000312, i64 5390208502865353068, i64 -9115392427826388898, i64 -1271651761282508028, i64 -5445764899425412621, i64 -1991662587311978178, i64 357768971518803951, i64 7649010577948602951, i64 2089429278012262327, i64 3093267689894099217, i64 2731555799935132214, i64 -4999607676726283226, i64 -5661079014094204690, i64 -8102384739307778677, i64 3105651289859968995, i64 -171107397897074796, i64 1004329001350261470, i64 -8752298244705249094, i64 1229257558101994857, i64 650518479192069425, i64 -1391848104033686787, i64 1223625374531902363, i64 1731678175704922200, i64 4545611230760299415, i64 1661046734818517887, i64 865839087852461100, i64 216459771963115275, i64 -6024433609593249365, i64 8998056109956147146, i64 -7316462883390791923, i64 -8396538219309862300, i64 8853388932414712284, i64 5133481204201206706, i64 4185619046511960714, i64 4701692026947812772, i64 6428866325999945212, i64 -5229307360845816072, i64 5204147829728127125, i64 -2974231873008367497, i64 -7677613917996628950, i64 2803889354346112317, i64 6860637911067298794, i64 -48101118694934931, i64 -7822285424864572868, i64 -8251849120255869838, i64 -8535299815929576547, i64 -7605832284332014815, i64 -8824642828591718479, i64 573656997167036644, i64 9091222457175299635, i64 4773471427498392239, i64 -2135203864946047192, i64 7577231177398023500, i64 -3871333140747661376, i64 1444595758948426868, i64 -5807976071013652832, i64 -5158638363692169761, i64 -6673779835978171764, i64 361148939737106717, i64 6827987151208873240, i64 -479890364666234757, i64 7482354198123518105, i64 8564045781238822384, i64 -1704571235950815982, i64 8491712227096277755, i64 -6167992478876487747, i64 7266466172206849938, i64 5637049780931438211, i64 5028496613174821451, i64 4917030228599551161, i64 1439522196273159312, i64 -6370635917831191197, i64 -817682993493224795, i64 -5361321661553971455, i64 3020925339390098970, i64 -3046576456626401412, i64 6109128751875387170, i64 -1175953515407512074, i64 -4942189621205597484, i64 -2500770815547020097, i64 -2257643072905185583, i64 -1825867021610288953, i64 -6239765316448081738, i64 2164580127445104206, i64 -3943105978587690805, i64 860783394388632776, i64 -4416522778558518269, i64 7359632242400620139, i64 3667432800432456009, i64 3453822892546895884, i64 -2324283182433493690, i64 9019451852717740344, i64 -7025123668629806878, i64 3896275895336074918, i64 -7456917312647614732, i64 3250322865447911925, i64 1301036958384138850, i64 7287861637943060832, i64 213084202328191481, i64 -3511316732616390947, i64 7143172470705940342, i64 5750763706323456113, i64 -2645459914064141655, i64 8371238089215493129, i64 1655418949831808397, i64 4028005595271301204, i64 -4055961081110911714, i64 8658320505971988517, i64 4113839646229816705, i64 -7241031520382899713, i64 3322093469637035774, i64 -9184074296537016660, i64 2305317303660495036, i64 -8968188504272301657, i64 1948137947668037459, i64 5100830167317366080, i64 -7744043848380861736, i64 -3292576469649590376, i64 4530975969493425509, i64 8227679288114334239, i64 3595090449928455746, i64 4458642415082445422, i64 2372095779046206251, i64 -5939990094696425639, i64 -1034685889839670344, i64 2458515116203989714, i64 -7888710956665422642, i64 -6890228578464744057, i64 0, i64 8009002762465377114, i64 140741851824191218, i64 1076662555761241557, i64 -6803533402266940555, i64 2092809523255980357, i64 3812117569623068511, i64 -6956446475527956976, i64 3237934866898663175, i64 6644186935465643233, i64 5994842803679958982, i64 7049439052243801743, i64 7913026201769872035, i64 -7528149260023122477, i64 -9043619590254794923, i64 -1536532805041167125, i64 1944762101007698337, i64 8874780277666668334, i64 5778383031985279181, i64 5565279176473878920, i64 -4854922976255673808, i64 1583085395420828294, i64 6325016777792055337, i64 3824505291146951085, i64 722297879474213434, i64 1082290063722552103, i64 5964443982147903796, i64 3679816123372959675, i64 -7388235720962385914, i64 -8900078313157596861, i64 -8180067486591255687, i64 -8612986961796434577, i64 6500645726550524663, i64 2602073916768277700, i64 5420607601422806942, i64 -1488122493732679143, i64 2889191517896853736, i64 -408117526826205328, i64 -3984764318375920071, i64 -3625315258513017052, i64 7792551786863721553, i64 6926712699011260541, i64 -3768878525842769614, i64 -6083553362563049137, i64 -530556457759977847, i64 6755653597066328595, i64 -3727774270927552042, i64 -6457326695445613679, i64 3463356351409844400, i64 -4488858566083532024, i64 -7961046744458871867, i64 -4232448991249836825, i64 -6299439154827764156, i64 6612107990641570821, i64 -2428989181613970508, i64 -2684862472067148709, i64 -8318279327665517952, i64 8587689064817148674, i64 -2757198259592162480, i64 -5071943464519732435, i64 -4725718888486990903, i64 -4593569239799046662, i64 5534875680406787962, i64 -314670665226827390, i64 -7097468252516276247, i64 -3364349307489619821, i64 2386735715921845721, i64 4884933414564023389, i64 -2041757280372035110, i64 -4160667357316787220], align 8
@T2 = internal unnamed_addr constant [256 x i64] [i64 -3285170510987412551, i64 5555565058369643930, i64 -4858487410275786139, i64 -3622736211420830329, i64 5837320380228106146, i64 7762186404591030486, i64 8051823068848641758, i64 2982594441287480146, i64 6705104413199826362, i64 -8491909926868496631, i64 1045835164850325788, i64 -4145071029110528623, i64 -2473196855651123801, i64 6126957036130529706, i64 5965187800442698660, i64 3269979280263198042, i64 -8113821717045164541, i64 8333582779594949862, i64 7417876793643914700, i64 7184034628805450950, i64 -3675162327246067067, i64 6415467774409898930, i64 8154431149035014114, i64 -6772104356946381991, i64 6882026345881206462, i64 4428525903871847802, i64 -7335615138101209303, i64 6829596367076749756, i64 5445093227436433558, i64 -3964801173313114995, i64 -1850495919076502063, i64 -2941980744386465101, i64 -6104379463303991221, i64 4817900245561992068, i64 9146689546112483836, i64 6254826638188903852, i64 -5814742798811498941, i64 -2995531673476088399, i64 1826281958730799922, i64 -6499979922552424105, i64 -5905444024556390079, i64 846900207131787286, i64 -5631069921324800129, i64 7997150088471009756, i64 -4746897367259618975, i64 -1506186856383704885, i64 -121683165802626591, i64 579277727233608720, i64 1719192298410906158, i64 4031781944661811822, i64 8388267837773532904, i64 5783770072005507232, i64 3163993521194774614, i64 -7930166430938147009, i64 5734729891962480286, i64 7580787320388768722, i64 7007143490802999234, i64 6308378118921843374, i64 -1615528346329934897, i64 1431807451079480358, i64 -2189172175244615713, i64 8444067804669002218, i64 -5926336110214417081, i64 7868172159364486618, i64 -356638669890713365, i64 -7440467296453995475, i64 -2655717381434296149, i64 -7818551138126834629, i64 -8687469909646357997, i64 5680056977887357340, i64 -6787364778406805665, i64 183678431988089604, i64 7240971452169541320, i64 -5036536222285568151, i64 -1794701984118727981, i64 2204381754370298172, i64 4337827433541345912, i64 2025220193492734520, i64 -8779292566183295727, i64 -3805265636375191413, i64 2317110908934434880, i64 6071157135539666600, i64 3763053358213181032, i64 1158555454467217440, i64 289638863616804360, i64 -8220928952019892985, i64 6594641481437804726, i64 -4200883623385159273, i64 -468240721653920785, i64 6020993271590417574, i64 -808047279986209035, i64 6363047764206711984, i64 -233273204523826459, i64 -2527865906210164059, i64 -6213720948955253937, i64 -2244982529844539171, i64 -2420761943917153887, i64 -3340980889059051585, i64 -8977106556757390309, i64 -3107143581835739467, i64 5268180219662361490, i64 -2762833494206170193, i64 -1041884516341512193, i64 758448109939527444, i64 -3051344233391509065, i64 1914742899377903412, i64 -69253805480866077, i64 -6304429806841299891, i64 -520660250777713427, i64 7294528346892261834, i64 -7153080249931673051, i64 379224630261418250, i64 3475666294410586208, i64 -8508313791029165297, i64 -4767789487276855961, i64 -7352019036622136529, i64 868916573602646552, i64 2585841745946065990, i64 4690032790987140994, i64 9199119454319464190, i64 4871445051814046854, i64 9017711582646750714, i64 5161081699227069070, i64 -8799076363447351017, i64 8911734589607626998, i64 -1670208402910438195, i64 562888678385551886, i64 -1095434343486813955, i64 -3515628972151134589, i64 7130489755711919044, i64 -6484717319249267375, i64 6539957512084354996, i64 -7531166290560527821, i64 -2710400798674667607, i64 4322548906537756790, i64 -9066679604148845799, i64 -5057426126100337809, i64 3565245470796982114, i64 -7620746012365759183, i64 -7045976283343695583, i64 -9086461219570168033, i64 2891885036002753616, i64 91839774440591106, i64 -1216550191891212605, i64 -1271222624920495679, i64 -8599022715217720307, i64 -5523975888778992517, i64 -6957518063466947037, i64 -4432458067076078695, i64 -6014790960505816507, i64 4521475070310228348, i64 5213499544565607568, i64 3942201741796060524, i64 7815745562526964440, i64 4050440386985469040, i64 -8309383869150672379, i64 -934790479500737285, i64 669987203652682514, i64 -8888661578465425899, i64 2292840525907140158, i64 4138889265350355826, i64 -5720648549775644547, i64 -4378913812400231269, i64 -4658439214222250397, i64 -2137882956773616679, i64 -6879203934312271779, i64 6650434810494153400, i64 3652562904318290788, i64 7526106716426362064, i64 1629612024945581356, i64 -2368332516756013405, i64 1339973187199376164, i64 2606749772282803784, i64 273252030972529670, i64 2783655118052144460, i64 2696335468327844170, i64 -6682531238955352997, i64 -5145874456529673107, i64 -5236591041481121165, i64 -6392894591575885229, i64 -8403458381269221365, i64 8857050691388524532, i64 -6192831079500742839, i64 8675654867082691824, i64 3362928412342368604, i64 -7062382398067090137, i64 0, i64 -7732357925020377547, i64 -647405632202865933, i64 -2084338631498195749, i64 7709763033291775956, i64 3181523882103355992, i64 -4945824078632097685, i64 -3910121050430102641, i64 -7244902928145229781, i64 -3394530645604779843, i64 -4254440037097691499, i64 8620967627194811118, i64 7473671275950037710, i64 2496268080120148804, i64 -1901787319390234153, i64 -8204522871655708415, i64 -3229365591952771909, i64 -6589565070729021867, i64 -4544078900412505955, i64 -1380569556574954811, i64 5105287283225552268, i64 -4089277165289198957, i64 4609933771249593982, i64 5503138390934645400, i64 1737833147205293104, i64 1445942518001376808, i64 3744397097061950566, i64 4923860681485674120, i64 -4488268479507976289, i64 -1328143507589098041, i64 -752247860405534217, i64 -178604082830438937, i64 -2815252952732486483, i64 8100880773970938080, i64 -1955343666261289259, i64 8728074944125258738, i64 6951332588821172416, i64 4977417646807968138, i64 -700956494451012111, i64 -411322020828575767, i64 -8019744988789417923, i64 -9178300441780240355, i64 -990595332230771719, i64 8277777379583675364, i64 -5326170696444875407, i64 2875478393090652750, i64 957372042359964954, i64 -7640529775270604489, i64 4634221817868869760, i64 -1558609679864848439, i64 3075541357163134804, i64 1248134564012136226, i64 8567416217061445100, i64 3453630185452385886, i64 3854882126430970218, i64 -3570301334046070399, i64 471065469651649804, i64 -5433261486275039627, i64 -3857688389258858615, i64 5392669922976558996, i64 -5341433265388822153, i64 2115918597520727354, i64 2005455661463738422, i64 -5615809534224635015, i64 4231836215586269044, i64 2408950612238581570, i64 8963041913638568696, i64 1136536871657834014, i64 -7910384849877083335, i64 1537771219914559786], align 8
@T3 = internal unnamed_addr constant [256 x i64] [i64 7553332320894892475, i64 1823390864838662885, i64 -7801236004394474014, i64 -5058214783076301019, i64 167184400777716471, i64 -5157913692712544560, i64 -4796496528359956778, i64 7217536607820534451, i64 963190124622559997, i64 2777289046846605775, i64 -9003106264647590903, i64 8774943637316145573, i64 -5918415523288733891, i64 528599366074411761, i64 -4011946840250932101, i64 7002486422700448437, i64 7318107410317443910, i64 -6452705173830310204, i64 -1051972491235767211, i64 -5592504468107639076, i64 -14543018676681302, i64 601779557305004795, i64 3058486599677371079, i64 334101616152959475, i64 -9124433728020300034, i64 8448146283618794157, i64 3646479360171190743, i64 -4080623440211821455, i64 -8049215822089513248, i64 -375955793471894100, i64 5901620652545528213, i64 3159022237213438770, i64 5236341541830871920, i64 -2575285347328228253, i64 -1189321310290641855, i64 -3650536264310150019, i64 5597758706184373110, i64 7914742896834752957, i64 6348319837368955547, i64 -3772412926935869575, i64 841876972403638777, i64 -4608518551797098880, i64 -2688159235090251929, i64 -329146958486774695, i64 2287545629278167521, i64 1795538720028609296, i64 5764271833493791105, i64 722834346088992780, i64 -2659575912833012078, i64 -921177694803104094, i64 7598741478194538574, i64 4922500451135168632, i64 -1717181236439525712, i64 -967810599405076649, i64 -7687798657735876890, i64 3776804151530738387, i64 4495121703380435679, i64 -8406116192878088462, i64 -7716487513731707117, i64 -2444527926903036268, i64 -6998169961879380193, i64 3419901564973017793, i64 -4490734877033674891, i64 3561753966410652373, i64 935346810806856456, i64 -4712900294537171500, i64 2655748290157980472, i64 9120680870855916372, i64 8036433741150032714, i64 -3220431495954523031, i64 -3557367140062437505, i64 -8357960116023393277, i64 9035394140126562390, i64 1926130655491811815, i64 1722360710876287770, i64 -7557455199150130159, i64 3691844551421032482, i64 1953446264396920850, i64 2992339240592675269, i64 3515922608000043808, i64 2891337384355971120, i64 4707456871740975230, i64 4121944904148412462, i64 1445668692177985560, i64 361417173044496390, i64 -1617447145094576315, i64 -8909390139935246600, i64 -5492814337316907223, i64 -9153131413927301365, i64 -8191068206948112652, i64 -3894409447435209330, i64 5645326000725864564, i64 -4324509800162073214, i64 -1451186884914141774, i64 -4275684691912667277, i64 -2819173958550168176, i64 7484655720935694769, i64 -6714421247135269065, i64 7675020974910937932, i64 -2174008036527786562, i64 2038441049959797475, i64 -6279826090605367493, i64 -8434805065579823353, i64 -8788060486263565297, i64 -6353006281839495375, i64 -7918870172936358889, i64 720303222721667854, i64 -9031830330244116996, i64 -4109461822788080252, i64 4280075916507925209, i64 -4927948271910115886, i64 4829488580906715785, i64 4336988483541557288, i64 -1402396959974617277, i64 -3045075016117950611, i64 -533215442877272229, i64 1084247120885389322, i64 -2151772011832523076, i64 1603837097473180399, i64 -6233149190024069426, i64 -7330885093144099092, i64 2701570818647980749, i64 -6969472326903820566, i64 -2052046699333085367, i64 -6018105601940064568, i64 -3249261117339087460, i64 -3528775056613503350, i64 -3679365868040880760, i64 3877339772352496422, i64 -836922314738908077, i64 119051439655178741, i64 -4442038413998050185, i64 8905632884926853970, i64 7123240747150387639, i64 -271530136986028376, i64 3207389417089407427, i64 -3406485583435632789, i64 8805062064650281639, i64 4437981509857653213, i64 4007894333956497873, i64 -1837000912460701873, i64 2461250225567584316, i64 5044534367780274831, i64 2156955884382110486, i64 6624446185291891097, i64 -6158560190214238772, i64 6247393069390986084, i64 8187315349785158494, i64 8989993813812877731, i64 -8670417555447855622, i64 -4666117884322087903, i64 6505509114798837868, i64 -5388952212758827987, i64 8605302583092172890, i64 3906892528793841700, i64 -5797147415419025974, i64 500747238918191876, i64 5479138320268989059, i64 -6519977363257289274, i64 -3377893447973126498, i64 8086735716302287531, i64 -7156092072275378712, i64 4234253336943893292, i64 6466949053196559214, i64 6116670829043308947, i64 -8601743171457294864, i64 5430278023352006770, i64 -5750362788698561493, i64 8243889808296824924, i64 -7127368023250555875, i64 2440704702073840446, i64 -7488778599191337957, i64 3252754557399418934, i64 -3890187822853781876, i64 -6834612073946133451, i64 7720808372799818425, i64 4801750766436309884, i64 -7586188027020481052, i64 6032345083460875106, i64 5163163532676453242, i64 6956690245964991296, i64 -1550736284075822009, i64 1056922750787537407, i64 7383689102842064964, i64 -6111786541199238087, i64 -171804875560638627, i64 0, i64 -5650769423521663522, i64 285699252988080898, i64 1360947944636144412, i64 -114101180103797665, i64 2822663000362932282, i64 6681992641281747816, i64 -4843164597956341981, i64 8402358937869298520, i64 -1958964457134506568, i64 -737372966517041754, i64 -6667753159759237438, i64 -5231091701868409126, i64 -6619561897449274317, i64 -7213215748752812263, i64 2562243268463755721, i64 3374070223142501172, i64 -8240325998412933642, i64 -1098790139560354400, i64 -2887848342542826086, i64 -2790335523826135963, i64 4595666103182988074, i64 -486573725070033234, i64 6866921889595234410, i64 2168494241770778644, i64 1230625112783792158, i64 -706129708874176860, i64 6144091941756438630, i64 -5277768550444523729, i64 -7931537698852714731, i64 -8073390100283001087, i64 -8791720846609619187, i64 -1236138907541197388, i64 7813785057587683400, i64 -2457756785505806954, i64 2340160251331474123, i64 8673976967083114576, i64 1388791310599621353, i64 5041437505056534925, i64 5402856859707435399, i64 -5435725844128383528, i64 -6881394536300601920, i64 4680026929115625867, i64 -2273566214669212597, i64 1564711300838814189, i64 -1790359245593293126, i64 5264088135147854469, i64 -606395634109302959, i64 5782674768711942240, i64 6839491963675789727, i64 -5896740762816261057, i64 5913724680839570071, i64 -1912155638729479091, i64 -1355764072086937930, i64 9166477029945928353, i64 8344847665189323177, i64 -8573010292521300987, i64 -7371135651669707282, i64 8559893443572173231, i64 -3005385717570497425, i64 -2326744269793429663, i64 6709730404686510749, i64 -3162849859888073064, i64 1203300724897905131, i64 -5027532858107268057, i64 7935854159672328895, i64 7168641125469255746, i64 -4247101387443462522, i64 4076570933917792731, i64 6275139646136265361], align 8
@T4 = internal unnamed_addr constant [256 x i64] [i64 -4919784562263600536, i64 -1902094980789547751, i64 -2133275976993227629, i64 2704160137922006457, i64 -602823036819386110, i64 -3398319945163445320, i64 -2963732472448454723, i64 -5525206465556043420, i64 -163736328197874419, i64 -3528042114360702426, i64 656565141743734403, i64 -6516342408544991623, i64 4442580363164835245, i64 -1032911307986807545, i64 8909272220576207560, i64 -5378829603553661599, i64 5044911934619750245, i64 -4258571185502915674, i64 6182431573449926385, i64 -2538156562674981966, i64 -6159287558949450497, i64 -310113224559994616, i64 -4043652351193681622, i64 -911505766669114876, i64 -90422595584827519, i64 -5946261252335977099, i64 -2942596032843376078, i64 8195437416035016391, i64 -2263368617948066928, i64 -6012908454973880070, i64 -7651311053069556143, i64 3653451528697141035, i64 8091688234510756680, i64 7170922467156771548, i64 4754766362347208431, i64 9055644727515305677, i64 8521787500761165645, i64 -4777931048114661779, i64 -7263477329286719144, i64 8743709090367317451, i64 -485910074276794869, i64 -9217084703834633280, i64 7457892866551820762, i64 6475189781400809211, i64 -2206307242490282465, i64 1210276308681550616, i64 -9087930686868881841, i64 869218977501808650, i64 -7913273838391453733, i64 -6742381881514182669, i64 5686022485433611369, i64 8692119268834955332, i64 -5740384784675755032, i64 6286913154633273842, i64 -1828763553047031915, i64 -3183423101020444364, i64 -2323255423498362562, i64 -959593074315929717, i64 1427439246289398164, i64 -7771404974029138978, i64 2296658103531331998, i64 -4473758214547147473, i64 8450990516307537345, i64 -3037046239018062543, i64 642871254470425356, i64 -3157788658364671810, i64 4083559556747942692, i64 6069464413057487742, i64 5337670056671545199, i64 7610000302409404115, i64 9178316319965159886, i64 217452122119013004, i64 6253498011468129405, i64 -1771721943029007846, i64 1933133765703231255, i64 1242072761552477847, i64 2483850836742061107, i64 1312853257760611355, i64 -4246334338973792727, i64 2345139400088800048, i64 3476875910007234600, i64 9126711131040076865, i64 3344062511842800697, i64 1738437955003617300, i64 434609488750904325, i64 4974132473365302761, i64 -525010033940079740, i64 2996878780701263283, i64 860016496679319936, i64 -817724209953614962, i64 -8145407868132657975, i64 8408372658185066574, i64 -9014617946395116349, i64 -5573771314711634709, i64 8309132647095314884, i64 -8008080012663529256, i64 -5647101578384581017, i64 4016975866123112866, i64 5484044754044224362, i64 -4704596352101788447, i64 -2048454250605885156, i64 4300722459592874408, i64 576305156301123978, i64 1086666598427200134, i64 3582368602165532071, i64 1672156660409637522, i64 1072952894175051529, i64 -266499808016029566, i64 -8868238876779284282, i64 -2753343660306045637, i64 -3304150135794459461, i64 -8571826944267909821, i64 2909453057451634748, i64 4832257011967035884, i64 7883514887060110805, i64 6570624563730946552, i64 727363264362908687, i64 -4880186217815202846, i64 -1188251319992237802, i64 -3531216725856518231, i64 -1403170119806991462, i64 -3604548119105602267, i64 -1545021426343000161, i64 5266886300516648419, i64 -3965821756397814868, i64 -7147912283601049390, i64 -8498772696601655345, i64 -8575493931687153460, i64 2775221074153164597, i64 6036059100870566644, i64 -769652286879914495, i64 8625521314892176066, i64 5923107342230591355, i64 -5212498686737261982, i64 -6307816364604900356, i64 -4388205410949037524, i64 7741639391302105552, i64 -6385330300051967622, i64 -2507993209848687043, i64 -3377198924490695113, i64 5701475937928446438, i64 4346059634417477666, i64 -8141721115274182330, i64 1640375574931959581, i64 -7367604024838525349, i64 -3743217044751480662, i64 7240461648173118294, i64 6783279417799974769, i64 -6658213480520236420, i64 -412861319805555577, i64 2413052679361019583, i64 7822935613144189018, i64 3273260059560785589, i64 6546251718360657015, i64 2625706515521222710, i64 -3889596148727051089, i64 359155412899132166, i64 -9001888861515740852, i64 -4173298744619203419, i64 -7044068175288262703, i64 -6092620556512052880, i64 -1694187146657353572, i64 3214318709205549882, i64 7954294313821126489, i64 -7793164532858756524, i64 -1126702721450598264, i64 8266499387219860555, i64 3126905144807731888, i64 6688125023685601394, i64 2102244888660678301, i64 4513658788638613281, i64 1955872381721580184, i64 3911467806572094509, i64 -8356921390065646646, i64 3840682843530602145, i64 -5095091840469555861, i64 8960867612346983234, i64 -1986896907377395562, i64 7094086985160177491, i64 8814510507160348487, i64 4614830260555385696, i64 5184867853390412522, i64 -51307216989214194, i64 4967701673484122214, i64 4133405867109396139, i64 6712482467302907389, i64 0, i64 -2434939988812524367, i64 212780749886191363, i64 2079490870889866002, i64 6905273645898230526, i64 4204186329092533287, i64 7524212674116500316, i64 2562284676523739580, i64 6353180185909304180, i64 -5134700007842328348, i64 -6443025339213691659, i64 -4400422457679186013, i64 -2680025461397035081, i64 3694310370951242404, i64 1862050873933489563, i64 -3962627379462238685, i64 3799808599524037422, i64 -696599031350319987, i64 -6873111437127925520, i64 -7294273795390575401, i64 7317277347550086873, i64 3067944011832870719, i64 -5873211334063603719, i64 7681079900005289055, i64 1454726528725817374, i64 2173029817208738833, i64 -6600530609337912330, i64 7388361308765373525, i64 3431468418113061302, i64 1569297115501620625, i64 141715484529587599, i64 1001891992437325189, i64 -5427409837281847058, i64 5251413031042445420, i64 -7577976322563250979, i64 -3750907423281678048, i64 5818906114903269496, i64 -1618357148985965293, i64 -8218724903507397051, i64 -8653345387407607222, i64 -2865043644553064268, i64 -4603384842533437280, i64 -8360596009842380224, i64 5468583643421831904, i64 -1337136643500886507, i64 -5022055116537255961, i64 -8855529591699403447, i64 5852305890675693047, i64 6953751820014469200, i64 -6933001167550944674, i64 4563489731606817454, i64 -7556222325918199470, i64 5614938558174885605, i64 -5305797311960764435, i64 -6815436163405433473, i64 -6232600264661348749, i64 363807002512328329, i64 -1264101083102858087, i64 -5798014999559812490, i64 8040101759092869846, i64 7023303194780284383, i64 -7117100432924598947, i64 -7478655613643514924, i64 -1479007749835869680, i64 2843154170404223674, i64 -4665003603661872786, i64 4825845994704960611, i64 -8782479638933598267, i64 -2649846723997625800, i64 -7986310597085620905], align 8
@T5 = internal unnamed_addr constant [256 x i64] [i64 -5063451797717620526, i64 -7285221766323758771, i64 7341655830249313212, i64 -8708465125420123699, i64 -6703708822632725935, i64 -2967868038099781525, i64 -2389717375028904593, i64 5959386582737577001, i64 -4972627876176196259, i64 706893484164654730, i64 2020291689956868878, i64 -7951920645334402618, i64 -6395870994754392611, i64 -6128937998209644715, i64 -6594429737440196526, i64 6536404826040590637, i64 236065284525024655, i64 -1818309089259313549, i64 -3722855762258038426, i64 -4117400942258572701, i64 -8815064200562606132, i64 -5549654915572234151, i64 -2105542708551800207, i64 6481618498683798690, i64 -4684270546972671649, i64 8839974131174241597, i64 3015018993550897818, i64 -4867854589499947170, i64 -7574988712315219893, i64 -8238034953486271800, i64 -3344729671362719258, i64 -5534133762109199401, i64 5436006873321130155, i64 -8906997204948951998, i64 -269705449130823810, i64 -6017400516200641194, i64 4861236091914702255, i64 -5639344141214454314, i64 3646749055184361497, i64 6303095428790274981, i64 4753932809606073262, i64 1621378699679744011, i64 9180320395959196337, i64 -2568797268172473490, i64 7052989547354857406, i64 -3814298457574532885, i64 -2197422161290768386, i64 1156314692080241160, i64 3355848470057245463, i64 7972046712540033847, i64 -1707335059547264652, i64 -6883632612157143984, i64 6246619188618848299, i64 4564174586167685777, i64 -6996837980524866225, i64 -3255101743492680599, i64 -4404661018951729567, i64 -5840554263748768937, i64 -3525352825511111447, i64 2779945191640784403, i64 -2369068919957774623, i64 -1530771952848195723, i64 5149050283462803885, i64 -2678083500189666963, i64 -1510676272937235205, i64 3302530815306940056, i64 -6108913305248652069, i64 4275245429667233427, i64 1390101788445142919, i64 -7175936084061334706, i64 6881237373010562721, i64 289230431630298114, i64 -4010930581027586716, i64 7631146798838454970, i64 -3235015142874802201, i64 4328408643768260382, i64 8656531363040539452, i64 4040315116053797660, i64 1280547307886946694, i64 -8421489844131516213, i64 4625258768320964640, i64 -6305484130929524396, i64 7506976657627756852, i64 2312629384160482320, i64 578157346040120580, i64 523861952873949581, i64 -5262412413950524325, i64 -7554402387906612283, i64 -1221757097738665735, i64 -6416457542165229997, i64 -752466509443511820, i64 -5731848079916249512, i64 -1908754778884684804, i64 -6506991192721855524, i64 5724953604896179369, i64 -2481298035565864736, i64 -6795641051928762402, i64 -4668187539059531055, i64 1967128819318483587, i64 -5350685468533595692, i64 -7862239940907295671, i64 -5819976469414041383, i64 -69950437759153423, i64 1445518718050010634, i64 -5246338279372838955, i64 3753644399234945562, i64 -2085455919156164097, i64 5619601951699927720, i64 -1331734327901370632, i64 -3829881398435628187, i64 2725510433043102620, i64 759366439122912005, i64 6928828107680660528, i64 1099765205587848329, i64 7452619416797763005, i64 3412385518374221977, i64 1732207026920165132, i64 5097086421899010595, i64 -9011781486741350847, i64 -86104295722276481, i64 -8724539071221097917, i64 -374479285561842307, i64 -8148644520178180281, i64 1677924827826414469, i64 -664246231419605893, i64 -3630844116684057880, i64 1047722754377830151, i64 -177693477474349840, i64 -8996260694257420849, i64 -4299876187404569502, i64 5905717359093940646, i64 -5442618834033261990, i64 3698227263606389655, i64 -6217483731725688102, i64 8550206085804850235, i64 1856448378757328002, i64 8028513873418637497, i64 7108910845623237169, i64 3593158721501085078, i64 2436861673347823518, i64 2256066703327225473, i64 5781555730776203816, i64 184586887326287361, i64 -4389069238980960785, i64 -4496514358289540114, i64 994431762784496264, i64 8891373715722688179, i64 2548668005528531359, i64 -7376019574464021310, i64 5042572773343070124, i64 8944607230116871998, i64 -8039911982426334648, i64 7795078895602218294, i64 -2856898492333590676, i64 8080630232107595320, i64 417402515708161932, i64 -358896018484033805, i64 1334128570599296009, i64 1569196015840503172, i64 4512132324272296223, i64 8262947160497680441, i64 9072716994220694704, i64 -7265197296902915389, i64 7164813952489511359, i64 -2768828531772861214, i64 6769147895379167392, i64 -5155947017702782116, i64 7218049743082139698, i64 -3432790758454037912, i64 3178862579628612886, i64 -6683692882748104225, i64 2601833358389057554, i64 5203416045641608484, i64 471828203334912515, i64 5491491963922784550, i64 5384607065233582885, i64 6592317012735771299, i64 7918676281232627384, i64 8314355480942367671, i64 6015290050581907367, i64 810836134650929291, i64 -844469624944661894, i64 5332081333716127402, i64 -1133681347628472712, i64 6645550320569396014, i64 2836490993033870749, i64 0, i64 3881816294670315924, i64 -935914253264354313, i64 -2657988180720938269, i64 -3143570308798808470, i64 6357447996896651052, i64 7739593598708440251, i64 -8132561872706224951, i64 3123447583027983515, i64 -4775912505283910448, i64 -7663270837869218364, i64 -1242405742123375753, i64 -3541506459935131801, i64 4914471538776253474, i64 -2947210864178062363, i64 128745028774077326, i64 -4957115596048355629, i64 6194383728222506404, i64 -7088506601993080640, i64 -4207873295040915476, i64 -8329976848521897658, i64 -7842224327776256057, i64 9128348021502179647, i64 -7464019647586410676, i64 3464414053840330264, i64 2890777865388101908, i64 7396143365404096051, i64 -8618069191027501756, i64 -6976260512405801279, i64 -4101256146944486931, i64 -648101109352984587, i64 -1797651554359540227, i64 -5929970810458018088, i64 -2285483609494360976, i64 -3056062202722525724, i64 -951506256238403463, i64 -4589087858348230560, i64 -8437001934944726203, i64 -1041107520951466506, i64 -1619264909807170822, i64 4456589257920001168, i64 2143960251716640896, i64 -465215246174109454, i64 -1996263073604509582, i64 8209304050255205814, i64 5672980904222451495, i64 1911146745182832909, i64 3986023845854377877, i64 -9196226537067622336, i64 -3918365834179485974, i64 6070777279943061034, i64 2492695010684916241, i64 -1419233921084430986, i64 6824769851689725231, i64 7683681601326841653, i64 -9103722787008318514, i64 866250788057352454, i64 8497943962251532724, i64 -8525574331617741110, i64 -7750709055968192950, i64 8602169724365365173, i64 4223776094580399389, i64 3933990457294443547, i64 8785196325032562866, i64 8369843054303033914, i64 4809827444717481505, i64 -557780216695528580, i64 2199529431470097679, i64 4169051064997918866, i64 3067465835107997461], align 8
@T6 = internal unnamed_addr constant [256 x i64] [i64 7638592849770494675, i64 7399948113627665660, i64 1499103177567580017, i64 1968395777339913372, i64 6315444853996147701, i64 -4754727162224258200, i64 -5402957402091957653, i64 -8791392257117499945, i64 5381236106644508912, i64 -2277749346639893271, i64 -7600940254987317878, i64 5555935135833636828, i64 3984909036480721040, i64 6675444786566484726, i64 1720792478325971635, i64 -8144279052209795884, i64 2354333686312593955, i64 -8930140092037147294, i64 7548690261815170980, i64 -6337166356006121106, i64 -3415511350737161387, i64 4731871101922595315, i64 1124993782310919149, i64 -5884529771793832201, i64 -4530341131535131009, i64 -6708765329369773864, i64 -3711010994249357083, i64 786003188834081206, i64 -1856643485242696848, i64 -2621468208120843690, i64 1522944352749467588, i64 -6138913494068888551, i64 8328123606236717880, i64 4322720637054131903, i64 5967342058983100846, i64 2082490056849595312, i64 8688699614180532795, i64 6991484043043650512, i64 -1019331726170111549, i64 -1938947697209020750, i64 -5522264982574881294, i64 6218204542689921856, i64 -4464079332488614979, i64 9136776547317552546, i64 -6971324413251706370, i64 -4331599948591598840, i64 3400360526298984910, i64 1589220981502247430, i64 7448551560383810633, i64 4568517466282771537, i64 -3507372924499059417, i64 -7175227476371303364, i64 1041369823003067224, i64 -7335141962536557659, i64 -1351952220503549325, i64 3859254831364726247, i64 2558290614294568929, i64 -2941146676019340167, i64 5219130801866964359, i64 7807434320286502218, i64 6800470483752877953, i64 332072210274409198, i64 -929582897357034316, i64 4506368036272430308, i64 -1153193169961289980, i64 5184439413358077546, i64 -5204128533636120804, i64 1277144584190618922, i64 3936790472012326949, i64 2806984587816967610, i64 -1292393044342050895, i64 -8391047214963847537, i64 -2067338285260400341, i64 -7761980991469870851, i64 -2384063555321729011, i64 -5001228436285978234, i64 7578751647735811857, i64 3536753114568394505, i64 -186119755526459412, i64 -7216138193149560048, i64 6356883926008989720, i64 -7535790290041236161, i64 9161217092089351447, i64 3178441963004494860, i64 794610490751123715, i64 -6115530920244452180, i64 -3879859091853222020, i64 963534577114248858, i64 7237860676448844171, i64 -2582263916116648582, i64 -5569951127102210745, i64 -8475083248013273542, i64 -6575955956591280319, i64 -250597778803443879, i64 -567889717014270537, i64 -7662715483336460216, i64 8577300799106300374, i64 3045620545004663701, i64 4442040288523512102, i64 -1545932358901746337, i64 7905756413326808575, i64 4344350417009275283, i64 8249477413286345613, i64 -7096812009055417207, i64 2396814092324532886, i64 -5647769895147763579, i64 -1947790466438531577, i64 3735450351420189310, i64 -5784164613788123582, i64 2920542346678066914, i64 5545569575161767785, i64 -4553270022117308726, i64 8368858401152437268, i64 -6906759244508535377, i64 -2376372936034129736, i64 -8342255099745640029, i64 2092214600288109317, i64 1764773638434898270, i64 8915138805096667129, i64 -7414949194006669721, i64 -1137743269437187722, i64 1339202939937708264, i64 -345956324546193291, i64 -4814549111256422742, i64 -7917388658931607708, i64 -8960302000418702770, i64 5423048694172731461, i64 -5065273056636945340, i64 -8008483689812592109, i64 7189244483105756839, i64 -6533890378334885900, i64 139461729972295861, i64 1927068072099441705, i64 8939565725494982869, i64 2481387145470461780, i64 -689680653592252689, i64 -3169853060112422469, i64 -4617131477782869027, i64 -3353249667486995488, i64 -4073275920638039578, i64 -5320915962996299863, i64 5635758298669124126, i64 -3762600249893959735, i64 -3971023940647783925, i64 228726739295778242, i64 7777377965014917734, i64 5296625119216985394, i64 914334231448120879, i64 5052374237767843551, i64 4094328713410718589, i64 -2116655007351733858, i64 -6449598249403018698, i64 -815664539709897832, i64 -774237775351833811, i64 7073506229136789010, i64 6983334822398600037, i64 -436562208717605630, i64 -2466139632450124337, i64 8568034611817685347, i64 8165200114081713743, i64 -6205208829484840485, i64 703943068308221044, i64 -8226620096815367914, i64 6091239870709753399, i64 2172304959290521287, i64 2727193859288737912, i64 -9122759334021097671, i64 -24440613626674533, i64 -124309889530848722, i64 -6010584577484158080, i64 -4845804325506515425, i64 -6372282156007781757, i64 5998572912153266459, i64 4631261749281737030, i64 -2832142614480713836, i64 -7424261732590465326, i64 7322145302197231934, i64 2290894520370736754, i64 4793627102518961201, i64 7969816990292893757, i64 3146679182975626016, i64 6473722104728162477, i64 -5162251855999359759, i64 -3289240778237927902, i64 -3549899338192026222, i64 -8701696480274194272, i64 0, i64 6556078004277159279, i64 -939560225415629823, i64 -3031735243417390834, i64 8487983288642606241, i64 4985830412848139037, i64 6885837167186994996, i64 1177167453075830175, i64 556010023318515500, i64 -2194175793043327908, i64 -4136654570531770029, i64 -8136101347332991903, i64 -6698300915721973651, i64 -3191588393190127977, i64 6153915830885908098, i64 -1484840968608567830, i64 -6788836981977711334, i64 3377689093244529019, i64 -3634228299880714160, i64 -8601423638428173491, i64 3529244911156699068, i64 -8731869913326553067, i64 2983826610395399767, i64 -5946604630617156811, i64 4184429200576218634, i64 2817879149334562063, i64 3774478721578616146, i64 -4938365730940448461, i64 457167725374371737, i64 4857437621524200580, i64 8753592465213061774, i64 8031340800527136904, i64 -611727940607134118, i64 -4299731615435973596, i64 -7012220249380669109, i64 1842759439822641643, i64 -1709027271404677080, i64 8124469032873318138, i64 4124890379076350920, i64 2609703948080820429, i64 5907834570135577708, i64 9070460882468741216, i64 3619077681196348107, i64 5753713443494466219, i64 -8552637569688034312, i64 1403639078719045725, i64 -2971947932149267252, i64 -7983948415216688474, i64 -5732976221691572176, i64 588739865871299777, i64 -4198692596866972527, i64 -1741600983310253115, i64 4962489517411242920, i64 393139583135367771, i64 -5410053049819378978, i64 6563056931965222362, i64 -9184522940861280372, i64 199264997842955639, i64 5770148553933896921, i64 3311112833748868281, i64 -3959964280561898818, i64 -369966721448197952, i64 8815682153763622732, i64 -9058450267568037125, i64 -1610274961606672227, i64 -7786513464973963311, i64 -2783995359638905055, i64 6722895807429069379, i64 -2706140860760151325, i64 -1381601050739916090], align 8
@T7 = internal constant [256 x i64] [i64 102098156137927610, i64 -5663669172609090476, i64 -3669195772584496849, i64 5844413537544150132, i64 -6604631146735995565, i64 269889219624397011, i64 339422360818904018, i64 -106588085740251315, i64 -5959745560857677744, i64 7196762989847570860, i64 -8892889587017414003, i64 1895331158091553983, i64 5564099747991359600, i64 -6675272595483003310, i64 -2227130639162625126, i64 -464333976506608564, i64 -6043827099044731926, i64 1262387527851139797, i64 -4438072763279301481, i64 984255169768419025, i64 -7363238421268245197, i64 -6178460422528961711, i64 -7201287934103655077, i64 6173971039461242790, i64 2360377680020340702, i64 -1899821207382009784, i64 9208781342309541288, i64 -1726360310280964455, i64 4316303184118903003, i64 -6999845421735979470, i64 2456099611054884023, i64 -3554831927790331396, i64 -7821825182184818461, i64 -199420194055864418, i64 -3435406205609136495, i64 -1865426489322327909, i64 -7748368983502406686, i64 459844064118231227, i64 -2670297461274590399, i64 1721878613158376046, i64 6679755210219254437, i64 5428551143075299531, i64 919437357964442987, i64 -3711286763878178155, i64 4656548159252528801, i64 -2034559336643360525, i64 3472241783235071665, i64 1015016409912575490, i64 6802456970442262988, i64 7367729161545667012, i64 6039301048801437469, i64 7826306690865708052, i64 8290659281845049539, i64 3790411683350029667, i64 4390339924940780506, i64 -8199415741998831779, i64 -9213306148589805217, i64 3375358802480560604, i64 7946829225504900989, i64 6443567587683158733, i64 6944233002354442623, i64 -7276432982478033318, i64 1869916841375020140, i64 -8557161632765189028, i64 -4526654794038025, i64 -988771201430558170, i64 -4055584681798984449, i64 -5111238868001936659, i64 -6758192980403214872, i64 -853823101009479011, i64 1220017551596171631, i64 -8247493879318540402, i64 5756665022506085145, i64 5157863914552884640, i64 -1522547514981020176, i64 -7441569388028852599, i64 3272278692545171727, i64 1527063399070697735, i64 7709337675631094959, i64 -2622349387639353093, i64 4060065639650301960, i64 7752850543756984085, i64 2557877661107230477, i64 2030032819825150980, i64 507508204956287745, i64 2426040821121657956, i64 2867305291263474911, i64 6849296813665917558, i64 8242976050682366841, i64 3016469419721456349, i64 -5498062201443563715, i64 7100681776080108054, i64 -4781444554564026049, i64 -8791970184654202569, i64 2231620974001370989, i64 -6298884889624164296, i64 610134057855932089, i64 4911948589276697971, i64 -6540041068853647639, i64 -8364673526450069707, i64 -5301419682215362731, i64 5349343128180069233, i64 8967510215909019003, i64 -8962985626491516532, i64 4837348898669696626, i64 -6939708274961119864, i64 -512034808176637962, i64 -3011977978861552086, i64 -4994512307200966082, i64 -8707486845167607202, i64 -771199849166247641, i64 -3476767327678772666, i64 2626830208588583948, i64 2783241354120638309, i64 423170611431192680, i64 4218799022998659937, i64 656707552147145987, i64 9014032431243812545, i64 -5153381385213183657, i64 1772728091907418070, i64 3886754829179254489, i64 -7704820253473249192, i64 3673687059396523480, i64 3439931296498166374, i64 2275152103523181783, i64 -6448084168027386310, i64 4776927819098179016, i64 -5424025512195374020, i64 -2553396788584311814, i64 -4223316160681957482, i64 5955256195003905191, i64 -1224499197213231720, i64 -4748426427754927636, i64 1115953412783658424, i64 8008093555576493255, i64 7923548920461062062, i64 203910391992531817, i64 -1387281688757674677, i64 8561679192898855083, i64 8702961987381814953, i64 2933566635308591463, i64 3913153345432854026, i64 -3978083031473600185, i64 -1961103137960948750, i64 3171591427015492277, i64 -1266903697489107422, i64 -9130631098635439387, i64 -5761190934773551122, i64 2109542402921521086, i64 -3370867378766447317, i64 -6853779198520156543, i64 9126140489958438418, i64 -5839923873223108477, i64 4752942864821660955, i64 3054126798141395470, i64 -1630296697021373149, i64 -1010500646652935435, i64 -4117114129221038267, i64 -1768201860771716319, i64 5796483047236784078, i64 -2114032469425923255, i64 -4320783929470585812, i64 -3058617957647968519, i64 -8623158060904400922, i64 2674814455512221622, i64 -2871785899713071064, i64 7314330070856513815, i64 -6197124423436035198, i64 5115755322214460954, i64 -7589642766324957045, i64 -4558589235554213890, i64 -7951346916165254262, i64 4563070244979219209, i64 4989995588880910025, i64 -5559609946768239481, i64 -605651989654285746, i64 -7105172247855022367, i64 -3882263525221436882, i64 -8772322258015800860, i64 -7318820559777219104, i64 -6112779698099773205, i64 -2929041492914033264, i64 6609113812977775012, i64 6544557385090343454, i64 -4841831146621857147, i64 4433555642809950304, i64 0, i64 -334895991707373787, i64 -652191806033296908, i64 -1308899203058823439, i64 -3785886402979651180, i64 3550340888040054027, i64 -8115649907521800985, i64 6201614070543130485, i64 -5258186381018321681, i64 -8295140436829250508, i64 -7510150784273329359, i64 1625780510237614548, i64 766683800358317520, i64 -5344853344170895482, i64 7446094063916647038, i64 7271907986716420781, i64 -3917644368037340419, i64 -2364858236896249047, i64 -8012574847462780880, i64 -6806973567932281541, i64 -418680396280578913, i64 -3276769869197535752, i64 7505669543960729542, i64 8767831632193008915, i64 1313415104294291974, i64 1956576672716427013, i64 7004336179159192261, i64 8627639484256891665, i64 6342932152476342647, i64 7585125092878550140, i64 8897414124929388154, i64 8462236270121027704, i64 -9009541536918513098, i64 6108253596282790940, i64 -5791957226807342279, i64 -7919031515517162663, i64 5253660417177167896, i64 -4652065681418356138, i64 4483880493090523315, i64 3973557538535427504, i64 -265362902086554588, i64 -2270625923961167840, i64 4121630985482849202, i64 -2787758629779756142, i64 5659179669853239459, i64 8796461061833711040, i64 -4479363619614766012, i64 3715811992743028322, i64 8120131279300603920, i64 3100950029774012852, i64 -4916430785723330172, i64 -3105475384736365245, i64 -2430558079566829421, i64 8360192423039556546, i64 -1462426737132052918, i64 1466908668431620797, i64 -8466754081543254897, i64 -4394820618718775507, i64 1391763671562770876, i64 -923919140483581540, i64 849341266984812138, i64 -2451582599603306432, i64 6303410658479918287, i64 5296930162245565346, i64 -6347414485825053312, i64 -1111471293076483761, i64 6762709279494119711, i64 5502587883897177034, i64 8203933284918551466, i64 -3176116833483372990], align 8
@out = internal global [64 x i8] zeroinitializer, align 8
@constinit.252 = private unnamed_addr constant [256 x i32] [i32 0, i32 8, i32 16, i32 24, i32 32, i32 40, i32 48, i32 56, i32 64, i32 72, i32 80, i32 88, i32 96, i32 104, i32 112, i32 120, i32 128, i32 136, i32 144, i32 152, i32 160, i32 168, i32 176, i32 184, i32 192, i32 200, i32 208, i32 216, i32 224, i32 232, i32 240, i32 248, i32 256, i32 264, i32 272, i32 280, i32 288, i32 296, i32 304, i32 312, i32 320, i32 328, i32 336, i32 344, i32 352, i32 360, i32 368, i32 376, i32 384, i32 392, i32 400, i32 408, i32 416, i32 424, i32 432, i32 440, i32 448, i32 456, i32 464, i32 472, i32 480, i32 488, i32 496, i32 504, i32 512, i32 520, i32 528, i32 536, i32 544, i32 552, i32 560, i32 568, i32 576, i32 584, i32 592, i32 600, i32 608, i32 616, i32 624, i32 632, i32 640, i32 648, i32 656, i32 664, i32 672, i32 680, i32 688, i32 696, i32 704, i32 712, i32 720, i32 728, i32 736, i32 744, i32 752, i32 760, i32 768, i32 776, i32 784, i32 792, i32 800, i32 808, i32 816, i32 824, i32 832, i32 840, i32 848, i32 856, i32 864, i32 872, i32 880, i32 888, i32 896, i32 904, i32 912, i32 920, i32 928, i32 936, i32 944, i32 952, i32 960, i32 968, i32 976, i32 984, i32 992, i32 1000, i32 1008, i32 1016, i32 1024, i32 1032, i32 1040, i32 1048, i32 1056, i32 1064, i32 1072, i32 1080, i32 1088, i32 1096, i32 1104, i32 1112, i32 1120, i32 1128, i32 1136, i32 1144, i32 1152, i32 1160, i32 1168, i32 1176, i32 1184, i32 1192, i32 1200, i32 1208, i32 1216, i32 1224, i32 1232, i32 1240, i32 1248, i32 1256, i32 1264, i32 1272, i32 1280, i32 1288, i32 1296, i32 1304, i32 1312, i32 1320, i32 1328, i32 1336, i32 1344, i32 1352, i32 1360, i32 1368, i32 1376, i32 1384, i32 1392, i32 1400, i32 1408, i32 1416, i32 1424, i32 1432, i32 1440, i32 1448, i32 1456, i32 1464, i32 1472, i32 1480, i32 1488, i32 1496, i32 1504, i32 1512, i32 1520, i32 1528, i32 1536, i32 1544, i32 1552, i32 1560, i32 1568, i32 1576, i32 1584, i32 1592, i32 1600, i32 1608, i32 1616, i32 1624, i32 1632, i32 1640, i32 1648, i32 1656, i32 1664, i32 1672, i32 1680, i32 1688, i32 1696, i32 1704, i32 1712, i32 1720, i32 1728, i32 1736, i32 1744, i32 1752, i32 1760, i32 1768, i32 1776, i32 1784, i32 1792, i32 1800, i32 1808, i32 1816, i32 1824, i32 1832, i32 1840, i32 1848, i32 1856, i32 1864, i32 1872, i32 1880, i32 1888, i32 1896, i32 1904, i32 1912, i32 1920, i32 1928, i32 1936, i32 1944, i32 1952, i32 1960, i32 1968, i32 1976, i32 1984, i32 1992, i32 2000, i32 2008, i32 2016, i32 2024, i32 2032, i32 2040], align 4
@ctx.0.0 = internal unnamed_addr global i64 0, align 8
@ctx.0.1 = internal unnamed_addr global i64 0, align 8
@ctx.0.2 = internal unnamed_addr global i64 0, align 8
@ctx.0.3 = internal unnamed_addr global i64 0, align 8
@ctx.0.4 = internal unnamed_addr global i64 0, align 8
@ctx.0.5 = internal unnamed_addr global i64 0, align 8
@ctx.0.6 = internal unnamed_addr global i64 0, align 8
@ctx.0.7 = internal unnamed_addr global i64 0, align 8

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local i32 @uint32_t_secure_load(i32* nocapture readonly %0, %struct.ds_base* nocapture readnone %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = load i32, i32* %0, align 4, !tbaa !3
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local zeroext i16 @uint16_t_secure_load(i16* nocapture readonly %0, %struct.ds_base* nocapture readnone %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = bitcast i16* %0 to i32*
  %6 = load i32, i32* %5, align 4, !tbaa !3
  %7 = trunc i32 %6 to i16
  ret i16 %7
}

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local zeroext i8 @uint8_t_secure_load(i8* nocapture readonly %0, %struct.ds_base* nocapture readnone %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = bitcast i8* %0 to i32*
  %6 = load i32, i32* %5, align 4, !tbaa !3
  %7 = trunc i32 %6 to i8
  ret i8 %7
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @uint64_t_secure_store(i64 %0, i64* nocapture %1, %struct.ds_base* nocapture readnone %2, i32 %3, i32 %4) local_unnamed_addr #1 {
  store i64 %0, i64* %1, align 4, !tbaa !7
  ret void
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @uint32_t_secure_store(i32 %0, i32* nocapture %1, %struct.ds_base* nocapture readnone %2, i32 %3, i32 %4) local_unnamed_addr #1 {
  store i32 %0, i32* %1, align 4, !tbaa !3
  ret void
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @uint16_t_secure_store(i16 zeroext %0, i16* nocapture %1, %struct.ds_base* nocapture readnone %2, i32 %3, i32 %4) local_unnamed_addr #1 {
  store i16 %0, i16* %1, align 2, !tbaa !9
  ret void
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @uint8_t_secure_store(i8 zeroext %0, i8* nocapture %1, %struct.ds_base* nocapture readnone %2, i32 %3, i32 %4) local_unnamed_addr #1 {
  store i8 %0, i8* %1, align 1, !tbaa !11
  ret void
}

; Function Attrs: norecurse nounwind readnone willreturn
define dso_local void @branch_id(i8* nocapture %0) local_unnamed_addr #2 {
  ret void
}

; Function Attrs: nofree nounwind
define dso_local i32 @main() local_unnamed_addr #3 {
  %1 = tail call i32 @read(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @in_key, i32 0, i32 0), i32 32) #7
  %2 = tail call i32 @read(i32 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @in_pub, i32 0, i32 0), i32 64) #7
  %3 = load i32, i32* bitcast ([32 x i8]* @in_key to i32*), align 4, !tbaa !3
  %4 = load i32, i32* bitcast (i8* getelementptr inbounds ([32 x i8], [32 x i8]* @in_key, i32 0, i32 4) to i32*), align 4, !tbaa !3
  %5 = zext i32 %3 to i64
  %6 = shl nuw i64 %5, 32
  %7 = zext i32 %4 to i64
  %8 = or i64 %6, %7
  %9 = load i32, i32* bitcast (i8* getelementptr inbounds ([32 x i8], [32 x i8]* @in_key, i32 0, i32 8) to i32*), align 4, !tbaa !3
  %10 = load i32, i32* bitcast (i8* getelementptr inbounds ([32 x i8], [32 x i8]* @in_key, i32 0, i32 12) to i32*), align 4, !tbaa !3
  %11 = zext i32 %9 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i32 %10 to i64
  %14 = or i64 %12, %13
  %15 = lshr i32 %9, 21
  %16 = and i32 %15, 2040
  %17 = insertelement <4 x i32> poison, i32 %16, i32 0
  %18 = shufflevector <4 x i32> %17, <4 x i32> poison, <4 x i32> zeroinitializer
  %19 = insertelement <4 x i32> poison, i32 %16, i32 0
  %20 = shufflevector <4 x i32> %19, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %21

21:                                               ; preds = %14732, %0
  %22 = phi i32 [ 0, %0 ], [ %14752, %14732 ]
  %23 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %0 ], [ %14750, %14732 ]
  %24 = phi <4 x i64> [ zeroinitializer, %0 ], [ %14751, %14732 ]
  %25 = or i32 %22, 1
  %26 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %25
  %27 = bitcast i32* %26 to <4 x i32>*
  %28 = load <4 x i32>, <4 x i32>* %27, align 4, !tbaa !3
  %29 = getelementptr inbounds i32, i32* %26, i32 4
  %30 = bitcast i32* %29 to <4 x i32>*
  %31 = load <4 x i32>, <4 x i32>* %30, align 4, !tbaa !3
  %32 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %28
  %33 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %31
  %34 = bitcast <4 x i8*> %32 to <4 x i64*>
  %35 = bitcast <4 x i8*> %33 to <4 x i64*>
  %36 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %34, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %37 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %35, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %38 = icmp eq <4 x i32> %18, %28
  %39 = icmp eq <4 x i32> %20, %31
  %40 = select <4 x i1> %38, <4 x i64> %36, <4 x i64> zeroinitializer
  %41 = select <4 x i1> %39, <4 x i64> %37, <4 x i64> zeroinitializer
  %42 = add <4 x i64> %40, %23
  %43 = add <4 x i64> %41, %24
  %44 = or i32 %22, 9
  %45 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4, !tbaa !3
  %48 = getelementptr inbounds i32, i32* %45, i32 4
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4, !tbaa !3
  %51 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %47
  %52 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %50
  %53 = bitcast <4 x i8*> %51 to <4 x i64*>
  %54 = bitcast <4 x i8*> %52 to <4 x i64*>
  %55 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %53, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %56 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %54, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %57 = icmp eq <4 x i32> %18, %47
  %58 = icmp eq <4 x i32> %20, %50
  %59 = select <4 x i1> %57, <4 x i64> %55, <4 x i64> zeroinitializer
  %60 = select <4 x i1> %58, <4 x i64> %56, <4 x i64> zeroinitializer
  %61 = add <4 x i64> %59, %42
  %62 = add <4 x i64> %60, %43
  %63 = or i32 %22, 17
  %64 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  %66 = load <4 x i32>, <4 x i32>* %65, align 4, !tbaa !3
  %67 = getelementptr inbounds i32, i32* %64, i32 4
  %68 = bitcast i32* %67 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !tbaa !3
  %70 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %66
  %71 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %69
  %72 = bitcast <4 x i8*> %70 to <4 x i64*>
  %73 = bitcast <4 x i8*> %71 to <4 x i64*>
  %74 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %72, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %75 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %73, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %76 = icmp eq <4 x i32> %18, %66
  %77 = icmp eq <4 x i32> %20, %69
  %78 = select <4 x i1> %76, <4 x i64> %74, <4 x i64> zeroinitializer
  %79 = select <4 x i1> %77, <4 x i64> %75, <4 x i64> zeroinitializer
  %80 = add <4 x i64> %78, %61
  %81 = add <4 x i64> %79, %62
  %82 = icmp eq i32 %22, 224
  br i1 %82, label %83, label %14732, !llvm.loop !12

83:                                               ; preds = %21
  %84 = add <4 x i64> %81, %80
  %85 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %84)
  %86 = icmp eq i32 %16, 1992
  %87 = select i1 %86, i64 -6702567834671021495, i64 0
  %88 = add i64 %87, %85
  %89 = icmp eq i32 %16, 2000
  %90 = select i1 %89, i64 -9179115894310901337, i64 0
  %91 = add i64 %90, %88
  %92 = icmp eq i32 %16, 2008
  %93 = select i1 %92, i64 5751414958667764720, i64 0
  %94 = add i64 %93, %91
  %95 = icmp eq i32 %16, 2016
  %96 = select i1 %95, i64 2243210855174429021, i64 0
  %97 = add i64 %96, %94
  %98 = icmp eq i32 %16, 2024
  %99 = select i1 %98, i64 -3872233913575383732, i64 0
  %100 = add i64 %99, %97
  %101 = icmp eq i32 %16, 2032
  %102 = select i1 %101, i64 -6132897494654657935, i64 0
  %103 = add i64 %102, %100
  %104 = icmp eq i32 %16, 2040
  %105 = select i1 %104, i64 4811556717733801171, i64 0
  %106 = add i64 %105, %103
  %107 = lshr i32 %9, 13
  %108 = and i32 %107, 2040
  %109 = insertelement <4 x i32> poison, i32 %108, i32 0
  %110 = shufflevector <4 x i32> %109, <4 x i32> poison, <4 x i32> zeroinitializer
  %111 = insertelement <4 x i32> poison, i32 %108, i32 0
  %112 = shufflevector <4 x i32> %111, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %113

113:                                              ; preds = %14711, %83
  %114 = phi i32 [ 0, %83 ], [ %14731, %14711 ]
  %115 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %83 ], [ %14729, %14711 ]
  %116 = phi <4 x i64> [ zeroinitializer, %83 ], [ %14730, %14711 ]
  %117 = or i32 %114, 1
  %118 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %117
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4, !tbaa !3
  %121 = getelementptr inbounds i32, i32* %118, i32 4
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !tbaa !3
  %124 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %120
  %125 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %123
  %126 = bitcast <4 x i8*> %124 to <4 x i64*>
  %127 = bitcast <4 x i8*> %125 to <4 x i64*>
  %128 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %126, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %129 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %127, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %130 = icmp eq <4 x i32> %110, %120
  %131 = icmp eq <4 x i32> %112, %123
  %132 = select <4 x i1> %130, <4 x i64> %128, <4 x i64> zeroinitializer
  %133 = select <4 x i1> %131, <4 x i64> %129, <4 x i64> zeroinitializer
  %134 = add <4 x i64> %132, %115
  %135 = add <4 x i64> %133, %116
  %136 = or i32 %114, 9
  %137 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %136
  %138 = bitcast i32* %137 to <4 x i32>*
  %139 = load <4 x i32>, <4 x i32>* %138, align 4, !tbaa !3
  %140 = getelementptr inbounds i32, i32* %137, i32 4
  %141 = bitcast i32* %140 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !tbaa !3
  %143 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %139
  %144 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %142
  %145 = bitcast <4 x i8*> %143 to <4 x i64*>
  %146 = bitcast <4 x i8*> %144 to <4 x i64*>
  %147 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %145, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %148 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %146, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %149 = icmp eq <4 x i32> %110, %139
  %150 = icmp eq <4 x i32> %112, %142
  %151 = select <4 x i1> %149, <4 x i64> %147, <4 x i64> zeroinitializer
  %152 = select <4 x i1> %150, <4 x i64> %148, <4 x i64> zeroinitializer
  %153 = add <4 x i64> %151, %134
  %154 = add <4 x i64> %152, %135
  %155 = or i32 %114, 17
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %155
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4, !tbaa !3
  %159 = getelementptr inbounds i32, i32* %156, i32 4
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4, !tbaa !3
  %162 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %158
  %163 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %161
  %164 = bitcast <4 x i8*> %162 to <4 x i64*>
  %165 = bitcast <4 x i8*> %163 to <4 x i64*>
  %166 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %164, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %167 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %165, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %168 = icmp eq <4 x i32> %110, %158
  %169 = icmp eq <4 x i32> %112, %161
  %170 = select <4 x i1> %168, <4 x i64> %166, <4 x i64> zeroinitializer
  %171 = select <4 x i1> %169, <4 x i64> %167, <4 x i64> zeroinitializer
  %172 = add <4 x i64> %170, %153
  %173 = add <4 x i64> %171, %154
  %174 = icmp eq i32 %114, 224
  br i1 %174, label %175, label %14711, !llvm.loop !15

175:                                              ; preds = %113
  %176 = add <4 x i64> %173, %172
  %177 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %176)
  %178 = icmp eq i32 %108, 1992
  %179 = select i1 %178, i64 -314670665226827390, i64 0
  %180 = add i64 %179, %177
  %181 = icmp eq i32 %108, 2000
  %182 = select i1 %181, i64 -7097468252516276247, i64 0
  %183 = add i64 %182, %180
  %184 = icmp eq i32 %108, 2008
  %185 = select i1 %184, i64 -3364349307489619821, i64 0
  %186 = add i64 %185, %183
  %187 = icmp eq i32 %108, 2016
  %188 = select i1 %187, i64 2386735715921845721, i64 0
  %189 = add i64 %188, %186
  %190 = icmp eq i32 %108, 2024
  %191 = select i1 %190, i64 4884933414564023389, i64 0
  %192 = add i64 %191, %189
  %193 = icmp eq i32 %108, 2032
  %194 = select i1 %193, i64 -2041757280372035110, i64 0
  %195 = add i64 %194, %192
  %196 = icmp eq i32 %108, 2040
  %197 = select i1 %196, i64 -4160667357316787220, i64 0
  %198 = add i64 %197, %195
  %199 = lshr i32 %9, 5
  %200 = and i32 %199, 2040
  %201 = insertelement <4 x i32> poison, i32 %200, i32 0
  %202 = shufflevector <4 x i32> %201, <4 x i32> poison, <4 x i32> zeroinitializer
  %203 = insertelement <4 x i32> poison, i32 %200, i32 0
  %204 = shufflevector <4 x i32> %203, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %205

205:                                              ; preds = %14690, %175
  %206 = phi i32 [ 0, %175 ], [ %14710, %14690 ]
  %207 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %175 ], [ %14708, %14690 ]
  %208 = phi <4 x i64> [ zeroinitializer, %175 ], [ %14709, %14690 ]
  %209 = or i32 %206, 1
  %210 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %209
  %211 = bitcast i32* %210 to <4 x i32>*
  %212 = load <4 x i32>, <4 x i32>* %211, align 4, !tbaa !3
  %213 = getelementptr inbounds i32, i32* %210, i32 4
  %214 = bitcast i32* %213 to <4 x i32>*
  %215 = load <4 x i32>, <4 x i32>* %214, align 4, !tbaa !3
  %216 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %212
  %217 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %215
  %218 = bitcast <4 x i8*> %216 to <4 x i64*>
  %219 = bitcast <4 x i8*> %217 to <4 x i64*>
  %220 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %218, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %221 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %219, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %222 = icmp eq <4 x i32> %202, %212
  %223 = icmp eq <4 x i32> %204, %215
  %224 = select <4 x i1> %222, <4 x i64> %220, <4 x i64> zeroinitializer
  %225 = select <4 x i1> %223, <4 x i64> %221, <4 x i64> zeroinitializer
  %226 = add <4 x i64> %224, %207
  %227 = add <4 x i64> %225, %208
  %228 = or i32 %206, 9
  %229 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %228
  %230 = bitcast i32* %229 to <4 x i32>*
  %231 = load <4 x i32>, <4 x i32>* %230, align 4, !tbaa !3
  %232 = getelementptr inbounds i32, i32* %229, i32 4
  %233 = bitcast i32* %232 to <4 x i32>*
  %234 = load <4 x i32>, <4 x i32>* %233, align 4, !tbaa !3
  %235 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %231
  %236 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %234
  %237 = bitcast <4 x i8*> %235 to <4 x i64*>
  %238 = bitcast <4 x i8*> %236 to <4 x i64*>
  %239 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %237, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %240 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %238, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %241 = icmp eq <4 x i32> %202, %231
  %242 = icmp eq <4 x i32> %204, %234
  %243 = select <4 x i1> %241, <4 x i64> %239, <4 x i64> zeroinitializer
  %244 = select <4 x i1> %242, <4 x i64> %240, <4 x i64> zeroinitializer
  %245 = add <4 x i64> %243, %226
  %246 = add <4 x i64> %244, %227
  %247 = or i32 %206, 17
  %248 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %247
  %249 = bitcast i32* %248 to <4 x i32>*
  %250 = load <4 x i32>, <4 x i32>* %249, align 4, !tbaa !3
  %251 = getelementptr inbounds i32, i32* %248, i32 4
  %252 = bitcast i32* %251 to <4 x i32>*
  %253 = load <4 x i32>, <4 x i32>* %252, align 4, !tbaa !3
  %254 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %250
  %255 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %253
  %256 = bitcast <4 x i8*> %254 to <4 x i64*>
  %257 = bitcast <4 x i8*> %255 to <4 x i64*>
  %258 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %256, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %259 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %257, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %260 = icmp eq <4 x i32> %202, %250
  %261 = icmp eq <4 x i32> %204, %253
  %262 = select <4 x i1> %260, <4 x i64> %258, <4 x i64> zeroinitializer
  %263 = select <4 x i1> %261, <4 x i64> %259, <4 x i64> zeroinitializer
  %264 = add <4 x i64> %262, %245
  %265 = add <4 x i64> %263, %246
  %266 = icmp eq i32 %206, 224
  br i1 %266, label %267, label %14690, !llvm.loop !16

267:                                              ; preds = %205
  %268 = add <4 x i64> %265, %264
  %269 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %268)
  %270 = icmp eq i32 %200, 1992
  %271 = select i1 %270, i64 -5615809534224635015, i64 0
  %272 = add i64 %271, %269
  %273 = icmp eq i32 %200, 2000
  %274 = select i1 %273, i64 4231836215586269044, i64 0
  %275 = add i64 %274, %272
  %276 = icmp eq i32 %200, 2008
  %277 = select i1 %276, i64 2408950612238581570, i64 0
  %278 = add i64 %277, %275
  %279 = icmp eq i32 %200, 2016
  %280 = select i1 %279, i64 8963041913638568696, i64 0
  %281 = add i64 %280, %278
  %282 = icmp eq i32 %200, 2024
  %283 = select i1 %282, i64 1136536871657834014, i64 0
  %284 = add i64 %283, %281
  %285 = icmp eq i32 %200, 2032
  %286 = select i1 %285, i64 -7910384849877083335, i64 0
  %287 = add i64 %286, %284
  %288 = icmp eq i32 %200, 2040
  %289 = select i1 %288, i64 1537771219914559786, i64 0
  %290 = add i64 %289, %287
  %291 = shl i32 %9, 3
  %292 = and i32 %291, 2040
  %293 = insertelement <4 x i32> poison, i32 %292, i32 0
  %294 = shufflevector <4 x i32> %293, <4 x i32> poison, <4 x i32> zeroinitializer
  %295 = insertelement <4 x i32> poison, i32 %292, i32 0
  %296 = shufflevector <4 x i32> %295, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %297

297:                                              ; preds = %14669, %267
  %298 = phi i32 [ 0, %267 ], [ %14689, %14669 ]
  %299 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %267 ], [ %14687, %14669 ]
  %300 = phi <4 x i64> [ zeroinitializer, %267 ], [ %14688, %14669 ]
  %301 = or i32 %298, 1
  %302 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %301
  %303 = bitcast i32* %302 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4, !tbaa !3
  %305 = getelementptr inbounds i32, i32* %302, i32 4
  %306 = bitcast i32* %305 to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 4, !tbaa !3
  %308 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %304
  %309 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %307
  %310 = bitcast <4 x i8*> %308 to <4 x i64*>
  %311 = bitcast <4 x i8*> %309 to <4 x i64*>
  %312 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %310, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %313 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %311, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %314 = icmp eq <4 x i32> %294, %304
  %315 = icmp eq <4 x i32> %296, %307
  %316 = select <4 x i1> %314, <4 x i64> %312, <4 x i64> zeroinitializer
  %317 = select <4 x i1> %315, <4 x i64> %313, <4 x i64> zeroinitializer
  %318 = add <4 x i64> %316, %299
  %319 = add <4 x i64> %317, %300
  %320 = or i32 %298, 9
  %321 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %320
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 4, !tbaa !3
  %324 = getelementptr inbounds i32, i32* %321, i32 4
  %325 = bitcast i32* %324 to <4 x i32>*
  %326 = load <4 x i32>, <4 x i32>* %325, align 4, !tbaa !3
  %327 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %323
  %328 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %326
  %329 = bitcast <4 x i8*> %327 to <4 x i64*>
  %330 = bitcast <4 x i8*> %328 to <4 x i64*>
  %331 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %329, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %332 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %330, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %333 = icmp eq <4 x i32> %294, %323
  %334 = icmp eq <4 x i32> %296, %326
  %335 = select <4 x i1> %333, <4 x i64> %331, <4 x i64> zeroinitializer
  %336 = select <4 x i1> %334, <4 x i64> %332, <4 x i64> zeroinitializer
  %337 = add <4 x i64> %335, %318
  %338 = add <4 x i64> %336, %319
  %339 = or i32 %298, 17
  %340 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %339
  %341 = bitcast i32* %340 to <4 x i32>*
  %342 = load <4 x i32>, <4 x i32>* %341, align 4, !tbaa !3
  %343 = getelementptr inbounds i32, i32* %340, i32 4
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4, !tbaa !3
  %346 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %342
  %347 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %345
  %348 = bitcast <4 x i8*> %346 to <4 x i64*>
  %349 = bitcast <4 x i8*> %347 to <4 x i64*>
  %350 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %348, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %351 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %349, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %352 = icmp eq <4 x i32> %294, %342
  %353 = icmp eq <4 x i32> %296, %345
  %354 = select <4 x i1> %352, <4 x i64> %350, <4 x i64> zeroinitializer
  %355 = select <4 x i1> %353, <4 x i64> %351, <4 x i64> zeroinitializer
  %356 = add <4 x i64> %354, %337
  %357 = add <4 x i64> %355, %338
  %358 = icmp eq i32 %298, 224
  br i1 %358, label %359, label %14669, !llvm.loop !17

359:                                              ; preds = %297
  %360 = add <4 x i64> %357, %356
  %361 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %360)
  %362 = icmp eq i32 %292, 1992
  %363 = select i1 %362, i64 1203300724897905131, i64 0
  %364 = add i64 %363, %361
  %365 = icmp eq i32 %292, 2000
  %366 = select i1 %365, i64 -5027532858107268057, i64 0
  %367 = add i64 %366, %364
  %368 = icmp eq i32 %292, 2008
  %369 = select i1 %368, i64 7935854159672328895, i64 0
  %370 = add i64 %369, %367
  %371 = icmp eq i32 %292, 2016
  %372 = select i1 %371, i64 7168641125469255746, i64 0
  %373 = add i64 %372, %370
  %374 = icmp eq i32 %292, 2024
  %375 = select i1 %374, i64 -4247101387443462522, i64 0
  %376 = add i64 %375, %373
  %377 = icmp eq i32 %292, 2032
  %378 = select i1 %377, i64 4076570933917792731, i64 0
  %379 = add i64 %378, %376
  %380 = icmp eq i32 %292, 2040
  %381 = select i1 %380, i64 6275139646136265361, i64 0
  %382 = add i64 %381, %379
  %383 = lshr i32 %10, 21
  %384 = and i32 %383, 2040
  %385 = insertelement <4 x i32> poison, i32 %384, i32 0
  %386 = shufflevector <4 x i32> %385, <4 x i32> poison, <4 x i32> zeroinitializer
  %387 = insertelement <4 x i32> poison, i32 %384, i32 0
  %388 = shufflevector <4 x i32> %387, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %389

389:                                              ; preds = %14648, %359
  %390 = phi i32 [ 0, %359 ], [ %14668, %14648 ]
  %391 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %359 ], [ %14666, %14648 ]
  %392 = phi <4 x i64> [ zeroinitializer, %359 ], [ %14667, %14648 ]
  %393 = or i32 %390, 1
  %394 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %393
  %395 = bitcast i32* %394 to <4 x i32>*
  %396 = load <4 x i32>, <4 x i32>* %395, align 4, !tbaa !3
  %397 = getelementptr inbounds i32, i32* %394, i32 4
  %398 = bitcast i32* %397 to <4 x i32>*
  %399 = load <4 x i32>, <4 x i32>* %398, align 4, !tbaa !3
  %400 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %396
  %401 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %399
  %402 = bitcast <4 x i8*> %400 to <4 x i64*>
  %403 = bitcast <4 x i8*> %401 to <4 x i64*>
  %404 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %402, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %405 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %403, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %406 = icmp eq <4 x i32> %386, %396
  %407 = icmp eq <4 x i32> %388, %399
  %408 = select <4 x i1> %406, <4 x i64> %404, <4 x i64> zeroinitializer
  %409 = select <4 x i1> %407, <4 x i64> %405, <4 x i64> zeroinitializer
  %410 = add <4 x i64> %408, %391
  %411 = add <4 x i64> %409, %392
  %412 = or i32 %390, 9
  %413 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %412
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4, !tbaa !3
  %416 = getelementptr inbounds i32, i32* %413, i32 4
  %417 = bitcast i32* %416 to <4 x i32>*
  %418 = load <4 x i32>, <4 x i32>* %417, align 4, !tbaa !3
  %419 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %415
  %420 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %418
  %421 = bitcast <4 x i8*> %419 to <4 x i64*>
  %422 = bitcast <4 x i8*> %420 to <4 x i64*>
  %423 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %421, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %424 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %422, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %425 = icmp eq <4 x i32> %386, %415
  %426 = icmp eq <4 x i32> %388, %418
  %427 = select <4 x i1> %425, <4 x i64> %423, <4 x i64> zeroinitializer
  %428 = select <4 x i1> %426, <4 x i64> %424, <4 x i64> zeroinitializer
  %429 = add <4 x i64> %427, %410
  %430 = add <4 x i64> %428, %411
  %431 = or i32 %390, 17
  %432 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %431
  %433 = bitcast i32* %432 to <4 x i32>*
  %434 = load <4 x i32>, <4 x i32>* %433, align 4, !tbaa !3
  %435 = getelementptr inbounds i32, i32* %432, i32 4
  %436 = bitcast i32* %435 to <4 x i32>*
  %437 = load <4 x i32>, <4 x i32>* %436, align 4, !tbaa !3
  %438 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %434
  %439 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %437
  %440 = bitcast <4 x i8*> %438 to <4 x i64*>
  %441 = bitcast <4 x i8*> %439 to <4 x i64*>
  %442 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %440, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %443 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %441, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %444 = icmp eq <4 x i32> %386, %434
  %445 = icmp eq <4 x i32> %388, %437
  %446 = select <4 x i1> %444, <4 x i64> %442, <4 x i64> zeroinitializer
  %447 = select <4 x i1> %445, <4 x i64> %443, <4 x i64> zeroinitializer
  %448 = add <4 x i64> %446, %429
  %449 = add <4 x i64> %447, %430
  %450 = icmp eq i32 %390, 224
  br i1 %450, label %451, label %14648, !llvm.loop !18

451:                                              ; preds = %389
  %452 = add <4 x i64> %449, %448
  %453 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %452)
  %454 = icmp eq i32 %384, 1992
  %455 = select i1 %454, i64 -1479007749835869680, i64 0
  %456 = add i64 %455, %453
  %457 = icmp eq i32 %384, 2000
  %458 = select i1 %457, i64 2843154170404223674, i64 0
  %459 = add i64 %458, %456
  %460 = icmp eq i32 %384, 2008
  %461 = select i1 %460, i64 -4665003603661872786, i64 0
  %462 = add i64 %461, %459
  %463 = icmp eq i32 %384, 2016
  %464 = select i1 %463, i64 4825845994704960611, i64 0
  %465 = add i64 %464, %462
  %466 = icmp eq i32 %384, 2024
  %467 = select i1 %466, i64 -8782479638933598267, i64 0
  %468 = add i64 %467, %465
  %469 = icmp eq i32 %384, 2032
  %470 = select i1 %469, i64 -2649846723997625800, i64 0
  %471 = add i64 %470, %468
  %472 = icmp eq i32 %384, 2040
  %473 = select i1 %472, i64 -7986310597085620905, i64 0
  %474 = add i64 %473, %471
  %475 = lshr i32 %10, 13
  %476 = and i32 %475, 2040
  %477 = insertelement <4 x i32> poison, i32 %476, i32 0
  %478 = shufflevector <4 x i32> %477, <4 x i32> poison, <4 x i32> zeroinitializer
  %479 = insertelement <4 x i32> poison, i32 %476, i32 0
  %480 = shufflevector <4 x i32> %479, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %481

481:                                              ; preds = %14627, %451
  %482 = phi i32 [ 0, %451 ], [ %14647, %14627 ]
  %483 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %451 ], [ %14645, %14627 ]
  %484 = phi <4 x i64> [ zeroinitializer, %451 ], [ %14646, %14627 ]
  %485 = or i32 %482, 1
  %486 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %485
  %487 = bitcast i32* %486 to <4 x i32>*
  %488 = load <4 x i32>, <4 x i32>* %487, align 4, !tbaa !3
  %489 = getelementptr inbounds i32, i32* %486, i32 4
  %490 = bitcast i32* %489 to <4 x i32>*
  %491 = load <4 x i32>, <4 x i32>* %490, align 4, !tbaa !3
  %492 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %488
  %493 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %491
  %494 = bitcast <4 x i8*> %492 to <4 x i64*>
  %495 = bitcast <4 x i8*> %493 to <4 x i64*>
  %496 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %494, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %497 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %495, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %498 = icmp eq <4 x i32> %478, %488
  %499 = icmp eq <4 x i32> %480, %491
  %500 = select <4 x i1> %498, <4 x i64> %496, <4 x i64> zeroinitializer
  %501 = select <4 x i1> %499, <4 x i64> %497, <4 x i64> zeroinitializer
  %502 = add <4 x i64> %500, %483
  %503 = add <4 x i64> %501, %484
  %504 = or i32 %482, 9
  %505 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %504
  %506 = bitcast i32* %505 to <4 x i32>*
  %507 = load <4 x i32>, <4 x i32>* %506, align 4, !tbaa !3
  %508 = getelementptr inbounds i32, i32* %505, i32 4
  %509 = bitcast i32* %508 to <4 x i32>*
  %510 = load <4 x i32>, <4 x i32>* %509, align 4, !tbaa !3
  %511 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %507
  %512 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %510
  %513 = bitcast <4 x i8*> %511 to <4 x i64*>
  %514 = bitcast <4 x i8*> %512 to <4 x i64*>
  %515 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %513, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %516 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %514, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %517 = icmp eq <4 x i32> %478, %507
  %518 = icmp eq <4 x i32> %480, %510
  %519 = select <4 x i1> %517, <4 x i64> %515, <4 x i64> zeroinitializer
  %520 = select <4 x i1> %518, <4 x i64> %516, <4 x i64> zeroinitializer
  %521 = add <4 x i64> %519, %502
  %522 = add <4 x i64> %520, %503
  %523 = or i32 %482, 17
  %524 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %523
  %525 = bitcast i32* %524 to <4 x i32>*
  %526 = load <4 x i32>, <4 x i32>* %525, align 4, !tbaa !3
  %527 = getelementptr inbounds i32, i32* %524, i32 4
  %528 = bitcast i32* %527 to <4 x i32>*
  %529 = load <4 x i32>, <4 x i32>* %528, align 4, !tbaa !3
  %530 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %526
  %531 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %529
  %532 = bitcast <4 x i8*> %530 to <4 x i64*>
  %533 = bitcast <4 x i8*> %531 to <4 x i64*>
  %534 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %532, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %535 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %533, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %536 = icmp eq <4 x i32> %478, %526
  %537 = icmp eq <4 x i32> %480, %529
  %538 = select <4 x i1> %536, <4 x i64> %534, <4 x i64> zeroinitializer
  %539 = select <4 x i1> %537, <4 x i64> %535, <4 x i64> zeroinitializer
  %540 = add <4 x i64> %538, %521
  %541 = add <4 x i64> %539, %522
  %542 = icmp eq i32 %482, 224
  br i1 %542, label %543, label %14627, !llvm.loop !19

543:                                              ; preds = %481
  %544 = add <4 x i64> %541, %540
  %545 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %544)
  %546 = icmp eq i32 %476, 1992
  %547 = select i1 %546, i64 8785196325032562866, i64 0
  %548 = add i64 %547, %545
  %549 = icmp eq i32 %476, 2000
  %550 = select i1 %549, i64 8369843054303033914, i64 0
  %551 = add i64 %550, %548
  %552 = icmp eq i32 %476, 2008
  %553 = select i1 %552, i64 4809827444717481505, i64 0
  %554 = add i64 %553, %551
  %555 = icmp eq i32 %476, 2016
  %556 = select i1 %555, i64 -557780216695528580, i64 0
  %557 = add i64 %556, %554
  %558 = icmp eq i32 %476, 2024
  %559 = select i1 %558, i64 2199529431470097679, i64 0
  %560 = add i64 %559, %557
  %561 = icmp eq i32 %476, 2032
  %562 = select i1 %561, i64 4169051064997918866, i64 0
  %563 = add i64 %562, %560
  %564 = icmp eq i32 %476, 2040
  %565 = select i1 %564, i64 3067465835107997461, i64 0
  %566 = add i64 %565, %563
  %567 = lshr i32 %10, 5
  %568 = and i32 %567, 2040
  %569 = insertelement <4 x i32> poison, i32 %568, i32 0
  %570 = shufflevector <4 x i32> %569, <4 x i32> poison, <4 x i32> zeroinitializer
  %571 = insertelement <4 x i32> poison, i32 %568, i32 0
  %572 = shufflevector <4 x i32> %571, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %573

573:                                              ; preds = %14606, %543
  %574 = phi i32 [ 0, %543 ], [ %14626, %14606 ]
  %575 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %543 ], [ %14624, %14606 ]
  %576 = phi <4 x i64> [ zeroinitializer, %543 ], [ %14625, %14606 ]
  %577 = or i32 %574, 1
  %578 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %577
  %579 = bitcast i32* %578 to <4 x i32>*
  %580 = load <4 x i32>, <4 x i32>* %579, align 4, !tbaa !3
  %581 = getelementptr inbounds i32, i32* %578, i32 4
  %582 = bitcast i32* %581 to <4 x i32>*
  %583 = load <4 x i32>, <4 x i32>* %582, align 4, !tbaa !3
  %584 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %580
  %585 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %583
  %586 = bitcast <4 x i8*> %584 to <4 x i64*>
  %587 = bitcast <4 x i8*> %585 to <4 x i64*>
  %588 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %586, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %589 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %587, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %590 = icmp eq <4 x i32> %570, %580
  %591 = icmp eq <4 x i32> %572, %583
  %592 = select <4 x i1> %590, <4 x i64> %588, <4 x i64> zeroinitializer
  %593 = select <4 x i1> %591, <4 x i64> %589, <4 x i64> zeroinitializer
  %594 = add <4 x i64> %592, %575
  %595 = add <4 x i64> %593, %576
  %596 = or i32 %574, 9
  %597 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %596
  %598 = bitcast i32* %597 to <4 x i32>*
  %599 = load <4 x i32>, <4 x i32>* %598, align 4, !tbaa !3
  %600 = getelementptr inbounds i32, i32* %597, i32 4
  %601 = bitcast i32* %600 to <4 x i32>*
  %602 = load <4 x i32>, <4 x i32>* %601, align 4, !tbaa !3
  %603 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %599
  %604 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %602
  %605 = bitcast <4 x i8*> %603 to <4 x i64*>
  %606 = bitcast <4 x i8*> %604 to <4 x i64*>
  %607 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %605, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %608 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %606, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %609 = icmp eq <4 x i32> %570, %599
  %610 = icmp eq <4 x i32> %572, %602
  %611 = select <4 x i1> %609, <4 x i64> %607, <4 x i64> zeroinitializer
  %612 = select <4 x i1> %610, <4 x i64> %608, <4 x i64> zeroinitializer
  %613 = add <4 x i64> %611, %594
  %614 = add <4 x i64> %612, %595
  %615 = or i32 %574, 17
  %616 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %615
  %617 = bitcast i32* %616 to <4 x i32>*
  %618 = load <4 x i32>, <4 x i32>* %617, align 4, !tbaa !3
  %619 = getelementptr inbounds i32, i32* %616, i32 4
  %620 = bitcast i32* %619 to <4 x i32>*
  %621 = load <4 x i32>, <4 x i32>* %620, align 4, !tbaa !3
  %622 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %618
  %623 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %621
  %624 = bitcast <4 x i8*> %622 to <4 x i64*>
  %625 = bitcast <4 x i8*> %623 to <4 x i64*>
  %626 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %624, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %627 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %625, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %628 = icmp eq <4 x i32> %570, %618
  %629 = icmp eq <4 x i32> %572, %621
  %630 = select <4 x i1> %628, <4 x i64> %626, <4 x i64> zeroinitializer
  %631 = select <4 x i1> %629, <4 x i64> %627, <4 x i64> zeroinitializer
  %632 = add <4 x i64> %630, %613
  %633 = add <4 x i64> %631, %614
  %634 = icmp eq i32 %574, 224
  br i1 %634, label %635, label %14606, !llvm.loop !20

635:                                              ; preds = %573
  %636 = add <4 x i64> %633, %632
  %637 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %636)
  %638 = icmp eq i32 %568, 1992
  %639 = select i1 %638, i64 -9058450267568037125, i64 0
  %640 = add i64 %639, %637
  %641 = icmp eq i32 %568, 2000
  %642 = select i1 %641, i64 -1610274961606672227, i64 0
  %643 = add i64 %642, %640
  %644 = icmp eq i32 %568, 2008
  %645 = select i1 %644, i64 -7786513464973963311, i64 0
  %646 = add i64 %645, %643
  %647 = icmp eq i32 %568, 2016
  %648 = select i1 %647, i64 -2783995359638905055, i64 0
  %649 = add i64 %648, %646
  %650 = icmp eq i32 %568, 2024
  %651 = select i1 %650, i64 6722895807429069379, i64 0
  %652 = add i64 %651, %649
  %653 = icmp eq i32 %568, 2032
  %654 = select i1 %653, i64 -2706140860760151325, i64 0
  %655 = add i64 %654, %652
  %656 = icmp eq i32 %568, 2040
  %657 = select i1 %656, i64 -1381601050739916090, i64 0
  %658 = add i64 %657, %655
  %659 = shl i32 %10, 3
  %660 = and i32 %659, 2040
  %661 = insertelement <4 x i32> poison, i32 %660, i32 0
  %662 = shufflevector <4 x i32> %661, <4 x i32> poison, <4 x i32> zeroinitializer
  %663 = insertelement <4 x i32> poison, i32 %660, i32 0
  %664 = shufflevector <4 x i32> %663, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %665

665:                                              ; preds = %14585, %635
  %666 = phi i32 [ 0, %635 ], [ %14605, %14585 ]
  %667 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %635 ], [ %14603, %14585 ]
  %668 = phi <4 x i64> [ zeroinitializer, %635 ], [ %14604, %14585 ]
  %669 = or i32 %666, 1
  %670 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %669
  %671 = bitcast i32* %670 to <4 x i32>*
  %672 = load <4 x i32>, <4 x i32>* %671, align 4, !tbaa !3
  %673 = getelementptr inbounds i32, i32* %670, i32 4
  %674 = bitcast i32* %673 to <4 x i32>*
  %675 = load <4 x i32>, <4 x i32>* %674, align 4, !tbaa !3
  %676 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %672
  %677 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %675
  %678 = bitcast <4 x i8*> %676 to <4 x i64*>
  %679 = bitcast <4 x i8*> %677 to <4 x i64*>
  %680 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %678, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %681 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %679, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %682 = icmp eq <4 x i32> %662, %672
  %683 = icmp eq <4 x i32> %664, %675
  %684 = select <4 x i1> %682, <4 x i64> %680, <4 x i64> zeroinitializer
  %685 = select <4 x i1> %683, <4 x i64> %681, <4 x i64> zeroinitializer
  %686 = add <4 x i64> %684, %667
  %687 = add <4 x i64> %685, %668
  %688 = or i32 %666, 9
  %689 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %688
  %690 = bitcast i32* %689 to <4 x i32>*
  %691 = load <4 x i32>, <4 x i32>* %690, align 4, !tbaa !3
  %692 = getelementptr inbounds i32, i32* %689, i32 4
  %693 = bitcast i32* %692 to <4 x i32>*
  %694 = load <4 x i32>, <4 x i32>* %693, align 4, !tbaa !3
  %695 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %691
  %696 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %694
  %697 = bitcast <4 x i8*> %695 to <4 x i64*>
  %698 = bitcast <4 x i8*> %696 to <4 x i64*>
  %699 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %697, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %700 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %698, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %701 = icmp eq <4 x i32> %662, %691
  %702 = icmp eq <4 x i32> %664, %694
  %703 = select <4 x i1> %701, <4 x i64> %699, <4 x i64> zeroinitializer
  %704 = select <4 x i1> %702, <4 x i64> %700, <4 x i64> zeroinitializer
  %705 = add <4 x i64> %703, %686
  %706 = add <4 x i64> %704, %687
  %707 = or i32 %666, 17
  %708 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %707
  %709 = bitcast i32* %708 to <4 x i32>*
  %710 = load <4 x i32>, <4 x i32>* %709, align 4, !tbaa !3
  %711 = getelementptr inbounds i32, i32* %708, i32 4
  %712 = bitcast i32* %711 to <4 x i32>*
  %713 = load <4 x i32>, <4 x i32>* %712, align 4, !tbaa !3
  %714 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %710
  %715 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %713
  %716 = bitcast <4 x i8*> %714 to <4 x i64*>
  %717 = bitcast <4 x i8*> %715 to <4 x i64*>
  %718 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %716, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %719 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %717, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %720 = icmp eq <4 x i32> %662, %710
  %721 = icmp eq <4 x i32> %664, %713
  %722 = select <4 x i1> %720, <4 x i64> %718, <4 x i64> zeroinitializer
  %723 = select <4 x i1> %721, <4 x i64> %719, <4 x i64> zeroinitializer
  %724 = add <4 x i64> %722, %705
  %725 = add <4 x i64> %723, %706
  %726 = icmp eq i32 %666, 224
  br i1 %726, label %727, label %14585, !llvm.loop !21

727:                                              ; preds = %665
  %728 = add <4 x i64> %725, %724
  %729 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %728)
  %730 = icmp eq i32 %660, 1992
  %731 = select i1 %730, i64 5296930162245565346, i64 0
  %732 = add i64 %731, %729
  %733 = icmp eq i32 %660, 2000
  %734 = select i1 %733, i64 -6347414485825053312, i64 0
  %735 = add i64 %734, %732
  %736 = icmp eq i32 %660, 2008
  %737 = select i1 %736, i64 -1111471293076483761, i64 0
  %738 = add i64 %737, %735
  %739 = icmp eq i32 %660, 2016
  %740 = select i1 %739, i64 6762709279494119711, i64 0
  %741 = add i64 %740, %738
  %742 = icmp eq i32 %660, 2024
  %743 = select i1 %742, i64 5502587883897177034, i64 0
  %744 = add i64 %743, %741
  %745 = icmp eq i32 %660, 2032
  %746 = select i1 %745, i64 8203933284918551466, i64 0
  %747 = add i64 %746, %744
  %748 = icmp eq i32 %660, 2040
  %749 = select i1 %748, i64 -3176116833483372990, i64 0
  %750 = add i64 %749, %747
  %751 = xor i64 %8, %106
  %752 = xor i64 %751, %198
  %753 = xor i64 %752, %290
  %754 = xor i64 %753, %382
  %755 = xor i64 %754, %474
  %756 = xor i64 %755, %566
  %757 = xor i64 %756, %658
  %758 = xor i64 %757, %750
  %759 = xor i64 %758, -5020335507942157747
  store i64 %759, i64* @ctx.0.0, align 8, !tbaa !7
  %760 = lshr i64 %759, 53
  %761 = trunc i64 %760 to i32
  %762 = and i32 %761, 2040
  %763 = insertelement <4 x i32> poison, i32 %762, i32 0
  %764 = shufflevector <4 x i32> %763, <4 x i32> poison, <4 x i32> zeroinitializer
  %765 = insertelement <4 x i32> poison, i32 %762, i32 0
  %766 = shufflevector <4 x i32> %765, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %767

767:                                              ; preds = %14564, %727
  %768 = phi i32 [ 0, %727 ], [ %14584, %14564 ]
  %769 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %727 ], [ %14582, %14564 ]
  %770 = phi <4 x i64> [ zeroinitializer, %727 ], [ %14583, %14564 ]
  %771 = or i32 %768, 1
  %772 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %771
  %773 = bitcast i32* %772 to <4 x i32>*
  %774 = load <4 x i32>, <4 x i32>* %773, align 4, !tbaa !3
  %775 = getelementptr inbounds i32, i32* %772, i32 4
  %776 = bitcast i32* %775 to <4 x i32>*
  %777 = load <4 x i32>, <4 x i32>* %776, align 4, !tbaa !3
  %778 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %774
  %779 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %777
  %780 = bitcast <4 x i8*> %778 to <4 x i64*>
  %781 = bitcast <4 x i8*> %779 to <4 x i64*>
  %782 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %780, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %783 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %781, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %784 = icmp eq <4 x i32> %764, %774
  %785 = icmp eq <4 x i32> %766, %777
  %786 = select <4 x i1> %784, <4 x i64> %782, <4 x i64> zeroinitializer
  %787 = select <4 x i1> %785, <4 x i64> %783, <4 x i64> zeroinitializer
  %788 = add <4 x i64> %786, %769
  %789 = add <4 x i64> %787, %770
  %790 = or i32 %768, 9
  %791 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %790
  %792 = bitcast i32* %791 to <4 x i32>*
  %793 = load <4 x i32>, <4 x i32>* %792, align 4, !tbaa !3
  %794 = getelementptr inbounds i32, i32* %791, i32 4
  %795 = bitcast i32* %794 to <4 x i32>*
  %796 = load <4 x i32>, <4 x i32>* %795, align 4, !tbaa !3
  %797 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %793
  %798 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %796
  %799 = bitcast <4 x i8*> %797 to <4 x i64*>
  %800 = bitcast <4 x i8*> %798 to <4 x i64*>
  %801 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %799, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %802 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %800, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %803 = icmp eq <4 x i32> %764, %793
  %804 = icmp eq <4 x i32> %766, %796
  %805 = select <4 x i1> %803, <4 x i64> %801, <4 x i64> zeroinitializer
  %806 = select <4 x i1> %804, <4 x i64> %802, <4 x i64> zeroinitializer
  %807 = add <4 x i64> %805, %788
  %808 = add <4 x i64> %806, %789
  %809 = or i32 %768, 17
  %810 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %809
  %811 = bitcast i32* %810 to <4 x i32>*
  %812 = load <4 x i32>, <4 x i32>* %811, align 4, !tbaa !3
  %813 = getelementptr inbounds i32, i32* %810, i32 4
  %814 = bitcast i32* %813 to <4 x i32>*
  %815 = load <4 x i32>, <4 x i32>* %814, align 4, !tbaa !3
  %816 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %812
  %817 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %815
  %818 = bitcast <4 x i8*> %816 to <4 x i64*>
  %819 = bitcast <4 x i8*> %817 to <4 x i64*>
  %820 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %818, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %821 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %819, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %822 = icmp eq <4 x i32> %764, %812
  %823 = icmp eq <4 x i32> %766, %815
  %824 = select <4 x i1> %822, <4 x i64> %820, <4 x i64> zeroinitializer
  %825 = select <4 x i1> %823, <4 x i64> %821, <4 x i64> zeroinitializer
  %826 = add <4 x i64> %824, %807
  %827 = add <4 x i64> %825, %808
  %828 = icmp eq i32 %768, 224
  br i1 %828, label %829, label %14564, !llvm.loop !22

829:                                              ; preds = %767
  %830 = add <4 x i64> %827, %826
  %831 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %830)
  %832 = icmp eq i32 %762, 1992
  %833 = select i1 %832, i64 -6702567834671021495, i64 0
  %834 = add i64 %833, %831
  %835 = icmp eq i32 %762, 2000
  %836 = select i1 %835, i64 -9179115894310901337, i64 0
  %837 = add i64 %836, %834
  %838 = icmp eq i32 %762, 2008
  %839 = select i1 %838, i64 5751414958667764720, i64 0
  %840 = add i64 %839, %837
  %841 = icmp eq i32 %762, 2016
  %842 = select i1 %841, i64 2243210855174429021, i64 0
  %843 = add i64 %842, %840
  %844 = icmp eq i32 %762, 2024
  %845 = select i1 %844, i64 -3872233913575383732, i64 0
  %846 = add i64 %845, %843
  %847 = icmp eq i32 %762, 2032
  %848 = select i1 %847, i64 -6132897494654657935, i64 0
  %849 = add i64 %848, %846
  %850 = icmp eq i32 %762, 2040
  %851 = select i1 %850, i64 4811556717733801171, i64 0
  %852 = add i64 %851, %849
  %853 = lshr i64 %759, 45
  %854 = trunc i64 %853 to i32
  %855 = and i32 %854, 2040
  %856 = insertelement <4 x i32> poison, i32 %855, i32 0
  %857 = shufflevector <4 x i32> %856, <4 x i32> poison, <4 x i32> zeroinitializer
  %858 = insertelement <4 x i32> poison, i32 %855, i32 0
  %859 = shufflevector <4 x i32> %858, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %860

860:                                              ; preds = %14543, %829
  %861 = phi i32 [ 0, %829 ], [ %14563, %14543 ]
  %862 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %829 ], [ %14561, %14543 ]
  %863 = phi <4 x i64> [ zeroinitializer, %829 ], [ %14562, %14543 ]
  %864 = or i32 %861, 1
  %865 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %864
  %866 = bitcast i32* %865 to <4 x i32>*
  %867 = load <4 x i32>, <4 x i32>* %866, align 4, !tbaa !3
  %868 = getelementptr inbounds i32, i32* %865, i32 4
  %869 = bitcast i32* %868 to <4 x i32>*
  %870 = load <4 x i32>, <4 x i32>* %869, align 4, !tbaa !3
  %871 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %867
  %872 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %870
  %873 = bitcast <4 x i8*> %871 to <4 x i64*>
  %874 = bitcast <4 x i8*> %872 to <4 x i64*>
  %875 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %873, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %876 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %874, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %877 = icmp eq <4 x i32> %857, %867
  %878 = icmp eq <4 x i32> %859, %870
  %879 = select <4 x i1> %877, <4 x i64> %875, <4 x i64> zeroinitializer
  %880 = select <4 x i1> %878, <4 x i64> %876, <4 x i64> zeroinitializer
  %881 = add <4 x i64> %879, %862
  %882 = add <4 x i64> %880, %863
  %883 = or i32 %861, 9
  %884 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %883
  %885 = bitcast i32* %884 to <4 x i32>*
  %886 = load <4 x i32>, <4 x i32>* %885, align 4, !tbaa !3
  %887 = getelementptr inbounds i32, i32* %884, i32 4
  %888 = bitcast i32* %887 to <4 x i32>*
  %889 = load <4 x i32>, <4 x i32>* %888, align 4, !tbaa !3
  %890 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %886
  %891 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %889
  %892 = bitcast <4 x i8*> %890 to <4 x i64*>
  %893 = bitcast <4 x i8*> %891 to <4 x i64*>
  %894 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %892, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %895 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %893, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %896 = icmp eq <4 x i32> %857, %886
  %897 = icmp eq <4 x i32> %859, %889
  %898 = select <4 x i1> %896, <4 x i64> %894, <4 x i64> zeroinitializer
  %899 = select <4 x i1> %897, <4 x i64> %895, <4 x i64> zeroinitializer
  %900 = add <4 x i64> %898, %881
  %901 = add <4 x i64> %899, %882
  %902 = or i32 %861, 17
  %903 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %902
  %904 = bitcast i32* %903 to <4 x i32>*
  %905 = load <4 x i32>, <4 x i32>* %904, align 4, !tbaa !3
  %906 = getelementptr inbounds i32, i32* %903, i32 4
  %907 = bitcast i32* %906 to <4 x i32>*
  %908 = load <4 x i32>, <4 x i32>* %907, align 4, !tbaa !3
  %909 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %905
  %910 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %908
  %911 = bitcast <4 x i8*> %909 to <4 x i64*>
  %912 = bitcast <4 x i8*> %910 to <4 x i64*>
  %913 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %911, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %914 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %912, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %915 = icmp eq <4 x i32> %857, %905
  %916 = icmp eq <4 x i32> %859, %908
  %917 = select <4 x i1> %915, <4 x i64> %913, <4 x i64> zeroinitializer
  %918 = select <4 x i1> %916, <4 x i64> %914, <4 x i64> zeroinitializer
  %919 = add <4 x i64> %917, %900
  %920 = add <4 x i64> %918, %901
  %921 = icmp eq i32 %861, 224
  br i1 %921, label %922, label %14543, !llvm.loop !23

922:                                              ; preds = %860
  %923 = add <4 x i64> %920, %919
  %924 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %923)
  %925 = icmp eq i32 %855, 1992
  %926 = select i1 %925, i64 -314670665226827390, i64 0
  %927 = add i64 %926, %924
  %928 = icmp eq i32 %855, 2000
  %929 = select i1 %928, i64 -7097468252516276247, i64 0
  %930 = add i64 %929, %927
  %931 = icmp eq i32 %855, 2008
  %932 = select i1 %931, i64 -3364349307489619821, i64 0
  %933 = add i64 %932, %930
  %934 = icmp eq i32 %855, 2016
  %935 = select i1 %934, i64 2386735715921845721, i64 0
  %936 = add i64 %935, %933
  %937 = icmp eq i32 %855, 2024
  %938 = select i1 %937, i64 4884933414564023389, i64 0
  %939 = add i64 %938, %936
  %940 = icmp eq i32 %855, 2032
  %941 = select i1 %940, i64 -2041757280372035110, i64 0
  %942 = add i64 %941, %939
  %943 = icmp eq i32 %855, 2040
  %944 = select i1 %943, i64 -4160667357316787220, i64 0
  %945 = add i64 %944, %942
  %946 = lshr i64 %759, 37
  %947 = trunc i64 %946 to i32
  %948 = and i32 %947, 2040
  %949 = insertelement <4 x i32> poison, i32 %948, i32 0
  %950 = shufflevector <4 x i32> %949, <4 x i32> poison, <4 x i32> zeroinitializer
  %951 = insertelement <4 x i32> poison, i32 %948, i32 0
  %952 = shufflevector <4 x i32> %951, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %953

953:                                              ; preds = %14522, %922
  %954 = phi i32 [ 0, %922 ], [ %14542, %14522 ]
  %955 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %922 ], [ %14540, %14522 ]
  %956 = phi <4 x i64> [ zeroinitializer, %922 ], [ %14541, %14522 ]
  %957 = or i32 %954, 1
  %958 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %957
  %959 = bitcast i32* %958 to <4 x i32>*
  %960 = load <4 x i32>, <4 x i32>* %959, align 4, !tbaa !3
  %961 = getelementptr inbounds i32, i32* %958, i32 4
  %962 = bitcast i32* %961 to <4 x i32>*
  %963 = load <4 x i32>, <4 x i32>* %962, align 4, !tbaa !3
  %964 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %960
  %965 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %963
  %966 = bitcast <4 x i8*> %964 to <4 x i64*>
  %967 = bitcast <4 x i8*> %965 to <4 x i64*>
  %968 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %966, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %969 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %967, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %970 = icmp eq <4 x i32> %950, %960
  %971 = icmp eq <4 x i32> %952, %963
  %972 = select <4 x i1> %970, <4 x i64> %968, <4 x i64> zeroinitializer
  %973 = select <4 x i1> %971, <4 x i64> %969, <4 x i64> zeroinitializer
  %974 = add <4 x i64> %972, %955
  %975 = add <4 x i64> %973, %956
  %976 = or i32 %954, 9
  %977 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %976
  %978 = bitcast i32* %977 to <4 x i32>*
  %979 = load <4 x i32>, <4 x i32>* %978, align 4, !tbaa !3
  %980 = getelementptr inbounds i32, i32* %977, i32 4
  %981 = bitcast i32* %980 to <4 x i32>*
  %982 = load <4 x i32>, <4 x i32>* %981, align 4, !tbaa !3
  %983 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %979
  %984 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %982
  %985 = bitcast <4 x i8*> %983 to <4 x i64*>
  %986 = bitcast <4 x i8*> %984 to <4 x i64*>
  %987 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %985, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %988 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %986, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %989 = icmp eq <4 x i32> %950, %979
  %990 = icmp eq <4 x i32> %952, %982
  %991 = select <4 x i1> %989, <4 x i64> %987, <4 x i64> zeroinitializer
  %992 = select <4 x i1> %990, <4 x i64> %988, <4 x i64> zeroinitializer
  %993 = add <4 x i64> %991, %974
  %994 = add <4 x i64> %992, %975
  %995 = or i32 %954, 17
  %996 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %995
  %997 = bitcast i32* %996 to <4 x i32>*
  %998 = load <4 x i32>, <4 x i32>* %997, align 4, !tbaa !3
  %999 = getelementptr inbounds i32, i32* %996, i32 4
  %1000 = bitcast i32* %999 to <4 x i32>*
  %1001 = load <4 x i32>, <4 x i32>* %1000, align 4, !tbaa !3
  %1002 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %998
  %1003 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %1001
  %1004 = bitcast <4 x i8*> %1002 to <4 x i64*>
  %1005 = bitcast <4 x i8*> %1003 to <4 x i64*>
  %1006 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1004, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1007 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1005, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1008 = icmp eq <4 x i32> %950, %998
  %1009 = icmp eq <4 x i32> %952, %1001
  %1010 = select <4 x i1> %1008, <4 x i64> %1006, <4 x i64> zeroinitializer
  %1011 = select <4 x i1> %1009, <4 x i64> %1007, <4 x i64> zeroinitializer
  %1012 = add <4 x i64> %1010, %993
  %1013 = add <4 x i64> %1011, %994
  %1014 = icmp eq i32 %954, 224
  br i1 %1014, label %1015, label %14522, !llvm.loop !24

1015:                                             ; preds = %953
  %1016 = add <4 x i64> %1013, %1012
  %1017 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1016)
  %1018 = icmp eq i32 %948, 1992
  %1019 = select i1 %1018, i64 -5615809534224635015, i64 0
  %1020 = add i64 %1019, %1017
  %1021 = icmp eq i32 %948, 2000
  %1022 = select i1 %1021, i64 4231836215586269044, i64 0
  %1023 = add i64 %1022, %1020
  %1024 = icmp eq i32 %948, 2008
  %1025 = select i1 %1024, i64 2408950612238581570, i64 0
  %1026 = add i64 %1025, %1023
  %1027 = icmp eq i32 %948, 2016
  %1028 = select i1 %1027, i64 8963041913638568696, i64 0
  %1029 = add i64 %1028, %1026
  %1030 = icmp eq i32 %948, 2024
  %1031 = select i1 %1030, i64 1136536871657834014, i64 0
  %1032 = add i64 %1031, %1029
  %1033 = icmp eq i32 %948, 2032
  %1034 = select i1 %1033, i64 -7910384849877083335, i64 0
  %1035 = add i64 %1034, %1032
  %1036 = icmp eq i32 %948, 2040
  %1037 = select i1 %1036, i64 1537771219914559786, i64 0
  %1038 = add i64 %1037, %1035
  %1039 = lshr i64 %759, 29
  %1040 = trunc i64 %1039 to i32
  %1041 = and i32 %1040, 2040
  %1042 = insertelement <4 x i32> poison, i32 %1041, i32 0
  %1043 = shufflevector <4 x i32> %1042, <4 x i32> poison, <4 x i32> zeroinitializer
  %1044 = insertelement <4 x i32> poison, i32 %1041, i32 0
  %1045 = shufflevector <4 x i32> %1044, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1046

1046:                                             ; preds = %14501, %1015
  %1047 = phi i32 [ 0, %1015 ], [ %14521, %14501 ]
  %1048 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1015 ], [ %14519, %14501 ]
  %1049 = phi <4 x i64> [ zeroinitializer, %1015 ], [ %14520, %14501 ]
  %1050 = or i32 %1047, 1
  %1051 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1050
  %1052 = bitcast i32* %1051 to <4 x i32>*
  %1053 = load <4 x i32>, <4 x i32>* %1052, align 4, !tbaa !3
  %1054 = getelementptr inbounds i32, i32* %1051, i32 4
  %1055 = bitcast i32* %1054 to <4 x i32>*
  %1056 = load <4 x i32>, <4 x i32>* %1055, align 4, !tbaa !3
  %1057 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1053
  %1058 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1056
  %1059 = bitcast <4 x i8*> %1057 to <4 x i64*>
  %1060 = bitcast <4 x i8*> %1058 to <4 x i64*>
  %1061 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1059, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1062 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1060, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1063 = icmp eq <4 x i32> %1043, %1053
  %1064 = icmp eq <4 x i32> %1045, %1056
  %1065 = select <4 x i1> %1063, <4 x i64> %1061, <4 x i64> zeroinitializer
  %1066 = select <4 x i1> %1064, <4 x i64> %1062, <4 x i64> zeroinitializer
  %1067 = add <4 x i64> %1065, %1048
  %1068 = add <4 x i64> %1066, %1049
  %1069 = or i32 %1047, 9
  %1070 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1069
  %1071 = bitcast i32* %1070 to <4 x i32>*
  %1072 = load <4 x i32>, <4 x i32>* %1071, align 4, !tbaa !3
  %1073 = getelementptr inbounds i32, i32* %1070, i32 4
  %1074 = bitcast i32* %1073 to <4 x i32>*
  %1075 = load <4 x i32>, <4 x i32>* %1074, align 4, !tbaa !3
  %1076 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1072
  %1077 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1075
  %1078 = bitcast <4 x i8*> %1076 to <4 x i64*>
  %1079 = bitcast <4 x i8*> %1077 to <4 x i64*>
  %1080 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1078, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1081 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1079, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1082 = icmp eq <4 x i32> %1043, %1072
  %1083 = icmp eq <4 x i32> %1045, %1075
  %1084 = select <4 x i1> %1082, <4 x i64> %1080, <4 x i64> zeroinitializer
  %1085 = select <4 x i1> %1083, <4 x i64> %1081, <4 x i64> zeroinitializer
  %1086 = add <4 x i64> %1084, %1067
  %1087 = add <4 x i64> %1085, %1068
  %1088 = or i32 %1047, 17
  %1089 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1088
  %1090 = bitcast i32* %1089 to <4 x i32>*
  %1091 = load <4 x i32>, <4 x i32>* %1090, align 4, !tbaa !3
  %1092 = getelementptr inbounds i32, i32* %1089, i32 4
  %1093 = bitcast i32* %1092 to <4 x i32>*
  %1094 = load <4 x i32>, <4 x i32>* %1093, align 4, !tbaa !3
  %1095 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1091
  %1096 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1094
  %1097 = bitcast <4 x i8*> %1095 to <4 x i64*>
  %1098 = bitcast <4 x i8*> %1096 to <4 x i64*>
  %1099 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1097, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1100 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1098, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1101 = icmp eq <4 x i32> %1043, %1091
  %1102 = icmp eq <4 x i32> %1045, %1094
  %1103 = select <4 x i1> %1101, <4 x i64> %1099, <4 x i64> zeroinitializer
  %1104 = select <4 x i1> %1102, <4 x i64> %1100, <4 x i64> zeroinitializer
  %1105 = add <4 x i64> %1103, %1086
  %1106 = add <4 x i64> %1104, %1087
  %1107 = icmp eq i32 %1047, 224
  br i1 %1107, label %1108, label %14501, !llvm.loop !25

1108:                                             ; preds = %1046
  %1109 = add <4 x i64> %1106, %1105
  %1110 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1109)
  %1111 = icmp eq i32 %1041, 1992
  %1112 = select i1 %1111, i64 1203300724897905131, i64 0
  %1113 = add i64 %1112, %1110
  %1114 = icmp eq i32 %1041, 2000
  %1115 = select i1 %1114, i64 -5027532858107268057, i64 0
  %1116 = add i64 %1115, %1113
  %1117 = icmp eq i32 %1041, 2008
  %1118 = select i1 %1117, i64 7935854159672328895, i64 0
  %1119 = add i64 %1118, %1116
  %1120 = icmp eq i32 %1041, 2016
  %1121 = select i1 %1120, i64 7168641125469255746, i64 0
  %1122 = add i64 %1121, %1119
  %1123 = icmp eq i32 %1041, 2024
  %1124 = select i1 %1123, i64 -4247101387443462522, i64 0
  %1125 = add i64 %1124, %1122
  %1126 = icmp eq i32 %1041, 2032
  %1127 = select i1 %1126, i64 4076570933917792731, i64 0
  %1128 = add i64 %1127, %1125
  %1129 = icmp eq i32 %1041, 2040
  %1130 = select i1 %1129, i64 6275139646136265361, i64 0
  %1131 = add i64 %1130, %1128
  %1132 = lshr i64 %759, 21
  %1133 = trunc i64 %1132 to i32
  %1134 = and i32 %1133, 2040
  %1135 = insertelement <4 x i32> poison, i32 %1134, i32 0
  %1136 = shufflevector <4 x i32> %1135, <4 x i32> poison, <4 x i32> zeroinitializer
  %1137 = insertelement <4 x i32> poison, i32 %1134, i32 0
  %1138 = shufflevector <4 x i32> %1137, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1139

1139:                                             ; preds = %14480, %1108
  %1140 = phi i32 [ 0, %1108 ], [ %14500, %14480 ]
  %1141 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1108 ], [ %14498, %14480 ]
  %1142 = phi <4 x i64> [ zeroinitializer, %1108 ], [ %14499, %14480 ]
  %1143 = or i32 %1140, 1
  %1144 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1143
  %1145 = bitcast i32* %1144 to <4 x i32>*
  %1146 = load <4 x i32>, <4 x i32>* %1145, align 4, !tbaa !3
  %1147 = getelementptr inbounds i32, i32* %1144, i32 4
  %1148 = bitcast i32* %1147 to <4 x i32>*
  %1149 = load <4 x i32>, <4 x i32>* %1148, align 4, !tbaa !3
  %1150 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1146
  %1151 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1149
  %1152 = bitcast <4 x i8*> %1150 to <4 x i64*>
  %1153 = bitcast <4 x i8*> %1151 to <4 x i64*>
  %1154 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1152, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1155 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1153, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1156 = icmp eq <4 x i32> %1136, %1146
  %1157 = icmp eq <4 x i32> %1138, %1149
  %1158 = select <4 x i1> %1156, <4 x i64> %1154, <4 x i64> zeroinitializer
  %1159 = select <4 x i1> %1157, <4 x i64> %1155, <4 x i64> zeroinitializer
  %1160 = add <4 x i64> %1158, %1141
  %1161 = add <4 x i64> %1159, %1142
  %1162 = or i32 %1140, 9
  %1163 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1162
  %1164 = bitcast i32* %1163 to <4 x i32>*
  %1165 = load <4 x i32>, <4 x i32>* %1164, align 4, !tbaa !3
  %1166 = getelementptr inbounds i32, i32* %1163, i32 4
  %1167 = bitcast i32* %1166 to <4 x i32>*
  %1168 = load <4 x i32>, <4 x i32>* %1167, align 4, !tbaa !3
  %1169 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1165
  %1170 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1168
  %1171 = bitcast <4 x i8*> %1169 to <4 x i64*>
  %1172 = bitcast <4 x i8*> %1170 to <4 x i64*>
  %1173 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1171, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1174 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1172, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1175 = icmp eq <4 x i32> %1136, %1165
  %1176 = icmp eq <4 x i32> %1138, %1168
  %1177 = select <4 x i1> %1175, <4 x i64> %1173, <4 x i64> zeroinitializer
  %1178 = select <4 x i1> %1176, <4 x i64> %1174, <4 x i64> zeroinitializer
  %1179 = add <4 x i64> %1177, %1160
  %1180 = add <4 x i64> %1178, %1161
  %1181 = or i32 %1140, 17
  %1182 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1181
  %1183 = bitcast i32* %1182 to <4 x i32>*
  %1184 = load <4 x i32>, <4 x i32>* %1183, align 4, !tbaa !3
  %1185 = getelementptr inbounds i32, i32* %1182, i32 4
  %1186 = bitcast i32* %1185 to <4 x i32>*
  %1187 = load <4 x i32>, <4 x i32>* %1186, align 4, !tbaa !3
  %1188 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1184
  %1189 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1187
  %1190 = bitcast <4 x i8*> %1188 to <4 x i64*>
  %1191 = bitcast <4 x i8*> %1189 to <4 x i64*>
  %1192 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1190, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1193 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1191, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1194 = icmp eq <4 x i32> %1136, %1184
  %1195 = icmp eq <4 x i32> %1138, %1187
  %1196 = select <4 x i1> %1194, <4 x i64> %1192, <4 x i64> zeroinitializer
  %1197 = select <4 x i1> %1195, <4 x i64> %1193, <4 x i64> zeroinitializer
  %1198 = add <4 x i64> %1196, %1179
  %1199 = add <4 x i64> %1197, %1180
  %1200 = icmp eq i32 %1140, 224
  br i1 %1200, label %1201, label %14480, !llvm.loop !26

1201:                                             ; preds = %1139
  %1202 = add <4 x i64> %1199, %1198
  %1203 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1202)
  %1204 = icmp eq i32 %1134, 1992
  %1205 = select i1 %1204, i64 -1479007749835869680, i64 0
  %1206 = add i64 %1205, %1203
  %1207 = icmp eq i32 %1134, 2000
  %1208 = select i1 %1207, i64 2843154170404223674, i64 0
  %1209 = add i64 %1208, %1206
  %1210 = icmp eq i32 %1134, 2008
  %1211 = select i1 %1210, i64 -4665003603661872786, i64 0
  %1212 = add i64 %1211, %1209
  %1213 = icmp eq i32 %1134, 2016
  %1214 = select i1 %1213, i64 4825845994704960611, i64 0
  %1215 = add i64 %1214, %1212
  %1216 = icmp eq i32 %1134, 2024
  %1217 = select i1 %1216, i64 -8782479638933598267, i64 0
  %1218 = add i64 %1217, %1215
  %1219 = icmp eq i32 %1134, 2032
  %1220 = select i1 %1219, i64 -2649846723997625800, i64 0
  %1221 = add i64 %1220, %1218
  %1222 = icmp eq i32 %1134, 2040
  %1223 = select i1 %1222, i64 -7986310597085620905, i64 0
  %1224 = add i64 %1223, %1221
  %1225 = lshr i64 %759, 13
  %1226 = trunc i64 %1225 to i32
  %1227 = and i32 %1226, 2040
  %1228 = insertelement <4 x i32> poison, i32 %1227, i32 0
  %1229 = shufflevector <4 x i32> %1228, <4 x i32> poison, <4 x i32> zeroinitializer
  %1230 = insertelement <4 x i32> poison, i32 %1227, i32 0
  %1231 = shufflevector <4 x i32> %1230, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1232

1232:                                             ; preds = %14459, %1201
  %1233 = phi i32 [ 0, %1201 ], [ %14479, %14459 ]
  %1234 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1201 ], [ %14477, %14459 ]
  %1235 = phi <4 x i64> [ zeroinitializer, %1201 ], [ %14478, %14459 ]
  %1236 = or i32 %1233, 1
  %1237 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1236
  %1238 = bitcast i32* %1237 to <4 x i32>*
  %1239 = load <4 x i32>, <4 x i32>* %1238, align 4, !tbaa !3
  %1240 = getelementptr inbounds i32, i32* %1237, i32 4
  %1241 = bitcast i32* %1240 to <4 x i32>*
  %1242 = load <4 x i32>, <4 x i32>* %1241, align 4, !tbaa !3
  %1243 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %1239
  %1244 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %1242
  %1245 = bitcast <4 x i8*> %1243 to <4 x i64*>
  %1246 = bitcast <4 x i8*> %1244 to <4 x i64*>
  %1247 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1245, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1248 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1246, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1249 = icmp eq <4 x i32> %1229, %1239
  %1250 = icmp eq <4 x i32> %1231, %1242
  %1251 = select <4 x i1> %1249, <4 x i64> %1247, <4 x i64> zeroinitializer
  %1252 = select <4 x i1> %1250, <4 x i64> %1248, <4 x i64> zeroinitializer
  %1253 = add <4 x i64> %1251, %1234
  %1254 = add <4 x i64> %1252, %1235
  %1255 = or i32 %1233, 9
  %1256 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1255
  %1257 = bitcast i32* %1256 to <4 x i32>*
  %1258 = load <4 x i32>, <4 x i32>* %1257, align 4, !tbaa !3
  %1259 = getelementptr inbounds i32, i32* %1256, i32 4
  %1260 = bitcast i32* %1259 to <4 x i32>*
  %1261 = load <4 x i32>, <4 x i32>* %1260, align 4, !tbaa !3
  %1262 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %1258
  %1263 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %1261
  %1264 = bitcast <4 x i8*> %1262 to <4 x i64*>
  %1265 = bitcast <4 x i8*> %1263 to <4 x i64*>
  %1266 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1264, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1267 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1265, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1268 = icmp eq <4 x i32> %1229, %1258
  %1269 = icmp eq <4 x i32> %1231, %1261
  %1270 = select <4 x i1> %1268, <4 x i64> %1266, <4 x i64> zeroinitializer
  %1271 = select <4 x i1> %1269, <4 x i64> %1267, <4 x i64> zeroinitializer
  %1272 = add <4 x i64> %1270, %1253
  %1273 = add <4 x i64> %1271, %1254
  %1274 = or i32 %1233, 17
  %1275 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1274
  %1276 = bitcast i32* %1275 to <4 x i32>*
  %1277 = load <4 x i32>, <4 x i32>* %1276, align 4, !tbaa !3
  %1278 = getelementptr inbounds i32, i32* %1275, i32 4
  %1279 = bitcast i32* %1278 to <4 x i32>*
  %1280 = load <4 x i32>, <4 x i32>* %1279, align 4, !tbaa !3
  %1281 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %1277
  %1282 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %1280
  %1283 = bitcast <4 x i8*> %1281 to <4 x i64*>
  %1284 = bitcast <4 x i8*> %1282 to <4 x i64*>
  %1285 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1283, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1286 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1284, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1287 = icmp eq <4 x i32> %1229, %1277
  %1288 = icmp eq <4 x i32> %1231, %1280
  %1289 = select <4 x i1> %1287, <4 x i64> %1285, <4 x i64> zeroinitializer
  %1290 = select <4 x i1> %1288, <4 x i64> %1286, <4 x i64> zeroinitializer
  %1291 = add <4 x i64> %1289, %1272
  %1292 = add <4 x i64> %1290, %1273
  %1293 = icmp eq i32 %1233, 224
  br i1 %1293, label %1294, label %14459, !llvm.loop !27

1294:                                             ; preds = %1232
  %1295 = add <4 x i64> %1292, %1291
  %1296 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1295)
  %1297 = icmp eq i32 %1227, 1992
  %1298 = select i1 %1297, i64 8785196325032562866, i64 0
  %1299 = add i64 %1298, %1296
  %1300 = icmp eq i32 %1227, 2000
  %1301 = select i1 %1300, i64 8369843054303033914, i64 0
  %1302 = add i64 %1301, %1299
  %1303 = icmp eq i32 %1227, 2008
  %1304 = select i1 %1303, i64 4809827444717481505, i64 0
  %1305 = add i64 %1304, %1302
  %1306 = icmp eq i32 %1227, 2016
  %1307 = select i1 %1306, i64 -557780216695528580, i64 0
  %1308 = add i64 %1307, %1305
  %1309 = icmp eq i32 %1227, 2024
  %1310 = select i1 %1309, i64 2199529431470097679, i64 0
  %1311 = add i64 %1310, %1308
  %1312 = icmp eq i32 %1227, 2032
  %1313 = select i1 %1312, i64 4169051064997918866, i64 0
  %1314 = add i64 %1313, %1311
  %1315 = icmp eq i32 %1227, 2040
  %1316 = select i1 %1315, i64 3067465835107997461, i64 0
  %1317 = add i64 %1316, %1314
  %1318 = lshr i64 %759, 5
  %1319 = trunc i64 %1318 to i32
  %1320 = and i32 %1319, 2040
  %1321 = insertelement <4 x i32> poison, i32 %1320, i32 0
  %1322 = shufflevector <4 x i32> %1321, <4 x i32> poison, <4 x i32> zeroinitializer
  %1323 = insertelement <4 x i32> poison, i32 %1320, i32 0
  %1324 = shufflevector <4 x i32> %1323, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1325

1325:                                             ; preds = %14438, %1294
  %1326 = phi i32 [ 0, %1294 ], [ %14458, %14438 ]
  %1327 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1294 ], [ %14456, %14438 ]
  %1328 = phi <4 x i64> [ zeroinitializer, %1294 ], [ %14457, %14438 ]
  %1329 = or i32 %1326, 1
  %1330 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1329
  %1331 = bitcast i32* %1330 to <4 x i32>*
  %1332 = load <4 x i32>, <4 x i32>* %1331, align 4, !tbaa !3
  %1333 = getelementptr inbounds i32, i32* %1330, i32 4
  %1334 = bitcast i32* %1333 to <4 x i32>*
  %1335 = load <4 x i32>, <4 x i32>* %1334, align 4, !tbaa !3
  %1336 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %1332
  %1337 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %1335
  %1338 = bitcast <4 x i8*> %1336 to <4 x i64*>
  %1339 = bitcast <4 x i8*> %1337 to <4 x i64*>
  %1340 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1338, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1341 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1339, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1342 = icmp eq <4 x i32> %1322, %1332
  %1343 = icmp eq <4 x i32> %1324, %1335
  %1344 = select <4 x i1> %1342, <4 x i64> %1340, <4 x i64> zeroinitializer
  %1345 = select <4 x i1> %1343, <4 x i64> %1341, <4 x i64> zeroinitializer
  %1346 = add <4 x i64> %1344, %1327
  %1347 = add <4 x i64> %1345, %1328
  %1348 = or i32 %1326, 9
  %1349 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1348
  %1350 = bitcast i32* %1349 to <4 x i32>*
  %1351 = load <4 x i32>, <4 x i32>* %1350, align 4, !tbaa !3
  %1352 = getelementptr inbounds i32, i32* %1349, i32 4
  %1353 = bitcast i32* %1352 to <4 x i32>*
  %1354 = load <4 x i32>, <4 x i32>* %1353, align 4, !tbaa !3
  %1355 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %1351
  %1356 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %1354
  %1357 = bitcast <4 x i8*> %1355 to <4 x i64*>
  %1358 = bitcast <4 x i8*> %1356 to <4 x i64*>
  %1359 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1357, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1360 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1358, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1361 = icmp eq <4 x i32> %1322, %1351
  %1362 = icmp eq <4 x i32> %1324, %1354
  %1363 = select <4 x i1> %1361, <4 x i64> %1359, <4 x i64> zeroinitializer
  %1364 = select <4 x i1> %1362, <4 x i64> %1360, <4 x i64> zeroinitializer
  %1365 = add <4 x i64> %1363, %1346
  %1366 = add <4 x i64> %1364, %1347
  %1367 = or i32 %1326, 17
  %1368 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1367
  %1369 = bitcast i32* %1368 to <4 x i32>*
  %1370 = load <4 x i32>, <4 x i32>* %1369, align 4, !tbaa !3
  %1371 = getelementptr inbounds i32, i32* %1368, i32 4
  %1372 = bitcast i32* %1371 to <4 x i32>*
  %1373 = load <4 x i32>, <4 x i32>* %1372, align 4, !tbaa !3
  %1374 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %1370
  %1375 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %1373
  %1376 = bitcast <4 x i8*> %1374 to <4 x i64*>
  %1377 = bitcast <4 x i8*> %1375 to <4 x i64*>
  %1378 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1376, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1379 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1377, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1380 = icmp eq <4 x i32> %1322, %1370
  %1381 = icmp eq <4 x i32> %1324, %1373
  %1382 = select <4 x i1> %1380, <4 x i64> %1378, <4 x i64> zeroinitializer
  %1383 = select <4 x i1> %1381, <4 x i64> %1379, <4 x i64> zeroinitializer
  %1384 = add <4 x i64> %1382, %1365
  %1385 = add <4 x i64> %1383, %1366
  %1386 = icmp eq i32 %1326, 224
  br i1 %1386, label %1387, label %14438, !llvm.loop !28

1387:                                             ; preds = %1325
  %1388 = add <4 x i64> %1385, %1384
  %1389 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1388)
  %1390 = icmp eq i32 %1320, 1992
  %1391 = select i1 %1390, i64 -9058450267568037125, i64 0
  %1392 = add i64 %1391, %1389
  %1393 = icmp eq i32 %1320, 2000
  %1394 = select i1 %1393, i64 -1610274961606672227, i64 0
  %1395 = add i64 %1394, %1392
  %1396 = icmp eq i32 %1320, 2008
  %1397 = select i1 %1396, i64 -7786513464973963311, i64 0
  %1398 = add i64 %1397, %1395
  %1399 = icmp eq i32 %1320, 2016
  %1400 = select i1 %1399, i64 -2783995359638905055, i64 0
  %1401 = add i64 %1400, %1398
  %1402 = icmp eq i32 %1320, 2024
  %1403 = select i1 %1402, i64 6722895807429069379, i64 0
  %1404 = add i64 %1403, %1401
  %1405 = icmp eq i32 %1320, 2032
  %1406 = select i1 %1405, i64 -2706140860760151325, i64 0
  %1407 = add i64 %1406, %1404
  %1408 = icmp eq i32 %1320, 2040
  %1409 = select i1 %1408, i64 -1381601050739916090, i64 0
  %1410 = add i64 %1409, %1407
  %1411 = trunc i64 %759 to i32
  %1412 = shl i32 %1411, 3
  %1413 = and i32 %1412, 2040
  %1414 = insertelement <4 x i32> poison, i32 %1413, i32 0
  %1415 = shufflevector <4 x i32> %1414, <4 x i32> poison, <4 x i32> zeroinitializer
  %1416 = insertelement <4 x i32> poison, i32 %1413, i32 0
  %1417 = shufflevector <4 x i32> %1416, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1418

1418:                                             ; preds = %14417, %1387
  %1419 = phi i32 [ 0, %1387 ], [ %14437, %14417 ]
  %1420 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1387 ], [ %14435, %14417 ]
  %1421 = phi <4 x i64> [ zeroinitializer, %1387 ], [ %14436, %14417 ]
  %1422 = or i32 %1419, 1
  %1423 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1422
  %1424 = bitcast i32* %1423 to <4 x i32>*
  %1425 = load <4 x i32>, <4 x i32>* %1424, align 4, !tbaa !3
  %1426 = getelementptr inbounds i32, i32* %1423, i32 4
  %1427 = bitcast i32* %1426 to <4 x i32>*
  %1428 = load <4 x i32>, <4 x i32>* %1427, align 4, !tbaa !3
  %1429 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %1425
  %1430 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %1428
  %1431 = bitcast <4 x i8*> %1429 to <4 x i64*>
  %1432 = bitcast <4 x i8*> %1430 to <4 x i64*>
  %1433 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1431, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1434 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1432, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1435 = icmp eq <4 x i32> %1415, %1425
  %1436 = icmp eq <4 x i32> %1417, %1428
  %1437 = select <4 x i1> %1435, <4 x i64> %1433, <4 x i64> zeroinitializer
  %1438 = select <4 x i1> %1436, <4 x i64> %1434, <4 x i64> zeroinitializer
  %1439 = add <4 x i64> %1437, %1420
  %1440 = add <4 x i64> %1438, %1421
  %1441 = or i32 %1419, 9
  %1442 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1441
  %1443 = bitcast i32* %1442 to <4 x i32>*
  %1444 = load <4 x i32>, <4 x i32>* %1443, align 4, !tbaa !3
  %1445 = getelementptr inbounds i32, i32* %1442, i32 4
  %1446 = bitcast i32* %1445 to <4 x i32>*
  %1447 = load <4 x i32>, <4 x i32>* %1446, align 4, !tbaa !3
  %1448 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %1444
  %1449 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %1447
  %1450 = bitcast <4 x i8*> %1448 to <4 x i64*>
  %1451 = bitcast <4 x i8*> %1449 to <4 x i64*>
  %1452 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1450, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1453 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1451, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1454 = icmp eq <4 x i32> %1415, %1444
  %1455 = icmp eq <4 x i32> %1417, %1447
  %1456 = select <4 x i1> %1454, <4 x i64> %1452, <4 x i64> zeroinitializer
  %1457 = select <4 x i1> %1455, <4 x i64> %1453, <4 x i64> zeroinitializer
  %1458 = add <4 x i64> %1456, %1439
  %1459 = add <4 x i64> %1457, %1440
  %1460 = or i32 %1419, 17
  %1461 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1460
  %1462 = bitcast i32* %1461 to <4 x i32>*
  %1463 = load <4 x i32>, <4 x i32>* %1462, align 4, !tbaa !3
  %1464 = getelementptr inbounds i32, i32* %1461, i32 4
  %1465 = bitcast i32* %1464 to <4 x i32>*
  %1466 = load <4 x i32>, <4 x i32>* %1465, align 4, !tbaa !3
  %1467 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %1463
  %1468 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %1466
  %1469 = bitcast <4 x i8*> %1467 to <4 x i64*>
  %1470 = bitcast <4 x i8*> %1468 to <4 x i64*>
  %1471 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1469, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1472 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1470, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1473 = icmp eq <4 x i32> %1415, %1463
  %1474 = icmp eq <4 x i32> %1417, %1466
  %1475 = select <4 x i1> %1473, <4 x i64> %1471, <4 x i64> zeroinitializer
  %1476 = select <4 x i1> %1474, <4 x i64> %1472, <4 x i64> zeroinitializer
  %1477 = add <4 x i64> %1475, %1458
  %1478 = add <4 x i64> %1476, %1459
  %1479 = icmp eq i32 %1419, 224
  br i1 %1479, label %1480, label %14417, !llvm.loop !29

1480:                                             ; preds = %1418
  %1481 = add <4 x i64> %1478, %1477
  %1482 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1481)
  %1483 = icmp eq i32 %1413, 1992
  %1484 = select i1 %1483, i64 5296930162245565346, i64 0
  %1485 = add i64 %1484, %1482
  %1486 = icmp eq i32 %1413, 2000
  %1487 = select i1 %1486, i64 -6347414485825053312, i64 0
  %1488 = add i64 %1487, %1485
  %1489 = icmp eq i32 %1413, 2008
  %1490 = select i1 %1489, i64 -1111471293076483761, i64 0
  %1491 = add i64 %1490, %1488
  %1492 = icmp eq i32 %1413, 2016
  %1493 = select i1 %1492, i64 6762709279494119711, i64 0
  %1494 = add i64 %1493, %1491
  %1495 = icmp eq i32 %1413, 2024
  %1496 = select i1 %1495, i64 5502587883897177034, i64 0
  %1497 = add i64 %1496, %1494
  %1498 = icmp eq i32 %1413, 2032
  %1499 = select i1 %1498, i64 8203933284918551466, i64 0
  %1500 = add i64 %1499, %1497
  %1501 = icmp eq i32 %1413, 2040
  %1502 = select i1 %1501, i64 -3176116833483372990, i64 0
  %1503 = add i64 %1502, %1500
  %1504 = xor i64 %14, %852
  %1505 = xor i64 %1504, %945
  %1506 = xor i64 %1505, %1038
  %1507 = xor i64 %1506, %1131
  %1508 = xor i64 %1507, %1224
  %1509 = xor i64 %1508, %1317
  %1510 = xor i64 %1509, %1410
  %1511 = xor i64 %1510, %1503
  %1512 = xor i64 %1511, 5813177072391199308
  store i64 %1512, i64* @ctx.0.1, align 8, !tbaa !7
  %1513 = lshr i64 %1512, 53
  %1514 = trunc i64 %1513 to i32
  %1515 = and i32 %1514, 2040
  %1516 = insertelement <4 x i32> poison, i32 %1515, i32 0
  %1517 = shufflevector <4 x i32> %1516, <4 x i32> poison, <4 x i32> zeroinitializer
  %1518 = insertelement <4 x i32> poison, i32 %1515, i32 0
  %1519 = shufflevector <4 x i32> %1518, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1520

1520:                                             ; preds = %14396, %1480
  %1521 = phi i32 [ 0, %1480 ], [ %14416, %14396 ]
  %1522 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1480 ], [ %14414, %14396 ]
  %1523 = phi <4 x i64> [ zeroinitializer, %1480 ], [ %14415, %14396 ]
  %1524 = or i32 %1521, 1
  %1525 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1524
  %1526 = bitcast i32* %1525 to <4 x i32>*
  %1527 = load <4 x i32>, <4 x i32>* %1526, align 4, !tbaa !3
  %1528 = getelementptr inbounds i32, i32* %1525, i32 4
  %1529 = bitcast i32* %1528 to <4 x i32>*
  %1530 = load <4 x i32>, <4 x i32>* %1529, align 4, !tbaa !3
  %1531 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %1527
  %1532 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %1530
  %1533 = bitcast <4 x i8*> %1531 to <4 x i64*>
  %1534 = bitcast <4 x i8*> %1532 to <4 x i64*>
  %1535 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1533, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1536 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1534, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1537 = icmp eq <4 x i32> %1517, %1527
  %1538 = icmp eq <4 x i32> %1519, %1530
  %1539 = select <4 x i1> %1537, <4 x i64> %1535, <4 x i64> zeroinitializer
  %1540 = select <4 x i1> %1538, <4 x i64> %1536, <4 x i64> zeroinitializer
  %1541 = add <4 x i64> %1539, %1522
  %1542 = add <4 x i64> %1540, %1523
  %1543 = or i32 %1521, 9
  %1544 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1543
  %1545 = bitcast i32* %1544 to <4 x i32>*
  %1546 = load <4 x i32>, <4 x i32>* %1545, align 4, !tbaa !3
  %1547 = getelementptr inbounds i32, i32* %1544, i32 4
  %1548 = bitcast i32* %1547 to <4 x i32>*
  %1549 = load <4 x i32>, <4 x i32>* %1548, align 4, !tbaa !3
  %1550 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %1546
  %1551 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %1549
  %1552 = bitcast <4 x i8*> %1550 to <4 x i64*>
  %1553 = bitcast <4 x i8*> %1551 to <4 x i64*>
  %1554 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1552, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1555 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1553, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1556 = icmp eq <4 x i32> %1517, %1546
  %1557 = icmp eq <4 x i32> %1519, %1549
  %1558 = select <4 x i1> %1556, <4 x i64> %1554, <4 x i64> zeroinitializer
  %1559 = select <4 x i1> %1557, <4 x i64> %1555, <4 x i64> zeroinitializer
  %1560 = add <4 x i64> %1558, %1541
  %1561 = add <4 x i64> %1559, %1542
  %1562 = or i32 %1521, 17
  %1563 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1562
  %1564 = bitcast i32* %1563 to <4 x i32>*
  %1565 = load <4 x i32>, <4 x i32>* %1564, align 4, !tbaa !3
  %1566 = getelementptr inbounds i32, i32* %1563, i32 4
  %1567 = bitcast i32* %1566 to <4 x i32>*
  %1568 = load <4 x i32>, <4 x i32>* %1567, align 4, !tbaa !3
  %1569 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %1565
  %1570 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %1568
  %1571 = bitcast <4 x i8*> %1569 to <4 x i64*>
  %1572 = bitcast <4 x i8*> %1570 to <4 x i64*>
  %1573 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1571, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1574 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1572, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1575 = icmp eq <4 x i32> %1517, %1565
  %1576 = icmp eq <4 x i32> %1519, %1568
  %1577 = select <4 x i1> %1575, <4 x i64> %1573, <4 x i64> zeroinitializer
  %1578 = select <4 x i1> %1576, <4 x i64> %1574, <4 x i64> zeroinitializer
  %1579 = add <4 x i64> %1577, %1560
  %1580 = add <4 x i64> %1578, %1561
  %1581 = icmp eq i32 %1521, 224
  br i1 %1581, label %1582, label %14396, !llvm.loop !30

1582:                                             ; preds = %1520
  %1583 = add <4 x i64> %1580, %1579
  %1584 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1583)
  %1585 = icmp eq i32 %1515, 1992
  %1586 = select i1 %1585, i64 -6702567834671021495, i64 0
  %1587 = add i64 %1586, %1584
  %1588 = icmp eq i32 %1515, 2000
  %1589 = select i1 %1588, i64 -9179115894310901337, i64 0
  %1590 = add i64 %1589, %1587
  %1591 = icmp eq i32 %1515, 2008
  %1592 = select i1 %1591, i64 5751414958667764720, i64 0
  %1593 = add i64 %1592, %1590
  %1594 = icmp eq i32 %1515, 2016
  %1595 = select i1 %1594, i64 2243210855174429021, i64 0
  %1596 = add i64 %1595, %1593
  %1597 = icmp eq i32 %1515, 2024
  %1598 = select i1 %1597, i64 -3872233913575383732, i64 0
  %1599 = add i64 %1598, %1596
  %1600 = icmp eq i32 %1515, 2032
  %1601 = select i1 %1600, i64 -6132897494654657935, i64 0
  %1602 = add i64 %1601, %1599
  %1603 = icmp eq i32 %1515, 2040
  %1604 = select i1 %1603, i64 4811556717733801171, i64 0
  %1605 = add i64 %1604, %1602
  %1606 = lshr i64 %1512, 45
  %1607 = trunc i64 %1606 to i32
  %1608 = and i32 %1607, 2040
  %1609 = insertelement <4 x i32> poison, i32 %1608, i32 0
  %1610 = shufflevector <4 x i32> %1609, <4 x i32> poison, <4 x i32> zeroinitializer
  %1611 = insertelement <4 x i32> poison, i32 %1608, i32 0
  %1612 = shufflevector <4 x i32> %1611, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1613

1613:                                             ; preds = %14375, %1582
  %1614 = phi i32 [ 0, %1582 ], [ %14395, %14375 ]
  %1615 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1582 ], [ %14393, %14375 ]
  %1616 = phi <4 x i64> [ zeroinitializer, %1582 ], [ %14394, %14375 ]
  %1617 = or i32 %1614, 1
  %1618 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1617
  %1619 = bitcast i32* %1618 to <4 x i32>*
  %1620 = load <4 x i32>, <4 x i32>* %1619, align 4, !tbaa !3
  %1621 = getelementptr inbounds i32, i32* %1618, i32 4
  %1622 = bitcast i32* %1621 to <4 x i32>*
  %1623 = load <4 x i32>, <4 x i32>* %1622, align 4, !tbaa !3
  %1624 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %1620
  %1625 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %1623
  %1626 = bitcast <4 x i8*> %1624 to <4 x i64*>
  %1627 = bitcast <4 x i8*> %1625 to <4 x i64*>
  %1628 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1626, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1629 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1627, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1630 = icmp eq <4 x i32> %1610, %1620
  %1631 = icmp eq <4 x i32> %1612, %1623
  %1632 = select <4 x i1> %1630, <4 x i64> %1628, <4 x i64> zeroinitializer
  %1633 = select <4 x i1> %1631, <4 x i64> %1629, <4 x i64> zeroinitializer
  %1634 = add <4 x i64> %1632, %1615
  %1635 = add <4 x i64> %1633, %1616
  %1636 = or i32 %1614, 9
  %1637 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1636
  %1638 = bitcast i32* %1637 to <4 x i32>*
  %1639 = load <4 x i32>, <4 x i32>* %1638, align 4, !tbaa !3
  %1640 = getelementptr inbounds i32, i32* %1637, i32 4
  %1641 = bitcast i32* %1640 to <4 x i32>*
  %1642 = load <4 x i32>, <4 x i32>* %1641, align 4, !tbaa !3
  %1643 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %1639
  %1644 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %1642
  %1645 = bitcast <4 x i8*> %1643 to <4 x i64*>
  %1646 = bitcast <4 x i8*> %1644 to <4 x i64*>
  %1647 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1645, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1648 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1646, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1649 = icmp eq <4 x i32> %1610, %1639
  %1650 = icmp eq <4 x i32> %1612, %1642
  %1651 = select <4 x i1> %1649, <4 x i64> %1647, <4 x i64> zeroinitializer
  %1652 = select <4 x i1> %1650, <4 x i64> %1648, <4 x i64> zeroinitializer
  %1653 = add <4 x i64> %1651, %1634
  %1654 = add <4 x i64> %1652, %1635
  %1655 = or i32 %1614, 17
  %1656 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1655
  %1657 = bitcast i32* %1656 to <4 x i32>*
  %1658 = load <4 x i32>, <4 x i32>* %1657, align 4, !tbaa !3
  %1659 = getelementptr inbounds i32, i32* %1656, i32 4
  %1660 = bitcast i32* %1659 to <4 x i32>*
  %1661 = load <4 x i32>, <4 x i32>* %1660, align 4, !tbaa !3
  %1662 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %1658
  %1663 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %1661
  %1664 = bitcast <4 x i8*> %1662 to <4 x i64*>
  %1665 = bitcast <4 x i8*> %1663 to <4 x i64*>
  %1666 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1664, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1667 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1665, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1668 = icmp eq <4 x i32> %1610, %1658
  %1669 = icmp eq <4 x i32> %1612, %1661
  %1670 = select <4 x i1> %1668, <4 x i64> %1666, <4 x i64> zeroinitializer
  %1671 = select <4 x i1> %1669, <4 x i64> %1667, <4 x i64> zeroinitializer
  %1672 = add <4 x i64> %1670, %1653
  %1673 = add <4 x i64> %1671, %1654
  %1674 = icmp eq i32 %1614, 224
  br i1 %1674, label %1675, label %14375, !llvm.loop !31

1675:                                             ; preds = %1613
  %1676 = add <4 x i64> %1673, %1672
  %1677 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1676)
  %1678 = icmp eq i32 %1608, 1992
  %1679 = select i1 %1678, i64 -314670665226827390, i64 0
  %1680 = add i64 %1679, %1677
  %1681 = icmp eq i32 %1608, 2000
  %1682 = select i1 %1681, i64 -7097468252516276247, i64 0
  %1683 = add i64 %1682, %1680
  %1684 = icmp eq i32 %1608, 2008
  %1685 = select i1 %1684, i64 -3364349307489619821, i64 0
  %1686 = add i64 %1685, %1683
  %1687 = icmp eq i32 %1608, 2016
  %1688 = select i1 %1687, i64 2386735715921845721, i64 0
  %1689 = add i64 %1688, %1686
  %1690 = icmp eq i32 %1608, 2024
  %1691 = select i1 %1690, i64 4884933414564023389, i64 0
  %1692 = add i64 %1691, %1689
  %1693 = icmp eq i32 %1608, 2032
  %1694 = select i1 %1693, i64 -2041757280372035110, i64 0
  %1695 = add i64 %1694, %1692
  %1696 = icmp eq i32 %1608, 2040
  %1697 = select i1 %1696, i64 -4160667357316787220, i64 0
  %1698 = add i64 %1697, %1695
  %1699 = lshr i64 %1512, 37
  %1700 = trunc i64 %1699 to i32
  %1701 = and i32 %1700, 2040
  %1702 = insertelement <4 x i32> poison, i32 %1701, i32 0
  %1703 = shufflevector <4 x i32> %1702, <4 x i32> poison, <4 x i32> zeroinitializer
  %1704 = insertelement <4 x i32> poison, i32 %1701, i32 0
  %1705 = shufflevector <4 x i32> %1704, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1706

1706:                                             ; preds = %14354, %1675
  %1707 = phi i32 [ 0, %1675 ], [ %14374, %14354 ]
  %1708 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1675 ], [ %14372, %14354 ]
  %1709 = phi <4 x i64> [ zeroinitializer, %1675 ], [ %14373, %14354 ]
  %1710 = or i32 %1707, 1
  %1711 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1710
  %1712 = bitcast i32* %1711 to <4 x i32>*
  %1713 = load <4 x i32>, <4 x i32>* %1712, align 4, !tbaa !3
  %1714 = getelementptr inbounds i32, i32* %1711, i32 4
  %1715 = bitcast i32* %1714 to <4 x i32>*
  %1716 = load <4 x i32>, <4 x i32>* %1715, align 4, !tbaa !3
  %1717 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %1713
  %1718 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %1716
  %1719 = bitcast <4 x i8*> %1717 to <4 x i64*>
  %1720 = bitcast <4 x i8*> %1718 to <4 x i64*>
  %1721 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1719, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1722 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1720, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1723 = icmp eq <4 x i32> %1703, %1713
  %1724 = icmp eq <4 x i32> %1705, %1716
  %1725 = select <4 x i1> %1723, <4 x i64> %1721, <4 x i64> zeroinitializer
  %1726 = select <4 x i1> %1724, <4 x i64> %1722, <4 x i64> zeroinitializer
  %1727 = add <4 x i64> %1725, %1708
  %1728 = add <4 x i64> %1726, %1709
  %1729 = or i32 %1707, 9
  %1730 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1729
  %1731 = bitcast i32* %1730 to <4 x i32>*
  %1732 = load <4 x i32>, <4 x i32>* %1731, align 4, !tbaa !3
  %1733 = getelementptr inbounds i32, i32* %1730, i32 4
  %1734 = bitcast i32* %1733 to <4 x i32>*
  %1735 = load <4 x i32>, <4 x i32>* %1734, align 4, !tbaa !3
  %1736 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %1732
  %1737 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %1735
  %1738 = bitcast <4 x i8*> %1736 to <4 x i64*>
  %1739 = bitcast <4 x i8*> %1737 to <4 x i64*>
  %1740 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1738, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1741 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1739, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1742 = icmp eq <4 x i32> %1703, %1732
  %1743 = icmp eq <4 x i32> %1705, %1735
  %1744 = select <4 x i1> %1742, <4 x i64> %1740, <4 x i64> zeroinitializer
  %1745 = select <4 x i1> %1743, <4 x i64> %1741, <4 x i64> zeroinitializer
  %1746 = add <4 x i64> %1744, %1727
  %1747 = add <4 x i64> %1745, %1728
  %1748 = or i32 %1707, 17
  %1749 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1748
  %1750 = bitcast i32* %1749 to <4 x i32>*
  %1751 = load <4 x i32>, <4 x i32>* %1750, align 4, !tbaa !3
  %1752 = getelementptr inbounds i32, i32* %1749, i32 4
  %1753 = bitcast i32* %1752 to <4 x i32>*
  %1754 = load <4 x i32>, <4 x i32>* %1753, align 4, !tbaa !3
  %1755 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %1751
  %1756 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %1754
  %1757 = bitcast <4 x i8*> %1755 to <4 x i64*>
  %1758 = bitcast <4 x i8*> %1756 to <4 x i64*>
  %1759 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1757, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1760 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1758, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1761 = icmp eq <4 x i32> %1703, %1751
  %1762 = icmp eq <4 x i32> %1705, %1754
  %1763 = select <4 x i1> %1761, <4 x i64> %1759, <4 x i64> zeroinitializer
  %1764 = select <4 x i1> %1762, <4 x i64> %1760, <4 x i64> zeroinitializer
  %1765 = add <4 x i64> %1763, %1746
  %1766 = add <4 x i64> %1764, %1747
  %1767 = icmp eq i32 %1707, 224
  br i1 %1767, label %1768, label %14354, !llvm.loop !32

1768:                                             ; preds = %1706
  %1769 = add <4 x i64> %1766, %1765
  %1770 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1769)
  %1771 = icmp eq i32 %1701, 1992
  %1772 = select i1 %1771, i64 -5615809534224635015, i64 0
  %1773 = add i64 %1772, %1770
  %1774 = icmp eq i32 %1701, 2000
  %1775 = select i1 %1774, i64 4231836215586269044, i64 0
  %1776 = add i64 %1775, %1773
  %1777 = icmp eq i32 %1701, 2008
  %1778 = select i1 %1777, i64 2408950612238581570, i64 0
  %1779 = add i64 %1778, %1776
  %1780 = icmp eq i32 %1701, 2016
  %1781 = select i1 %1780, i64 8963041913638568696, i64 0
  %1782 = add i64 %1781, %1779
  %1783 = icmp eq i32 %1701, 2024
  %1784 = select i1 %1783, i64 1136536871657834014, i64 0
  %1785 = add i64 %1784, %1782
  %1786 = icmp eq i32 %1701, 2032
  %1787 = select i1 %1786, i64 -7910384849877083335, i64 0
  %1788 = add i64 %1787, %1785
  %1789 = icmp eq i32 %1701, 2040
  %1790 = select i1 %1789, i64 1537771219914559786, i64 0
  %1791 = add i64 %1790, %1788
  %1792 = lshr i64 %1512, 29
  %1793 = trunc i64 %1792 to i32
  %1794 = and i32 %1793, 2040
  %1795 = insertelement <4 x i32> poison, i32 %1794, i32 0
  %1796 = shufflevector <4 x i32> %1795, <4 x i32> poison, <4 x i32> zeroinitializer
  %1797 = insertelement <4 x i32> poison, i32 %1794, i32 0
  %1798 = shufflevector <4 x i32> %1797, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1799

1799:                                             ; preds = %14333, %1768
  %1800 = phi i32 [ 0, %1768 ], [ %14353, %14333 ]
  %1801 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1768 ], [ %14351, %14333 ]
  %1802 = phi <4 x i64> [ zeroinitializer, %1768 ], [ %14352, %14333 ]
  %1803 = or i32 %1800, 1
  %1804 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1803
  %1805 = bitcast i32* %1804 to <4 x i32>*
  %1806 = load <4 x i32>, <4 x i32>* %1805, align 4, !tbaa !3
  %1807 = getelementptr inbounds i32, i32* %1804, i32 4
  %1808 = bitcast i32* %1807 to <4 x i32>*
  %1809 = load <4 x i32>, <4 x i32>* %1808, align 4, !tbaa !3
  %1810 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1806
  %1811 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1809
  %1812 = bitcast <4 x i8*> %1810 to <4 x i64*>
  %1813 = bitcast <4 x i8*> %1811 to <4 x i64*>
  %1814 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1812, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1815 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1813, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1816 = icmp eq <4 x i32> %1796, %1806
  %1817 = icmp eq <4 x i32> %1798, %1809
  %1818 = select <4 x i1> %1816, <4 x i64> %1814, <4 x i64> zeroinitializer
  %1819 = select <4 x i1> %1817, <4 x i64> %1815, <4 x i64> zeroinitializer
  %1820 = add <4 x i64> %1818, %1801
  %1821 = add <4 x i64> %1819, %1802
  %1822 = or i32 %1800, 9
  %1823 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1822
  %1824 = bitcast i32* %1823 to <4 x i32>*
  %1825 = load <4 x i32>, <4 x i32>* %1824, align 4, !tbaa !3
  %1826 = getelementptr inbounds i32, i32* %1823, i32 4
  %1827 = bitcast i32* %1826 to <4 x i32>*
  %1828 = load <4 x i32>, <4 x i32>* %1827, align 4, !tbaa !3
  %1829 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1825
  %1830 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1828
  %1831 = bitcast <4 x i8*> %1829 to <4 x i64*>
  %1832 = bitcast <4 x i8*> %1830 to <4 x i64*>
  %1833 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1831, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1834 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1832, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1835 = icmp eq <4 x i32> %1796, %1825
  %1836 = icmp eq <4 x i32> %1798, %1828
  %1837 = select <4 x i1> %1835, <4 x i64> %1833, <4 x i64> zeroinitializer
  %1838 = select <4 x i1> %1836, <4 x i64> %1834, <4 x i64> zeroinitializer
  %1839 = add <4 x i64> %1837, %1820
  %1840 = add <4 x i64> %1838, %1821
  %1841 = or i32 %1800, 17
  %1842 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1841
  %1843 = bitcast i32* %1842 to <4 x i32>*
  %1844 = load <4 x i32>, <4 x i32>* %1843, align 4, !tbaa !3
  %1845 = getelementptr inbounds i32, i32* %1842, i32 4
  %1846 = bitcast i32* %1845 to <4 x i32>*
  %1847 = load <4 x i32>, <4 x i32>* %1846, align 4, !tbaa !3
  %1848 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1844
  %1849 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %1847
  %1850 = bitcast <4 x i8*> %1848 to <4 x i64*>
  %1851 = bitcast <4 x i8*> %1849 to <4 x i64*>
  %1852 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1850, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1853 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1851, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1854 = icmp eq <4 x i32> %1796, %1844
  %1855 = icmp eq <4 x i32> %1798, %1847
  %1856 = select <4 x i1> %1854, <4 x i64> %1852, <4 x i64> zeroinitializer
  %1857 = select <4 x i1> %1855, <4 x i64> %1853, <4 x i64> zeroinitializer
  %1858 = add <4 x i64> %1856, %1839
  %1859 = add <4 x i64> %1857, %1840
  %1860 = icmp eq i32 %1800, 224
  br i1 %1860, label %1861, label %14333, !llvm.loop !33

1861:                                             ; preds = %1799
  %1862 = add <4 x i64> %1859, %1858
  %1863 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1862)
  %1864 = icmp eq i32 %1794, 1992
  %1865 = select i1 %1864, i64 1203300724897905131, i64 0
  %1866 = add i64 %1865, %1863
  %1867 = icmp eq i32 %1794, 2000
  %1868 = select i1 %1867, i64 -5027532858107268057, i64 0
  %1869 = add i64 %1868, %1866
  %1870 = icmp eq i32 %1794, 2008
  %1871 = select i1 %1870, i64 7935854159672328895, i64 0
  %1872 = add i64 %1871, %1869
  %1873 = icmp eq i32 %1794, 2016
  %1874 = select i1 %1873, i64 7168641125469255746, i64 0
  %1875 = add i64 %1874, %1872
  %1876 = icmp eq i32 %1794, 2024
  %1877 = select i1 %1876, i64 -4247101387443462522, i64 0
  %1878 = add i64 %1877, %1875
  %1879 = icmp eq i32 %1794, 2032
  %1880 = select i1 %1879, i64 4076570933917792731, i64 0
  %1881 = add i64 %1880, %1878
  %1882 = icmp eq i32 %1794, 2040
  %1883 = select i1 %1882, i64 6275139646136265361, i64 0
  %1884 = add i64 %1883, %1881
  %1885 = lshr i64 %1512, 21
  %1886 = trunc i64 %1885 to i32
  %1887 = and i32 %1886, 2040
  %1888 = insertelement <4 x i32> poison, i32 %1887, i32 0
  %1889 = shufflevector <4 x i32> %1888, <4 x i32> poison, <4 x i32> zeroinitializer
  %1890 = insertelement <4 x i32> poison, i32 %1887, i32 0
  %1891 = shufflevector <4 x i32> %1890, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1892

1892:                                             ; preds = %14312, %1861
  %1893 = phi i32 [ 0, %1861 ], [ %14332, %14312 ]
  %1894 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1861 ], [ %14330, %14312 ]
  %1895 = phi <4 x i64> [ zeroinitializer, %1861 ], [ %14331, %14312 ]
  %1896 = or i32 %1893, 1
  %1897 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1896
  %1898 = bitcast i32* %1897 to <4 x i32>*
  %1899 = load <4 x i32>, <4 x i32>* %1898, align 4, !tbaa !3
  %1900 = getelementptr inbounds i32, i32* %1897, i32 4
  %1901 = bitcast i32* %1900 to <4 x i32>*
  %1902 = load <4 x i32>, <4 x i32>* %1901, align 4, !tbaa !3
  %1903 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1899
  %1904 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1902
  %1905 = bitcast <4 x i8*> %1903 to <4 x i64*>
  %1906 = bitcast <4 x i8*> %1904 to <4 x i64*>
  %1907 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1905, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1908 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1906, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1909 = icmp eq <4 x i32> %1889, %1899
  %1910 = icmp eq <4 x i32> %1891, %1902
  %1911 = select <4 x i1> %1909, <4 x i64> %1907, <4 x i64> zeroinitializer
  %1912 = select <4 x i1> %1910, <4 x i64> %1908, <4 x i64> zeroinitializer
  %1913 = add <4 x i64> %1911, %1894
  %1914 = add <4 x i64> %1912, %1895
  %1915 = or i32 %1893, 9
  %1916 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1915
  %1917 = bitcast i32* %1916 to <4 x i32>*
  %1918 = load <4 x i32>, <4 x i32>* %1917, align 4, !tbaa !3
  %1919 = getelementptr inbounds i32, i32* %1916, i32 4
  %1920 = bitcast i32* %1919 to <4 x i32>*
  %1921 = load <4 x i32>, <4 x i32>* %1920, align 4, !tbaa !3
  %1922 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1918
  %1923 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1921
  %1924 = bitcast <4 x i8*> %1922 to <4 x i64*>
  %1925 = bitcast <4 x i8*> %1923 to <4 x i64*>
  %1926 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1924, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1927 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1925, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1928 = icmp eq <4 x i32> %1889, %1918
  %1929 = icmp eq <4 x i32> %1891, %1921
  %1930 = select <4 x i1> %1928, <4 x i64> %1926, <4 x i64> zeroinitializer
  %1931 = select <4 x i1> %1929, <4 x i64> %1927, <4 x i64> zeroinitializer
  %1932 = add <4 x i64> %1930, %1913
  %1933 = add <4 x i64> %1931, %1914
  %1934 = or i32 %1893, 17
  %1935 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1934
  %1936 = bitcast i32* %1935 to <4 x i32>*
  %1937 = load <4 x i32>, <4 x i32>* %1936, align 4, !tbaa !3
  %1938 = getelementptr inbounds i32, i32* %1935, i32 4
  %1939 = bitcast i32* %1938 to <4 x i32>*
  %1940 = load <4 x i32>, <4 x i32>* %1939, align 4, !tbaa !3
  %1941 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1937
  %1942 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %1940
  %1943 = bitcast <4 x i8*> %1941 to <4 x i64*>
  %1944 = bitcast <4 x i8*> %1942 to <4 x i64*>
  %1945 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1943, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1946 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1944, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %1947 = icmp eq <4 x i32> %1889, %1937
  %1948 = icmp eq <4 x i32> %1891, %1940
  %1949 = select <4 x i1> %1947, <4 x i64> %1945, <4 x i64> zeroinitializer
  %1950 = select <4 x i1> %1948, <4 x i64> %1946, <4 x i64> zeroinitializer
  %1951 = add <4 x i64> %1949, %1932
  %1952 = add <4 x i64> %1950, %1933
  %1953 = icmp eq i32 %1893, 224
  br i1 %1953, label %1954, label %14312, !llvm.loop !34

1954:                                             ; preds = %1892
  %1955 = add <4 x i64> %1952, %1951
  %1956 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %1955)
  %1957 = icmp eq i32 %1887, 1992
  %1958 = select i1 %1957, i64 -1479007749835869680, i64 0
  %1959 = add i64 %1958, %1956
  %1960 = icmp eq i32 %1887, 2000
  %1961 = select i1 %1960, i64 2843154170404223674, i64 0
  %1962 = add i64 %1961, %1959
  %1963 = icmp eq i32 %1887, 2008
  %1964 = select i1 %1963, i64 -4665003603661872786, i64 0
  %1965 = add i64 %1964, %1962
  %1966 = icmp eq i32 %1887, 2016
  %1967 = select i1 %1966, i64 4825845994704960611, i64 0
  %1968 = add i64 %1967, %1965
  %1969 = icmp eq i32 %1887, 2024
  %1970 = select i1 %1969, i64 -8782479638933598267, i64 0
  %1971 = add i64 %1970, %1968
  %1972 = icmp eq i32 %1887, 2032
  %1973 = select i1 %1972, i64 -2649846723997625800, i64 0
  %1974 = add i64 %1973, %1971
  %1975 = icmp eq i32 %1887, 2040
  %1976 = select i1 %1975, i64 -7986310597085620905, i64 0
  %1977 = add i64 %1976, %1974
  %1978 = lshr i64 %1512, 13
  %1979 = trunc i64 %1978 to i32
  %1980 = and i32 %1979, 2040
  %1981 = insertelement <4 x i32> poison, i32 %1980, i32 0
  %1982 = shufflevector <4 x i32> %1981, <4 x i32> poison, <4 x i32> zeroinitializer
  %1983 = insertelement <4 x i32> poison, i32 %1980, i32 0
  %1984 = shufflevector <4 x i32> %1983, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1985

1985:                                             ; preds = %14291, %1954
  %1986 = phi i32 [ 0, %1954 ], [ %14311, %14291 ]
  %1987 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %1954 ], [ %14309, %14291 ]
  %1988 = phi <4 x i64> [ zeroinitializer, %1954 ], [ %14310, %14291 ]
  %1989 = or i32 %1986, 1
  %1990 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %1989
  %1991 = bitcast i32* %1990 to <4 x i32>*
  %1992 = load <4 x i32>, <4 x i32>* %1991, align 4, !tbaa !3
  %1993 = getelementptr inbounds i32, i32* %1990, i32 4
  %1994 = bitcast i32* %1993 to <4 x i32>*
  %1995 = load <4 x i32>, <4 x i32>* %1994, align 4, !tbaa !3
  %1996 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %1992
  %1997 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %1995
  %1998 = bitcast <4 x i8*> %1996 to <4 x i64*>
  %1999 = bitcast <4 x i8*> %1997 to <4 x i64*>
  %2000 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1998, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2001 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %1999, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2002 = icmp eq <4 x i32> %1982, %1992
  %2003 = icmp eq <4 x i32> %1984, %1995
  %2004 = select <4 x i1> %2002, <4 x i64> %2000, <4 x i64> zeroinitializer
  %2005 = select <4 x i1> %2003, <4 x i64> %2001, <4 x i64> zeroinitializer
  %2006 = add <4 x i64> %2004, %1987
  %2007 = add <4 x i64> %2005, %1988
  %2008 = or i32 %1986, 9
  %2009 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2008
  %2010 = bitcast i32* %2009 to <4 x i32>*
  %2011 = load <4 x i32>, <4 x i32>* %2010, align 4, !tbaa !3
  %2012 = getelementptr inbounds i32, i32* %2009, i32 4
  %2013 = bitcast i32* %2012 to <4 x i32>*
  %2014 = load <4 x i32>, <4 x i32>* %2013, align 4, !tbaa !3
  %2015 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2011
  %2016 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2014
  %2017 = bitcast <4 x i8*> %2015 to <4 x i64*>
  %2018 = bitcast <4 x i8*> %2016 to <4 x i64*>
  %2019 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2017, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2020 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2018, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2021 = icmp eq <4 x i32> %1982, %2011
  %2022 = icmp eq <4 x i32> %1984, %2014
  %2023 = select <4 x i1> %2021, <4 x i64> %2019, <4 x i64> zeroinitializer
  %2024 = select <4 x i1> %2022, <4 x i64> %2020, <4 x i64> zeroinitializer
  %2025 = add <4 x i64> %2023, %2006
  %2026 = add <4 x i64> %2024, %2007
  %2027 = or i32 %1986, 17
  %2028 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2027
  %2029 = bitcast i32* %2028 to <4 x i32>*
  %2030 = load <4 x i32>, <4 x i32>* %2029, align 4, !tbaa !3
  %2031 = getelementptr inbounds i32, i32* %2028, i32 4
  %2032 = bitcast i32* %2031 to <4 x i32>*
  %2033 = load <4 x i32>, <4 x i32>* %2032, align 4, !tbaa !3
  %2034 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2030
  %2035 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2033
  %2036 = bitcast <4 x i8*> %2034 to <4 x i64*>
  %2037 = bitcast <4 x i8*> %2035 to <4 x i64*>
  %2038 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2036, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2039 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2037, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2040 = icmp eq <4 x i32> %1982, %2030
  %2041 = icmp eq <4 x i32> %1984, %2033
  %2042 = select <4 x i1> %2040, <4 x i64> %2038, <4 x i64> zeroinitializer
  %2043 = select <4 x i1> %2041, <4 x i64> %2039, <4 x i64> zeroinitializer
  %2044 = add <4 x i64> %2042, %2025
  %2045 = add <4 x i64> %2043, %2026
  %2046 = icmp eq i32 %1986, 224
  br i1 %2046, label %2047, label %14291, !llvm.loop !35

2047:                                             ; preds = %1985
  %2048 = add <4 x i64> %2045, %2044
  %2049 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2048)
  %2050 = icmp eq i32 %1980, 1992
  %2051 = select i1 %2050, i64 8785196325032562866, i64 0
  %2052 = add i64 %2051, %2049
  %2053 = icmp eq i32 %1980, 2000
  %2054 = select i1 %2053, i64 8369843054303033914, i64 0
  %2055 = add i64 %2054, %2052
  %2056 = icmp eq i32 %1980, 2008
  %2057 = select i1 %2056, i64 4809827444717481505, i64 0
  %2058 = add i64 %2057, %2055
  %2059 = icmp eq i32 %1980, 2016
  %2060 = select i1 %2059, i64 -557780216695528580, i64 0
  %2061 = add i64 %2060, %2058
  %2062 = icmp eq i32 %1980, 2024
  %2063 = select i1 %2062, i64 2199529431470097679, i64 0
  %2064 = add i64 %2063, %2061
  %2065 = icmp eq i32 %1980, 2032
  %2066 = select i1 %2065, i64 4169051064997918866, i64 0
  %2067 = add i64 %2066, %2064
  %2068 = icmp eq i32 %1980, 2040
  %2069 = select i1 %2068, i64 3067465835107997461, i64 0
  %2070 = add i64 %2069, %2067
  %2071 = lshr i64 %1512, 5
  %2072 = trunc i64 %2071 to i32
  %2073 = and i32 %2072, 2040
  %2074 = insertelement <4 x i32> poison, i32 %2073, i32 0
  %2075 = shufflevector <4 x i32> %2074, <4 x i32> poison, <4 x i32> zeroinitializer
  %2076 = insertelement <4 x i32> poison, i32 %2073, i32 0
  %2077 = shufflevector <4 x i32> %2076, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2078

2078:                                             ; preds = %14270, %2047
  %2079 = phi i32 [ 0, %2047 ], [ %14290, %14270 ]
  %2080 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2047 ], [ %14288, %14270 ]
  %2081 = phi <4 x i64> [ zeroinitializer, %2047 ], [ %14289, %14270 ]
  %2082 = or i32 %2079, 1
  %2083 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2082
  %2084 = bitcast i32* %2083 to <4 x i32>*
  %2085 = load <4 x i32>, <4 x i32>* %2084, align 4, !tbaa !3
  %2086 = getelementptr inbounds i32, i32* %2083, i32 4
  %2087 = bitcast i32* %2086 to <4 x i32>*
  %2088 = load <4 x i32>, <4 x i32>* %2087, align 4, !tbaa !3
  %2089 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2085
  %2090 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2088
  %2091 = bitcast <4 x i8*> %2089 to <4 x i64*>
  %2092 = bitcast <4 x i8*> %2090 to <4 x i64*>
  %2093 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2091, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2094 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2092, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2095 = icmp eq <4 x i32> %2075, %2085
  %2096 = icmp eq <4 x i32> %2077, %2088
  %2097 = select <4 x i1> %2095, <4 x i64> %2093, <4 x i64> zeroinitializer
  %2098 = select <4 x i1> %2096, <4 x i64> %2094, <4 x i64> zeroinitializer
  %2099 = add <4 x i64> %2097, %2080
  %2100 = add <4 x i64> %2098, %2081
  %2101 = or i32 %2079, 9
  %2102 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2101
  %2103 = bitcast i32* %2102 to <4 x i32>*
  %2104 = load <4 x i32>, <4 x i32>* %2103, align 4, !tbaa !3
  %2105 = getelementptr inbounds i32, i32* %2102, i32 4
  %2106 = bitcast i32* %2105 to <4 x i32>*
  %2107 = load <4 x i32>, <4 x i32>* %2106, align 4, !tbaa !3
  %2108 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2104
  %2109 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2107
  %2110 = bitcast <4 x i8*> %2108 to <4 x i64*>
  %2111 = bitcast <4 x i8*> %2109 to <4 x i64*>
  %2112 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2110, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2113 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2111, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2114 = icmp eq <4 x i32> %2075, %2104
  %2115 = icmp eq <4 x i32> %2077, %2107
  %2116 = select <4 x i1> %2114, <4 x i64> %2112, <4 x i64> zeroinitializer
  %2117 = select <4 x i1> %2115, <4 x i64> %2113, <4 x i64> zeroinitializer
  %2118 = add <4 x i64> %2116, %2099
  %2119 = add <4 x i64> %2117, %2100
  %2120 = or i32 %2079, 17
  %2121 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2120
  %2122 = bitcast i32* %2121 to <4 x i32>*
  %2123 = load <4 x i32>, <4 x i32>* %2122, align 4, !tbaa !3
  %2124 = getelementptr inbounds i32, i32* %2121, i32 4
  %2125 = bitcast i32* %2124 to <4 x i32>*
  %2126 = load <4 x i32>, <4 x i32>* %2125, align 4, !tbaa !3
  %2127 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2123
  %2128 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2126
  %2129 = bitcast <4 x i8*> %2127 to <4 x i64*>
  %2130 = bitcast <4 x i8*> %2128 to <4 x i64*>
  %2131 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2129, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2132 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2130, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2133 = icmp eq <4 x i32> %2075, %2123
  %2134 = icmp eq <4 x i32> %2077, %2126
  %2135 = select <4 x i1> %2133, <4 x i64> %2131, <4 x i64> zeroinitializer
  %2136 = select <4 x i1> %2134, <4 x i64> %2132, <4 x i64> zeroinitializer
  %2137 = add <4 x i64> %2135, %2118
  %2138 = add <4 x i64> %2136, %2119
  %2139 = icmp eq i32 %2079, 224
  br i1 %2139, label %2140, label %14270, !llvm.loop !36

2140:                                             ; preds = %2078
  %2141 = add <4 x i64> %2138, %2137
  %2142 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2141)
  %2143 = icmp eq i32 %2073, 1992
  %2144 = select i1 %2143, i64 -9058450267568037125, i64 0
  %2145 = add i64 %2144, %2142
  %2146 = icmp eq i32 %2073, 2000
  %2147 = select i1 %2146, i64 -1610274961606672227, i64 0
  %2148 = add i64 %2147, %2145
  %2149 = icmp eq i32 %2073, 2008
  %2150 = select i1 %2149, i64 -7786513464973963311, i64 0
  %2151 = add i64 %2150, %2148
  %2152 = icmp eq i32 %2073, 2016
  %2153 = select i1 %2152, i64 -2783995359638905055, i64 0
  %2154 = add i64 %2153, %2151
  %2155 = icmp eq i32 %2073, 2024
  %2156 = select i1 %2155, i64 6722895807429069379, i64 0
  %2157 = add i64 %2156, %2154
  %2158 = icmp eq i32 %2073, 2032
  %2159 = select i1 %2158, i64 -2706140860760151325, i64 0
  %2160 = add i64 %2159, %2157
  %2161 = icmp eq i32 %2073, 2040
  %2162 = select i1 %2161, i64 -1381601050739916090, i64 0
  %2163 = add i64 %2162, %2160
  %2164 = trunc i64 %1512 to i32
  %2165 = shl i32 %2164, 3
  %2166 = and i32 %2165, 2040
  %2167 = insertelement <4 x i32> poison, i32 %2166, i32 0
  %2168 = shufflevector <4 x i32> %2167, <4 x i32> poison, <4 x i32> zeroinitializer
  %2169 = insertelement <4 x i32> poison, i32 %2166, i32 0
  %2170 = shufflevector <4 x i32> %2169, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2171

2171:                                             ; preds = %14249, %2140
  %2172 = phi i32 [ 0, %2140 ], [ %14269, %14249 ]
  %2173 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2140 ], [ %14267, %14249 ]
  %2174 = phi <4 x i64> [ zeroinitializer, %2140 ], [ %14268, %14249 ]
  %2175 = or i32 %2172, 1
  %2176 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2175
  %2177 = bitcast i32* %2176 to <4 x i32>*
  %2178 = load <4 x i32>, <4 x i32>* %2177, align 4, !tbaa !3
  %2179 = getelementptr inbounds i32, i32* %2176, i32 4
  %2180 = bitcast i32* %2179 to <4 x i32>*
  %2181 = load <4 x i32>, <4 x i32>* %2180, align 4, !tbaa !3
  %2182 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2178
  %2183 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2181
  %2184 = bitcast <4 x i8*> %2182 to <4 x i64*>
  %2185 = bitcast <4 x i8*> %2183 to <4 x i64*>
  %2186 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2184, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2187 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2185, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2188 = icmp eq <4 x i32> %2168, %2178
  %2189 = icmp eq <4 x i32> %2170, %2181
  %2190 = select <4 x i1> %2188, <4 x i64> %2186, <4 x i64> zeroinitializer
  %2191 = select <4 x i1> %2189, <4 x i64> %2187, <4 x i64> zeroinitializer
  %2192 = add <4 x i64> %2190, %2173
  %2193 = add <4 x i64> %2191, %2174
  %2194 = or i32 %2172, 9
  %2195 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2194
  %2196 = bitcast i32* %2195 to <4 x i32>*
  %2197 = load <4 x i32>, <4 x i32>* %2196, align 4, !tbaa !3
  %2198 = getelementptr inbounds i32, i32* %2195, i32 4
  %2199 = bitcast i32* %2198 to <4 x i32>*
  %2200 = load <4 x i32>, <4 x i32>* %2199, align 4, !tbaa !3
  %2201 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2197
  %2202 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2200
  %2203 = bitcast <4 x i8*> %2201 to <4 x i64*>
  %2204 = bitcast <4 x i8*> %2202 to <4 x i64*>
  %2205 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2203, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2206 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2204, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2207 = icmp eq <4 x i32> %2168, %2197
  %2208 = icmp eq <4 x i32> %2170, %2200
  %2209 = select <4 x i1> %2207, <4 x i64> %2205, <4 x i64> zeroinitializer
  %2210 = select <4 x i1> %2208, <4 x i64> %2206, <4 x i64> zeroinitializer
  %2211 = add <4 x i64> %2209, %2192
  %2212 = add <4 x i64> %2210, %2193
  %2213 = or i32 %2172, 17
  %2214 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2213
  %2215 = bitcast i32* %2214 to <4 x i32>*
  %2216 = load <4 x i32>, <4 x i32>* %2215, align 4, !tbaa !3
  %2217 = getelementptr inbounds i32, i32* %2214, i32 4
  %2218 = bitcast i32* %2217 to <4 x i32>*
  %2219 = load <4 x i32>, <4 x i32>* %2218, align 4, !tbaa !3
  %2220 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2216
  %2221 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2219
  %2222 = bitcast <4 x i8*> %2220 to <4 x i64*>
  %2223 = bitcast <4 x i8*> %2221 to <4 x i64*>
  %2224 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2222, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2225 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2223, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2226 = icmp eq <4 x i32> %2168, %2216
  %2227 = icmp eq <4 x i32> %2170, %2219
  %2228 = select <4 x i1> %2226, <4 x i64> %2224, <4 x i64> zeroinitializer
  %2229 = select <4 x i1> %2227, <4 x i64> %2225, <4 x i64> zeroinitializer
  %2230 = add <4 x i64> %2228, %2211
  %2231 = add <4 x i64> %2229, %2212
  %2232 = icmp eq i32 %2172, 224
  br i1 %2232, label %2233, label %14249, !llvm.loop !37

2233:                                             ; preds = %2171
  %2234 = add <4 x i64> %2231, %2230
  %2235 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2234)
  %2236 = icmp eq i32 %2166, 1992
  %2237 = select i1 %2236, i64 5296930162245565346, i64 0
  %2238 = add i64 %2237, %2235
  %2239 = icmp eq i32 %2166, 2000
  %2240 = select i1 %2239, i64 -6347414485825053312, i64 0
  %2241 = add i64 %2240, %2238
  %2242 = icmp eq i32 %2166, 2008
  %2243 = select i1 %2242, i64 -1111471293076483761, i64 0
  %2244 = add i64 %2243, %2241
  %2245 = icmp eq i32 %2166, 2016
  %2246 = select i1 %2245, i64 6762709279494119711, i64 0
  %2247 = add i64 %2246, %2244
  %2248 = icmp eq i32 %2166, 2024
  %2249 = select i1 %2248, i64 5502587883897177034, i64 0
  %2250 = add i64 %2249, %2247
  %2251 = icmp eq i32 %2166, 2032
  %2252 = select i1 %2251, i64 8203933284918551466, i64 0
  %2253 = add i64 %2252, %2250
  %2254 = icmp eq i32 %2166, 2040
  %2255 = select i1 %2254, i64 -3176116833483372990, i64 0
  %2256 = add i64 %2255, %2253
  %2257 = xor i64 %758, %1605
  %2258 = xor i64 %2257, %1698
  %2259 = xor i64 %2258, %1791
  %2260 = xor i64 %2259, %1884
  %2261 = xor i64 %2260, %1977
  %2262 = xor i64 %2261, %2070
  %2263 = xor i64 %2262, %2163
  %2264 = xor i64 %2263, %2256
  %2265 = xor i64 %2264, 5801120815458191851
  store i64 %2265, i64* @ctx.0.2, align 8, !tbaa !7
  %2266 = lshr i64 %2265, 53
  %2267 = trunc i64 %2266 to i32
  %2268 = and i32 %2267, 2040
  %2269 = insertelement <4 x i32> poison, i32 %2268, i32 0
  %2270 = shufflevector <4 x i32> %2269, <4 x i32> poison, <4 x i32> zeroinitializer
  %2271 = insertelement <4 x i32> poison, i32 %2268, i32 0
  %2272 = shufflevector <4 x i32> %2271, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2273

2273:                                             ; preds = %14228, %2233
  %2274 = phi i32 [ 0, %2233 ], [ %14248, %14228 ]
  %2275 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2233 ], [ %14246, %14228 ]
  %2276 = phi <4 x i64> [ zeroinitializer, %2233 ], [ %14247, %14228 ]
  %2277 = or i32 %2274, 1
  %2278 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2277
  %2279 = bitcast i32* %2278 to <4 x i32>*
  %2280 = load <4 x i32>, <4 x i32>* %2279, align 4, !tbaa !3
  %2281 = getelementptr inbounds i32, i32* %2278, i32 4
  %2282 = bitcast i32* %2281 to <4 x i32>*
  %2283 = load <4 x i32>, <4 x i32>* %2282, align 4, !tbaa !3
  %2284 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %2280
  %2285 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %2283
  %2286 = bitcast <4 x i8*> %2284 to <4 x i64*>
  %2287 = bitcast <4 x i8*> %2285 to <4 x i64*>
  %2288 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2286, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2289 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2287, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2290 = icmp eq <4 x i32> %2280, %2270
  %2291 = icmp eq <4 x i32> %2283, %2272
  %2292 = select <4 x i1> %2290, <4 x i64> %2288, <4 x i64> zeroinitializer
  %2293 = select <4 x i1> %2291, <4 x i64> %2289, <4 x i64> zeroinitializer
  %2294 = add <4 x i64> %2292, %2275
  %2295 = add <4 x i64> %2293, %2276
  %2296 = or i32 %2274, 9
  %2297 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2296
  %2298 = bitcast i32* %2297 to <4 x i32>*
  %2299 = load <4 x i32>, <4 x i32>* %2298, align 4, !tbaa !3
  %2300 = getelementptr inbounds i32, i32* %2297, i32 4
  %2301 = bitcast i32* %2300 to <4 x i32>*
  %2302 = load <4 x i32>, <4 x i32>* %2301, align 4, !tbaa !3
  %2303 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %2299
  %2304 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %2302
  %2305 = bitcast <4 x i8*> %2303 to <4 x i64*>
  %2306 = bitcast <4 x i8*> %2304 to <4 x i64*>
  %2307 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2305, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2308 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2306, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2309 = icmp eq <4 x i32> %2299, %2270
  %2310 = icmp eq <4 x i32> %2302, %2272
  %2311 = select <4 x i1> %2309, <4 x i64> %2307, <4 x i64> zeroinitializer
  %2312 = select <4 x i1> %2310, <4 x i64> %2308, <4 x i64> zeroinitializer
  %2313 = add <4 x i64> %2311, %2294
  %2314 = add <4 x i64> %2312, %2295
  %2315 = or i32 %2274, 17
  %2316 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2315
  %2317 = bitcast i32* %2316 to <4 x i32>*
  %2318 = load <4 x i32>, <4 x i32>* %2317, align 4, !tbaa !3
  %2319 = getelementptr inbounds i32, i32* %2316, i32 4
  %2320 = bitcast i32* %2319 to <4 x i32>*
  %2321 = load <4 x i32>, <4 x i32>* %2320, align 4, !tbaa !3
  %2322 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %2318
  %2323 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %2321
  %2324 = bitcast <4 x i8*> %2322 to <4 x i64*>
  %2325 = bitcast <4 x i8*> %2323 to <4 x i64*>
  %2326 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2324, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2327 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2325, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2328 = icmp eq <4 x i32> %2318, %2270
  %2329 = icmp eq <4 x i32> %2321, %2272
  %2330 = select <4 x i1> %2328, <4 x i64> %2326, <4 x i64> zeroinitializer
  %2331 = select <4 x i1> %2329, <4 x i64> %2327, <4 x i64> zeroinitializer
  %2332 = add <4 x i64> %2330, %2313
  %2333 = add <4 x i64> %2331, %2314
  %2334 = icmp eq i32 %2274, 224
  br i1 %2334, label %2335, label %14228, !llvm.loop !38

2335:                                             ; preds = %2273
  %2336 = add <4 x i64> %2333, %2332
  %2337 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2336)
  %2338 = icmp eq i32 %2268, 1992
  %2339 = select i1 %2338, i64 -6702567834671021495, i64 0
  %2340 = add i64 %2339, %2337
  %2341 = icmp eq i32 %2268, 2000
  %2342 = select i1 %2341, i64 -9179115894310901337, i64 0
  %2343 = add i64 %2342, %2340
  %2344 = icmp eq i32 %2268, 2008
  %2345 = select i1 %2344, i64 5751414958667764720, i64 0
  %2346 = add i64 %2345, %2343
  %2347 = icmp eq i32 %2268, 2016
  %2348 = select i1 %2347, i64 2243210855174429021, i64 0
  %2349 = add i64 %2348, %2346
  %2350 = icmp eq i32 %2268, 2024
  %2351 = select i1 %2350, i64 -3872233913575383732, i64 0
  %2352 = add i64 %2351, %2349
  %2353 = icmp eq i32 %2268, 2032
  %2354 = select i1 %2353, i64 -6132897494654657935, i64 0
  %2355 = add i64 %2354, %2352
  %2356 = icmp eq i32 %2268, 2040
  %2357 = select i1 %2356, i64 4811556717733801171, i64 0
  %2358 = add i64 %2357, %2355
  %2359 = lshr i64 %2265, 45
  %2360 = trunc i64 %2359 to i32
  %2361 = and i32 %2360, 2040
  %2362 = insertelement <4 x i32> poison, i32 %2361, i32 0
  %2363 = shufflevector <4 x i32> %2362, <4 x i32> poison, <4 x i32> zeroinitializer
  %2364 = insertelement <4 x i32> poison, i32 %2361, i32 0
  %2365 = shufflevector <4 x i32> %2364, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2366

2366:                                             ; preds = %14207, %2335
  %2367 = phi i32 [ 0, %2335 ], [ %14227, %14207 ]
  %2368 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2335 ], [ %14225, %14207 ]
  %2369 = phi <4 x i64> [ zeroinitializer, %2335 ], [ %14226, %14207 ]
  %2370 = or i32 %2367, 1
  %2371 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2370
  %2372 = bitcast i32* %2371 to <4 x i32>*
  %2373 = load <4 x i32>, <4 x i32>* %2372, align 4, !tbaa !3
  %2374 = getelementptr inbounds i32, i32* %2371, i32 4
  %2375 = bitcast i32* %2374 to <4 x i32>*
  %2376 = load <4 x i32>, <4 x i32>* %2375, align 4, !tbaa !3
  %2377 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %2373
  %2378 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %2376
  %2379 = bitcast <4 x i8*> %2377 to <4 x i64*>
  %2380 = bitcast <4 x i8*> %2378 to <4 x i64*>
  %2381 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2379, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2382 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2380, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2383 = icmp eq <4 x i32> %2363, %2373
  %2384 = icmp eq <4 x i32> %2365, %2376
  %2385 = select <4 x i1> %2383, <4 x i64> %2381, <4 x i64> zeroinitializer
  %2386 = select <4 x i1> %2384, <4 x i64> %2382, <4 x i64> zeroinitializer
  %2387 = add <4 x i64> %2385, %2368
  %2388 = add <4 x i64> %2386, %2369
  %2389 = or i32 %2367, 9
  %2390 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2389
  %2391 = bitcast i32* %2390 to <4 x i32>*
  %2392 = load <4 x i32>, <4 x i32>* %2391, align 4, !tbaa !3
  %2393 = getelementptr inbounds i32, i32* %2390, i32 4
  %2394 = bitcast i32* %2393 to <4 x i32>*
  %2395 = load <4 x i32>, <4 x i32>* %2394, align 4, !tbaa !3
  %2396 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %2392
  %2397 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %2395
  %2398 = bitcast <4 x i8*> %2396 to <4 x i64*>
  %2399 = bitcast <4 x i8*> %2397 to <4 x i64*>
  %2400 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2398, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2401 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2399, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2402 = icmp eq <4 x i32> %2363, %2392
  %2403 = icmp eq <4 x i32> %2365, %2395
  %2404 = select <4 x i1> %2402, <4 x i64> %2400, <4 x i64> zeroinitializer
  %2405 = select <4 x i1> %2403, <4 x i64> %2401, <4 x i64> zeroinitializer
  %2406 = add <4 x i64> %2404, %2387
  %2407 = add <4 x i64> %2405, %2388
  %2408 = or i32 %2367, 17
  %2409 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2408
  %2410 = bitcast i32* %2409 to <4 x i32>*
  %2411 = load <4 x i32>, <4 x i32>* %2410, align 4, !tbaa !3
  %2412 = getelementptr inbounds i32, i32* %2409, i32 4
  %2413 = bitcast i32* %2412 to <4 x i32>*
  %2414 = load <4 x i32>, <4 x i32>* %2413, align 4, !tbaa !3
  %2415 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %2411
  %2416 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %2414
  %2417 = bitcast <4 x i8*> %2415 to <4 x i64*>
  %2418 = bitcast <4 x i8*> %2416 to <4 x i64*>
  %2419 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2417, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2420 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2418, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2421 = icmp eq <4 x i32> %2363, %2411
  %2422 = icmp eq <4 x i32> %2365, %2414
  %2423 = select <4 x i1> %2421, <4 x i64> %2419, <4 x i64> zeroinitializer
  %2424 = select <4 x i1> %2422, <4 x i64> %2420, <4 x i64> zeroinitializer
  %2425 = add <4 x i64> %2423, %2406
  %2426 = add <4 x i64> %2424, %2407
  %2427 = icmp eq i32 %2367, 224
  br i1 %2427, label %2428, label %14207, !llvm.loop !39

2428:                                             ; preds = %2366
  %2429 = add <4 x i64> %2426, %2425
  %2430 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2429)
  %2431 = icmp eq i32 %2361, 1992
  %2432 = select i1 %2431, i64 -314670665226827390, i64 0
  %2433 = add i64 %2432, %2430
  %2434 = icmp eq i32 %2361, 2000
  %2435 = select i1 %2434, i64 -7097468252516276247, i64 0
  %2436 = add i64 %2435, %2433
  %2437 = icmp eq i32 %2361, 2008
  %2438 = select i1 %2437, i64 -3364349307489619821, i64 0
  %2439 = add i64 %2438, %2436
  %2440 = icmp eq i32 %2361, 2016
  %2441 = select i1 %2440, i64 2386735715921845721, i64 0
  %2442 = add i64 %2441, %2439
  %2443 = icmp eq i32 %2361, 2024
  %2444 = select i1 %2443, i64 4884933414564023389, i64 0
  %2445 = add i64 %2444, %2442
  %2446 = icmp eq i32 %2361, 2032
  %2447 = select i1 %2446, i64 -2041757280372035110, i64 0
  %2448 = add i64 %2447, %2445
  %2449 = icmp eq i32 %2361, 2040
  %2450 = select i1 %2449, i64 -4160667357316787220, i64 0
  %2451 = add i64 %2450, %2448
  %2452 = lshr i64 %2265, 37
  %2453 = trunc i64 %2452 to i32
  %2454 = and i32 %2453, 2040
  %2455 = insertelement <4 x i32> poison, i32 %2454, i32 0
  %2456 = shufflevector <4 x i32> %2455, <4 x i32> poison, <4 x i32> zeroinitializer
  %2457 = insertelement <4 x i32> poison, i32 %2454, i32 0
  %2458 = shufflevector <4 x i32> %2457, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2459

2459:                                             ; preds = %14186, %2428
  %2460 = phi i32 [ 0, %2428 ], [ %14206, %14186 ]
  %2461 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2428 ], [ %14204, %14186 ]
  %2462 = phi <4 x i64> [ zeroinitializer, %2428 ], [ %14205, %14186 ]
  %2463 = or i32 %2460, 1
  %2464 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2463
  %2465 = bitcast i32* %2464 to <4 x i32>*
  %2466 = load <4 x i32>, <4 x i32>* %2465, align 4, !tbaa !3
  %2467 = getelementptr inbounds i32, i32* %2464, i32 4
  %2468 = bitcast i32* %2467 to <4 x i32>*
  %2469 = load <4 x i32>, <4 x i32>* %2468, align 4, !tbaa !3
  %2470 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %2466
  %2471 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %2469
  %2472 = bitcast <4 x i8*> %2470 to <4 x i64*>
  %2473 = bitcast <4 x i8*> %2471 to <4 x i64*>
  %2474 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2472, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2475 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2473, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2476 = icmp eq <4 x i32> %2456, %2466
  %2477 = icmp eq <4 x i32> %2458, %2469
  %2478 = select <4 x i1> %2476, <4 x i64> %2474, <4 x i64> zeroinitializer
  %2479 = select <4 x i1> %2477, <4 x i64> %2475, <4 x i64> zeroinitializer
  %2480 = add <4 x i64> %2478, %2461
  %2481 = add <4 x i64> %2479, %2462
  %2482 = or i32 %2460, 9
  %2483 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2482
  %2484 = bitcast i32* %2483 to <4 x i32>*
  %2485 = load <4 x i32>, <4 x i32>* %2484, align 4, !tbaa !3
  %2486 = getelementptr inbounds i32, i32* %2483, i32 4
  %2487 = bitcast i32* %2486 to <4 x i32>*
  %2488 = load <4 x i32>, <4 x i32>* %2487, align 4, !tbaa !3
  %2489 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %2485
  %2490 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %2488
  %2491 = bitcast <4 x i8*> %2489 to <4 x i64*>
  %2492 = bitcast <4 x i8*> %2490 to <4 x i64*>
  %2493 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2491, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2494 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2492, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2495 = icmp eq <4 x i32> %2456, %2485
  %2496 = icmp eq <4 x i32> %2458, %2488
  %2497 = select <4 x i1> %2495, <4 x i64> %2493, <4 x i64> zeroinitializer
  %2498 = select <4 x i1> %2496, <4 x i64> %2494, <4 x i64> zeroinitializer
  %2499 = add <4 x i64> %2497, %2480
  %2500 = add <4 x i64> %2498, %2481
  %2501 = or i32 %2460, 17
  %2502 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2501
  %2503 = bitcast i32* %2502 to <4 x i32>*
  %2504 = load <4 x i32>, <4 x i32>* %2503, align 4, !tbaa !3
  %2505 = getelementptr inbounds i32, i32* %2502, i32 4
  %2506 = bitcast i32* %2505 to <4 x i32>*
  %2507 = load <4 x i32>, <4 x i32>* %2506, align 4, !tbaa !3
  %2508 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %2504
  %2509 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %2507
  %2510 = bitcast <4 x i8*> %2508 to <4 x i64*>
  %2511 = bitcast <4 x i8*> %2509 to <4 x i64*>
  %2512 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2510, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2513 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2511, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2514 = icmp eq <4 x i32> %2456, %2504
  %2515 = icmp eq <4 x i32> %2458, %2507
  %2516 = select <4 x i1> %2514, <4 x i64> %2512, <4 x i64> zeroinitializer
  %2517 = select <4 x i1> %2515, <4 x i64> %2513, <4 x i64> zeroinitializer
  %2518 = add <4 x i64> %2516, %2499
  %2519 = add <4 x i64> %2517, %2500
  %2520 = icmp eq i32 %2460, 224
  br i1 %2520, label %2521, label %14186, !llvm.loop !40

2521:                                             ; preds = %2459
  %2522 = add <4 x i64> %2519, %2518
  %2523 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2522)
  %2524 = icmp eq i32 %2454, 1992
  %2525 = select i1 %2524, i64 -5615809534224635015, i64 0
  %2526 = add i64 %2525, %2523
  %2527 = icmp eq i32 %2454, 2000
  %2528 = select i1 %2527, i64 4231836215586269044, i64 0
  %2529 = add i64 %2528, %2526
  %2530 = icmp eq i32 %2454, 2008
  %2531 = select i1 %2530, i64 2408950612238581570, i64 0
  %2532 = add i64 %2531, %2529
  %2533 = icmp eq i32 %2454, 2016
  %2534 = select i1 %2533, i64 8963041913638568696, i64 0
  %2535 = add i64 %2534, %2532
  %2536 = icmp eq i32 %2454, 2024
  %2537 = select i1 %2536, i64 1136536871657834014, i64 0
  %2538 = add i64 %2537, %2535
  %2539 = icmp eq i32 %2454, 2032
  %2540 = select i1 %2539, i64 -7910384849877083335, i64 0
  %2541 = add i64 %2540, %2538
  %2542 = icmp eq i32 %2454, 2040
  %2543 = select i1 %2542, i64 1537771219914559786, i64 0
  %2544 = add i64 %2543, %2541
  %2545 = lshr i64 %2265, 29
  %2546 = trunc i64 %2545 to i32
  %2547 = and i32 %2546, 2040
  %2548 = insertelement <4 x i32> poison, i32 %2547, i32 0
  %2549 = shufflevector <4 x i32> %2548, <4 x i32> poison, <4 x i32> zeroinitializer
  %2550 = insertelement <4 x i32> poison, i32 %2547, i32 0
  %2551 = shufflevector <4 x i32> %2550, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2552

2552:                                             ; preds = %14165, %2521
  %2553 = phi i32 [ 0, %2521 ], [ %14185, %14165 ]
  %2554 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2521 ], [ %14183, %14165 ]
  %2555 = phi <4 x i64> [ zeroinitializer, %2521 ], [ %14184, %14165 ]
  %2556 = or i32 %2553, 1
  %2557 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2556
  %2558 = bitcast i32* %2557 to <4 x i32>*
  %2559 = load <4 x i32>, <4 x i32>* %2558, align 4, !tbaa !3
  %2560 = getelementptr inbounds i32, i32* %2557, i32 4
  %2561 = bitcast i32* %2560 to <4 x i32>*
  %2562 = load <4 x i32>, <4 x i32>* %2561, align 4, !tbaa !3
  %2563 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %2559
  %2564 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %2562
  %2565 = bitcast <4 x i8*> %2563 to <4 x i64*>
  %2566 = bitcast <4 x i8*> %2564 to <4 x i64*>
  %2567 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2565, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2568 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2566, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2569 = icmp eq <4 x i32> %2549, %2559
  %2570 = icmp eq <4 x i32> %2551, %2562
  %2571 = select <4 x i1> %2569, <4 x i64> %2567, <4 x i64> zeroinitializer
  %2572 = select <4 x i1> %2570, <4 x i64> %2568, <4 x i64> zeroinitializer
  %2573 = add <4 x i64> %2571, %2554
  %2574 = add <4 x i64> %2572, %2555
  %2575 = or i32 %2553, 9
  %2576 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2575
  %2577 = bitcast i32* %2576 to <4 x i32>*
  %2578 = load <4 x i32>, <4 x i32>* %2577, align 4, !tbaa !3
  %2579 = getelementptr inbounds i32, i32* %2576, i32 4
  %2580 = bitcast i32* %2579 to <4 x i32>*
  %2581 = load <4 x i32>, <4 x i32>* %2580, align 4, !tbaa !3
  %2582 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %2578
  %2583 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %2581
  %2584 = bitcast <4 x i8*> %2582 to <4 x i64*>
  %2585 = bitcast <4 x i8*> %2583 to <4 x i64*>
  %2586 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2584, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2587 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2585, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2588 = icmp eq <4 x i32> %2549, %2578
  %2589 = icmp eq <4 x i32> %2551, %2581
  %2590 = select <4 x i1> %2588, <4 x i64> %2586, <4 x i64> zeroinitializer
  %2591 = select <4 x i1> %2589, <4 x i64> %2587, <4 x i64> zeroinitializer
  %2592 = add <4 x i64> %2590, %2573
  %2593 = add <4 x i64> %2591, %2574
  %2594 = or i32 %2553, 17
  %2595 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2594
  %2596 = bitcast i32* %2595 to <4 x i32>*
  %2597 = load <4 x i32>, <4 x i32>* %2596, align 4, !tbaa !3
  %2598 = getelementptr inbounds i32, i32* %2595, i32 4
  %2599 = bitcast i32* %2598 to <4 x i32>*
  %2600 = load <4 x i32>, <4 x i32>* %2599, align 4, !tbaa !3
  %2601 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %2597
  %2602 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %2600
  %2603 = bitcast <4 x i8*> %2601 to <4 x i64*>
  %2604 = bitcast <4 x i8*> %2602 to <4 x i64*>
  %2605 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2603, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2606 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2604, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2607 = icmp eq <4 x i32> %2549, %2597
  %2608 = icmp eq <4 x i32> %2551, %2600
  %2609 = select <4 x i1> %2607, <4 x i64> %2605, <4 x i64> zeroinitializer
  %2610 = select <4 x i1> %2608, <4 x i64> %2606, <4 x i64> zeroinitializer
  %2611 = add <4 x i64> %2609, %2592
  %2612 = add <4 x i64> %2610, %2593
  %2613 = icmp eq i32 %2553, 224
  br i1 %2613, label %2614, label %14165, !llvm.loop !41

2614:                                             ; preds = %2552
  %2615 = add <4 x i64> %2612, %2611
  %2616 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2615)
  %2617 = icmp eq i32 %2547, 1992
  %2618 = select i1 %2617, i64 1203300724897905131, i64 0
  %2619 = add i64 %2618, %2616
  %2620 = icmp eq i32 %2547, 2000
  %2621 = select i1 %2620, i64 -5027532858107268057, i64 0
  %2622 = add i64 %2621, %2619
  %2623 = icmp eq i32 %2547, 2008
  %2624 = select i1 %2623, i64 7935854159672328895, i64 0
  %2625 = add i64 %2624, %2622
  %2626 = icmp eq i32 %2547, 2016
  %2627 = select i1 %2626, i64 7168641125469255746, i64 0
  %2628 = add i64 %2627, %2625
  %2629 = icmp eq i32 %2547, 2024
  %2630 = select i1 %2629, i64 -4247101387443462522, i64 0
  %2631 = add i64 %2630, %2628
  %2632 = icmp eq i32 %2547, 2032
  %2633 = select i1 %2632, i64 4076570933917792731, i64 0
  %2634 = add i64 %2633, %2631
  %2635 = icmp eq i32 %2547, 2040
  %2636 = select i1 %2635, i64 6275139646136265361, i64 0
  %2637 = add i64 %2636, %2634
  %2638 = lshr i64 %2265, 21
  %2639 = trunc i64 %2638 to i32
  %2640 = and i32 %2639, 2040
  %2641 = insertelement <4 x i32> poison, i32 %2640, i32 0
  %2642 = shufflevector <4 x i32> %2641, <4 x i32> poison, <4 x i32> zeroinitializer
  %2643 = insertelement <4 x i32> poison, i32 %2640, i32 0
  %2644 = shufflevector <4 x i32> %2643, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2645

2645:                                             ; preds = %14144, %2614
  %2646 = phi i32 [ 0, %2614 ], [ %14164, %14144 ]
  %2647 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2614 ], [ %14162, %14144 ]
  %2648 = phi <4 x i64> [ zeroinitializer, %2614 ], [ %14163, %14144 ]
  %2649 = or i32 %2646, 1
  %2650 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2649
  %2651 = bitcast i32* %2650 to <4 x i32>*
  %2652 = load <4 x i32>, <4 x i32>* %2651, align 4, !tbaa !3
  %2653 = getelementptr inbounds i32, i32* %2650, i32 4
  %2654 = bitcast i32* %2653 to <4 x i32>*
  %2655 = load <4 x i32>, <4 x i32>* %2654, align 4, !tbaa !3
  %2656 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %2652
  %2657 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %2655
  %2658 = bitcast <4 x i8*> %2656 to <4 x i64*>
  %2659 = bitcast <4 x i8*> %2657 to <4 x i64*>
  %2660 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2658, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2661 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2659, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2662 = icmp eq <4 x i32> %2642, %2652
  %2663 = icmp eq <4 x i32> %2644, %2655
  %2664 = select <4 x i1> %2662, <4 x i64> %2660, <4 x i64> zeroinitializer
  %2665 = select <4 x i1> %2663, <4 x i64> %2661, <4 x i64> zeroinitializer
  %2666 = add <4 x i64> %2664, %2647
  %2667 = add <4 x i64> %2665, %2648
  %2668 = or i32 %2646, 9
  %2669 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2668
  %2670 = bitcast i32* %2669 to <4 x i32>*
  %2671 = load <4 x i32>, <4 x i32>* %2670, align 4, !tbaa !3
  %2672 = getelementptr inbounds i32, i32* %2669, i32 4
  %2673 = bitcast i32* %2672 to <4 x i32>*
  %2674 = load <4 x i32>, <4 x i32>* %2673, align 4, !tbaa !3
  %2675 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %2671
  %2676 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %2674
  %2677 = bitcast <4 x i8*> %2675 to <4 x i64*>
  %2678 = bitcast <4 x i8*> %2676 to <4 x i64*>
  %2679 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2677, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2680 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2678, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2681 = icmp eq <4 x i32> %2642, %2671
  %2682 = icmp eq <4 x i32> %2644, %2674
  %2683 = select <4 x i1> %2681, <4 x i64> %2679, <4 x i64> zeroinitializer
  %2684 = select <4 x i1> %2682, <4 x i64> %2680, <4 x i64> zeroinitializer
  %2685 = add <4 x i64> %2683, %2666
  %2686 = add <4 x i64> %2684, %2667
  %2687 = or i32 %2646, 17
  %2688 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2687
  %2689 = bitcast i32* %2688 to <4 x i32>*
  %2690 = load <4 x i32>, <4 x i32>* %2689, align 4, !tbaa !3
  %2691 = getelementptr inbounds i32, i32* %2688, i32 4
  %2692 = bitcast i32* %2691 to <4 x i32>*
  %2693 = load <4 x i32>, <4 x i32>* %2692, align 4, !tbaa !3
  %2694 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %2690
  %2695 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %2693
  %2696 = bitcast <4 x i8*> %2694 to <4 x i64*>
  %2697 = bitcast <4 x i8*> %2695 to <4 x i64*>
  %2698 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2696, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2699 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2697, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2700 = icmp eq <4 x i32> %2642, %2690
  %2701 = icmp eq <4 x i32> %2644, %2693
  %2702 = select <4 x i1> %2700, <4 x i64> %2698, <4 x i64> zeroinitializer
  %2703 = select <4 x i1> %2701, <4 x i64> %2699, <4 x i64> zeroinitializer
  %2704 = add <4 x i64> %2702, %2685
  %2705 = add <4 x i64> %2703, %2686
  %2706 = icmp eq i32 %2646, 224
  br i1 %2706, label %2707, label %14144, !llvm.loop !42

2707:                                             ; preds = %2645
  %2708 = add <4 x i64> %2705, %2704
  %2709 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2708)
  %2710 = icmp eq i32 %2640, 1992
  %2711 = select i1 %2710, i64 -1479007749835869680, i64 0
  %2712 = add i64 %2711, %2709
  %2713 = icmp eq i32 %2640, 2000
  %2714 = select i1 %2713, i64 2843154170404223674, i64 0
  %2715 = add i64 %2714, %2712
  %2716 = icmp eq i32 %2640, 2008
  %2717 = select i1 %2716, i64 -4665003603661872786, i64 0
  %2718 = add i64 %2717, %2715
  %2719 = icmp eq i32 %2640, 2016
  %2720 = select i1 %2719, i64 4825845994704960611, i64 0
  %2721 = add i64 %2720, %2718
  %2722 = icmp eq i32 %2640, 2024
  %2723 = select i1 %2722, i64 -8782479638933598267, i64 0
  %2724 = add i64 %2723, %2721
  %2725 = icmp eq i32 %2640, 2032
  %2726 = select i1 %2725, i64 -2649846723997625800, i64 0
  %2727 = add i64 %2726, %2724
  %2728 = icmp eq i32 %2640, 2040
  %2729 = select i1 %2728, i64 -7986310597085620905, i64 0
  %2730 = add i64 %2729, %2727
  %2731 = lshr i64 %2265, 13
  %2732 = trunc i64 %2731 to i32
  %2733 = and i32 %2732, 2040
  %2734 = insertelement <4 x i32> poison, i32 %2733, i32 0
  %2735 = shufflevector <4 x i32> %2734, <4 x i32> poison, <4 x i32> zeroinitializer
  %2736 = insertelement <4 x i32> poison, i32 %2733, i32 0
  %2737 = shufflevector <4 x i32> %2736, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2738

2738:                                             ; preds = %14123, %2707
  %2739 = phi i32 [ 0, %2707 ], [ %14143, %14123 ]
  %2740 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2707 ], [ %14141, %14123 ]
  %2741 = phi <4 x i64> [ zeroinitializer, %2707 ], [ %14142, %14123 ]
  %2742 = or i32 %2739, 1
  %2743 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2742
  %2744 = bitcast i32* %2743 to <4 x i32>*
  %2745 = load <4 x i32>, <4 x i32>* %2744, align 4, !tbaa !3
  %2746 = getelementptr inbounds i32, i32* %2743, i32 4
  %2747 = bitcast i32* %2746 to <4 x i32>*
  %2748 = load <4 x i32>, <4 x i32>* %2747, align 4, !tbaa !3
  %2749 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2745
  %2750 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2748
  %2751 = bitcast <4 x i8*> %2749 to <4 x i64*>
  %2752 = bitcast <4 x i8*> %2750 to <4 x i64*>
  %2753 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2751, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2754 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2752, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2755 = icmp eq <4 x i32> %2735, %2745
  %2756 = icmp eq <4 x i32> %2737, %2748
  %2757 = select <4 x i1> %2755, <4 x i64> %2753, <4 x i64> zeroinitializer
  %2758 = select <4 x i1> %2756, <4 x i64> %2754, <4 x i64> zeroinitializer
  %2759 = add <4 x i64> %2757, %2740
  %2760 = add <4 x i64> %2758, %2741
  %2761 = or i32 %2739, 9
  %2762 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2761
  %2763 = bitcast i32* %2762 to <4 x i32>*
  %2764 = load <4 x i32>, <4 x i32>* %2763, align 4, !tbaa !3
  %2765 = getelementptr inbounds i32, i32* %2762, i32 4
  %2766 = bitcast i32* %2765 to <4 x i32>*
  %2767 = load <4 x i32>, <4 x i32>* %2766, align 4, !tbaa !3
  %2768 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2764
  %2769 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2767
  %2770 = bitcast <4 x i8*> %2768 to <4 x i64*>
  %2771 = bitcast <4 x i8*> %2769 to <4 x i64*>
  %2772 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2770, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2773 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2771, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2774 = icmp eq <4 x i32> %2735, %2764
  %2775 = icmp eq <4 x i32> %2737, %2767
  %2776 = select <4 x i1> %2774, <4 x i64> %2772, <4 x i64> zeroinitializer
  %2777 = select <4 x i1> %2775, <4 x i64> %2773, <4 x i64> zeroinitializer
  %2778 = add <4 x i64> %2776, %2759
  %2779 = add <4 x i64> %2777, %2760
  %2780 = or i32 %2739, 17
  %2781 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2780
  %2782 = bitcast i32* %2781 to <4 x i32>*
  %2783 = load <4 x i32>, <4 x i32>* %2782, align 4, !tbaa !3
  %2784 = getelementptr inbounds i32, i32* %2781, i32 4
  %2785 = bitcast i32* %2784 to <4 x i32>*
  %2786 = load <4 x i32>, <4 x i32>* %2785, align 4, !tbaa !3
  %2787 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2783
  %2788 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %2786
  %2789 = bitcast <4 x i8*> %2787 to <4 x i64*>
  %2790 = bitcast <4 x i8*> %2788 to <4 x i64*>
  %2791 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2789, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2792 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2790, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2793 = icmp eq <4 x i32> %2735, %2783
  %2794 = icmp eq <4 x i32> %2737, %2786
  %2795 = select <4 x i1> %2793, <4 x i64> %2791, <4 x i64> zeroinitializer
  %2796 = select <4 x i1> %2794, <4 x i64> %2792, <4 x i64> zeroinitializer
  %2797 = add <4 x i64> %2795, %2778
  %2798 = add <4 x i64> %2796, %2779
  %2799 = icmp eq i32 %2739, 224
  br i1 %2799, label %2800, label %14123, !llvm.loop !43

2800:                                             ; preds = %2738
  %2801 = add <4 x i64> %2798, %2797
  %2802 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2801)
  %2803 = icmp eq i32 %2733, 1992
  %2804 = select i1 %2803, i64 8785196325032562866, i64 0
  %2805 = add i64 %2804, %2802
  %2806 = icmp eq i32 %2733, 2000
  %2807 = select i1 %2806, i64 8369843054303033914, i64 0
  %2808 = add i64 %2807, %2805
  %2809 = icmp eq i32 %2733, 2008
  %2810 = select i1 %2809, i64 4809827444717481505, i64 0
  %2811 = add i64 %2810, %2808
  %2812 = icmp eq i32 %2733, 2016
  %2813 = select i1 %2812, i64 -557780216695528580, i64 0
  %2814 = add i64 %2813, %2811
  %2815 = icmp eq i32 %2733, 2024
  %2816 = select i1 %2815, i64 2199529431470097679, i64 0
  %2817 = add i64 %2816, %2814
  %2818 = icmp eq i32 %2733, 2032
  %2819 = select i1 %2818, i64 4169051064997918866, i64 0
  %2820 = add i64 %2819, %2817
  %2821 = icmp eq i32 %2733, 2040
  %2822 = select i1 %2821, i64 3067465835107997461, i64 0
  %2823 = add i64 %2822, %2820
  %2824 = lshr i64 %2265, 5
  %2825 = trunc i64 %2824 to i32
  %2826 = and i32 %2825, 2040
  %2827 = insertelement <4 x i32> poison, i32 %2826, i32 0
  %2828 = shufflevector <4 x i32> %2827, <4 x i32> poison, <4 x i32> zeroinitializer
  %2829 = insertelement <4 x i32> poison, i32 %2826, i32 0
  %2830 = shufflevector <4 x i32> %2829, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %2831

2831:                                             ; preds = %14102, %2800
  %2832 = phi i32 [ 0, %2800 ], [ %14122, %14102 ]
  %2833 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2800 ], [ %14120, %14102 ]
  %2834 = phi <4 x i64> [ zeroinitializer, %2800 ], [ %14121, %14102 ]
  %2835 = or i32 %2832, 1
  %2836 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2835
  %2837 = bitcast i32* %2836 to <4 x i32>*
  %2838 = load <4 x i32>, <4 x i32>* %2837, align 4, !tbaa !3
  %2839 = getelementptr inbounds i32, i32* %2836, i32 4
  %2840 = bitcast i32* %2839 to <4 x i32>*
  %2841 = load <4 x i32>, <4 x i32>* %2840, align 4, !tbaa !3
  %2842 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2838
  %2843 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2841
  %2844 = bitcast <4 x i8*> %2842 to <4 x i64*>
  %2845 = bitcast <4 x i8*> %2843 to <4 x i64*>
  %2846 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2844, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2847 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2845, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2848 = icmp eq <4 x i32> %2828, %2838
  %2849 = icmp eq <4 x i32> %2830, %2841
  %2850 = select <4 x i1> %2848, <4 x i64> %2846, <4 x i64> zeroinitializer
  %2851 = select <4 x i1> %2849, <4 x i64> %2847, <4 x i64> zeroinitializer
  %2852 = add <4 x i64> %2850, %2833
  %2853 = add <4 x i64> %2851, %2834
  %2854 = or i32 %2832, 9
  %2855 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2854
  %2856 = bitcast i32* %2855 to <4 x i32>*
  %2857 = load <4 x i32>, <4 x i32>* %2856, align 4, !tbaa !3
  %2858 = getelementptr inbounds i32, i32* %2855, i32 4
  %2859 = bitcast i32* %2858 to <4 x i32>*
  %2860 = load <4 x i32>, <4 x i32>* %2859, align 4, !tbaa !3
  %2861 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2857
  %2862 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2860
  %2863 = bitcast <4 x i8*> %2861 to <4 x i64*>
  %2864 = bitcast <4 x i8*> %2862 to <4 x i64*>
  %2865 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2863, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2866 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2864, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2867 = icmp eq <4 x i32> %2828, %2857
  %2868 = icmp eq <4 x i32> %2830, %2860
  %2869 = select <4 x i1> %2867, <4 x i64> %2865, <4 x i64> zeroinitializer
  %2870 = select <4 x i1> %2868, <4 x i64> %2866, <4 x i64> zeroinitializer
  %2871 = add <4 x i64> %2869, %2852
  %2872 = add <4 x i64> %2870, %2853
  %2873 = or i32 %2832, 17
  %2874 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2873
  %2875 = bitcast i32* %2874 to <4 x i32>*
  %2876 = load <4 x i32>, <4 x i32>* %2875, align 4, !tbaa !3
  %2877 = getelementptr inbounds i32, i32* %2874, i32 4
  %2878 = bitcast i32* %2877 to <4 x i32>*
  %2879 = load <4 x i32>, <4 x i32>* %2878, align 4, !tbaa !3
  %2880 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2876
  %2881 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %2879
  %2882 = bitcast <4 x i8*> %2880 to <4 x i64*>
  %2883 = bitcast <4 x i8*> %2881 to <4 x i64*>
  %2884 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2882, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2885 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2883, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2886 = icmp eq <4 x i32> %2828, %2876
  %2887 = icmp eq <4 x i32> %2830, %2879
  %2888 = select <4 x i1> %2886, <4 x i64> %2884, <4 x i64> zeroinitializer
  %2889 = select <4 x i1> %2887, <4 x i64> %2885, <4 x i64> zeroinitializer
  %2890 = add <4 x i64> %2888, %2871
  %2891 = add <4 x i64> %2889, %2872
  %2892 = icmp eq i32 %2832, 224
  br i1 %2892, label %2893, label %14102, !llvm.loop !44

2893:                                             ; preds = %2831
  %2894 = add <4 x i64> %2891, %2890
  %2895 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2894)
  %2896 = icmp eq i32 %2826, 1992
  %2897 = select i1 %2896, i64 -9058450267568037125, i64 0
  %2898 = add i64 %2897, %2895
  %2899 = icmp eq i32 %2826, 2000
  %2900 = select i1 %2899, i64 -1610274961606672227, i64 0
  %2901 = add i64 %2900, %2898
  %2902 = icmp eq i32 %2826, 2008
  %2903 = select i1 %2902, i64 -7786513464973963311, i64 0
  %2904 = add i64 %2903, %2901
  %2905 = icmp eq i32 %2826, 2016
  %2906 = select i1 %2905, i64 -2783995359638905055, i64 0
  %2907 = add i64 %2906, %2904
  %2908 = icmp eq i32 %2826, 2024
  %2909 = select i1 %2908, i64 6722895807429069379, i64 0
  %2910 = add i64 %2909, %2907
  %2911 = icmp eq i32 %2826, 2032
  %2912 = select i1 %2911, i64 -2706140860760151325, i64 0
  %2913 = add i64 %2912, %2910
  %2914 = icmp eq i32 %2826, 2040
  %2915 = select i1 %2914, i64 -1381601050739916090, i64 0
  %2916 = add i64 %2915, %2913
  %2917 = trunc i64 %2265 to i32
  %2918 = and i32 %2917, 255
  %2919 = getelementptr inbounds [256 x i64], [256 x i64]* @T7, i32 0, i32 %2918
  %2920 = insertelement <4 x i64*> poison, i64* %2919, i32 0
  %2921 = shufflevector <4 x i64*> %2920, <4 x i64*> poison, <4 x i32> zeroinitializer
  %2922 = insertelement <4 x i64*> poison, i64* %2919, i32 0
  %2923 = shufflevector <4 x i64*> %2922, <4 x i64*> poison, <4 x i32> zeroinitializer
  br label %2924

2924:                                             ; preds = %14081, %2893
  %2925 = phi i32 [ 0, %2893 ], [ %14101, %14081 ]
  %2926 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2893 ], [ %14099, %14081 ]
  %2927 = phi <4 x i64> [ zeroinitializer, %2893 ], [ %14100, %14081 ]
  %2928 = or i32 %2925, 1
  %2929 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2928
  %2930 = bitcast i32* %2929 to <4 x i32>*
  %2931 = load <4 x i32>, <4 x i32>* %2930, align 4, !tbaa !3
  %2932 = getelementptr inbounds i32, i32* %2929, i32 4
  %2933 = bitcast i32* %2932 to <4 x i32>*
  %2934 = load <4 x i32>, <4 x i32>* %2933, align 4, !tbaa !3
  %2935 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2931
  %2936 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2934
  %2937 = bitcast <4 x i8*> %2935 to <4 x i64*>
  %2938 = bitcast <4 x i8*> %2936 to <4 x i64*>
  %2939 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2937, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2940 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2938, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2941 = icmp eq <4 x i64*> %2921, %2937
  %2942 = icmp eq <4 x i64*> %2923, %2938
  %2943 = select <4 x i1> %2941, <4 x i64> %2939, <4 x i64> zeroinitializer
  %2944 = select <4 x i1> %2942, <4 x i64> %2940, <4 x i64> zeroinitializer
  %2945 = add <4 x i64> %2943, %2926
  %2946 = add <4 x i64> %2944, %2927
  %2947 = or i32 %2925, 9
  %2948 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2947
  %2949 = bitcast i32* %2948 to <4 x i32>*
  %2950 = load <4 x i32>, <4 x i32>* %2949, align 4, !tbaa !3
  %2951 = getelementptr inbounds i32, i32* %2948, i32 4
  %2952 = bitcast i32* %2951 to <4 x i32>*
  %2953 = load <4 x i32>, <4 x i32>* %2952, align 4, !tbaa !3
  %2954 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2950
  %2955 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2953
  %2956 = bitcast <4 x i8*> %2954 to <4 x i64*>
  %2957 = bitcast <4 x i8*> %2955 to <4 x i64*>
  %2958 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2956, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2959 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2957, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2960 = icmp eq <4 x i64*> %2921, %2956
  %2961 = icmp eq <4 x i64*> %2923, %2957
  %2962 = select <4 x i1> %2960, <4 x i64> %2958, <4 x i64> zeroinitializer
  %2963 = select <4 x i1> %2961, <4 x i64> %2959, <4 x i64> zeroinitializer
  %2964 = add <4 x i64> %2962, %2945
  %2965 = add <4 x i64> %2963, %2946
  %2966 = or i32 %2925, 17
  %2967 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %2966
  %2968 = bitcast i32* %2967 to <4 x i32>*
  %2969 = load <4 x i32>, <4 x i32>* %2968, align 4, !tbaa !3
  %2970 = getelementptr inbounds i32, i32* %2967, i32 4
  %2971 = bitcast i32* %2970 to <4 x i32>*
  %2972 = load <4 x i32>, <4 x i32>* %2971, align 4, !tbaa !3
  %2973 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2969
  %2974 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %2972
  %2975 = bitcast <4 x i8*> %2973 to <4 x i64*>
  %2976 = bitcast <4 x i8*> %2974 to <4 x i64*>
  %2977 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2975, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2978 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %2976, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %2979 = icmp eq <4 x i64*> %2921, %2975
  %2980 = icmp eq <4 x i64*> %2923, %2976
  %2981 = select <4 x i1> %2979, <4 x i64> %2977, <4 x i64> zeroinitializer
  %2982 = select <4 x i1> %2980, <4 x i64> %2978, <4 x i64> zeroinitializer
  %2983 = add <4 x i64> %2981, %2964
  %2984 = add <4 x i64> %2982, %2965
  %2985 = icmp eq i32 %2925, 224
  br i1 %2985, label %2986, label %14081, !llvm.loop !45

2986:                                             ; preds = %2924
  %2987 = add <4 x i64> %2984, %2983
  %2988 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %2987)
  %2989 = icmp eq i32 %2918, 249
  %2990 = select i1 %2989, i64 5296930162245565346, i64 0
  %2991 = add i64 %2990, %2988
  %2992 = icmp eq i32 %2918, 250
  %2993 = select i1 %2992, i64 -6347414485825053312, i64 0
  %2994 = add i64 %2993, %2991
  %2995 = icmp eq i32 %2918, 251
  %2996 = select i1 %2995, i64 -1111471293076483761, i64 0
  %2997 = add i64 %2996, %2994
  %2998 = icmp eq i32 %2918, 252
  %2999 = select i1 %2998, i64 6762709279494119711, i64 0
  %3000 = add i64 %2999, %2997
  %3001 = icmp eq i32 %2918, 253
  %3002 = select i1 %3001, i64 5502587883897177034, i64 0
  %3003 = add i64 %3002, %3000
  %3004 = icmp eq i32 %2918, 254
  %3005 = select i1 %3004, i64 8203933284918551466, i64 0
  %3006 = add i64 %3005, %3003
  %3007 = icmp eq i32 %2918, 255
  %3008 = select i1 %3007, i64 -3176116833483372990, i64 0
  %3009 = add i64 %3008, %3006
  %3010 = xor i64 %1511, %2358
  %3011 = xor i64 %3010, %2451
  %3012 = xor i64 %3011, %2544
  %3013 = xor i64 %3012, %2637
  %3014 = xor i64 %3013, %2730
  %3015 = xor i64 %3014, %2823
  %3016 = xor i64 %3015, %2916
  %3017 = xor i64 %3016, %3009
  %3018 = xor i64 %3017, -8150348577619563088
  store i64 %3018, i64* @ctx.0.3, align 8, !tbaa !7
  %3019 = lshr i64 %3018, 53
  %3020 = trunc i64 %3019 to i32
  %3021 = and i32 %3020, 2040
  %3022 = insertelement <4 x i32> poison, i32 %3021, i32 0
  %3023 = shufflevector <4 x i32> %3022, <4 x i32> poison, <4 x i32> zeroinitializer
  %3024 = insertelement <4 x i32> poison, i32 %3021, i32 0
  %3025 = shufflevector <4 x i32> %3024, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3026

3026:                                             ; preds = %14060, %2986
  %3027 = phi i32 [ 0, %2986 ], [ %14080, %14060 ]
  %3028 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %2986 ], [ %14078, %14060 ]
  %3029 = phi <4 x i64> [ zeroinitializer, %2986 ], [ %14079, %14060 ]
  %3030 = or i32 %3027, 1
  %3031 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3030
  %3032 = bitcast i32* %3031 to <4 x i32>*
  %3033 = load <4 x i32>, <4 x i32>* %3032, align 4, !tbaa !3
  %3034 = getelementptr inbounds i32, i32* %3031, i32 4
  %3035 = bitcast i32* %3034 to <4 x i32>*
  %3036 = load <4 x i32>, <4 x i32>* %3035, align 4, !tbaa !3
  %3037 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3033
  %3038 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3036
  %3039 = bitcast <4 x i8*> %3037 to <4 x i64*>
  %3040 = bitcast <4 x i8*> %3038 to <4 x i64*>
  %3041 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3039, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3042 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3040, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3043 = icmp eq <4 x i32> %3033, %3023
  %3044 = icmp eq <4 x i32> %3036, %3025
  %3045 = select <4 x i1> %3043, <4 x i64> %3041, <4 x i64> zeroinitializer
  %3046 = select <4 x i1> %3044, <4 x i64> %3042, <4 x i64> zeroinitializer
  %3047 = add <4 x i64> %3045, %3028
  %3048 = add <4 x i64> %3046, %3029
  %3049 = or i32 %3027, 9
  %3050 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3049
  %3051 = bitcast i32* %3050 to <4 x i32>*
  %3052 = load <4 x i32>, <4 x i32>* %3051, align 4, !tbaa !3
  %3053 = getelementptr inbounds i32, i32* %3050, i32 4
  %3054 = bitcast i32* %3053 to <4 x i32>*
  %3055 = load <4 x i32>, <4 x i32>* %3054, align 4, !tbaa !3
  %3056 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3052
  %3057 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3055
  %3058 = bitcast <4 x i8*> %3056 to <4 x i64*>
  %3059 = bitcast <4 x i8*> %3057 to <4 x i64*>
  %3060 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3058, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3061 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3059, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3062 = icmp eq <4 x i32> %3052, %3023
  %3063 = icmp eq <4 x i32> %3055, %3025
  %3064 = select <4 x i1> %3062, <4 x i64> %3060, <4 x i64> zeroinitializer
  %3065 = select <4 x i1> %3063, <4 x i64> %3061, <4 x i64> zeroinitializer
  %3066 = add <4 x i64> %3064, %3047
  %3067 = add <4 x i64> %3065, %3048
  %3068 = or i32 %3027, 17
  %3069 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3068
  %3070 = bitcast i32* %3069 to <4 x i32>*
  %3071 = load <4 x i32>, <4 x i32>* %3070, align 4, !tbaa !3
  %3072 = getelementptr inbounds i32, i32* %3069, i32 4
  %3073 = bitcast i32* %3072 to <4 x i32>*
  %3074 = load <4 x i32>, <4 x i32>* %3073, align 4, !tbaa !3
  %3075 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3071
  %3076 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3074
  %3077 = bitcast <4 x i8*> %3075 to <4 x i64*>
  %3078 = bitcast <4 x i8*> %3076 to <4 x i64*>
  %3079 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3077, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3080 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3078, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3081 = icmp eq <4 x i32> %3071, %3023
  %3082 = icmp eq <4 x i32> %3074, %3025
  %3083 = select <4 x i1> %3081, <4 x i64> %3079, <4 x i64> zeroinitializer
  %3084 = select <4 x i1> %3082, <4 x i64> %3080, <4 x i64> zeroinitializer
  %3085 = add <4 x i64> %3083, %3066
  %3086 = add <4 x i64> %3084, %3067
  %3087 = icmp eq i32 %3027, 224
  br i1 %3087, label %3088, label %14060, !llvm.loop !46

3088:                                             ; preds = %3026
  %3089 = add <4 x i64> %3086, %3085
  %3090 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3089)
  %3091 = icmp eq i32 %3021, 1992
  %3092 = select i1 %3091, i64 -6702567834671021495, i64 0
  %3093 = add i64 %3092, %3090
  %3094 = icmp eq i32 %3021, 2000
  %3095 = select i1 %3094, i64 -9179115894310901337, i64 0
  %3096 = add i64 %3095, %3093
  %3097 = icmp eq i32 %3021, 2008
  %3098 = select i1 %3097, i64 5751414958667764720, i64 0
  %3099 = add i64 %3098, %3096
  %3100 = icmp eq i32 %3021, 2016
  %3101 = select i1 %3100, i64 2243210855174429021, i64 0
  %3102 = add i64 %3101, %3099
  %3103 = icmp eq i32 %3021, 2024
  %3104 = select i1 %3103, i64 -3872233913575383732, i64 0
  %3105 = add i64 %3104, %3102
  %3106 = icmp eq i32 %3021, 2032
  %3107 = select i1 %3106, i64 -6132897494654657935, i64 0
  %3108 = add i64 %3107, %3105
  %3109 = icmp eq i32 %3021, 2040
  %3110 = select i1 %3109, i64 4811556717733801171, i64 0
  %3111 = add i64 %3110, %3108
  %3112 = lshr i64 %3018, 45
  %3113 = trunc i64 %3112 to i32
  %3114 = and i32 %3113, 2040
  %3115 = insertelement <4 x i32> poison, i32 %3114, i32 0
  %3116 = shufflevector <4 x i32> %3115, <4 x i32> poison, <4 x i32> zeroinitializer
  %3117 = insertelement <4 x i32> poison, i32 %3114, i32 0
  %3118 = shufflevector <4 x i32> %3117, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3119

3119:                                             ; preds = %14039, %3088
  %3120 = phi i32 [ 0, %3088 ], [ %14059, %14039 ]
  %3121 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3088 ], [ %14057, %14039 ]
  %3122 = phi <4 x i64> [ zeroinitializer, %3088 ], [ %14058, %14039 ]
  %3123 = or i32 %3120, 1
  %3124 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3123
  %3125 = bitcast i32* %3124 to <4 x i32>*
  %3126 = load <4 x i32>, <4 x i32>* %3125, align 4, !tbaa !3
  %3127 = getelementptr inbounds i32, i32* %3124, i32 4
  %3128 = bitcast i32* %3127 to <4 x i32>*
  %3129 = load <4 x i32>, <4 x i32>* %3128, align 4, !tbaa !3
  %3130 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3126
  %3131 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3129
  %3132 = bitcast <4 x i8*> %3130 to <4 x i64*>
  %3133 = bitcast <4 x i8*> %3131 to <4 x i64*>
  %3134 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3132, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3135 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3133, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3136 = icmp eq <4 x i32> %3116, %3126
  %3137 = icmp eq <4 x i32> %3118, %3129
  %3138 = select <4 x i1> %3136, <4 x i64> %3134, <4 x i64> zeroinitializer
  %3139 = select <4 x i1> %3137, <4 x i64> %3135, <4 x i64> zeroinitializer
  %3140 = add <4 x i64> %3138, %3121
  %3141 = add <4 x i64> %3139, %3122
  %3142 = or i32 %3120, 9
  %3143 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3142
  %3144 = bitcast i32* %3143 to <4 x i32>*
  %3145 = load <4 x i32>, <4 x i32>* %3144, align 4, !tbaa !3
  %3146 = getelementptr inbounds i32, i32* %3143, i32 4
  %3147 = bitcast i32* %3146 to <4 x i32>*
  %3148 = load <4 x i32>, <4 x i32>* %3147, align 4, !tbaa !3
  %3149 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3145
  %3150 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3148
  %3151 = bitcast <4 x i8*> %3149 to <4 x i64*>
  %3152 = bitcast <4 x i8*> %3150 to <4 x i64*>
  %3153 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3151, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3154 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3152, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3155 = icmp eq <4 x i32> %3116, %3145
  %3156 = icmp eq <4 x i32> %3118, %3148
  %3157 = select <4 x i1> %3155, <4 x i64> %3153, <4 x i64> zeroinitializer
  %3158 = select <4 x i1> %3156, <4 x i64> %3154, <4 x i64> zeroinitializer
  %3159 = add <4 x i64> %3157, %3140
  %3160 = add <4 x i64> %3158, %3141
  %3161 = or i32 %3120, 17
  %3162 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3161
  %3163 = bitcast i32* %3162 to <4 x i32>*
  %3164 = load <4 x i32>, <4 x i32>* %3163, align 4, !tbaa !3
  %3165 = getelementptr inbounds i32, i32* %3162, i32 4
  %3166 = bitcast i32* %3165 to <4 x i32>*
  %3167 = load <4 x i32>, <4 x i32>* %3166, align 4, !tbaa !3
  %3168 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3164
  %3169 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3167
  %3170 = bitcast <4 x i8*> %3168 to <4 x i64*>
  %3171 = bitcast <4 x i8*> %3169 to <4 x i64*>
  %3172 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3170, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3173 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3171, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3174 = icmp eq <4 x i32> %3116, %3164
  %3175 = icmp eq <4 x i32> %3118, %3167
  %3176 = select <4 x i1> %3174, <4 x i64> %3172, <4 x i64> zeroinitializer
  %3177 = select <4 x i1> %3175, <4 x i64> %3173, <4 x i64> zeroinitializer
  %3178 = add <4 x i64> %3176, %3159
  %3179 = add <4 x i64> %3177, %3160
  %3180 = icmp eq i32 %3120, 224
  br i1 %3180, label %3181, label %14039, !llvm.loop !47

3181:                                             ; preds = %3119
  %3182 = add <4 x i64> %3179, %3178
  %3183 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3182)
  %3184 = icmp eq i32 %3114, 1992
  %3185 = select i1 %3184, i64 -314670665226827390, i64 0
  %3186 = add i64 %3185, %3183
  %3187 = icmp eq i32 %3114, 2000
  %3188 = select i1 %3187, i64 -7097468252516276247, i64 0
  %3189 = add i64 %3188, %3186
  %3190 = icmp eq i32 %3114, 2008
  %3191 = select i1 %3190, i64 -3364349307489619821, i64 0
  %3192 = add i64 %3191, %3189
  %3193 = icmp eq i32 %3114, 2016
  %3194 = select i1 %3193, i64 2386735715921845721, i64 0
  %3195 = add i64 %3194, %3192
  %3196 = icmp eq i32 %3114, 2024
  %3197 = select i1 %3196, i64 4884933414564023389, i64 0
  %3198 = add i64 %3197, %3195
  %3199 = icmp eq i32 %3114, 2032
  %3200 = select i1 %3199, i64 -2041757280372035110, i64 0
  %3201 = add i64 %3200, %3198
  %3202 = icmp eq i32 %3114, 2040
  %3203 = select i1 %3202, i64 -4160667357316787220, i64 0
  %3204 = add i64 %3203, %3201
  %3205 = lshr i64 %3018, 37
  %3206 = trunc i64 %3205 to i32
  %3207 = and i32 %3206, 2040
  %3208 = insertelement <4 x i32> poison, i32 %3207, i32 0
  %3209 = shufflevector <4 x i32> %3208, <4 x i32> poison, <4 x i32> zeroinitializer
  %3210 = insertelement <4 x i32> poison, i32 %3207, i32 0
  %3211 = shufflevector <4 x i32> %3210, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3212

3212:                                             ; preds = %14018, %3181
  %3213 = phi i32 [ 0, %3181 ], [ %14038, %14018 ]
  %3214 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3181 ], [ %14036, %14018 ]
  %3215 = phi <4 x i64> [ zeroinitializer, %3181 ], [ %14037, %14018 ]
  %3216 = or i32 %3213, 1
  %3217 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3216
  %3218 = bitcast i32* %3217 to <4 x i32>*
  %3219 = load <4 x i32>, <4 x i32>* %3218, align 4, !tbaa !3
  %3220 = getelementptr inbounds i32, i32* %3217, i32 4
  %3221 = bitcast i32* %3220 to <4 x i32>*
  %3222 = load <4 x i32>, <4 x i32>* %3221, align 4, !tbaa !3
  %3223 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3219
  %3224 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3222
  %3225 = bitcast <4 x i8*> %3223 to <4 x i64*>
  %3226 = bitcast <4 x i8*> %3224 to <4 x i64*>
  %3227 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3225, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3228 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3226, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3229 = icmp eq <4 x i32> %3209, %3219
  %3230 = icmp eq <4 x i32> %3211, %3222
  %3231 = select <4 x i1> %3229, <4 x i64> %3227, <4 x i64> zeroinitializer
  %3232 = select <4 x i1> %3230, <4 x i64> %3228, <4 x i64> zeroinitializer
  %3233 = add <4 x i64> %3231, %3214
  %3234 = add <4 x i64> %3232, %3215
  %3235 = or i32 %3213, 9
  %3236 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3235
  %3237 = bitcast i32* %3236 to <4 x i32>*
  %3238 = load <4 x i32>, <4 x i32>* %3237, align 4, !tbaa !3
  %3239 = getelementptr inbounds i32, i32* %3236, i32 4
  %3240 = bitcast i32* %3239 to <4 x i32>*
  %3241 = load <4 x i32>, <4 x i32>* %3240, align 4, !tbaa !3
  %3242 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3238
  %3243 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3241
  %3244 = bitcast <4 x i8*> %3242 to <4 x i64*>
  %3245 = bitcast <4 x i8*> %3243 to <4 x i64*>
  %3246 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3244, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3247 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3245, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3248 = icmp eq <4 x i32> %3209, %3238
  %3249 = icmp eq <4 x i32> %3211, %3241
  %3250 = select <4 x i1> %3248, <4 x i64> %3246, <4 x i64> zeroinitializer
  %3251 = select <4 x i1> %3249, <4 x i64> %3247, <4 x i64> zeroinitializer
  %3252 = add <4 x i64> %3250, %3233
  %3253 = add <4 x i64> %3251, %3234
  %3254 = or i32 %3213, 17
  %3255 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3254
  %3256 = bitcast i32* %3255 to <4 x i32>*
  %3257 = load <4 x i32>, <4 x i32>* %3256, align 4, !tbaa !3
  %3258 = getelementptr inbounds i32, i32* %3255, i32 4
  %3259 = bitcast i32* %3258 to <4 x i32>*
  %3260 = load <4 x i32>, <4 x i32>* %3259, align 4, !tbaa !3
  %3261 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3257
  %3262 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3260
  %3263 = bitcast <4 x i8*> %3261 to <4 x i64*>
  %3264 = bitcast <4 x i8*> %3262 to <4 x i64*>
  %3265 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3263, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3266 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3264, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3267 = icmp eq <4 x i32> %3209, %3257
  %3268 = icmp eq <4 x i32> %3211, %3260
  %3269 = select <4 x i1> %3267, <4 x i64> %3265, <4 x i64> zeroinitializer
  %3270 = select <4 x i1> %3268, <4 x i64> %3266, <4 x i64> zeroinitializer
  %3271 = add <4 x i64> %3269, %3252
  %3272 = add <4 x i64> %3270, %3253
  %3273 = icmp eq i32 %3213, 224
  br i1 %3273, label %3274, label %14018, !llvm.loop !48

3274:                                             ; preds = %3212
  %3275 = add <4 x i64> %3272, %3271
  %3276 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3275)
  %3277 = icmp eq i32 %3207, 1992
  %3278 = select i1 %3277, i64 -5615809534224635015, i64 0
  %3279 = add i64 %3278, %3276
  %3280 = icmp eq i32 %3207, 2000
  %3281 = select i1 %3280, i64 4231836215586269044, i64 0
  %3282 = add i64 %3281, %3279
  %3283 = icmp eq i32 %3207, 2008
  %3284 = select i1 %3283, i64 2408950612238581570, i64 0
  %3285 = add i64 %3284, %3282
  %3286 = icmp eq i32 %3207, 2016
  %3287 = select i1 %3286, i64 8963041913638568696, i64 0
  %3288 = add i64 %3287, %3285
  %3289 = icmp eq i32 %3207, 2024
  %3290 = select i1 %3289, i64 1136536871657834014, i64 0
  %3291 = add i64 %3290, %3288
  %3292 = icmp eq i32 %3207, 2032
  %3293 = select i1 %3292, i64 -7910384849877083335, i64 0
  %3294 = add i64 %3293, %3291
  %3295 = icmp eq i32 %3207, 2040
  %3296 = select i1 %3295, i64 1537771219914559786, i64 0
  %3297 = add i64 %3296, %3294
  %3298 = lshr i64 %3018, 29
  %3299 = trunc i64 %3298 to i32
  %3300 = and i32 %3299, 2040
  %3301 = insertelement <4 x i32> poison, i32 %3300, i32 0
  %3302 = shufflevector <4 x i32> %3301, <4 x i32> poison, <4 x i32> zeroinitializer
  %3303 = insertelement <4 x i32> poison, i32 %3300, i32 0
  %3304 = shufflevector <4 x i32> %3303, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3305

3305:                                             ; preds = %13997, %3274
  %3306 = phi i32 [ 0, %3274 ], [ %14017, %13997 ]
  %3307 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3274 ], [ %14015, %13997 ]
  %3308 = phi <4 x i64> [ zeroinitializer, %3274 ], [ %14016, %13997 ]
  %3309 = or i32 %3306, 1
  %3310 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3309
  %3311 = bitcast i32* %3310 to <4 x i32>*
  %3312 = load <4 x i32>, <4 x i32>* %3311, align 4, !tbaa !3
  %3313 = getelementptr inbounds i32, i32* %3310, i32 4
  %3314 = bitcast i32* %3313 to <4 x i32>*
  %3315 = load <4 x i32>, <4 x i32>* %3314, align 4, !tbaa !3
  %3316 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %3312
  %3317 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %3315
  %3318 = bitcast <4 x i8*> %3316 to <4 x i64*>
  %3319 = bitcast <4 x i8*> %3317 to <4 x i64*>
  %3320 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3318, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3321 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3319, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3322 = icmp eq <4 x i32> %3302, %3312
  %3323 = icmp eq <4 x i32> %3304, %3315
  %3324 = select <4 x i1> %3322, <4 x i64> %3320, <4 x i64> zeroinitializer
  %3325 = select <4 x i1> %3323, <4 x i64> %3321, <4 x i64> zeroinitializer
  %3326 = add <4 x i64> %3324, %3307
  %3327 = add <4 x i64> %3325, %3308
  %3328 = or i32 %3306, 9
  %3329 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3328
  %3330 = bitcast i32* %3329 to <4 x i32>*
  %3331 = load <4 x i32>, <4 x i32>* %3330, align 4, !tbaa !3
  %3332 = getelementptr inbounds i32, i32* %3329, i32 4
  %3333 = bitcast i32* %3332 to <4 x i32>*
  %3334 = load <4 x i32>, <4 x i32>* %3333, align 4, !tbaa !3
  %3335 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %3331
  %3336 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %3334
  %3337 = bitcast <4 x i8*> %3335 to <4 x i64*>
  %3338 = bitcast <4 x i8*> %3336 to <4 x i64*>
  %3339 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3337, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3340 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3338, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3341 = icmp eq <4 x i32> %3302, %3331
  %3342 = icmp eq <4 x i32> %3304, %3334
  %3343 = select <4 x i1> %3341, <4 x i64> %3339, <4 x i64> zeroinitializer
  %3344 = select <4 x i1> %3342, <4 x i64> %3340, <4 x i64> zeroinitializer
  %3345 = add <4 x i64> %3343, %3326
  %3346 = add <4 x i64> %3344, %3327
  %3347 = or i32 %3306, 17
  %3348 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3347
  %3349 = bitcast i32* %3348 to <4 x i32>*
  %3350 = load <4 x i32>, <4 x i32>* %3349, align 4, !tbaa !3
  %3351 = getelementptr inbounds i32, i32* %3348, i32 4
  %3352 = bitcast i32* %3351 to <4 x i32>*
  %3353 = load <4 x i32>, <4 x i32>* %3352, align 4, !tbaa !3
  %3354 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %3350
  %3355 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %3353
  %3356 = bitcast <4 x i8*> %3354 to <4 x i64*>
  %3357 = bitcast <4 x i8*> %3355 to <4 x i64*>
  %3358 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3356, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3359 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3357, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3360 = icmp eq <4 x i32> %3302, %3350
  %3361 = icmp eq <4 x i32> %3304, %3353
  %3362 = select <4 x i1> %3360, <4 x i64> %3358, <4 x i64> zeroinitializer
  %3363 = select <4 x i1> %3361, <4 x i64> %3359, <4 x i64> zeroinitializer
  %3364 = add <4 x i64> %3362, %3345
  %3365 = add <4 x i64> %3363, %3346
  %3366 = icmp eq i32 %3306, 224
  br i1 %3366, label %3367, label %13997, !llvm.loop !49

3367:                                             ; preds = %3305
  %3368 = add <4 x i64> %3365, %3364
  %3369 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3368)
  %3370 = icmp eq i32 %3300, 1992
  %3371 = select i1 %3370, i64 1203300724897905131, i64 0
  %3372 = add i64 %3371, %3369
  %3373 = icmp eq i32 %3300, 2000
  %3374 = select i1 %3373, i64 -5027532858107268057, i64 0
  %3375 = add i64 %3374, %3372
  %3376 = icmp eq i32 %3300, 2008
  %3377 = select i1 %3376, i64 7935854159672328895, i64 0
  %3378 = add i64 %3377, %3375
  %3379 = icmp eq i32 %3300, 2016
  %3380 = select i1 %3379, i64 7168641125469255746, i64 0
  %3381 = add i64 %3380, %3378
  %3382 = icmp eq i32 %3300, 2024
  %3383 = select i1 %3382, i64 -4247101387443462522, i64 0
  %3384 = add i64 %3383, %3381
  %3385 = icmp eq i32 %3300, 2032
  %3386 = select i1 %3385, i64 4076570933917792731, i64 0
  %3387 = add i64 %3386, %3384
  %3388 = icmp eq i32 %3300, 2040
  %3389 = select i1 %3388, i64 6275139646136265361, i64 0
  %3390 = add i64 %3389, %3387
  %3391 = lshr i64 %3018, 21
  %3392 = trunc i64 %3391 to i32
  %3393 = and i32 %3392, 2040
  %3394 = insertelement <4 x i32> poison, i32 %3393, i32 0
  %3395 = shufflevector <4 x i32> %3394, <4 x i32> poison, <4 x i32> zeroinitializer
  %3396 = insertelement <4 x i32> poison, i32 %3393, i32 0
  %3397 = shufflevector <4 x i32> %3396, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3398

3398:                                             ; preds = %13976, %3367
  %3399 = phi i32 [ 0, %3367 ], [ %13996, %13976 ]
  %3400 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3367 ], [ %13994, %13976 ]
  %3401 = phi <4 x i64> [ zeroinitializer, %3367 ], [ %13995, %13976 ]
  %3402 = or i32 %3399, 1
  %3403 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3402
  %3404 = bitcast i32* %3403 to <4 x i32>*
  %3405 = load <4 x i32>, <4 x i32>* %3404, align 4, !tbaa !3
  %3406 = getelementptr inbounds i32, i32* %3403, i32 4
  %3407 = bitcast i32* %3406 to <4 x i32>*
  %3408 = load <4 x i32>, <4 x i32>* %3407, align 4, !tbaa !3
  %3409 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %3405
  %3410 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %3408
  %3411 = bitcast <4 x i8*> %3409 to <4 x i64*>
  %3412 = bitcast <4 x i8*> %3410 to <4 x i64*>
  %3413 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3411, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3414 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3412, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3415 = icmp eq <4 x i32> %3395, %3405
  %3416 = icmp eq <4 x i32> %3397, %3408
  %3417 = select <4 x i1> %3415, <4 x i64> %3413, <4 x i64> zeroinitializer
  %3418 = select <4 x i1> %3416, <4 x i64> %3414, <4 x i64> zeroinitializer
  %3419 = add <4 x i64> %3417, %3400
  %3420 = add <4 x i64> %3418, %3401
  %3421 = or i32 %3399, 9
  %3422 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3421
  %3423 = bitcast i32* %3422 to <4 x i32>*
  %3424 = load <4 x i32>, <4 x i32>* %3423, align 4, !tbaa !3
  %3425 = getelementptr inbounds i32, i32* %3422, i32 4
  %3426 = bitcast i32* %3425 to <4 x i32>*
  %3427 = load <4 x i32>, <4 x i32>* %3426, align 4, !tbaa !3
  %3428 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %3424
  %3429 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %3427
  %3430 = bitcast <4 x i8*> %3428 to <4 x i64*>
  %3431 = bitcast <4 x i8*> %3429 to <4 x i64*>
  %3432 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3430, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3433 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3431, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3434 = icmp eq <4 x i32> %3395, %3424
  %3435 = icmp eq <4 x i32> %3397, %3427
  %3436 = select <4 x i1> %3434, <4 x i64> %3432, <4 x i64> zeroinitializer
  %3437 = select <4 x i1> %3435, <4 x i64> %3433, <4 x i64> zeroinitializer
  %3438 = add <4 x i64> %3436, %3419
  %3439 = add <4 x i64> %3437, %3420
  %3440 = or i32 %3399, 17
  %3441 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3440
  %3442 = bitcast i32* %3441 to <4 x i32>*
  %3443 = load <4 x i32>, <4 x i32>* %3442, align 4, !tbaa !3
  %3444 = getelementptr inbounds i32, i32* %3441, i32 4
  %3445 = bitcast i32* %3444 to <4 x i32>*
  %3446 = load <4 x i32>, <4 x i32>* %3445, align 4, !tbaa !3
  %3447 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %3443
  %3448 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %3446
  %3449 = bitcast <4 x i8*> %3447 to <4 x i64*>
  %3450 = bitcast <4 x i8*> %3448 to <4 x i64*>
  %3451 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3449, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3452 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3450, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3453 = icmp eq <4 x i32> %3395, %3443
  %3454 = icmp eq <4 x i32> %3397, %3446
  %3455 = select <4 x i1> %3453, <4 x i64> %3451, <4 x i64> zeroinitializer
  %3456 = select <4 x i1> %3454, <4 x i64> %3452, <4 x i64> zeroinitializer
  %3457 = add <4 x i64> %3455, %3438
  %3458 = add <4 x i64> %3456, %3439
  %3459 = icmp eq i32 %3399, 224
  br i1 %3459, label %3460, label %13976, !llvm.loop !50

3460:                                             ; preds = %3398
  %3461 = add <4 x i64> %3458, %3457
  %3462 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3461)
  %3463 = icmp eq i32 %3393, 1992
  %3464 = select i1 %3463, i64 -1479007749835869680, i64 0
  %3465 = add i64 %3464, %3462
  %3466 = icmp eq i32 %3393, 2000
  %3467 = select i1 %3466, i64 2843154170404223674, i64 0
  %3468 = add i64 %3467, %3465
  %3469 = icmp eq i32 %3393, 2008
  %3470 = select i1 %3469, i64 -4665003603661872786, i64 0
  %3471 = add i64 %3470, %3468
  %3472 = icmp eq i32 %3393, 2016
  %3473 = select i1 %3472, i64 4825845994704960611, i64 0
  %3474 = add i64 %3473, %3471
  %3475 = icmp eq i32 %3393, 2024
  %3476 = select i1 %3475, i64 -8782479638933598267, i64 0
  %3477 = add i64 %3476, %3474
  %3478 = icmp eq i32 %3393, 2032
  %3479 = select i1 %3478, i64 -2649846723997625800, i64 0
  %3480 = add i64 %3479, %3477
  %3481 = icmp eq i32 %3393, 2040
  %3482 = select i1 %3481, i64 -7986310597085620905, i64 0
  %3483 = add i64 %3482, %3480
  %3484 = lshr i64 %3018, 13
  %3485 = trunc i64 %3484 to i32
  %3486 = and i32 %3485, 2040
  %3487 = insertelement <4 x i32> poison, i32 %3486, i32 0
  %3488 = shufflevector <4 x i32> %3487, <4 x i32> poison, <4 x i32> zeroinitializer
  %3489 = insertelement <4 x i32> poison, i32 %3486, i32 0
  %3490 = shufflevector <4 x i32> %3489, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3491

3491:                                             ; preds = %13955, %3460
  %3492 = phi i32 [ 0, %3460 ], [ %13975, %13955 ]
  %3493 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3460 ], [ %13973, %13955 ]
  %3494 = phi <4 x i64> [ zeroinitializer, %3460 ], [ %13974, %13955 ]
  %3495 = or i32 %3492, 1
  %3496 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3495
  %3497 = bitcast i32* %3496 to <4 x i32>*
  %3498 = load <4 x i32>, <4 x i32>* %3497, align 4, !tbaa !3
  %3499 = getelementptr inbounds i32, i32* %3496, i32 4
  %3500 = bitcast i32* %3499 to <4 x i32>*
  %3501 = load <4 x i32>, <4 x i32>* %3500, align 4, !tbaa !3
  %3502 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %3498
  %3503 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %3501
  %3504 = bitcast <4 x i8*> %3502 to <4 x i64*>
  %3505 = bitcast <4 x i8*> %3503 to <4 x i64*>
  %3506 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3504, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3507 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3505, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3508 = icmp eq <4 x i32> %3488, %3498
  %3509 = icmp eq <4 x i32> %3490, %3501
  %3510 = select <4 x i1> %3508, <4 x i64> %3506, <4 x i64> zeroinitializer
  %3511 = select <4 x i1> %3509, <4 x i64> %3507, <4 x i64> zeroinitializer
  %3512 = add <4 x i64> %3510, %3493
  %3513 = add <4 x i64> %3511, %3494
  %3514 = or i32 %3492, 9
  %3515 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3514
  %3516 = bitcast i32* %3515 to <4 x i32>*
  %3517 = load <4 x i32>, <4 x i32>* %3516, align 4, !tbaa !3
  %3518 = getelementptr inbounds i32, i32* %3515, i32 4
  %3519 = bitcast i32* %3518 to <4 x i32>*
  %3520 = load <4 x i32>, <4 x i32>* %3519, align 4, !tbaa !3
  %3521 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %3517
  %3522 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %3520
  %3523 = bitcast <4 x i8*> %3521 to <4 x i64*>
  %3524 = bitcast <4 x i8*> %3522 to <4 x i64*>
  %3525 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3523, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3526 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3524, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3527 = icmp eq <4 x i32> %3488, %3517
  %3528 = icmp eq <4 x i32> %3490, %3520
  %3529 = select <4 x i1> %3527, <4 x i64> %3525, <4 x i64> zeroinitializer
  %3530 = select <4 x i1> %3528, <4 x i64> %3526, <4 x i64> zeroinitializer
  %3531 = add <4 x i64> %3529, %3512
  %3532 = add <4 x i64> %3530, %3513
  %3533 = or i32 %3492, 17
  %3534 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3533
  %3535 = bitcast i32* %3534 to <4 x i32>*
  %3536 = load <4 x i32>, <4 x i32>* %3535, align 4, !tbaa !3
  %3537 = getelementptr inbounds i32, i32* %3534, i32 4
  %3538 = bitcast i32* %3537 to <4 x i32>*
  %3539 = load <4 x i32>, <4 x i32>* %3538, align 4, !tbaa !3
  %3540 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %3536
  %3541 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %3539
  %3542 = bitcast <4 x i8*> %3540 to <4 x i64*>
  %3543 = bitcast <4 x i8*> %3541 to <4 x i64*>
  %3544 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3542, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3545 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3543, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3546 = icmp eq <4 x i32> %3488, %3536
  %3547 = icmp eq <4 x i32> %3490, %3539
  %3548 = select <4 x i1> %3546, <4 x i64> %3544, <4 x i64> zeroinitializer
  %3549 = select <4 x i1> %3547, <4 x i64> %3545, <4 x i64> zeroinitializer
  %3550 = add <4 x i64> %3548, %3531
  %3551 = add <4 x i64> %3549, %3532
  %3552 = icmp eq i32 %3492, 224
  br i1 %3552, label %3553, label %13955, !llvm.loop !51

3553:                                             ; preds = %3491
  %3554 = add <4 x i64> %3551, %3550
  %3555 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3554)
  %3556 = icmp eq i32 %3486, 1992
  %3557 = select i1 %3556, i64 8785196325032562866, i64 0
  %3558 = add i64 %3557, %3555
  %3559 = icmp eq i32 %3486, 2000
  %3560 = select i1 %3559, i64 8369843054303033914, i64 0
  %3561 = add i64 %3560, %3558
  %3562 = icmp eq i32 %3486, 2008
  %3563 = select i1 %3562, i64 4809827444717481505, i64 0
  %3564 = add i64 %3563, %3561
  %3565 = icmp eq i32 %3486, 2016
  %3566 = select i1 %3565, i64 -557780216695528580, i64 0
  %3567 = add i64 %3566, %3564
  %3568 = icmp eq i32 %3486, 2024
  %3569 = select i1 %3568, i64 2199529431470097679, i64 0
  %3570 = add i64 %3569, %3567
  %3571 = icmp eq i32 %3486, 2032
  %3572 = select i1 %3571, i64 4169051064997918866, i64 0
  %3573 = add i64 %3572, %3570
  %3574 = icmp eq i32 %3486, 2040
  %3575 = select i1 %3574, i64 3067465835107997461, i64 0
  %3576 = add i64 %3575, %3573
  %3577 = lshr i64 %3018, 5
  %3578 = trunc i64 %3577 to i32
  %3579 = and i32 %3578, 2040
  %3580 = insertelement <4 x i32> poison, i32 %3579, i32 0
  %3581 = shufflevector <4 x i32> %3580, <4 x i32> poison, <4 x i32> zeroinitializer
  %3582 = insertelement <4 x i32> poison, i32 %3579, i32 0
  %3583 = shufflevector <4 x i32> %3582, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3584

3584:                                             ; preds = %13934, %3553
  %3585 = phi i32 [ 0, %3553 ], [ %13954, %13934 ]
  %3586 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3553 ], [ %13952, %13934 ]
  %3587 = phi <4 x i64> [ zeroinitializer, %3553 ], [ %13953, %13934 ]
  %3588 = or i32 %3585, 1
  %3589 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3588
  %3590 = bitcast i32* %3589 to <4 x i32>*
  %3591 = load <4 x i32>, <4 x i32>* %3590, align 4, !tbaa !3
  %3592 = getelementptr inbounds i32, i32* %3589, i32 4
  %3593 = bitcast i32* %3592 to <4 x i32>*
  %3594 = load <4 x i32>, <4 x i32>* %3593, align 4, !tbaa !3
  %3595 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %3591
  %3596 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %3594
  %3597 = bitcast <4 x i8*> %3595 to <4 x i64*>
  %3598 = bitcast <4 x i8*> %3596 to <4 x i64*>
  %3599 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3597, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3600 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3598, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3601 = icmp eq <4 x i32> %3581, %3591
  %3602 = icmp eq <4 x i32> %3583, %3594
  %3603 = select <4 x i1> %3601, <4 x i64> %3599, <4 x i64> zeroinitializer
  %3604 = select <4 x i1> %3602, <4 x i64> %3600, <4 x i64> zeroinitializer
  %3605 = add <4 x i64> %3603, %3586
  %3606 = add <4 x i64> %3604, %3587
  %3607 = or i32 %3585, 9
  %3608 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3607
  %3609 = bitcast i32* %3608 to <4 x i32>*
  %3610 = load <4 x i32>, <4 x i32>* %3609, align 4, !tbaa !3
  %3611 = getelementptr inbounds i32, i32* %3608, i32 4
  %3612 = bitcast i32* %3611 to <4 x i32>*
  %3613 = load <4 x i32>, <4 x i32>* %3612, align 4, !tbaa !3
  %3614 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %3610
  %3615 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %3613
  %3616 = bitcast <4 x i8*> %3614 to <4 x i64*>
  %3617 = bitcast <4 x i8*> %3615 to <4 x i64*>
  %3618 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3616, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3619 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3617, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3620 = icmp eq <4 x i32> %3581, %3610
  %3621 = icmp eq <4 x i32> %3583, %3613
  %3622 = select <4 x i1> %3620, <4 x i64> %3618, <4 x i64> zeroinitializer
  %3623 = select <4 x i1> %3621, <4 x i64> %3619, <4 x i64> zeroinitializer
  %3624 = add <4 x i64> %3622, %3605
  %3625 = add <4 x i64> %3623, %3606
  %3626 = or i32 %3585, 17
  %3627 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3626
  %3628 = bitcast i32* %3627 to <4 x i32>*
  %3629 = load <4 x i32>, <4 x i32>* %3628, align 4, !tbaa !3
  %3630 = getelementptr inbounds i32, i32* %3627, i32 4
  %3631 = bitcast i32* %3630 to <4 x i32>*
  %3632 = load <4 x i32>, <4 x i32>* %3631, align 4, !tbaa !3
  %3633 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %3629
  %3634 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %3632
  %3635 = bitcast <4 x i8*> %3633 to <4 x i64*>
  %3636 = bitcast <4 x i8*> %3634 to <4 x i64*>
  %3637 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3635, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3638 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3636, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3639 = icmp eq <4 x i32> %3581, %3629
  %3640 = icmp eq <4 x i32> %3583, %3632
  %3641 = select <4 x i1> %3639, <4 x i64> %3637, <4 x i64> zeroinitializer
  %3642 = select <4 x i1> %3640, <4 x i64> %3638, <4 x i64> zeroinitializer
  %3643 = add <4 x i64> %3641, %3624
  %3644 = add <4 x i64> %3642, %3625
  %3645 = icmp eq i32 %3585, 224
  br i1 %3645, label %3646, label %13934, !llvm.loop !52

3646:                                             ; preds = %3584
  %3647 = add <4 x i64> %3644, %3643
  %3648 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3647)
  %3649 = icmp eq i32 %3579, 1992
  %3650 = select i1 %3649, i64 -9058450267568037125, i64 0
  %3651 = add i64 %3650, %3648
  %3652 = icmp eq i32 %3579, 2000
  %3653 = select i1 %3652, i64 -1610274961606672227, i64 0
  %3654 = add i64 %3653, %3651
  %3655 = icmp eq i32 %3579, 2008
  %3656 = select i1 %3655, i64 -7786513464973963311, i64 0
  %3657 = add i64 %3656, %3654
  %3658 = icmp eq i32 %3579, 2016
  %3659 = select i1 %3658, i64 -2783995359638905055, i64 0
  %3660 = add i64 %3659, %3657
  %3661 = icmp eq i32 %3579, 2024
  %3662 = select i1 %3661, i64 6722895807429069379, i64 0
  %3663 = add i64 %3662, %3660
  %3664 = icmp eq i32 %3579, 2032
  %3665 = select i1 %3664, i64 -2706140860760151325, i64 0
  %3666 = add i64 %3665, %3663
  %3667 = icmp eq i32 %3579, 2040
  %3668 = select i1 %3667, i64 -1381601050739916090, i64 0
  %3669 = add i64 %3668, %3666
  %3670 = trunc i64 %3018 to i32
  %3671 = and i32 %3670, 255
  %3672 = getelementptr inbounds [256 x i64], [256 x i64]* @T7, i32 0, i32 %3671
  %3673 = insertelement <4 x i64*> poison, i64* %3672, i32 0
  %3674 = shufflevector <4 x i64*> %3673, <4 x i64*> poison, <4 x i32> zeroinitializer
  %3675 = insertelement <4 x i64*> poison, i64* %3672, i32 0
  %3676 = shufflevector <4 x i64*> %3675, <4 x i64*> poison, <4 x i32> zeroinitializer
  br label %3677

3677:                                             ; preds = %13913, %3646
  %3678 = phi i32 [ 0, %3646 ], [ %13933, %13913 ]
  %3679 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3646 ], [ %13931, %13913 ]
  %3680 = phi <4 x i64> [ zeroinitializer, %3646 ], [ %13932, %13913 ]
  %3681 = or i32 %3678, 1
  %3682 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3681
  %3683 = bitcast i32* %3682 to <4 x i32>*
  %3684 = load <4 x i32>, <4 x i32>* %3683, align 4, !tbaa !3
  %3685 = getelementptr inbounds i32, i32* %3682, i32 4
  %3686 = bitcast i32* %3685 to <4 x i32>*
  %3687 = load <4 x i32>, <4 x i32>* %3686, align 4, !tbaa !3
  %3688 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %3684
  %3689 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %3687
  %3690 = bitcast <4 x i8*> %3688 to <4 x i64*>
  %3691 = bitcast <4 x i8*> %3689 to <4 x i64*>
  %3692 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3690, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3693 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3691, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3694 = icmp eq <4 x i64*> %3674, %3690
  %3695 = icmp eq <4 x i64*> %3676, %3691
  %3696 = select <4 x i1> %3694, <4 x i64> %3692, <4 x i64> zeroinitializer
  %3697 = select <4 x i1> %3695, <4 x i64> %3693, <4 x i64> zeroinitializer
  %3698 = add <4 x i64> %3696, %3679
  %3699 = add <4 x i64> %3697, %3680
  %3700 = or i32 %3678, 9
  %3701 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3700
  %3702 = bitcast i32* %3701 to <4 x i32>*
  %3703 = load <4 x i32>, <4 x i32>* %3702, align 4, !tbaa !3
  %3704 = getelementptr inbounds i32, i32* %3701, i32 4
  %3705 = bitcast i32* %3704 to <4 x i32>*
  %3706 = load <4 x i32>, <4 x i32>* %3705, align 4, !tbaa !3
  %3707 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %3703
  %3708 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %3706
  %3709 = bitcast <4 x i8*> %3707 to <4 x i64*>
  %3710 = bitcast <4 x i8*> %3708 to <4 x i64*>
  %3711 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3709, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3712 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3710, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3713 = icmp eq <4 x i64*> %3674, %3709
  %3714 = icmp eq <4 x i64*> %3676, %3710
  %3715 = select <4 x i1> %3713, <4 x i64> %3711, <4 x i64> zeroinitializer
  %3716 = select <4 x i1> %3714, <4 x i64> %3712, <4 x i64> zeroinitializer
  %3717 = add <4 x i64> %3715, %3698
  %3718 = add <4 x i64> %3716, %3699
  %3719 = or i32 %3678, 17
  %3720 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3719
  %3721 = bitcast i32* %3720 to <4 x i32>*
  %3722 = load <4 x i32>, <4 x i32>* %3721, align 4, !tbaa !3
  %3723 = getelementptr inbounds i32, i32* %3720, i32 4
  %3724 = bitcast i32* %3723 to <4 x i32>*
  %3725 = load <4 x i32>, <4 x i32>* %3724, align 4, !tbaa !3
  %3726 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %3722
  %3727 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %3725
  %3728 = bitcast <4 x i8*> %3726 to <4 x i64*>
  %3729 = bitcast <4 x i8*> %3727 to <4 x i64*>
  %3730 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3728, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3731 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3729, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3732 = icmp eq <4 x i64*> %3674, %3728
  %3733 = icmp eq <4 x i64*> %3676, %3729
  %3734 = select <4 x i1> %3732, <4 x i64> %3730, <4 x i64> zeroinitializer
  %3735 = select <4 x i1> %3733, <4 x i64> %3731, <4 x i64> zeroinitializer
  %3736 = add <4 x i64> %3734, %3717
  %3737 = add <4 x i64> %3735, %3718
  %3738 = icmp eq i32 %3678, 224
  br i1 %3738, label %3739, label %13913, !llvm.loop !53

3739:                                             ; preds = %3677
  %3740 = add <4 x i64> %3737, %3736
  %3741 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3740)
  %3742 = icmp eq i32 %3671, 249
  %3743 = select i1 %3742, i64 5296930162245565346, i64 0
  %3744 = add i64 %3743, %3741
  %3745 = icmp eq i32 %3671, 250
  %3746 = select i1 %3745, i64 -6347414485825053312, i64 0
  %3747 = add i64 %3746, %3744
  %3748 = icmp eq i32 %3671, 251
  %3749 = select i1 %3748, i64 -1111471293076483761, i64 0
  %3750 = add i64 %3749, %3747
  %3751 = icmp eq i32 %3671, 252
  %3752 = select i1 %3751, i64 6762709279494119711, i64 0
  %3753 = add i64 %3752, %3750
  %3754 = icmp eq i32 %3671, 253
  %3755 = select i1 %3754, i64 5502587883897177034, i64 0
  %3756 = add i64 %3755, %3753
  %3757 = icmp eq i32 %3671, 254
  %3758 = select i1 %3757, i64 8203933284918551466, i64 0
  %3759 = add i64 %3758, %3756
  %3760 = icmp eq i32 %3671, 255
  %3761 = select i1 %3760, i64 -3176116833483372990, i64 0
  %3762 = add i64 %3761, %3759
  %3763 = xor i64 %2264, %3111
  %3764 = xor i64 %3763, %3204
  %3765 = xor i64 %3764, %3297
  %3766 = xor i64 %3765, %3390
  %3767 = xor i64 %3766, %3483
  %3768 = xor i64 %3767, %3576
  %3769 = xor i64 %3768, %3669
  %3770 = xor i64 %3769, %3762
  %3771 = xor i64 %3770, -5539663668192884603
  store i64 %3771, i64* @ctx.0.4, align 8, !tbaa !7
  %3772 = lshr i64 %3771, 53
  %3773 = trunc i64 %3772 to i32
  %3774 = and i32 %3773, 2040
  %3775 = insertelement <4 x i32> poison, i32 %3774, i32 0
  %3776 = shufflevector <4 x i32> %3775, <4 x i32> poison, <4 x i32> zeroinitializer
  %3777 = insertelement <4 x i32> poison, i32 %3774, i32 0
  %3778 = shufflevector <4 x i32> %3777, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3779

3779:                                             ; preds = %13892, %3739
  %3780 = phi i32 [ 0, %3739 ], [ %13912, %13892 ]
  %3781 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3739 ], [ %13910, %13892 ]
  %3782 = phi <4 x i64> [ zeroinitializer, %3739 ], [ %13911, %13892 ]
  %3783 = or i32 %3780, 1
  %3784 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3783
  %3785 = bitcast i32* %3784 to <4 x i32>*
  %3786 = load <4 x i32>, <4 x i32>* %3785, align 4, !tbaa !3
  %3787 = getelementptr inbounds i32, i32* %3784, i32 4
  %3788 = bitcast i32* %3787 to <4 x i32>*
  %3789 = load <4 x i32>, <4 x i32>* %3788, align 4, !tbaa !3
  %3790 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3786
  %3791 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3789
  %3792 = bitcast <4 x i8*> %3790 to <4 x i64*>
  %3793 = bitcast <4 x i8*> %3791 to <4 x i64*>
  %3794 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3792, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3795 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3793, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3796 = icmp eq <4 x i32> %3786, %3776
  %3797 = icmp eq <4 x i32> %3789, %3778
  %3798 = select <4 x i1> %3796, <4 x i64> %3794, <4 x i64> zeroinitializer
  %3799 = select <4 x i1> %3797, <4 x i64> %3795, <4 x i64> zeroinitializer
  %3800 = add <4 x i64> %3798, %3781
  %3801 = add <4 x i64> %3799, %3782
  %3802 = or i32 %3780, 9
  %3803 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3802
  %3804 = bitcast i32* %3803 to <4 x i32>*
  %3805 = load <4 x i32>, <4 x i32>* %3804, align 4, !tbaa !3
  %3806 = getelementptr inbounds i32, i32* %3803, i32 4
  %3807 = bitcast i32* %3806 to <4 x i32>*
  %3808 = load <4 x i32>, <4 x i32>* %3807, align 4, !tbaa !3
  %3809 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3805
  %3810 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3808
  %3811 = bitcast <4 x i8*> %3809 to <4 x i64*>
  %3812 = bitcast <4 x i8*> %3810 to <4 x i64*>
  %3813 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3811, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3814 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3812, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3815 = icmp eq <4 x i32> %3805, %3776
  %3816 = icmp eq <4 x i32> %3808, %3778
  %3817 = select <4 x i1> %3815, <4 x i64> %3813, <4 x i64> zeroinitializer
  %3818 = select <4 x i1> %3816, <4 x i64> %3814, <4 x i64> zeroinitializer
  %3819 = add <4 x i64> %3817, %3800
  %3820 = add <4 x i64> %3818, %3801
  %3821 = or i32 %3780, 17
  %3822 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3821
  %3823 = bitcast i32* %3822 to <4 x i32>*
  %3824 = load <4 x i32>, <4 x i32>* %3823, align 4, !tbaa !3
  %3825 = getelementptr inbounds i32, i32* %3822, i32 4
  %3826 = bitcast i32* %3825 to <4 x i32>*
  %3827 = load <4 x i32>, <4 x i32>* %3826, align 4, !tbaa !3
  %3828 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3824
  %3829 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %3827
  %3830 = bitcast <4 x i8*> %3828 to <4 x i64*>
  %3831 = bitcast <4 x i8*> %3829 to <4 x i64*>
  %3832 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3830, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3833 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3831, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3834 = icmp eq <4 x i32> %3824, %3776
  %3835 = icmp eq <4 x i32> %3827, %3778
  %3836 = select <4 x i1> %3834, <4 x i64> %3832, <4 x i64> zeroinitializer
  %3837 = select <4 x i1> %3835, <4 x i64> %3833, <4 x i64> zeroinitializer
  %3838 = add <4 x i64> %3836, %3819
  %3839 = add <4 x i64> %3837, %3820
  %3840 = icmp eq i32 %3780, 224
  br i1 %3840, label %3841, label %13892, !llvm.loop !54

3841:                                             ; preds = %3779
  %3842 = add <4 x i64> %3839, %3838
  %3843 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3842)
  %3844 = icmp eq i32 %3774, 1992
  %3845 = select i1 %3844, i64 -6702567834671021495, i64 0
  %3846 = add i64 %3845, %3843
  %3847 = icmp eq i32 %3774, 2000
  %3848 = select i1 %3847, i64 -9179115894310901337, i64 0
  %3849 = add i64 %3848, %3846
  %3850 = icmp eq i32 %3774, 2008
  %3851 = select i1 %3850, i64 5751414958667764720, i64 0
  %3852 = add i64 %3851, %3849
  %3853 = icmp eq i32 %3774, 2016
  %3854 = select i1 %3853, i64 2243210855174429021, i64 0
  %3855 = add i64 %3854, %3852
  %3856 = icmp eq i32 %3774, 2024
  %3857 = select i1 %3856, i64 -3872233913575383732, i64 0
  %3858 = add i64 %3857, %3855
  %3859 = icmp eq i32 %3774, 2032
  %3860 = select i1 %3859, i64 -6132897494654657935, i64 0
  %3861 = add i64 %3860, %3858
  %3862 = icmp eq i32 %3774, 2040
  %3863 = select i1 %3862, i64 4811556717733801171, i64 0
  %3864 = add i64 %3863, %3861
  %3865 = lshr i64 %3771, 45
  %3866 = trunc i64 %3865 to i32
  %3867 = and i32 %3866, 2040
  %3868 = insertelement <4 x i32> poison, i32 %3867, i32 0
  %3869 = shufflevector <4 x i32> %3868, <4 x i32> poison, <4 x i32> zeroinitializer
  %3870 = insertelement <4 x i32> poison, i32 %3867, i32 0
  %3871 = shufflevector <4 x i32> %3870, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3872

3872:                                             ; preds = %13871, %3841
  %3873 = phi i32 [ 0, %3841 ], [ %13891, %13871 ]
  %3874 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3841 ], [ %13889, %13871 ]
  %3875 = phi <4 x i64> [ zeroinitializer, %3841 ], [ %13890, %13871 ]
  %3876 = or i32 %3873, 1
  %3877 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3876
  %3878 = bitcast i32* %3877 to <4 x i32>*
  %3879 = load <4 x i32>, <4 x i32>* %3878, align 4, !tbaa !3
  %3880 = getelementptr inbounds i32, i32* %3877, i32 4
  %3881 = bitcast i32* %3880 to <4 x i32>*
  %3882 = load <4 x i32>, <4 x i32>* %3881, align 4, !tbaa !3
  %3883 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3879
  %3884 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3882
  %3885 = bitcast <4 x i8*> %3883 to <4 x i64*>
  %3886 = bitcast <4 x i8*> %3884 to <4 x i64*>
  %3887 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3885, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3888 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3886, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3889 = icmp eq <4 x i32> %3869, %3879
  %3890 = icmp eq <4 x i32> %3871, %3882
  %3891 = select <4 x i1> %3889, <4 x i64> %3887, <4 x i64> zeroinitializer
  %3892 = select <4 x i1> %3890, <4 x i64> %3888, <4 x i64> zeroinitializer
  %3893 = add <4 x i64> %3891, %3874
  %3894 = add <4 x i64> %3892, %3875
  %3895 = or i32 %3873, 9
  %3896 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3895
  %3897 = bitcast i32* %3896 to <4 x i32>*
  %3898 = load <4 x i32>, <4 x i32>* %3897, align 4, !tbaa !3
  %3899 = getelementptr inbounds i32, i32* %3896, i32 4
  %3900 = bitcast i32* %3899 to <4 x i32>*
  %3901 = load <4 x i32>, <4 x i32>* %3900, align 4, !tbaa !3
  %3902 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3898
  %3903 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3901
  %3904 = bitcast <4 x i8*> %3902 to <4 x i64*>
  %3905 = bitcast <4 x i8*> %3903 to <4 x i64*>
  %3906 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3904, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3907 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3905, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3908 = icmp eq <4 x i32> %3869, %3898
  %3909 = icmp eq <4 x i32> %3871, %3901
  %3910 = select <4 x i1> %3908, <4 x i64> %3906, <4 x i64> zeroinitializer
  %3911 = select <4 x i1> %3909, <4 x i64> %3907, <4 x i64> zeroinitializer
  %3912 = add <4 x i64> %3910, %3893
  %3913 = add <4 x i64> %3911, %3894
  %3914 = or i32 %3873, 17
  %3915 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3914
  %3916 = bitcast i32* %3915 to <4 x i32>*
  %3917 = load <4 x i32>, <4 x i32>* %3916, align 4, !tbaa !3
  %3918 = getelementptr inbounds i32, i32* %3915, i32 4
  %3919 = bitcast i32* %3918 to <4 x i32>*
  %3920 = load <4 x i32>, <4 x i32>* %3919, align 4, !tbaa !3
  %3921 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3917
  %3922 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %3920
  %3923 = bitcast <4 x i8*> %3921 to <4 x i64*>
  %3924 = bitcast <4 x i8*> %3922 to <4 x i64*>
  %3925 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3923, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3926 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3924, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3927 = icmp eq <4 x i32> %3869, %3917
  %3928 = icmp eq <4 x i32> %3871, %3920
  %3929 = select <4 x i1> %3927, <4 x i64> %3925, <4 x i64> zeroinitializer
  %3930 = select <4 x i1> %3928, <4 x i64> %3926, <4 x i64> zeroinitializer
  %3931 = add <4 x i64> %3929, %3912
  %3932 = add <4 x i64> %3930, %3913
  %3933 = icmp eq i32 %3873, 224
  br i1 %3933, label %3934, label %13871, !llvm.loop !55

3934:                                             ; preds = %3872
  %3935 = add <4 x i64> %3932, %3931
  %3936 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %3935)
  %3937 = icmp eq i32 %3867, 1992
  %3938 = select i1 %3937, i64 -314670665226827390, i64 0
  %3939 = add i64 %3938, %3936
  %3940 = icmp eq i32 %3867, 2000
  %3941 = select i1 %3940, i64 -7097468252516276247, i64 0
  %3942 = add i64 %3941, %3939
  %3943 = icmp eq i32 %3867, 2008
  %3944 = select i1 %3943, i64 -3364349307489619821, i64 0
  %3945 = add i64 %3944, %3942
  %3946 = icmp eq i32 %3867, 2016
  %3947 = select i1 %3946, i64 2386735715921845721, i64 0
  %3948 = add i64 %3947, %3945
  %3949 = icmp eq i32 %3867, 2024
  %3950 = select i1 %3949, i64 4884933414564023389, i64 0
  %3951 = add i64 %3950, %3948
  %3952 = icmp eq i32 %3867, 2032
  %3953 = select i1 %3952, i64 -2041757280372035110, i64 0
  %3954 = add i64 %3953, %3951
  %3955 = icmp eq i32 %3867, 2040
  %3956 = select i1 %3955, i64 -4160667357316787220, i64 0
  %3957 = add i64 %3956, %3954
  %3958 = lshr i64 %3771, 37
  %3959 = trunc i64 %3958 to i32
  %3960 = and i32 %3959, 2040
  %3961 = insertelement <4 x i32> poison, i32 %3960, i32 0
  %3962 = shufflevector <4 x i32> %3961, <4 x i32> poison, <4 x i32> zeroinitializer
  %3963 = insertelement <4 x i32> poison, i32 %3960, i32 0
  %3964 = shufflevector <4 x i32> %3963, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %3965

3965:                                             ; preds = %13850, %3934
  %3966 = phi i32 [ 0, %3934 ], [ %13870, %13850 ]
  %3967 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %3934 ], [ %13868, %13850 ]
  %3968 = phi <4 x i64> [ zeroinitializer, %3934 ], [ %13869, %13850 ]
  %3969 = or i32 %3966, 1
  %3970 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3969
  %3971 = bitcast i32* %3970 to <4 x i32>*
  %3972 = load <4 x i32>, <4 x i32>* %3971, align 4, !tbaa !3
  %3973 = getelementptr inbounds i32, i32* %3970, i32 4
  %3974 = bitcast i32* %3973 to <4 x i32>*
  %3975 = load <4 x i32>, <4 x i32>* %3974, align 4, !tbaa !3
  %3976 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3972
  %3977 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3975
  %3978 = bitcast <4 x i8*> %3976 to <4 x i64*>
  %3979 = bitcast <4 x i8*> %3977 to <4 x i64*>
  %3980 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3978, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3981 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3979, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %3982 = icmp eq <4 x i32> %3962, %3972
  %3983 = icmp eq <4 x i32> %3964, %3975
  %3984 = select <4 x i1> %3982, <4 x i64> %3980, <4 x i64> zeroinitializer
  %3985 = select <4 x i1> %3983, <4 x i64> %3981, <4 x i64> zeroinitializer
  %3986 = add <4 x i64> %3984, %3967
  %3987 = add <4 x i64> %3985, %3968
  %3988 = or i32 %3966, 9
  %3989 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %3988
  %3990 = bitcast i32* %3989 to <4 x i32>*
  %3991 = load <4 x i32>, <4 x i32>* %3990, align 4, !tbaa !3
  %3992 = getelementptr inbounds i32, i32* %3989, i32 4
  %3993 = bitcast i32* %3992 to <4 x i32>*
  %3994 = load <4 x i32>, <4 x i32>* %3993, align 4, !tbaa !3
  %3995 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3991
  %3996 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %3994
  %3997 = bitcast <4 x i8*> %3995 to <4 x i64*>
  %3998 = bitcast <4 x i8*> %3996 to <4 x i64*>
  %3999 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3997, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4000 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %3998, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4001 = icmp eq <4 x i32> %3962, %3991
  %4002 = icmp eq <4 x i32> %3964, %3994
  %4003 = select <4 x i1> %4001, <4 x i64> %3999, <4 x i64> zeroinitializer
  %4004 = select <4 x i1> %4002, <4 x i64> %4000, <4 x i64> zeroinitializer
  %4005 = add <4 x i64> %4003, %3986
  %4006 = add <4 x i64> %4004, %3987
  %4007 = or i32 %3966, 17
  %4008 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4007
  %4009 = bitcast i32* %4008 to <4 x i32>*
  %4010 = load <4 x i32>, <4 x i32>* %4009, align 4, !tbaa !3
  %4011 = getelementptr inbounds i32, i32* %4008, i32 4
  %4012 = bitcast i32* %4011 to <4 x i32>*
  %4013 = load <4 x i32>, <4 x i32>* %4012, align 4, !tbaa !3
  %4014 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %4010
  %4015 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %4013
  %4016 = bitcast <4 x i8*> %4014 to <4 x i64*>
  %4017 = bitcast <4 x i8*> %4015 to <4 x i64*>
  %4018 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4016, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4019 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4017, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4020 = icmp eq <4 x i32> %3962, %4010
  %4021 = icmp eq <4 x i32> %3964, %4013
  %4022 = select <4 x i1> %4020, <4 x i64> %4018, <4 x i64> zeroinitializer
  %4023 = select <4 x i1> %4021, <4 x i64> %4019, <4 x i64> zeroinitializer
  %4024 = add <4 x i64> %4022, %4005
  %4025 = add <4 x i64> %4023, %4006
  %4026 = icmp eq i32 %3966, 224
  br i1 %4026, label %4027, label %13850, !llvm.loop !56

4027:                                             ; preds = %3965
  %4028 = add <4 x i64> %4025, %4024
  %4029 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4028)
  %4030 = icmp eq i32 %3960, 1992
  %4031 = select i1 %4030, i64 -5615809534224635015, i64 0
  %4032 = add i64 %4031, %4029
  %4033 = icmp eq i32 %3960, 2000
  %4034 = select i1 %4033, i64 4231836215586269044, i64 0
  %4035 = add i64 %4034, %4032
  %4036 = icmp eq i32 %3960, 2008
  %4037 = select i1 %4036, i64 2408950612238581570, i64 0
  %4038 = add i64 %4037, %4035
  %4039 = icmp eq i32 %3960, 2016
  %4040 = select i1 %4039, i64 8963041913638568696, i64 0
  %4041 = add i64 %4040, %4038
  %4042 = icmp eq i32 %3960, 2024
  %4043 = select i1 %4042, i64 1136536871657834014, i64 0
  %4044 = add i64 %4043, %4041
  %4045 = icmp eq i32 %3960, 2032
  %4046 = select i1 %4045, i64 -7910384849877083335, i64 0
  %4047 = add i64 %4046, %4044
  %4048 = icmp eq i32 %3960, 2040
  %4049 = select i1 %4048, i64 1537771219914559786, i64 0
  %4050 = add i64 %4049, %4047
  %4051 = lshr i64 %3771, 29
  %4052 = trunc i64 %4051 to i32
  %4053 = and i32 %4052, 2040
  %4054 = insertelement <4 x i32> poison, i32 %4053, i32 0
  %4055 = shufflevector <4 x i32> %4054, <4 x i32> poison, <4 x i32> zeroinitializer
  %4056 = insertelement <4 x i32> poison, i32 %4053, i32 0
  %4057 = shufflevector <4 x i32> %4056, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4058

4058:                                             ; preds = %13829, %4027
  %4059 = phi i32 [ 0, %4027 ], [ %13849, %13829 ]
  %4060 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4027 ], [ %13847, %13829 ]
  %4061 = phi <4 x i64> [ zeroinitializer, %4027 ], [ %13848, %13829 ]
  %4062 = or i32 %4059, 1
  %4063 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4062
  %4064 = bitcast i32* %4063 to <4 x i32>*
  %4065 = load <4 x i32>, <4 x i32>* %4064, align 4, !tbaa !3
  %4066 = getelementptr inbounds i32, i32* %4063, i32 4
  %4067 = bitcast i32* %4066 to <4 x i32>*
  %4068 = load <4 x i32>, <4 x i32>* %4067, align 4, !tbaa !3
  %4069 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4065
  %4070 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4068
  %4071 = bitcast <4 x i8*> %4069 to <4 x i64*>
  %4072 = bitcast <4 x i8*> %4070 to <4 x i64*>
  %4073 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4071, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4074 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4072, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4075 = icmp eq <4 x i32> %4055, %4065
  %4076 = icmp eq <4 x i32> %4057, %4068
  %4077 = select <4 x i1> %4075, <4 x i64> %4073, <4 x i64> zeroinitializer
  %4078 = select <4 x i1> %4076, <4 x i64> %4074, <4 x i64> zeroinitializer
  %4079 = add <4 x i64> %4077, %4060
  %4080 = add <4 x i64> %4078, %4061
  %4081 = or i32 %4059, 9
  %4082 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4081
  %4083 = bitcast i32* %4082 to <4 x i32>*
  %4084 = load <4 x i32>, <4 x i32>* %4083, align 4, !tbaa !3
  %4085 = getelementptr inbounds i32, i32* %4082, i32 4
  %4086 = bitcast i32* %4085 to <4 x i32>*
  %4087 = load <4 x i32>, <4 x i32>* %4086, align 4, !tbaa !3
  %4088 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4084
  %4089 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4087
  %4090 = bitcast <4 x i8*> %4088 to <4 x i64*>
  %4091 = bitcast <4 x i8*> %4089 to <4 x i64*>
  %4092 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4090, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4093 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4091, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4094 = icmp eq <4 x i32> %4055, %4084
  %4095 = icmp eq <4 x i32> %4057, %4087
  %4096 = select <4 x i1> %4094, <4 x i64> %4092, <4 x i64> zeroinitializer
  %4097 = select <4 x i1> %4095, <4 x i64> %4093, <4 x i64> zeroinitializer
  %4098 = add <4 x i64> %4096, %4079
  %4099 = add <4 x i64> %4097, %4080
  %4100 = or i32 %4059, 17
  %4101 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4100
  %4102 = bitcast i32* %4101 to <4 x i32>*
  %4103 = load <4 x i32>, <4 x i32>* %4102, align 4, !tbaa !3
  %4104 = getelementptr inbounds i32, i32* %4101, i32 4
  %4105 = bitcast i32* %4104 to <4 x i32>*
  %4106 = load <4 x i32>, <4 x i32>* %4105, align 4, !tbaa !3
  %4107 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4103
  %4108 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4106
  %4109 = bitcast <4 x i8*> %4107 to <4 x i64*>
  %4110 = bitcast <4 x i8*> %4108 to <4 x i64*>
  %4111 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4109, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4112 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4110, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4113 = icmp eq <4 x i32> %4055, %4103
  %4114 = icmp eq <4 x i32> %4057, %4106
  %4115 = select <4 x i1> %4113, <4 x i64> %4111, <4 x i64> zeroinitializer
  %4116 = select <4 x i1> %4114, <4 x i64> %4112, <4 x i64> zeroinitializer
  %4117 = add <4 x i64> %4115, %4098
  %4118 = add <4 x i64> %4116, %4099
  %4119 = icmp eq i32 %4059, 224
  br i1 %4119, label %4120, label %13829, !llvm.loop !57

4120:                                             ; preds = %4058
  %4121 = add <4 x i64> %4118, %4117
  %4122 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4121)
  %4123 = icmp eq i32 %4053, 1992
  %4124 = select i1 %4123, i64 1203300724897905131, i64 0
  %4125 = add i64 %4124, %4122
  %4126 = icmp eq i32 %4053, 2000
  %4127 = select i1 %4126, i64 -5027532858107268057, i64 0
  %4128 = add i64 %4127, %4125
  %4129 = icmp eq i32 %4053, 2008
  %4130 = select i1 %4129, i64 7935854159672328895, i64 0
  %4131 = add i64 %4130, %4128
  %4132 = icmp eq i32 %4053, 2016
  %4133 = select i1 %4132, i64 7168641125469255746, i64 0
  %4134 = add i64 %4133, %4131
  %4135 = icmp eq i32 %4053, 2024
  %4136 = select i1 %4135, i64 -4247101387443462522, i64 0
  %4137 = add i64 %4136, %4134
  %4138 = icmp eq i32 %4053, 2032
  %4139 = select i1 %4138, i64 4076570933917792731, i64 0
  %4140 = add i64 %4139, %4137
  %4141 = icmp eq i32 %4053, 2040
  %4142 = select i1 %4141, i64 6275139646136265361, i64 0
  %4143 = add i64 %4142, %4140
  %4144 = lshr i64 %3771, 21
  %4145 = trunc i64 %4144 to i32
  %4146 = and i32 %4145, 2040
  %4147 = insertelement <4 x i32> poison, i32 %4146, i32 0
  %4148 = shufflevector <4 x i32> %4147, <4 x i32> poison, <4 x i32> zeroinitializer
  %4149 = insertelement <4 x i32> poison, i32 %4146, i32 0
  %4150 = shufflevector <4 x i32> %4149, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4151

4151:                                             ; preds = %13808, %4120
  %4152 = phi i32 [ 0, %4120 ], [ %13828, %13808 ]
  %4153 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4120 ], [ %13826, %13808 ]
  %4154 = phi <4 x i64> [ zeroinitializer, %4120 ], [ %13827, %13808 ]
  %4155 = or i32 %4152, 1
  %4156 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4155
  %4157 = bitcast i32* %4156 to <4 x i32>*
  %4158 = load <4 x i32>, <4 x i32>* %4157, align 4, !tbaa !3
  %4159 = getelementptr inbounds i32, i32* %4156, i32 4
  %4160 = bitcast i32* %4159 to <4 x i32>*
  %4161 = load <4 x i32>, <4 x i32>* %4160, align 4, !tbaa !3
  %4162 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4158
  %4163 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4161
  %4164 = bitcast <4 x i8*> %4162 to <4 x i64*>
  %4165 = bitcast <4 x i8*> %4163 to <4 x i64*>
  %4166 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4164, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4167 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4165, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4168 = icmp eq <4 x i32> %4148, %4158
  %4169 = icmp eq <4 x i32> %4150, %4161
  %4170 = select <4 x i1> %4168, <4 x i64> %4166, <4 x i64> zeroinitializer
  %4171 = select <4 x i1> %4169, <4 x i64> %4167, <4 x i64> zeroinitializer
  %4172 = add <4 x i64> %4170, %4153
  %4173 = add <4 x i64> %4171, %4154
  %4174 = or i32 %4152, 9
  %4175 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4174
  %4176 = bitcast i32* %4175 to <4 x i32>*
  %4177 = load <4 x i32>, <4 x i32>* %4176, align 4, !tbaa !3
  %4178 = getelementptr inbounds i32, i32* %4175, i32 4
  %4179 = bitcast i32* %4178 to <4 x i32>*
  %4180 = load <4 x i32>, <4 x i32>* %4179, align 4, !tbaa !3
  %4181 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4177
  %4182 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4180
  %4183 = bitcast <4 x i8*> %4181 to <4 x i64*>
  %4184 = bitcast <4 x i8*> %4182 to <4 x i64*>
  %4185 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4183, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4186 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4184, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4187 = icmp eq <4 x i32> %4148, %4177
  %4188 = icmp eq <4 x i32> %4150, %4180
  %4189 = select <4 x i1> %4187, <4 x i64> %4185, <4 x i64> zeroinitializer
  %4190 = select <4 x i1> %4188, <4 x i64> %4186, <4 x i64> zeroinitializer
  %4191 = add <4 x i64> %4189, %4172
  %4192 = add <4 x i64> %4190, %4173
  %4193 = or i32 %4152, 17
  %4194 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4193
  %4195 = bitcast i32* %4194 to <4 x i32>*
  %4196 = load <4 x i32>, <4 x i32>* %4195, align 4, !tbaa !3
  %4197 = getelementptr inbounds i32, i32* %4194, i32 4
  %4198 = bitcast i32* %4197 to <4 x i32>*
  %4199 = load <4 x i32>, <4 x i32>* %4198, align 4, !tbaa !3
  %4200 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4196
  %4201 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4199
  %4202 = bitcast <4 x i8*> %4200 to <4 x i64*>
  %4203 = bitcast <4 x i8*> %4201 to <4 x i64*>
  %4204 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4202, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4205 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4203, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4206 = icmp eq <4 x i32> %4148, %4196
  %4207 = icmp eq <4 x i32> %4150, %4199
  %4208 = select <4 x i1> %4206, <4 x i64> %4204, <4 x i64> zeroinitializer
  %4209 = select <4 x i1> %4207, <4 x i64> %4205, <4 x i64> zeroinitializer
  %4210 = add <4 x i64> %4208, %4191
  %4211 = add <4 x i64> %4209, %4192
  %4212 = icmp eq i32 %4152, 224
  br i1 %4212, label %4213, label %13808, !llvm.loop !58

4213:                                             ; preds = %4151
  %4214 = add <4 x i64> %4211, %4210
  %4215 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4214)
  %4216 = icmp eq i32 %4146, 1992
  %4217 = select i1 %4216, i64 -1479007749835869680, i64 0
  %4218 = add i64 %4217, %4215
  %4219 = icmp eq i32 %4146, 2000
  %4220 = select i1 %4219, i64 2843154170404223674, i64 0
  %4221 = add i64 %4220, %4218
  %4222 = icmp eq i32 %4146, 2008
  %4223 = select i1 %4222, i64 -4665003603661872786, i64 0
  %4224 = add i64 %4223, %4221
  %4225 = icmp eq i32 %4146, 2016
  %4226 = select i1 %4225, i64 4825845994704960611, i64 0
  %4227 = add i64 %4226, %4224
  %4228 = icmp eq i32 %4146, 2024
  %4229 = select i1 %4228, i64 -8782479638933598267, i64 0
  %4230 = add i64 %4229, %4227
  %4231 = icmp eq i32 %4146, 2032
  %4232 = select i1 %4231, i64 -2649846723997625800, i64 0
  %4233 = add i64 %4232, %4230
  %4234 = icmp eq i32 %4146, 2040
  %4235 = select i1 %4234, i64 -7986310597085620905, i64 0
  %4236 = add i64 %4235, %4233
  %4237 = lshr i64 %3771, 13
  %4238 = trunc i64 %4237 to i32
  %4239 = and i32 %4238, 2040
  %4240 = insertelement <4 x i32> poison, i32 %4239, i32 0
  %4241 = shufflevector <4 x i32> %4240, <4 x i32> poison, <4 x i32> zeroinitializer
  %4242 = insertelement <4 x i32> poison, i32 %4239, i32 0
  %4243 = shufflevector <4 x i32> %4242, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4244

4244:                                             ; preds = %13787, %4213
  %4245 = phi i32 [ 0, %4213 ], [ %13807, %13787 ]
  %4246 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4213 ], [ %13805, %13787 ]
  %4247 = phi <4 x i64> [ zeroinitializer, %4213 ], [ %13806, %13787 ]
  %4248 = or i32 %4245, 1
  %4249 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4248
  %4250 = bitcast i32* %4249 to <4 x i32>*
  %4251 = load <4 x i32>, <4 x i32>* %4250, align 4, !tbaa !3
  %4252 = getelementptr inbounds i32, i32* %4249, i32 4
  %4253 = bitcast i32* %4252 to <4 x i32>*
  %4254 = load <4 x i32>, <4 x i32>* %4253, align 4, !tbaa !3
  %4255 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %4251
  %4256 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %4254
  %4257 = bitcast <4 x i8*> %4255 to <4 x i64*>
  %4258 = bitcast <4 x i8*> %4256 to <4 x i64*>
  %4259 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4257, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4260 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4258, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4261 = icmp eq <4 x i32> %4241, %4251
  %4262 = icmp eq <4 x i32> %4243, %4254
  %4263 = select <4 x i1> %4261, <4 x i64> %4259, <4 x i64> zeroinitializer
  %4264 = select <4 x i1> %4262, <4 x i64> %4260, <4 x i64> zeroinitializer
  %4265 = add <4 x i64> %4263, %4246
  %4266 = add <4 x i64> %4264, %4247
  %4267 = or i32 %4245, 9
  %4268 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4267
  %4269 = bitcast i32* %4268 to <4 x i32>*
  %4270 = load <4 x i32>, <4 x i32>* %4269, align 4, !tbaa !3
  %4271 = getelementptr inbounds i32, i32* %4268, i32 4
  %4272 = bitcast i32* %4271 to <4 x i32>*
  %4273 = load <4 x i32>, <4 x i32>* %4272, align 4, !tbaa !3
  %4274 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %4270
  %4275 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %4273
  %4276 = bitcast <4 x i8*> %4274 to <4 x i64*>
  %4277 = bitcast <4 x i8*> %4275 to <4 x i64*>
  %4278 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4276, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4279 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4277, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4280 = icmp eq <4 x i32> %4241, %4270
  %4281 = icmp eq <4 x i32> %4243, %4273
  %4282 = select <4 x i1> %4280, <4 x i64> %4278, <4 x i64> zeroinitializer
  %4283 = select <4 x i1> %4281, <4 x i64> %4279, <4 x i64> zeroinitializer
  %4284 = add <4 x i64> %4282, %4265
  %4285 = add <4 x i64> %4283, %4266
  %4286 = or i32 %4245, 17
  %4287 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4286
  %4288 = bitcast i32* %4287 to <4 x i32>*
  %4289 = load <4 x i32>, <4 x i32>* %4288, align 4, !tbaa !3
  %4290 = getelementptr inbounds i32, i32* %4287, i32 4
  %4291 = bitcast i32* %4290 to <4 x i32>*
  %4292 = load <4 x i32>, <4 x i32>* %4291, align 4, !tbaa !3
  %4293 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %4289
  %4294 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %4292
  %4295 = bitcast <4 x i8*> %4293 to <4 x i64*>
  %4296 = bitcast <4 x i8*> %4294 to <4 x i64*>
  %4297 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4295, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4298 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4296, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4299 = icmp eq <4 x i32> %4241, %4289
  %4300 = icmp eq <4 x i32> %4243, %4292
  %4301 = select <4 x i1> %4299, <4 x i64> %4297, <4 x i64> zeroinitializer
  %4302 = select <4 x i1> %4300, <4 x i64> %4298, <4 x i64> zeroinitializer
  %4303 = add <4 x i64> %4301, %4284
  %4304 = add <4 x i64> %4302, %4285
  %4305 = icmp eq i32 %4245, 224
  br i1 %4305, label %4306, label %13787, !llvm.loop !59

4306:                                             ; preds = %4244
  %4307 = add <4 x i64> %4304, %4303
  %4308 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4307)
  %4309 = icmp eq i32 %4239, 1992
  %4310 = select i1 %4309, i64 8785196325032562866, i64 0
  %4311 = add i64 %4310, %4308
  %4312 = icmp eq i32 %4239, 2000
  %4313 = select i1 %4312, i64 8369843054303033914, i64 0
  %4314 = add i64 %4313, %4311
  %4315 = icmp eq i32 %4239, 2008
  %4316 = select i1 %4315, i64 4809827444717481505, i64 0
  %4317 = add i64 %4316, %4314
  %4318 = icmp eq i32 %4239, 2016
  %4319 = select i1 %4318, i64 -557780216695528580, i64 0
  %4320 = add i64 %4319, %4317
  %4321 = icmp eq i32 %4239, 2024
  %4322 = select i1 %4321, i64 2199529431470097679, i64 0
  %4323 = add i64 %4322, %4320
  %4324 = icmp eq i32 %4239, 2032
  %4325 = select i1 %4324, i64 4169051064997918866, i64 0
  %4326 = add i64 %4325, %4323
  %4327 = icmp eq i32 %4239, 2040
  %4328 = select i1 %4327, i64 3067465835107997461, i64 0
  %4329 = add i64 %4328, %4326
  %4330 = lshr i64 %3771, 5
  %4331 = trunc i64 %4330 to i32
  %4332 = and i32 %4331, 2040
  %4333 = insertelement <4 x i32> poison, i32 %4332, i32 0
  %4334 = shufflevector <4 x i32> %4333, <4 x i32> poison, <4 x i32> zeroinitializer
  %4335 = insertelement <4 x i32> poison, i32 %4332, i32 0
  %4336 = shufflevector <4 x i32> %4335, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4337

4337:                                             ; preds = %13766, %4306
  %4338 = phi i32 [ 0, %4306 ], [ %13786, %13766 ]
  %4339 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4306 ], [ %13784, %13766 ]
  %4340 = phi <4 x i64> [ zeroinitializer, %4306 ], [ %13785, %13766 ]
  %4341 = or i32 %4338, 1
  %4342 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4341
  %4343 = bitcast i32* %4342 to <4 x i32>*
  %4344 = load <4 x i32>, <4 x i32>* %4343, align 4, !tbaa !3
  %4345 = getelementptr inbounds i32, i32* %4342, i32 4
  %4346 = bitcast i32* %4345 to <4 x i32>*
  %4347 = load <4 x i32>, <4 x i32>* %4346, align 4, !tbaa !3
  %4348 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %4344
  %4349 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %4347
  %4350 = bitcast <4 x i8*> %4348 to <4 x i64*>
  %4351 = bitcast <4 x i8*> %4349 to <4 x i64*>
  %4352 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4350, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4353 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4351, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4354 = icmp eq <4 x i32> %4334, %4344
  %4355 = icmp eq <4 x i32> %4336, %4347
  %4356 = select <4 x i1> %4354, <4 x i64> %4352, <4 x i64> zeroinitializer
  %4357 = select <4 x i1> %4355, <4 x i64> %4353, <4 x i64> zeroinitializer
  %4358 = add <4 x i64> %4356, %4339
  %4359 = add <4 x i64> %4357, %4340
  %4360 = or i32 %4338, 9
  %4361 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4360
  %4362 = bitcast i32* %4361 to <4 x i32>*
  %4363 = load <4 x i32>, <4 x i32>* %4362, align 4, !tbaa !3
  %4364 = getelementptr inbounds i32, i32* %4361, i32 4
  %4365 = bitcast i32* %4364 to <4 x i32>*
  %4366 = load <4 x i32>, <4 x i32>* %4365, align 4, !tbaa !3
  %4367 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %4363
  %4368 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %4366
  %4369 = bitcast <4 x i8*> %4367 to <4 x i64*>
  %4370 = bitcast <4 x i8*> %4368 to <4 x i64*>
  %4371 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4369, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4372 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4370, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4373 = icmp eq <4 x i32> %4334, %4363
  %4374 = icmp eq <4 x i32> %4336, %4366
  %4375 = select <4 x i1> %4373, <4 x i64> %4371, <4 x i64> zeroinitializer
  %4376 = select <4 x i1> %4374, <4 x i64> %4372, <4 x i64> zeroinitializer
  %4377 = add <4 x i64> %4375, %4358
  %4378 = add <4 x i64> %4376, %4359
  %4379 = or i32 %4338, 17
  %4380 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4379
  %4381 = bitcast i32* %4380 to <4 x i32>*
  %4382 = load <4 x i32>, <4 x i32>* %4381, align 4, !tbaa !3
  %4383 = getelementptr inbounds i32, i32* %4380, i32 4
  %4384 = bitcast i32* %4383 to <4 x i32>*
  %4385 = load <4 x i32>, <4 x i32>* %4384, align 4, !tbaa !3
  %4386 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %4382
  %4387 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %4385
  %4388 = bitcast <4 x i8*> %4386 to <4 x i64*>
  %4389 = bitcast <4 x i8*> %4387 to <4 x i64*>
  %4390 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4388, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4391 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4389, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4392 = icmp eq <4 x i32> %4334, %4382
  %4393 = icmp eq <4 x i32> %4336, %4385
  %4394 = select <4 x i1> %4392, <4 x i64> %4390, <4 x i64> zeroinitializer
  %4395 = select <4 x i1> %4393, <4 x i64> %4391, <4 x i64> zeroinitializer
  %4396 = add <4 x i64> %4394, %4377
  %4397 = add <4 x i64> %4395, %4378
  %4398 = icmp eq i32 %4338, 224
  br i1 %4398, label %4399, label %13766, !llvm.loop !60

4399:                                             ; preds = %4337
  %4400 = add <4 x i64> %4397, %4396
  %4401 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4400)
  %4402 = icmp eq i32 %4332, 1992
  %4403 = select i1 %4402, i64 -9058450267568037125, i64 0
  %4404 = add i64 %4403, %4401
  %4405 = icmp eq i32 %4332, 2000
  %4406 = select i1 %4405, i64 -1610274961606672227, i64 0
  %4407 = add i64 %4406, %4404
  %4408 = icmp eq i32 %4332, 2008
  %4409 = select i1 %4408, i64 -7786513464973963311, i64 0
  %4410 = add i64 %4409, %4407
  %4411 = icmp eq i32 %4332, 2016
  %4412 = select i1 %4411, i64 -2783995359638905055, i64 0
  %4413 = add i64 %4412, %4410
  %4414 = icmp eq i32 %4332, 2024
  %4415 = select i1 %4414, i64 6722895807429069379, i64 0
  %4416 = add i64 %4415, %4413
  %4417 = icmp eq i32 %4332, 2032
  %4418 = select i1 %4417, i64 -2706140860760151325, i64 0
  %4419 = add i64 %4418, %4416
  %4420 = icmp eq i32 %4332, 2040
  %4421 = select i1 %4420, i64 -1381601050739916090, i64 0
  %4422 = add i64 %4421, %4419
  %4423 = trunc i64 %3771 to i32
  %4424 = and i32 %4423, 255
  %4425 = getelementptr inbounds [256 x i64], [256 x i64]* @T7, i32 0, i32 %4424
  %4426 = insertelement <4 x i64*> poison, i64* %4425, i32 0
  %4427 = shufflevector <4 x i64*> %4426, <4 x i64*> poison, <4 x i32> zeroinitializer
  %4428 = insertelement <4 x i64*> poison, i64* %4425, i32 0
  %4429 = shufflevector <4 x i64*> %4428, <4 x i64*> poison, <4 x i32> zeroinitializer
  br label %4430

4430:                                             ; preds = %13745, %4399
  %4431 = phi i32 [ 0, %4399 ], [ %13765, %13745 ]
  %4432 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4399 ], [ %13763, %13745 ]
  %4433 = phi <4 x i64> [ zeroinitializer, %4399 ], [ %13764, %13745 ]
  %4434 = or i32 %4431, 1
  %4435 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4434
  %4436 = bitcast i32* %4435 to <4 x i32>*
  %4437 = load <4 x i32>, <4 x i32>* %4436, align 4, !tbaa !3
  %4438 = getelementptr inbounds i32, i32* %4435, i32 4
  %4439 = bitcast i32* %4438 to <4 x i32>*
  %4440 = load <4 x i32>, <4 x i32>* %4439, align 4, !tbaa !3
  %4441 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %4437
  %4442 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %4440
  %4443 = bitcast <4 x i8*> %4441 to <4 x i64*>
  %4444 = bitcast <4 x i8*> %4442 to <4 x i64*>
  %4445 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4443, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4446 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4444, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4447 = icmp eq <4 x i64*> %4427, %4443
  %4448 = icmp eq <4 x i64*> %4429, %4444
  %4449 = select <4 x i1> %4447, <4 x i64> %4445, <4 x i64> zeroinitializer
  %4450 = select <4 x i1> %4448, <4 x i64> %4446, <4 x i64> zeroinitializer
  %4451 = add <4 x i64> %4449, %4432
  %4452 = add <4 x i64> %4450, %4433
  %4453 = or i32 %4431, 9
  %4454 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4453
  %4455 = bitcast i32* %4454 to <4 x i32>*
  %4456 = load <4 x i32>, <4 x i32>* %4455, align 4, !tbaa !3
  %4457 = getelementptr inbounds i32, i32* %4454, i32 4
  %4458 = bitcast i32* %4457 to <4 x i32>*
  %4459 = load <4 x i32>, <4 x i32>* %4458, align 4, !tbaa !3
  %4460 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %4456
  %4461 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %4459
  %4462 = bitcast <4 x i8*> %4460 to <4 x i64*>
  %4463 = bitcast <4 x i8*> %4461 to <4 x i64*>
  %4464 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4462, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4465 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4463, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4466 = icmp eq <4 x i64*> %4427, %4462
  %4467 = icmp eq <4 x i64*> %4429, %4463
  %4468 = select <4 x i1> %4466, <4 x i64> %4464, <4 x i64> zeroinitializer
  %4469 = select <4 x i1> %4467, <4 x i64> %4465, <4 x i64> zeroinitializer
  %4470 = add <4 x i64> %4468, %4451
  %4471 = add <4 x i64> %4469, %4452
  %4472 = or i32 %4431, 17
  %4473 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4472
  %4474 = bitcast i32* %4473 to <4 x i32>*
  %4475 = load <4 x i32>, <4 x i32>* %4474, align 4, !tbaa !3
  %4476 = getelementptr inbounds i32, i32* %4473, i32 4
  %4477 = bitcast i32* %4476 to <4 x i32>*
  %4478 = load <4 x i32>, <4 x i32>* %4477, align 4, !tbaa !3
  %4479 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %4475
  %4480 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %4478
  %4481 = bitcast <4 x i8*> %4479 to <4 x i64*>
  %4482 = bitcast <4 x i8*> %4480 to <4 x i64*>
  %4483 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4481, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4484 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4482, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4485 = icmp eq <4 x i64*> %4427, %4481
  %4486 = icmp eq <4 x i64*> %4429, %4482
  %4487 = select <4 x i1> %4485, <4 x i64> %4483, <4 x i64> zeroinitializer
  %4488 = select <4 x i1> %4486, <4 x i64> %4484, <4 x i64> zeroinitializer
  %4489 = add <4 x i64> %4487, %4470
  %4490 = add <4 x i64> %4488, %4471
  %4491 = icmp eq i32 %4431, 224
  br i1 %4491, label %4492, label %13745, !llvm.loop !61

4492:                                             ; preds = %4430
  %4493 = add <4 x i64> %4490, %4489
  %4494 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4493)
  %4495 = icmp eq i32 %4424, 249
  %4496 = select i1 %4495, i64 5296930162245565346, i64 0
  %4497 = add i64 %4496, %4494
  %4498 = icmp eq i32 %4424, 250
  %4499 = select i1 %4498, i64 -6347414485825053312, i64 0
  %4500 = add i64 %4499, %4497
  %4501 = icmp eq i32 %4424, 251
  %4502 = select i1 %4501, i64 -1111471293076483761, i64 0
  %4503 = add i64 %4502, %4500
  %4504 = icmp eq i32 %4424, 252
  %4505 = select i1 %4504, i64 6762709279494119711, i64 0
  %4506 = add i64 %4505, %4503
  %4507 = icmp eq i32 %4424, 253
  %4508 = select i1 %4507, i64 5502587883897177034, i64 0
  %4509 = add i64 %4508, %4506
  %4510 = icmp eq i32 %4424, 254
  %4511 = select i1 %4510, i64 8203933284918551466, i64 0
  %4512 = add i64 %4511, %4509
  %4513 = icmp eq i32 %4424, 255
  %4514 = select i1 %4513, i64 -3176116833483372990, i64 0
  %4515 = add i64 %4514, %4512
  %4516 = xor i64 %3017, %3864
  %4517 = xor i64 %4516, %3957
  %4518 = xor i64 %4517, %4050
  %4519 = xor i64 %4518, %4143
  %4520 = xor i64 %4519, %4236
  %4521 = xor i64 %4520, %4329
  %4522 = xor i64 %4521, %4422
  %4523 = xor i64 %4522, %4515
  %4524 = xor i64 %4523, 3111792398419860658
  store i64 %4524, i64* @ctx.0.5, align 8, !tbaa !7
  %4525 = lshr i64 %4524, 53
  %4526 = trunc i64 %4525 to i32
  %4527 = and i32 %4526, 2040
  %4528 = insertelement <4 x i32> poison, i32 %4527, i32 0
  %4529 = shufflevector <4 x i32> %4528, <4 x i32> poison, <4 x i32> zeroinitializer
  %4530 = insertelement <4 x i32> poison, i32 %4527, i32 0
  %4531 = shufflevector <4 x i32> %4530, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4532

4532:                                             ; preds = %13724, %4492
  %4533 = phi i32 [ 0, %4492 ], [ %13744, %13724 ]
  %4534 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4492 ], [ %13742, %13724 ]
  %4535 = phi <4 x i64> [ zeroinitializer, %4492 ], [ %13743, %13724 ]
  %4536 = or i32 %4533, 1
  %4537 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4536
  %4538 = bitcast i32* %4537 to <4 x i32>*
  %4539 = load <4 x i32>, <4 x i32>* %4538, align 4, !tbaa !3
  %4540 = getelementptr inbounds i32, i32* %4537, i32 4
  %4541 = bitcast i32* %4540 to <4 x i32>*
  %4542 = load <4 x i32>, <4 x i32>* %4541, align 4, !tbaa !3
  %4543 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %4539
  %4544 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %4542
  %4545 = bitcast <4 x i8*> %4543 to <4 x i64*>
  %4546 = bitcast <4 x i8*> %4544 to <4 x i64*>
  %4547 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4545, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4548 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4546, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4549 = icmp eq <4 x i32> %4539, %4529
  %4550 = icmp eq <4 x i32> %4542, %4531
  %4551 = select <4 x i1> %4549, <4 x i64> %4547, <4 x i64> zeroinitializer
  %4552 = select <4 x i1> %4550, <4 x i64> %4548, <4 x i64> zeroinitializer
  %4553 = add <4 x i64> %4551, %4534
  %4554 = add <4 x i64> %4552, %4535
  %4555 = or i32 %4533, 9
  %4556 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4555
  %4557 = bitcast i32* %4556 to <4 x i32>*
  %4558 = load <4 x i32>, <4 x i32>* %4557, align 4, !tbaa !3
  %4559 = getelementptr inbounds i32, i32* %4556, i32 4
  %4560 = bitcast i32* %4559 to <4 x i32>*
  %4561 = load <4 x i32>, <4 x i32>* %4560, align 4, !tbaa !3
  %4562 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %4558
  %4563 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %4561
  %4564 = bitcast <4 x i8*> %4562 to <4 x i64*>
  %4565 = bitcast <4 x i8*> %4563 to <4 x i64*>
  %4566 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4564, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4567 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4565, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4568 = icmp eq <4 x i32> %4558, %4529
  %4569 = icmp eq <4 x i32> %4561, %4531
  %4570 = select <4 x i1> %4568, <4 x i64> %4566, <4 x i64> zeroinitializer
  %4571 = select <4 x i1> %4569, <4 x i64> %4567, <4 x i64> zeroinitializer
  %4572 = add <4 x i64> %4570, %4553
  %4573 = add <4 x i64> %4571, %4554
  %4574 = or i32 %4533, 17
  %4575 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4574
  %4576 = bitcast i32* %4575 to <4 x i32>*
  %4577 = load <4 x i32>, <4 x i32>* %4576, align 4, !tbaa !3
  %4578 = getelementptr inbounds i32, i32* %4575, i32 4
  %4579 = bitcast i32* %4578 to <4 x i32>*
  %4580 = load <4 x i32>, <4 x i32>* %4579, align 4, !tbaa !3
  %4581 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %4577
  %4582 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %4580
  %4583 = bitcast <4 x i8*> %4581 to <4 x i64*>
  %4584 = bitcast <4 x i8*> %4582 to <4 x i64*>
  %4585 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4583, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4586 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4584, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4587 = icmp eq <4 x i32> %4577, %4529
  %4588 = icmp eq <4 x i32> %4580, %4531
  %4589 = select <4 x i1> %4587, <4 x i64> %4585, <4 x i64> zeroinitializer
  %4590 = select <4 x i1> %4588, <4 x i64> %4586, <4 x i64> zeroinitializer
  %4591 = add <4 x i64> %4589, %4572
  %4592 = add <4 x i64> %4590, %4573
  %4593 = icmp eq i32 %4533, 224
  br i1 %4593, label %4594, label %13724, !llvm.loop !62

4594:                                             ; preds = %4532
  %4595 = add <4 x i64> %4592, %4591
  %4596 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4595)
  %4597 = icmp eq i32 %4527, 1992
  %4598 = select i1 %4597, i64 -6702567834671021495, i64 0
  %4599 = add i64 %4598, %4596
  %4600 = icmp eq i32 %4527, 2000
  %4601 = select i1 %4600, i64 -9179115894310901337, i64 0
  %4602 = add i64 %4601, %4599
  %4603 = icmp eq i32 %4527, 2008
  %4604 = select i1 %4603, i64 5751414958667764720, i64 0
  %4605 = add i64 %4604, %4602
  %4606 = icmp eq i32 %4527, 2016
  %4607 = select i1 %4606, i64 2243210855174429021, i64 0
  %4608 = add i64 %4607, %4605
  %4609 = icmp eq i32 %4527, 2024
  %4610 = select i1 %4609, i64 -3872233913575383732, i64 0
  %4611 = add i64 %4610, %4608
  %4612 = icmp eq i32 %4527, 2032
  %4613 = select i1 %4612, i64 -6132897494654657935, i64 0
  %4614 = add i64 %4613, %4611
  %4615 = icmp eq i32 %4527, 2040
  %4616 = select i1 %4615, i64 4811556717733801171, i64 0
  %4617 = add i64 %4616, %4614
  %4618 = lshr i64 %4524, 45
  %4619 = trunc i64 %4618 to i32
  %4620 = and i32 %4619, 2040
  %4621 = insertelement <4 x i32> poison, i32 %4620, i32 0
  %4622 = shufflevector <4 x i32> %4621, <4 x i32> poison, <4 x i32> zeroinitializer
  %4623 = insertelement <4 x i32> poison, i32 %4620, i32 0
  %4624 = shufflevector <4 x i32> %4623, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4625

4625:                                             ; preds = %13703, %4594
  %4626 = phi i32 [ 0, %4594 ], [ %13723, %13703 ]
  %4627 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4594 ], [ %13721, %13703 ]
  %4628 = phi <4 x i64> [ zeroinitializer, %4594 ], [ %13722, %13703 ]
  %4629 = or i32 %4626, 1
  %4630 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4629
  %4631 = bitcast i32* %4630 to <4 x i32>*
  %4632 = load <4 x i32>, <4 x i32>* %4631, align 4, !tbaa !3
  %4633 = getelementptr inbounds i32, i32* %4630, i32 4
  %4634 = bitcast i32* %4633 to <4 x i32>*
  %4635 = load <4 x i32>, <4 x i32>* %4634, align 4, !tbaa !3
  %4636 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %4632
  %4637 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %4635
  %4638 = bitcast <4 x i8*> %4636 to <4 x i64*>
  %4639 = bitcast <4 x i8*> %4637 to <4 x i64*>
  %4640 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4638, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4641 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4639, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4642 = icmp eq <4 x i32> %4622, %4632
  %4643 = icmp eq <4 x i32> %4624, %4635
  %4644 = select <4 x i1> %4642, <4 x i64> %4640, <4 x i64> zeroinitializer
  %4645 = select <4 x i1> %4643, <4 x i64> %4641, <4 x i64> zeroinitializer
  %4646 = add <4 x i64> %4644, %4627
  %4647 = add <4 x i64> %4645, %4628
  %4648 = or i32 %4626, 9
  %4649 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4648
  %4650 = bitcast i32* %4649 to <4 x i32>*
  %4651 = load <4 x i32>, <4 x i32>* %4650, align 4, !tbaa !3
  %4652 = getelementptr inbounds i32, i32* %4649, i32 4
  %4653 = bitcast i32* %4652 to <4 x i32>*
  %4654 = load <4 x i32>, <4 x i32>* %4653, align 4, !tbaa !3
  %4655 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %4651
  %4656 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %4654
  %4657 = bitcast <4 x i8*> %4655 to <4 x i64*>
  %4658 = bitcast <4 x i8*> %4656 to <4 x i64*>
  %4659 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4657, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4660 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4658, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4661 = icmp eq <4 x i32> %4622, %4651
  %4662 = icmp eq <4 x i32> %4624, %4654
  %4663 = select <4 x i1> %4661, <4 x i64> %4659, <4 x i64> zeroinitializer
  %4664 = select <4 x i1> %4662, <4 x i64> %4660, <4 x i64> zeroinitializer
  %4665 = add <4 x i64> %4663, %4646
  %4666 = add <4 x i64> %4664, %4647
  %4667 = or i32 %4626, 17
  %4668 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4667
  %4669 = bitcast i32* %4668 to <4 x i32>*
  %4670 = load <4 x i32>, <4 x i32>* %4669, align 4, !tbaa !3
  %4671 = getelementptr inbounds i32, i32* %4668, i32 4
  %4672 = bitcast i32* %4671 to <4 x i32>*
  %4673 = load <4 x i32>, <4 x i32>* %4672, align 4, !tbaa !3
  %4674 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %4670
  %4675 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %4673
  %4676 = bitcast <4 x i8*> %4674 to <4 x i64*>
  %4677 = bitcast <4 x i8*> %4675 to <4 x i64*>
  %4678 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4676, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4679 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4677, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4680 = icmp eq <4 x i32> %4622, %4670
  %4681 = icmp eq <4 x i32> %4624, %4673
  %4682 = select <4 x i1> %4680, <4 x i64> %4678, <4 x i64> zeroinitializer
  %4683 = select <4 x i1> %4681, <4 x i64> %4679, <4 x i64> zeroinitializer
  %4684 = add <4 x i64> %4682, %4665
  %4685 = add <4 x i64> %4683, %4666
  %4686 = icmp eq i32 %4626, 224
  br i1 %4686, label %4687, label %13703, !llvm.loop !63

4687:                                             ; preds = %4625
  %4688 = add <4 x i64> %4685, %4684
  %4689 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4688)
  %4690 = icmp eq i32 %4620, 1992
  %4691 = select i1 %4690, i64 -314670665226827390, i64 0
  %4692 = add i64 %4691, %4689
  %4693 = icmp eq i32 %4620, 2000
  %4694 = select i1 %4693, i64 -7097468252516276247, i64 0
  %4695 = add i64 %4694, %4692
  %4696 = icmp eq i32 %4620, 2008
  %4697 = select i1 %4696, i64 -3364349307489619821, i64 0
  %4698 = add i64 %4697, %4695
  %4699 = icmp eq i32 %4620, 2016
  %4700 = select i1 %4699, i64 2386735715921845721, i64 0
  %4701 = add i64 %4700, %4698
  %4702 = icmp eq i32 %4620, 2024
  %4703 = select i1 %4702, i64 4884933414564023389, i64 0
  %4704 = add i64 %4703, %4701
  %4705 = icmp eq i32 %4620, 2032
  %4706 = select i1 %4705, i64 -2041757280372035110, i64 0
  %4707 = add i64 %4706, %4704
  %4708 = icmp eq i32 %4620, 2040
  %4709 = select i1 %4708, i64 -4160667357316787220, i64 0
  %4710 = add i64 %4709, %4707
  %4711 = lshr i64 %4524, 37
  %4712 = trunc i64 %4711 to i32
  %4713 = and i32 %4712, 2040
  %4714 = insertelement <4 x i32> poison, i32 %4713, i32 0
  %4715 = shufflevector <4 x i32> %4714, <4 x i32> poison, <4 x i32> zeroinitializer
  %4716 = insertelement <4 x i32> poison, i32 %4713, i32 0
  %4717 = shufflevector <4 x i32> %4716, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4718

4718:                                             ; preds = %13682, %4687
  %4719 = phi i32 [ 0, %4687 ], [ %13702, %13682 ]
  %4720 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4687 ], [ %13700, %13682 ]
  %4721 = phi <4 x i64> [ zeroinitializer, %4687 ], [ %13701, %13682 ]
  %4722 = or i32 %4719, 1
  %4723 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4722
  %4724 = bitcast i32* %4723 to <4 x i32>*
  %4725 = load <4 x i32>, <4 x i32>* %4724, align 4, !tbaa !3
  %4726 = getelementptr inbounds i32, i32* %4723, i32 4
  %4727 = bitcast i32* %4726 to <4 x i32>*
  %4728 = load <4 x i32>, <4 x i32>* %4727, align 4, !tbaa !3
  %4729 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %4725
  %4730 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %4728
  %4731 = bitcast <4 x i8*> %4729 to <4 x i64*>
  %4732 = bitcast <4 x i8*> %4730 to <4 x i64*>
  %4733 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4731, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4734 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4732, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4735 = icmp eq <4 x i32> %4715, %4725
  %4736 = icmp eq <4 x i32> %4717, %4728
  %4737 = select <4 x i1> %4735, <4 x i64> %4733, <4 x i64> zeroinitializer
  %4738 = select <4 x i1> %4736, <4 x i64> %4734, <4 x i64> zeroinitializer
  %4739 = add <4 x i64> %4737, %4720
  %4740 = add <4 x i64> %4738, %4721
  %4741 = or i32 %4719, 9
  %4742 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4741
  %4743 = bitcast i32* %4742 to <4 x i32>*
  %4744 = load <4 x i32>, <4 x i32>* %4743, align 4, !tbaa !3
  %4745 = getelementptr inbounds i32, i32* %4742, i32 4
  %4746 = bitcast i32* %4745 to <4 x i32>*
  %4747 = load <4 x i32>, <4 x i32>* %4746, align 4, !tbaa !3
  %4748 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %4744
  %4749 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %4747
  %4750 = bitcast <4 x i8*> %4748 to <4 x i64*>
  %4751 = bitcast <4 x i8*> %4749 to <4 x i64*>
  %4752 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4750, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4753 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4751, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4754 = icmp eq <4 x i32> %4715, %4744
  %4755 = icmp eq <4 x i32> %4717, %4747
  %4756 = select <4 x i1> %4754, <4 x i64> %4752, <4 x i64> zeroinitializer
  %4757 = select <4 x i1> %4755, <4 x i64> %4753, <4 x i64> zeroinitializer
  %4758 = add <4 x i64> %4756, %4739
  %4759 = add <4 x i64> %4757, %4740
  %4760 = or i32 %4719, 17
  %4761 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4760
  %4762 = bitcast i32* %4761 to <4 x i32>*
  %4763 = load <4 x i32>, <4 x i32>* %4762, align 4, !tbaa !3
  %4764 = getelementptr inbounds i32, i32* %4761, i32 4
  %4765 = bitcast i32* %4764 to <4 x i32>*
  %4766 = load <4 x i32>, <4 x i32>* %4765, align 4, !tbaa !3
  %4767 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %4763
  %4768 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %4766
  %4769 = bitcast <4 x i8*> %4767 to <4 x i64*>
  %4770 = bitcast <4 x i8*> %4768 to <4 x i64*>
  %4771 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4769, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4772 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4770, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4773 = icmp eq <4 x i32> %4715, %4763
  %4774 = icmp eq <4 x i32> %4717, %4766
  %4775 = select <4 x i1> %4773, <4 x i64> %4771, <4 x i64> zeroinitializer
  %4776 = select <4 x i1> %4774, <4 x i64> %4772, <4 x i64> zeroinitializer
  %4777 = add <4 x i64> %4775, %4758
  %4778 = add <4 x i64> %4776, %4759
  %4779 = icmp eq i32 %4719, 224
  br i1 %4779, label %4780, label %13682, !llvm.loop !64

4780:                                             ; preds = %4718
  %4781 = add <4 x i64> %4778, %4777
  %4782 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4781)
  %4783 = icmp eq i32 %4713, 1992
  %4784 = select i1 %4783, i64 -5615809534224635015, i64 0
  %4785 = add i64 %4784, %4782
  %4786 = icmp eq i32 %4713, 2000
  %4787 = select i1 %4786, i64 4231836215586269044, i64 0
  %4788 = add i64 %4787, %4785
  %4789 = icmp eq i32 %4713, 2008
  %4790 = select i1 %4789, i64 2408950612238581570, i64 0
  %4791 = add i64 %4790, %4788
  %4792 = icmp eq i32 %4713, 2016
  %4793 = select i1 %4792, i64 8963041913638568696, i64 0
  %4794 = add i64 %4793, %4791
  %4795 = icmp eq i32 %4713, 2024
  %4796 = select i1 %4795, i64 1136536871657834014, i64 0
  %4797 = add i64 %4796, %4794
  %4798 = icmp eq i32 %4713, 2032
  %4799 = select i1 %4798, i64 -7910384849877083335, i64 0
  %4800 = add i64 %4799, %4797
  %4801 = icmp eq i32 %4713, 2040
  %4802 = select i1 %4801, i64 1537771219914559786, i64 0
  %4803 = add i64 %4802, %4800
  %4804 = lshr i64 %4524, 29
  %4805 = trunc i64 %4804 to i32
  %4806 = and i32 %4805, 2040
  %4807 = insertelement <4 x i32> poison, i32 %4806, i32 0
  %4808 = shufflevector <4 x i32> %4807, <4 x i32> poison, <4 x i32> zeroinitializer
  %4809 = insertelement <4 x i32> poison, i32 %4806, i32 0
  %4810 = shufflevector <4 x i32> %4809, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4811

4811:                                             ; preds = %13661, %4780
  %4812 = phi i32 [ 0, %4780 ], [ %13681, %13661 ]
  %4813 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4780 ], [ %13679, %13661 ]
  %4814 = phi <4 x i64> [ zeroinitializer, %4780 ], [ %13680, %13661 ]
  %4815 = or i32 %4812, 1
  %4816 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4815
  %4817 = bitcast i32* %4816 to <4 x i32>*
  %4818 = load <4 x i32>, <4 x i32>* %4817, align 4, !tbaa !3
  %4819 = getelementptr inbounds i32, i32* %4816, i32 4
  %4820 = bitcast i32* %4819 to <4 x i32>*
  %4821 = load <4 x i32>, <4 x i32>* %4820, align 4, !tbaa !3
  %4822 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4818
  %4823 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4821
  %4824 = bitcast <4 x i8*> %4822 to <4 x i64*>
  %4825 = bitcast <4 x i8*> %4823 to <4 x i64*>
  %4826 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4824, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4827 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4825, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4828 = icmp eq <4 x i32> %4808, %4818
  %4829 = icmp eq <4 x i32> %4810, %4821
  %4830 = select <4 x i1> %4828, <4 x i64> %4826, <4 x i64> zeroinitializer
  %4831 = select <4 x i1> %4829, <4 x i64> %4827, <4 x i64> zeroinitializer
  %4832 = add <4 x i64> %4830, %4813
  %4833 = add <4 x i64> %4831, %4814
  %4834 = or i32 %4812, 9
  %4835 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4834
  %4836 = bitcast i32* %4835 to <4 x i32>*
  %4837 = load <4 x i32>, <4 x i32>* %4836, align 4, !tbaa !3
  %4838 = getelementptr inbounds i32, i32* %4835, i32 4
  %4839 = bitcast i32* %4838 to <4 x i32>*
  %4840 = load <4 x i32>, <4 x i32>* %4839, align 4, !tbaa !3
  %4841 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4837
  %4842 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4840
  %4843 = bitcast <4 x i8*> %4841 to <4 x i64*>
  %4844 = bitcast <4 x i8*> %4842 to <4 x i64*>
  %4845 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4843, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4846 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4844, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4847 = icmp eq <4 x i32> %4808, %4837
  %4848 = icmp eq <4 x i32> %4810, %4840
  %4849 = select <4 x i1> %4847, <4 x i64> %4845, <4 x i64> zeroinitializer
  %4850 = select <4 x i1> %4848, <4 x i64> %4846, <4 x i64> zeroinitializer
  %4851 = add <4 x i64> %4849, %4832
  %4852 = add <4 x i64> %4850, %4833
  %4853 = or i32 %4812, 17
  %4854 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4853
  %4855 = bitcast i32* %4854 to <4 x i32>*
  %4856 = load <4 x i32>, <4 x i32>* %4855, align 4, !tbaa !3
  %4857 = getelementptr inbounds i32, i32* %4854, i32 4
  %4858 = bitcast i32* %4857 to <4 x i32>*
  %4859 = load <4 x i32>, <4 x i32>* %4858, align 4, !tbaa !3
  %4860 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4856
  %4861 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %4859
  %4862 = bitcast <4 x i8*> %4860 to <4 x i64*>
  %4863 = bitcast <4 x i8*> %4861 to <4 x i64*>
  %4864 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4862, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4865 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4863, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4866 = icmp eq <4 x i32> %4808, %4856
  %4867 = icmp eq <4 x i32> %4810, %4859
  %4868 = select <4 x i1> %4866, <4 x i64> %4864, <4 x i64> zeroinitializer
  %4869 = select <4 x i1> %4867, <4 x i64> %4865, <4 x i64> zeroinitializer
  %4870 = add <4 x i64> %4868, %4851
  %4871 = add <4 x i64> %4869, %4852
  %4872 = icmp eq i32 %4812, 224
  br i1 %4872, label %4873, label %13661, !llvm.loop !65

4873:                                             ; preds = %4811
  %4874 = add <4 x i64> %4871, %4870
  %4875 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4874)
  %4876 = icmp eq i32 %4806, 1992
  %4877 = select i1 %4876, i64 1203300724897905131, i64 0
  %4878 = add i64 %4877, %4875
  %4879 = icmp eq i32 %4806, 2000
  %4880 = select i1 %4879, i64 -5027532858107268057, i64 0
  %4881 = add i64 %4880, %4878
  %4882 = icmp eq i32 %4806, 2008
  %4883 = select i1 %4882, i64 7935854159672328895, i64 0
  %4884 = add i64 %4883, %4881
  %4885 = icmp eq i32 %4806, 2016
  %4886 = select i1 %4885, i64 7168641125469255746, i64 0
  %4887 = add i64 %4886, %4884
  %4888 = icmp eq i32 %4806, 2024
  %4889 = select i1 %4888, i64 -4247101387443462522, i64 0
  %4890 = add i64 %4889, %4887
  %4891 = icmp eq i32 %4806, 2032
  %4892 = select i1 %4891, i64 4076570933917792731, i64 0
  %4893 = add i64 %4892, %4890
  %4894 = icmp eq i32 %4806, 2040
  %4895 = select i1 %4894, i64 6275139646136265361, i64 0
  %4896 = add i64 %4895, %4893
  %4897 = lshr i64 %4524, 21
  %4898 = trunc i64 %4897 to i32
  %4899 = and i32 %4898, 2040
  %4900 = insertelement <4 x i32> poison, i32 %4899, i32 0
  %4901 = shufflevector <4 x i32> %4900, <4 x i32> poison, <4 x i32> zeroinitializer
  %4902 = insertelement <4 x i32> poison, i32 %4899, i32 0
  %4903 = shufflevector <4 x i32> %4902, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4904

4904:                                             ; preds = %13640, %4873
  %4905 = phi i32 [ 0, %4873 ], [ %13660, %13640 ]
  %4906 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4873 ], [ %13658, %13640 ]
  %4907 = phi <4 x i64> [ zeroinitializer, %4873 ], [ %13659, %13640 ]
  %4908 = or i32 %4905, 1
  %4909 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4908
  %4910 = bitcast i32* %4909 to <4 x i32>*
  %4911 = load <4 x i32>, <4 x i32>* %4910, align 4, !tbaa !3
  %4912 = getelementptr inbounds i32, i32* %4909, i32 4
  %4913 = bitcast i32* %4912 to <4 x i32>*
  %4914 = load <4 x i32>, <4 x i32>* %4913, align 4, !tbaa !3
  %4915 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4911
  %4916 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4914
  %4917 = bitcast <4 x i8*> %4915 to <4 x i64*>
  %4918 = bitcast <4 x i8*> %4916 to <4 x i64*>
  %4919 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4917, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4920 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4918, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4921 = icmp eq <4 x i32> %4901, %4911
  %4922 = icmp eq <4 x i32> %4903, %4914
  %4923 = select <4 x i1> %4921, <4 x i64> %4919, <4 x i64> zeroinitializer
  %4924 = select <4 x i1> %4922, <4 x i64> %4920, <4 x i64> zeroinitializer
  %4925 = add <4 x i64> %4923, %4906
  %4926 = add <4 x i64> %4924, %4907
  %4927 = or i32 %4905, 9
  %4928 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4927
  %4929 = bitcast i32* %4928 to <4 x i32>*
  %4930 = load <4 x i32>, <4 x i32>* %4929, align 4, !tbaa !3
  %4931 = getelementptr inbounds i32, i32* %4928, i32 4
  %4932 = bitcast i32* %4931 to <4 x i32>*
  %4933 = load <4 x i32>, <4 x i32>* %4932, align 4, !tbaa !3
  %4934 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4930
  %4935 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4933
  %4936 = bitcast <4 x i8*> %4934 to <4 x i64*>
  %4937 = bitcast <4 x i8*> %4935 to <4 x i64*>
  %4938 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4936, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4939 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4937, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4940 = icmp eq <4 x i32> %4901, %4930
  %4941 = icmp eq <4 x i32> %4903, %4933
  %4942 = select <4 x i1> %4940, <4 x i64> %4938, <4 x i64> zeroinitializer
  %4943 = select <4 x i1> %4941, <4 x i64> %4939, <4 x i64> zeroinitializer
  %4944 = add <4 x i64> %4942, %4925
  %4945 = add <4 x i64> %4943, %4926
  %4946 = or i32 %4905, 17
  %4947 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %4946
  %4948 = bitcast i32* %4947 to <4 x i32>*
  %4949 = load <4 x i32>, <4 x i32>* %4948, align 4, !tbaa !3
  %4950 = getelementptr inbounds i32, i32* %4947, i32 4
  %4951 = bitcast i32* %4950 to <4 x i32>*
  %4952 = load <4 x i32>, <4 x i32>* %4951, align 4, !tbaa !3
  %4953 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4949
  %4954 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %4952
  %4955 = bitcast <4 x i8*> %4953 to <4 x i64*>
  %4956 = bitcast <4 x i8*> %4954 to <4 x i64*>
  %4957 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4955, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4958 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %4956, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %4959 = icmp eq <4 x i32> %4901, %4949
  %4960 = icmp eq <4 x i32> %4903, %4952
  %4961 = select <4 x i1> %4959, <4 x i64> %4957, <4 x i64> zeroinitializer
  %4962 = select <4 x i1> %4960, <4 x i64> %4958, <4 x i64> zeroinitializer
  %4963 = add <4 x i64> %4961, %4944
  %4964 = add <4 x i64> %4962, %4945
  %4965 = icmp eq i32 %4905, 224
  br i1 %4965, label %4966, label %13640, !llvm.loop !66

4966:                                             ; preds = %4904
  %4967 = add <4 x i64> %4964, %4963
  %4968 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %4967)
  %4969 = icmp eq i32 %4899, 1992
  %4970 = select i1 %4969, i64 -1479007749835869680, i64 0
  %4971 = add i64 %4970, %4968
  %4972 = icmp eq i32 %4899, 2000
  %4973 = select i1 %4972, i64 2843154170404223674, i64 0
  %4974 = add i64 %4973, %4971
  %4975 = icmp eq i32 %4899, 2008
  %4976 = select i1 %4975, i64 -4665003603661872786, i64 0
  %4977 = add i64 %4976, %4974
  %4978 = icmp eq i32 %4899, 2016
  %4979 = select i1 %4978, i64 4825845994704960611, i64 0
  %4980 = add i64 %4979, %4977
  %4981 = icmp eq i32 %4899, 2024
  %4982 = select i1 %4981, i64 -8782479638933598267, i64 0
  %4983 = add i64 %4982, %4980
  %4984 = icmp eq i32 %4899, 2032
  %4985 = select i1 %4984, i64 -2649846723997625800, i64 0
  %4986 = add i64 %4985, %4983
  %4987 = icmp eq i32 %4899, 2040
  %4988 = select i1 %4987, i64 -7986310597085620905, i64 0
  %4989 = add i64 %4988, %4986
  %4990 = lshr i64 %4524, 13
  %4991 = trunc i64 %4990 to i32
  %4992 = and i32 %4991, 2040
  %4993 = insertelement <4 x i32> poison, i32 %4992, i32 0
  %4994 = shufflevector <4 x i32> %4993, <4 x i32> poison, <4 x i32> zeroinitializer
  %4995 = insertelement <4 x i32> poison, i32 %4992, i32 0
  %4996 = shufflevector <4 x i32> %4995, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %4997

4997:                                             ; preds = %13619, %4966
  %4998 = phi i32 [ 0, %4966 ], [ %13639, %13619 ]
  %4999 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %4966 ], [ %13637, %13619 ]
  %5000 = phi <4 x i64> [ zeroinitializer, %4966 ], [ %13638, %13619 ]
  %5001 = or i32 %4998, 1
  %5002 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5001
  %5003 = bitcast i32* %5002 to <4 x i32>*
  %5004 = load <4 x i32>, <4 x i32>* %5003, align 4, !tbaa !3
  %5005 = getelementptr inbounds i32, i32* %5002, i32 4
  %5006 = bitcast i32* %5005 to <4 x i32>*
  %5007 = load <4 x i32>, <4 x i32>* %5006, align 4, !tbaa !3
  %5008 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5004
  %5009 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5007
  %5010 = bitcast <4 x i8*> %5008 to <4 x i64*>
  %5011 = bitcast <4 x i8*> %5009 to <4 x i64*>
  %5012 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5010, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5013 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5011, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5014 = icmp eq <4 x i32> %4994, %5004
  %5015 = icmp eq <4 x i32> %4996, %5007
  %5016 = select <4 x i1> %5014, <4 x i64> %5012, <4 x i64> zeroinitializer
  %5017 = select <4 x i1> %5015, <4 x i64> %5013, <4 x i64> zeroinitializer
  %5018 = add <4 x i64> %5016, %4999
  %5019 = add <4 x i64> %5017, %5000
  %5020 = or i32 %4998, 9
  %5021 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5020
  %5022 = bitcast i32* %5021 to <4 x i32>*
  %5023 = load <4 x i32>, <4 x i32>* %5022, align 4, !tbaa !3
  %5024 = getelementptr inbounds i32, i32* %5021, i32 4
  %5025 = bitcast i32* %5024 to <4 x i32>*
  %5026 = load <4 x i32>, <4 x i32>* %5025, align 4, !tbaa !3
  %5027 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5023
  %5028 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5026
  %5029 = bitcast <4 x i8*> %5027 to <4 x i64*>
  %5030 = bitcast <4 x i8*> %5028 to <4 x i64*>
  %5031 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5029, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5032 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5030, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5033 = icmp eq <4 x i32> %4994, %5023
  %5034 = icmp eq <4 x i32> %4996, %5026
  %5035 = select <4 x i1> %5033, <4 x i64> %5031, <4 x i64> zeroinitializer
  %5036 = select <4 x i1> %5034, <4 x i64> %5032, <4 x i64> zeroinitializer
  %5037 = add <4 x i64> %5035, %5018
  %5038 = add <4 x i64> %5036, %5019
  %5039 = or i32 %4998, 17
  %5040 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5039
  %5041 = bitcast i32* %5040 to <4 x i32>*
  %5042 = load <4 x i32>, <4 x i32>* %5041, align 4, !tbaa !3
  %5043 = getelementptr inbounds i32, i32* %5040, i32 4
  %5044 = bitcast i32* %5043 to <4 x i32>*
  %5045 = load <4 x i32>, <4 x i32>* %5044, align 4, !tbaa !3
  %5046 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5042
  %5047 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5045
  %5048 = bitcast <4 x i8*> %5046 to <4 x i64*>
  %5049 = bitcast <4 x i8*> %5047 to <4 x i64*>
  %5050 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5048, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5051 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5049, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5052 = icmp eq <4 x i32> %4994, %5042
  %5053 = icmp eq <4 x i32> %4996, %5045
  %5054 = select <4 x i1> %5052, <4 x i64> %5050, <4 x i64> zeroinitializer
  %5055 = select <4 x i1> %5053, <4 x i64> %5051, <4 x i64> zeroinitializer
  %5056 = add <4 x i64> %5054, %5037
  %5057 = add <4 x i64> %5055, %5038
  %5058 = icmp eq i32 %4998, 224
  br i1 %5058, label %5059, label %13619, !llvm.loop !67

5059:                                             ; preds = %4997
  %5060 = add <4 x i64> %5057, %5056
  %5061 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5060)
  %5062 = icmp eq i32 %4992, 1992
  %5063 = select i1 %5062, i64 8785196325032562866, i64 0
  %5064 = add i64 %5063, %5061
  %5065 = icmp eq i32 %4992, 2000
  %5066 = select i1 %5065, i64 8369843054303033914, i64 0
  %5067 = add i64 %5066, %5064
  %5068 = icmp eq i32 %4992, 2008
  %5069 = select i1 %5068, i64 4809827444717481505, i64 0
  %5070 = add i64 %5069, %5067
  %5071 = icmp eq i32 %4992, 2016
  %5072 = select i1 %5071, i64 -557780216695528580, i64 0
  %5073 = add i64 %5072, %5070
  %5074 = icmp eq i32 %4992, 2024
  %5075 = select i1 %5074, i64 2199529431470097679, i64 0
  %5076 = add i64 %5075, %5073
  %5077 = icmp eq i32 %4992, 2032
  %5078 = select i1 %5077, i64 4169051064997918866, i64 0
  %5079 = add i64 %5078, %5076
  %5080 = icmp eq i32 %4992, 2040
  %5081 = select i1 %5080, i64 3067465835107997461, i64 0
  %5082 = add i64 %5081, %5079
  %5083 = lshr i64 %4524, 5
  %5084 = trunc i64 %5083 to i32
  %5085 = and i32 %5084, 2040
  %5086 = insertelement <4 x i32> poison, i32 %5085, i32 0
  %5087 = shufflevector <4 x i32> %5086, <4 x i32> poison, <4 x i32> zeroinitializer
  %5088 = insertelement <4 x i32> poison, i32 %5085, i32 0
  %5089 = shufflevector <4 x i32> %5088, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %5090

5090:                                             ; preds = %13598, %5059
  %5091 = phi i32 [ 0, %5059 ], [ %13618, %13598 ]
  %5092 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5059 ], [ %13616, %13598 ]
  %5093 = phi <4 x i64> [ zeroinitializer, %5059 ], [ %13617, %13598 ]
  %5094 = or i32 %5091, 1
  %5095 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5094
  %5096 = bitcast i32* %5095 to <4 x i32>*
  %5097 = load <4 x i32>, <4 x i32>* %5096, align 4, !tbaa !3
  %5098 = getelementptr inbounds i32, i32* %5095, i32 4
  %5099 = bitcast i32* %5098 to <4 x i32>*
  %5100 = load <4 x i32>, <4 x i32>* %5099, align 4, !tbaa !3
  %5101 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5097
  %5102 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5100
  %5103 = bitcast <4 x i8*> %5101 to <4 x i64*>
  %5104 = bitcast <4 x i8*> %5102 to <4 x i64*>
  %5105 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5103, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5106 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5104, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5107 = icmp eq <4 x i32> %5087, %5097
  %5108 = icmp eq <4 x i32> %5089, %5100
  %5109 = select <4 x i1> %5107, <4 x i64> %5105, <4 x i64> zeroinitializer
  %5110 = select <4 x i1> %5108, <4 x i64> %5106, <4 x i64> zeroinitializer
  %5111 = add <4 x i64> %5109, %5092
  %5112 = add <4 x i64> %5110, %5093
  %5113 = or i32 %5091, 9
  %5114 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5113
  %5115 = bitcast i32* %5114 to <4 x i32>*
  %5116 = load <4 x i32>, <4 x i32>* %5115, align 4, !tbaa !3
  %5117 = getelementptr inbounds i32, i32* %5114, i32 4
  %5118 = bitcast i32* %5117 to <4 x i32>*
  %5119 = load <4 x i32>, <4 x i32>* %5118, align 4, !tbaa !3
  %5120 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5116
  %5121 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5119
  %5122 = bitcast <4 x i8*> %5120 to <4 x i64*>
  %5123 = bitcast <4 x i8*> %5121 to <4 x i64*>
  %5124 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5122, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5125 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5123, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5126 = icmp eq <4 x i32> %5087, %5116
  %5127 = icmp eq <4 x i32> %5089, %5119
  %5128 = select <4 x i1> %5126, <4 x i64> %5124, <4 x i64> zeroinitializer
  %5129 = select <4 x i1> %5127, <4 x i64> %5125, <4 x i64> zeroinitializer
  %5130 = add <4 x i64> %5128, %5111
  %5131 = add <4 x i64> %5129, %5112
  %5132 = or i32 %5091, 17
  %5133 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5132
  %5134 = bitcast i32* %5133 to <4 x i32>*
  %5135 = load <4 x i32>, <4 x i32>* %5134, align 4, !tbaa !3
  %5136 = getelementptr inbounds i32, i32* %5133, i32 4
  %5137 = bitcast i32* %5136 to <4 x i32>*
  %5138 = load <4 x i32>, <4 x i32>* %5137, align 4, !tbaa !3
  %5139 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5135
  %5140 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5138
  %5141 = bitcast <4 x i8*> %5139 to <4 x i64*>
  %5142 = bitcast <4 x i8*> %5140 to <4 x i64*>
  %5143 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5141, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5144 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5142, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5145 = icmp eq <4 x i32> %5087, %5135
  %5146 = icmp eq <4 x i32> %5089, %5138
  %5147 = select <4 x i1> %5145, <4 x i64> %5143, <4 x i64> zeroinitializer
  %5148 = select <4 x i1> %5146, <4 x i64> %5144, <4 x i64> zeroinitializer
  %5149 = add <4 x i64> %5147, %5130
  %5150 = add <4 x i64> %5148, %5131
  %5151 = icmp eq i32 %5091, 224
  br i1 %5151, label %5152, label %13598, !llvm.loop !68

5152:                                             ; preds = %5090
  %5153 = add <4 x i64> %5150, %5149
  %5154 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5153)
  %5155 = icmp eq i32 %5085, 1992
  %5156 = select i1 %5155, i64 -9058450267568037125, i64 0
  %5157 = add i64 %5156, %5154
  %5158 = icmp eq i32 %5085, 2000
  %5159 = select i1 %5158, i64 -1610274961606672227, i64 0
  %5160 = add i64 %5159, %5157
  %5161 = icmp eq i32 %5085, 2008
  %5162 = select i1 %5161, i64 -7786513464973963311, i64 0
  %5163 = add i64 %5162, %5160
  %5164 = icmp eq i32 %5085, 2016
  %5165 = select i1 %5164, i64 -2783995359638905055, i64 0
  %5166 = add i64 %5165, %5163
  %5167 = icmp eq i32 %5085, 2024
  %5168 = select i1 %5167, i64 6722895807429069379, i64 0
  %5169 = add i64 %5168, %5166
  %5170 = icmp eq i32 %5085, 2032
  %5171 = select i1 %5170, i64 -2706140860760151325, i64 0
  %5172 = add i64 %5171, %5169
  %5173 = icmp eq i32 %5085, 2040
  %5174 = select i1 %5173, i64 -1381601050739916090, i64 0
  %5175 = add i64 %5174, %5172
  %5176 = trunc i64 %4524 to i32
  %5177 = and i32 %5176, 255
  %5178 = getelementptr inbounds [256 x i64], [256 x i64]* @T7, i32 0, i32 %5177
  %5179 = insertelement <4 x i64*> poison, i64* %5178, i32 0
  %5180 = shufflevector <4 x i64*> %5179, <4 x i64*> poison, <4 x i32> zeroinitializer
  %5181 = insertelement <4 x i64*> poison, i64* %5178, i32 0
  %5182 = shufflevector <4 x i64*> %5181, <4 x i64*> poison, <4 x i32> zeroinitializer
  br label %5183

5183:                                             ; preds = %13577, %5152
  %5184 = phi i32 [ 0, %5152 ], [ %13597, %13577 ]
  %5185 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5152 ], [ %13595, %13577 ]
  %5186 = phi <4 x i64> [ zeroinitializer, %5152 ], [ %13596, %13577 ]
  %5187 = or i32 %5184, 1
  %5188 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5187
  %5189 = bitcast i32* %5188 to <4 x i32>*
  %5190 = load <4 x i32>, <4 x i32>* %5189, align 4, !tbaa !3
  %5191 = getelementptr inbounds i32, i32* %5188, i32 4
  %5192 = bitcast i32* %5191 to <4 x i32>*
  %5193 = load <4 x i32>, <4 x i32>* %5192, align 4, !tbaa !3
  %5194 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5190
  %5195 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5193
  %5196 = bitcast <4 x i8*> %5194 to <4 x i64*>
  %5197 = bitcast <4 x i8*> %5195 to <4 x i64*>
  %5198 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5196, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5199 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5197, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5200 = icmp eq <4 x i64*> %5180, %5196
  %5201 = icmp eq <4 x i64*> %5182, %5197
  %5202 = select <4 x i1> %5200, <4 x i64> %5198, <4 x i64> zeroinitializer
  %5203 = select <4 x i1> %5201, <4 x i64> %5199, <4 x i64> zeroinitializer
  %5204 = add <4 x i64> %5202, %5185
  %5205 = add <4 x i64> %5203, %5186
  %5206 = or i32 %5184, 9
  %5207 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5206
  %5208 = bitcast i32* %5207 to <4 x i32>*
  %5209 = load <4 x i32>, <4 x i32>* %5208, align 4, !tbaa !3
  %5210 = getelementptr inbounds i32, i32* %5207, i32 4
  %5211 = bitcast i32* %5210 to <4 x i32>*
  %5212 = load <4 x i32>, <4 x i32>* %5211, align 4, !tbaa !3
  %5213 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5209
  %5214 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5212
  %5215 = bitcast <4 x i8*> %5213 to <4 x i64*>
  %5216 = bitcast <4 x i8*> %5214 to <4 x i64*>
  %5217 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5215, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5218 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5216, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5219 = icmp eq <4 x i64*> %5180, %5215
  %5220 = icmp eq <4 x i64*> %5182, %5216
  %5221 = select <4 x i1> %5219, <4 x i64> %5217, <4 x i64> zeroinitializer
  %5222 = select <4 x i1> %5220, <4 x i64> %5218, <4 x i64> zeroinitializer
  %5223 = add <4 x i64> %5221, %5204
  %5224 = add <4 x i64> %5222, %5205
  %5225 = or i32 %5184, 17
  %5226 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5225
  %5227 = bitcast i32* %5226 to <4 x i32>*
  %5228 = load <4 x i32>, <4 x i32>* %5227, align 4, !tbaa !3
  %5229 = getelementptr inbounds i32, i32* %5226, i32 4
  %5230 = bitcast i32* %5229 to <4 x i32>*
  %5231 = load <4 x i32>, <4 x i32>* %5230, align 4, !tbaa !3
  %5232 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5228
  %5233 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5231
  %5234 = bitcast <4 x i8*> %5232 to <4 x i64*>
  %5235 = bitcast <4 x i8*> %5233 to <4 x i64*>
  %5236 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5234, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5237 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5235, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5238 = icmp eq <4 x i64*> %5180, %5234
  %5239 = icmp eq <4 x i64*> %5182, %5235
  %5240 = select <4 x i1> %5238, <4 x i64> %5236, <4 x i64> zeroinitializer
  %5241 = select <4 x i1> %5239, <4 x i64> %5237, <4 x i64> zeroinitializer
  %5242 = add <4 x i64> %5240, %5223
  %5243 = add <4 x i64> %5241, %5224
  %5244 = icmp eq i32 %5184, 224
  br i1 %5244, label %5245, label %13577, !llvm.loop !69

5245:                                             ; preds = %5183
  %5246 = add <4 x i64> %5243, %5242
  %5247 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5246)
  %5248 = icmp eq i32 %5177, 249
  %5249 = select i1 %5248, i64 5296930162245565346, i64 0
  %5250 = add i64 %5249, %5247
  %5251 = icmp eq i32 %5177, 250
  %5252 = select i1 %5251, i64 -6347414485825053312, i64 0
  %5253 = add i64 %5252, %5250
  %5254 = icmp eq i32 %5177, 251
  %5255 = select i1 %5254, i64 -1111471293076483761, i64 0
  %5256 = add i64 %5255, %5253
  %5257 = icmp eq i32 %5177, 252
  %5258 = select i1 %5257, i64 6762709279494119711, i64 0
  %5259 = add i64 %5258, %5256
  %5260 = icmp eq i32 %5177, 253
  %5261 = select i1 %5260, i64 5502587883897177034, i64 0
  %5262 = add i64 %5261, %5259
  %5263 = icmp eq i32 %5177, 254
  %5264 = select i1 %5263, i64 8203933284918551466, i64 0
  %5265 = add i64 %5264, %5262
  %5266 = icmp eq i32 %5177, 255
  %5267 = select i1 %5266, i64 -3176116833483372990, i64 0
  %5268 = add i64 %5267, %5265
  %5269 = xor i64 %3770, %4617
  %5270 = xor i64 %5269, %4710
  %5271 = xor i64 %5270, %4803
  %5272 = xor i64 %5271, %4896
  %5273 = xor i64 %5272, %4989
  %5274 = xor i64 %5273, %5082
  %5275 = xor i64 %5274, %5175
  %5276 = xor i64 %5275, %5268
  %5277 = xor i64 %5276, 9213014818806174424
  store i64 %5277, i64* @ctx.0.6, align 8, !tbaa !7
  %5278 = lshr i64 %5277, 53
  %5279 = trunc i64 %5278 to i32
  %5280 = and i32 %5279, 2040
  %5281 = insertelement <4 x i32> poison, i32 %5280, i32 0
  %5282 = shufflevector <4 x i32> %5281, <4 x i32> poison, <4 x i32> zeroinitializer
  %5283 = insertelement <4 x i32> poison, i32 %5280, i32 0
  %5284 = shufflevector <4 x i32> %5283, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %5285

5285:                                             ; preds = %13556, %5245
  %5286 = phi i32 [ 0, %5245 ], [ %13576, %13556 ]
  %5287 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5245 ], [ %13574, %13556 ]
  %5288 = phi <4 x i64> [ zeroinitializer, %5245 ], [ %13575, %13556 ]
  %5289 = or i32 %5286, 1
  %5290 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5289
  %5291 = bitcast i32* %5290 to <4 x i32>*
  %5292 = load <4 x i32>, <4 x i32>* %5291, align 4, !tbaa !3
  %5293 = getelementptr inbounds i32, i32* %5290, i32 4
  %5294 = bitcast i32* %5293 to <4 x i32>*
  %5295 = load <4 x i32>, <4 x i32>* %5294, align 4, !tbaa !3
  %5296 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %5292
  %5297 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %5295
  %5298 = bitcast <4 x i8*> %5296 to <4 x i64*>
  %5299 = bitcast <4 x i8*> %5297 to <4 x i64*>
  %5300 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5298, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5301 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5299, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5302 = icmp eq <4 x i32> %5292, %5282
  %5303 = icmp eq <4 x i32> %5295, %5284
  %5304 = select <4 x i1> %5302, <4 x i64> %5300, <4 x i64> zeroinitializer
  %5305 = select <4 x i1> %5303, <4 x i64> %5301, <4 x i64> zeroinitializer
  %5306 = add <4 x i64> %5304, %5287
  %5307 = add <4 x i64> %5305, %5288
  %5308 = or i32 %5286, 9
  %5309 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5308
  %5310 = bitcast i32* %5309 to <4 x i32>*
  %5311 = load <4 x i32>, <4 x i32>* %5310, align 4, !tbaa !3
  %5312 = getelementptr inbounds i32, i32* %5309, i32 4
  %5313 = bitcast i32* %5312 to <4 x i32>*
  %5314 = load <4 x i32>, <4 x i32>* %5313, align 4, !tbaa !3
  %5315 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %5311
  %5316 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %5314
  %5317 = bitcast <4 x i8*> %5315 to <4 x i64*>
  %5318 = bitcast <4 x i8*> %5316 to <4 x i64*>
  %5319 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5317, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5320 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5318, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5321 = icmp eq <4 x i32> %5311, %5282
  %5322 = icmp eq <4 x i32> %5314, %5284
  %5323 = select <4 x i1> %5321, <4 x i64> %5319, <4 x i64> zeroinitializer
  %5324 = select <4 x i1> %5322, <4 x i64> %5320, <4 x i64> zeroinitializer
  %5325 = add <4 x i64> %5323, %5306
  %5326 = add <4 x i64> %5324, %5307
  %5327 = or i32 %5286, 17
  %5328 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5327
  %5329 = bitcast i32* %5328 to <4 x i32>*
  %5330 = load <4 x i32>, <4 x i32>* %5329, align 4, !tbaa !3
  %5331 = getelementptr inbounds i32, i32* %5328, i32 4
  %5332 = bitcast i32* %5331 to <4 x i32>*
  %5333 = load <4 x i32>, <4 x i32>* %5332, align 4, !tbaa !3
  %5334 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %5330
  %5335 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %5333
  %5336 = bitcast <4 x i8*> %5334 to <4 x i64*>
  %5337 = bitcast <4 x i8*> %5335 to <4 x i64*>
  %5338 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5336, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5339 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5337, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5340 = icmp eq <4 x i32> %5330, %5282
  %5341 = icmp eq <4 x i32> %5333, %5284
  %5342 = select <4 x i1> %5340, <4 x i64> %5338, <4 x i64> zeroinitializer
  %5343 = select <4 x i1> %5341, <4 x i64> %5339, <4 x i64> zeroinitializer
  %5344 = add <4 x i64> %5342, %5325
  %5345 = add <4 x i64> %5343, %5326
  %5346 = icmp eq i32 %5286, 224
  br i1 %5346, label %5347, label %13556, !llvm.loop !70

5347:                                             ; preds = %5285
  %5348 = add <4 x i64> %5345, %5344
  %5349 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5348)
  %5350 = icmp eq i32 %5280, 1992
  %5351 = select i1 %5350, i64 -6702567834671021495, i64 0
  %5352 = add i64 %5351, %5349
  %5353 = icmp eq i32 %5280, 2000
  %5354 = select i1 %5353, i64 -9179115894310901337, i64 0
  %5355 = add i64 %5354, %5352
  %5356 = icmp eq i32 %5280, 2008
  %5357 = select i1 %5356, i64 5751414958667764720, i64 0
  %5358 = add i64 %5357, %5355
  %5359 = icmp eq i32 %5280, 2016
  %5360 = select i1 %5359, i64 2243210855174429021, i64 0
  %5361 = add i64 %5360, %5358
  %5362 = icmp eq i32 %5280, 2024
  %5363 = select i1 %5362, i64 -3872233913575383732, i64 0
  %5364 = add i64 %5363, %5361
  %5365 = icmp eq i32 %5280, 2032
  %5366 = select i1 %5365, i64 -6132897494654657935, i64 0
  %5367 = add i64 %5366, %5364
  %5368 = icmp eq i32 %5280, 2040
  %5369 = select i1 %5368, i64 4811556717733801171, i64 0
  %5370 = add i64 %5369, %5367
  %5371 = lshr i64 %5277, 45
  %5372 = trunc i64 %5371 to i32
  %5373 = and i32 %5372, 2040
  %5374 = insertelement <4 x i32> poison, i32 %5373, i32 0
  %5375 = shufflevector <4 x i32> %5374, <4 x i32> poison, <4 x i32> zeroinitializer
  %5376 = insertelement <4 x i32> poison, i32 %5373, i32 0
  %5377 = shufflevector <4 x i32> %5376, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %5378

5378:                                             ; preds = %13535, %5347
  %5379 = phi i32 [ 0, %5347 ], [ %13555, %13535 ]
  %5380 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5347 ], [ %13553, %13535 ]
  %5381 = phi <4 x i64> [ zeroinitializer, %5347 ], [ %13554, %13535 ]
  %5382 = or i32 %5379, 1
  %5383 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5382
  %5384 = bitcast i32* %5383 to <4 x i32>*
  %5385 = load <4 x i32>, <4 x i32>* %5384, align 4, !tbaa !3
  %5386 = getelementptr inbounds i32, i32* %5383, i32 4
  %5387 = bitcast i32* %5386 to <4 x i32>*
  %5388 = load <4 x i32>, <4 x i32>* %5387, align 4, !tbaa !3
  %5389 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %5385
  %5390 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %5388
  %5391 = bitcast <4 x i8*> %5389 to <4 x i64*>
  %5392 = bitcast <4 x i8*> %5390 to <4 x i64*>
  %5393 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5391, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5394 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5392, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5395 = icmp eq <4 x i32> %5375, %5385
  %5396 = icmp eq <4 x i32> %5377, %5388
  %5397 = select <4 x i1> %5395, <4 x i64> %5393, <4 x i64> zeroinitializer
  %5398 = select <4 x i1> %5396, <4 x i64> %5394, <4 x i64> zeroinitializer
  %5399 = add <4 x i64> %5397, %5380
  %5400 = add <4 x i64> %5398, %5381
  %5401 = or i32 %5379, 9
  %5402 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5401
  %5403 = bitcast i32* %5402 to <4 x i32>*
  %5404 = load <4 x i32>, <4 x i32>* %5403, align 4, !tbaa !3
  %5405 = getelementptr inbounds i32, i32* %5402, i32 4
  %5406 = bitcast i32* %5405 to <4 x i32>*
  %5407 = load <4 x i32>, <4 x i32>* %5406, align 4, !tbaa !3
  %5408 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %5404
  %5409 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %5407
  %5410 = bitcast <4 x i8*> %5408 to <4 x i64*>
  %5411 = bitcast <4 x i8*> %5409 to <4 x i64*>
  %5412 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5410, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5413 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5411, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5414 = icmp eq <4 x i32> %5375, %5404
  %5415 = icmp eq <4 x i32> %5377, %5407
  %5416 = select <4 x i1> %5414, <4 x i64> %5412, <4 x i64> zeroinitializer
  %5417 = select <4 x i1> %5415, <4 x i64> %5413, <4 x i64> zeroinitializer
  %5418 = add <4 x i64> %5416, %5399
  %5419 = add <4 x i64> %5417, %5400
  %5420 = or i32 %5379, 17
  %5421 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5420
  %5422 = bitcast i32* %5421 to <4 x i32>*
  %5423 = load <4 x i32>, <4 x i32>* %5422, align 4, !tbaa !3
  %5424 = getelementptr inbounds i32, i32* %5421, i32 4
  %5425 = bitcast i32* %5424 to <4 x i32>*
  %5426 = load <4 x i32>, <4 x i32>* %5425, align 4, !tbaa !3
  %5427 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %5423
  %5428 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %5426
  %5429 = bitcast <4 x i8*> %5427 to <4 x i64*>
  %5430 = bitcast <4 x i8*> %5428 to <4 x i64*>
  %5431 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5429, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5432 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5430, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5433 = icmp eq <4 x i32> %5375, %5423
  %5434 = icmp eq <4 x i32> %5377, %5426
  %5435 = select <4 x i1> %5433, <4 x i64> %5431, <4 x i64> zeroinitializer
  %5436 = select <4 x i1> %5434, <4 x i64> %5432, <4 x i64> zeroinitializer
  %5437 = add <4 x i64> %5435, %5418
  %5438 = add <4 x i64> %5436, %5419
  %5439 = icmp eq i32 %5379, 224
  br i1 %5439, label %5440, label %13535, !llvm.loop !71

5440:                                             ; preds = %5378
  %5441 = add <4 x i64> %5438, %5437
  %5442 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5441)
  %5443 = icmp eq i32 %5373, 1992
  %5444 = select i1 %5443, i64 -314670665226827390, i64 0
  %5445 = add i64 %5444, %5442
  %5446 = icmp eq i32 %5373, 2000
  %5447 = select i1 %5446, i64 -7097468252516276247, i64 0
  %5448 = add i64 %5447, %5445
  %5449 = icmp eq i32 %5373, 2008
  %5450 = select i1 %5449, i64 -3364349307489619821, i64 0
  %5451 = add i64 %5450, %5448
  %5452 = icmp eq i32 %5373, 2016
  %5453 = select i1 %5452, i64 2386735715921845721, i64 0
  %5454 = add i64 %5453, %5451
  %5455 = icmp eq i32 %5373, 2024
  %5456 = select i1 %5455, i64 4884933414564023389, i64 0
  %5457 = add i64 %5456, %5454
  %5458 = icmp eq i32 %5373, 2032
  %5459 = select i1 %5458, i64 -2041757280372035110, i64 0
  %5460 = add i64 %5459, %5457
  %5461 = icmp eq i32 %5373, 2040
  %5462 = select i1 %5461, i64 -4160667357316787220, i64 0
  %5463 = add i64 %5462, %5460
  %5464 = lshr i64 %5277, 37
  %5465 = trunc i64 %5464 to i32
  %5466 = and i32 %5465, 2040
  %5467 = insertelement <4 x i32> poison, i32 %5466, i32 0
  %5468 = shufflevector <4 x i32> %5467, <4 x i32> poison, <4 x i32> zeroinitializer
  %5469 = insertelement <4 x i32> poison, i32 %5466, i32 0
  %5470 = shufflevector <4 x i32> %5469, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %5471

5471:                                             ; preds = %13514, %5440
  %5472 = phi i32 [ 0, %5440 ], [ %13534, %13514 ]
  %5473 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5440 ], [ %13532, %13514 ]
  %5474 = phi <4 x i64> [ zeroinitializer, %5440 ], [ %13533, %13514 ]
  %5475 = or i32 %5472, 1
  %5476 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5475
  %5477 = bitcast i32* %5476 to <4 x i32>*
  %5478 = load <4 x i32>, <4 x i32>* %5477, align 4, !tbaa !3
  %5479 = getelementptr inbounds i32, i32* %5476, i32 4
  %5480 = bitcast i32* %5479 to <4 x i32>*
  %5481 = load <4 x i32>, <4 x i32>* %5480, align 4, !tbaa !3
  %5482 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %5478
  %5483 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %5481
  %5484 = bitcast <4 x i8*> %5482 to <4 x i64*>
  %5485 = bitcast <4 x i8*> %5483 to <4 x i64*>
  %5486 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5484, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5487 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5485, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5488 = icmp eq <4 x i32> %5468, %5478
  %5489 = icmp eq <4 x i32> %5470, %5481
  %5490 = select <4 x i1> %5488, <4 x i64> %5486, <4 x i64> zeroinitializer
  %5491 = select <4 x i1> %5489, <4 x i64> %5487, <4 x i64> zeroinitializer
  %5492 = add <4 x i64> %5490, %5473
  %5493 = add <4 x i64> %5491, %5474
  %5494 = or i32 %5472, 9
  %5495 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5494
  %5496 = bitcast i32* %5495 to <4 x i32>*
  %5497 = load <4 x i32>, <4 x i32>* %5496, align 4, !tbaa !3
  %5498 = getelementptr inbounds i32, i32* %5495, i32 4
  %5499 = bitcast i32* %5498 to <4 x i32>*
  %5500 = load <4 x i32>, <4 x i32>* %5499, align 4, !tbaa !3
  %5501 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %5497
  %5502 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %5500
  %5503 = bitcast <4 x i8*> %5501 to <4 x i64*>
  %5504 = bitcast <4 x i8*> %5502 to <4 x i64*>
  %5505 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5503, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5506 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5504, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5507 = icmp eq <4 x i32> %5468, %5497
  %5508 = icmp eq <4 x i32> %5470, %5500
  %5509 = select <4 x i1> %5507, <4 x i64> %5505, <4 x i64> zeroinitializer
  %5510 = select <4 x i1> %5508, <4 x i64> %5506, <4 x i64> zeroinitializer
  %5511 = add <4 x i64> %5509, %5492
  %5512 = add <4 x i64> %5510, %5493
  %5513 = or i32 %5472, 17
  %5514 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5513
  %5515 = bitcast i32* %5514 to <4 x i32>*
  %5516 = load <4 x i32>, <4 x i32>* %5515, align 4, !tbaa !3
  %5517 = getelementptr inbounds i32, i32* %5514, i32 4
  %5518 = bitcast i32* %5517 to <4 x i32>*
  %5519 = load <4 x i32>, <4 x i32>* %5518, align 4, !tbaa !3
  %5520 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %5516
  %5521 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %5519
  %5522 = bitcast <4 x i8*> %5520 to <4 x i64*>
  %5523 = bitcast <4 x i8*> %5521 to <4 x i64*>
  %5524 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5522, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5525 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5523, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5526 = icmp eq <4 x i32> %5468, %5516
  %5527 = icmp eq <4 x i32> %5470, %5519
  %5528 = select <4 x i1> %5526, <4 x i64> %5524, <4 x i64> zeroinitializer
  %5529 = select <4 x i1> %5527, <4 x i64> %5525, <4 x i64> zeroinitializer
  %5530 = add <4 x i64> %5528, %5511
  %5531 = add <4 x i64> %5529, %5512
  %5532 = icmp eq i32 %5472, 224
  br i1 %5532, label %5533, label %13514, !llvm.loop !72

5533:                                             ; preds = %5471
  %5534 = add <4 x i64> %5531, %5530
  %5535 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5534)
  %5536 = icmp eq i32 %5466, 1992
  %5537 = select i1 %5536, i64 -5615809534224635015, i64 0
  %5538 = add i64 %5537, %5535
  %5539 = icmp eq i32 %5466, 2000
  %5540 = select i1 %5539, i64 4231836215586269044, i64 0
  %5541 = add i64 %5540, %5538
  %5542 = icmp eq i32 %5466, 2008
  %5543 = select i1 %5542, i64 2408950612238581570, i64 0
  %5544 = add i64 %5543, %5541
  %5545 = icmp eq i32 %5466, 2016
  %5546 = select i1 %5545, i64 8963041913638568696, i64 0
  %5547 = add i64 %5546, %5544
  %5548 = icmp eq i32 %5466, 2024
  %5549 = select i1 %5548, i64 1136536871657834014, i64 0
  %5550 = add i64 %5549, %5547
  %5551 = icmp eq i32 %5466, 2032
  %5552 = select i1 %5551, i64 -7910384849877083335, i64 0
  %5553 = add i64 %5552, %5550
  %5554 = icmp eq i32 %5466, 2040
  %5555 = select i1 %5554, i64 1537771219914559786, i64 0
  %5556 = add i64 %5555, %5553
  %5557 = lshr i64 %5277, 29
  %5558 = trunc i64 %5557 to i32
  %5559 = and i32 %5558, 2040
  %5560 = insertelement <4 x i32> poison, i32 %5559, i32 0
  %5561 = shufflevector <4 x i32> %5560, <4 x i32> poison, <4 x i32> zeroinitializer
  %5562 = insertelement <4 x i32> poison, i32 %5559, i32 0
  %5563 = shufflevector <4 x i32> %5562, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %5564

5564:                                             ; preds = %13493, %5533
  %5565 = phi i32 [ 0, %5533 ], [ %13513, %13493 ]
  %5566 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5533 ], [ %13511, %13493 ]
  %5567 = phi <4 x i64> [ zeroinitializer, %5533 ], [ %13512, %13493 ]
  %5568 = or i32 %5565, 1
  %5569 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5568
  %5570 = bitcast i32* %5569 to <4 x i32>*
  %5571 = load <4 x i32>, <4 x i32>* %5570, align 4, !tbaa !3
  %5572 = getelementptr inbounds i32, i32* %5569, i32 4
  %5573 = bitcast i32* %5572 to <4 x i32>*
  %5574 = load <4 x i32>, <4 x i32>* %5573, align 4, !tbaa !3
  %5575 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %5571
  %5576 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %5574
  %5577 = bitcast <4 x i8*> %5575 to <4 x i64*>
  %5578 = bitcast <4 x i8*> %5576 to <4 x i64*>
  %5579 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5577, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5580 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5578, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5581 = icmp eq <4 x i32> %5561, %5571
  %5582 = icmp eq <4 x i32> %5563, %5574
  %5583 = select <4 x i1> %5581, <4 x i64> %5579, <4 x i64> zeroinitializer
  %5584 = select <4 x i1> %5582, <4 x i64> %5580, <4 x i64> zeroinitializer
  %5585 = add <4 x i64> %5583, %5566
  %5586 = add <4 x i64> %5584, %5567
  %5587 = or i32 %5565, 9
  %5588 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5587
  %5589 = bitcast i32* %5588 to <4 x i32>*
  %5590 = load <4 x i32>, <4 x i32>* %5589, align 4, !tbaa !3
  %5591 = getelementptr inbounds i32, i32* %5588, i32 4
  %5592 = bitcast i32* %5591 to <4 x i32>*
  %5593 = load <4 x i32>, <4 x i32>* %5592, align 4, !tbaa !3
  %5594 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %5590
  %5595 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %5593
  %5596 = bitcast <4 x i8*> %5594 to <4 x i64*>
  %5597 = bitcast <4 x i8*> %5595 to <4 x i64*>
  %5598 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5596, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5599 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5597, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5600 = icmp eq <4 x i32> %5561, %5590
  %5601 = icmp eq <4 x i32> %5563, %5593
  %5602 = select <4 x i1> %5600, <4 x i64> %5598, <4 x i64> zeroinitializer
  %5603 = select <4 x i1> %5601, <4 x i64> %5599, <4 x i64> zeroinitializer
  %5604 = add <4 x i64> %5602, %5585
  %5605 = add <4 x i64> %5603, %5586
  %5606 = or i32 %5565, 17
  %5607 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5606
  %5608 = bitcast i32* %5607 to <4 x i32>*
  %5609 = load <4 x i32>, <4 x i32>* %5608, align 4, !tbaa !3
  %5610 = getelementptr inbounds i32, i32* %5607, i32 4
  %5611 = bitcast i32* %5610 to <4 x i32>*
  %5612 = load <4 x i32>, <4 x i32>* %5611, align 4, !tbaa !3
  %5613 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %5609
  %5614 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %5612
  %5615 = bitcast <4 x i8*> %5613 to <4 x i64*>
  %5616 = bitcast <4 x i8*> %5614 to <4 x i64*>
  %5617 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5615, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5618 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5616, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5619 = icmp eq <4 x i32> %5561, %5609
  %5620 = icmp eq <4 x i32> %5563, %5612
  %5621 = select <4 x i1> %5619, <4 x i64> %5617, <4 x i64> zeroinitializer
  %5622 = select <4 x i1> %5620, <4 x i64> %5618, <4 x i64> zeroinitializer
  %5623 = add <4 x i64> %5621, %5604
  %5624 = add <4 x i64> %5622, %5605
  %5625 = icmp eq i32 %5565, 224
  br i1 %5625, label %5626, label %13493, !llvm.loop !73

5626:                                             ; preds = %5564
  %5627 = add <4 x i64> %5624, %5623
  %5628 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5627)
  %5629 = icmp eq i32 %5559, 1992
  %5630 = select i1 %5629, i64 1203300724897905131, i64 0
  %5631 = add i64 %5630, %5628
  %5632 = icmp eq i32 %5559, 2000
  %5633 = select i1 %5632, i64 -5027532858107268057, i64 0
  %5634 = add i64 %5633, %5631
  %5635 = icmp eq i32 %5559, 2008
  %5636 = select i1 %5635, i64 7935854159672328895, i64 0
  %5637 = add i64 %5636, %5634
  %5638 = icmp eq i32 %5559, 2016
  %5639 = select i1 %5638, i64 7168641125469255746, i64 0
  %5640 = add i64 %5639, %5637
  %5641 = icmp eq i32 %5559, 2024
  %5642 = select i1 %5641, i64 -4247101387443462522, i64 0
  %5643 = add i64 %5642, %5640
  %5644 = icmp eq i32 %5559, 2032
  %5645 = select i1 %5644, i64 4076570933917792731, i64 0
  %5646 = add i64 %5645, %5643
  %5647 = icmp eq i32 %5559, 2040
  %5648 = select i1 %5647, i64 6275139646136265361, i64 0
  %5649 = add i64 %5648, %5646
  %5650 = lshr i64 %5277, 21
  %5651 = trunc i64 %5650 to i32
  %5652 = and i32 %5651, 2040
  %5653 = insertelement <4 x i32> poison, i32 %5652, i32 0
  %5654 = shufflevector <4 x i32> %5653, <4 x i32> poison, <4 x i32> zeroinitializer
  %5655 = insertelement <4 x i32> poison, i32 %5652, i32 0
  %5656 = shufflevector <4 x i32> %5655, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %5657

5657:                                             ; preds = %13472, %5626
  %5658 = phi i32 [ 0, %5626 ], [ %13492, %13472 ]
  %5659 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5626 ], [ %13490, %13472 ]
  %5660 = phi <4 x i64> [ zeroinitializer, %5626 ], [ %13491, %13472 ]
  %5661 = or i32 %5658, 1
  %5662 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5661
  %5663 = bitcast i32* %5662 to <4 x i32>*
  %5664 = load <4 x i32>, <4 x i32>* %5663, align 4, !tbaa !3
  %5665 = getelementptr inbounds i32, i32* %5662, i32 4
  %5666 = bitcast i32* %5665 to <4 x i32>*
  %5667 = load <4 x i32>, <4 x i32>* %5666, align 4, !tbaa !3
  %5668 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %5664
  %5669 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %5667
  %5670 = bitcast <4 x i8*> %5668 to <4 x i64*>
  %5671 = bitcast <4 x i8*> %5669 to <4 x i64*>
  %5672 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5670, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5673 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5671, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5674 = icmp eq <4 x i32> %5654, %5664
  %5675 = icmp eq <4 x i32> %5656, %5667
  %5676 = select <4 x i1> %5674, <4 x i64> %5672, <4 x i64> zeroinitializer
  %5677 = select <4 x i1> %5675, <4 x i64> %5673, <4 x i64> zeroinitializer
  %5678 = add <4 x i64> %5676, %5659
  %5679 = add <4 x i64> %5677, %5660
  %5680 = or i32 %5658, 9
  %5681 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5680
  %5682 = bitcast i32* %5681 to <4 x i32>*
  %5683 = load <4 x i32>, <4 x i32>* %5682, align 4, !tbaa !3
  %5684 = getelementptr inbounds i32, i32* %5681, i32 4
  %5685 = bitcast i32* %5684 to <4 x i32>*
  %5686 = load <4 x i32>, <4 x i32>* %5685, align 4, !tbaa !3
  %5687 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %5683
  %5688 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %5686
  %5689 = bitcast <4 x i8*> %5687 to <4 x i64*>
  %5690 = bitcast <4 x i8*> %5688 to <4 x i64*>
  %5691 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5689, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5692 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5690, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5693 = icmp eq <4 x i32> %5654, %5683
  %5694 = icmp eq <4 x i32> %5656, %5686
  %5695 = select <4 x i1> %5693, <4 x i64> %5691, <4 x i64> zeroinitializer
  %5696 = select <4 x i1> %5694, <4 x i64> %5692, <4 x i64> zeroinitializer
  %5697 = add <4 x i64> %5695, %5678
  %5698 = add <4 x i64> %5696, %5679
  %5699 = or i32 %5658, 17
  %5700 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5699
  %5701 = bitcast i32* %5700 to <4 x i32>*
  %5702 = load <4 x i32>, <4 x i32>* %5701, align 4, !tbaa !3
  %5703 = getelementptr inbounds i32, i32* %5700, i32 4
  %5704 = bitcast i32* %5703 to <4 x i32>*
  %5705 = load <4 x i32>, <4 x i32>* %5704, align 4, !tbaa !3
  %5706 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %5702
  %5707 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %5705
  %5708 = bitcast <4 x i8*> %5706 to <4 x i64*>
  %5709 = bitcast <4 x i8*> %5707 to <4 x i64*>
  %5710 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5708, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5711 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5709, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5712 = icmp eq <4 x i32> %5654, %5702
  %5713 = icmp eq <4 x i32> %5656, %5705
  %5714 = select <4 x i1> %5712, <4 x i64> %5710, <4 x i64> zeroinitializer
  %5715 = select <4 x i1> %5713, <4 x i64> %5711, <4 x i64> zeroinitializer
  %5716 = add <4 x i64> %5714, %5697
  %5717 = add <4 x i64> %5715, %5698
  %5718 = icmp eq i32 %5658, 224
  br i1 %5718, label %5719, label %13472, !llvm.loop !74

5719:                                             ; preds = %5657
  %5720 = add <4 x i64> %5717, %5716
  %5721 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5720)
  %5722 = icmp eq i32 %5652, 1992
  %5723 = select i1 %5722, i64 -1479007749835869680, i64 0
  %5724 = add i64 %5723, %5721
  %5725 = icmp eq i32 %5652, 2000
  %5726 = select i1 %5725, i64 2843154170404223674, i64 0
  %5727 = add i64 %5726, %5724
  %5728 = icmp eq i32 %5652, 2008
  %5729 = select i1 %5728, i64 -4665003603661872786, i64 0
  %5730 = add i64 %5729, %5727
  %5731 = icmp eq i32 %5652, 2016
  %5732 = select i1 %5731, i64 4825845994704960611, i64 0
  %5733 = add i64 %5732, %5730
  %5734 = icmp eq i32 %5652, 2024
  %5735 = select i1 %5734, i64 -8782479638933598267, i64 0
  %5736 = add i64 %5735, %5733
  %5737 = icmp eq i32 %5652, 2032
  %5738 = select i1 %5737, i64 -2649846723997625800, i64 0
  %5739 = add i64 %5738, %5736
  %5740 = icmp eq i32 %5652, 2040
  %5741 = select i1 %5740, i64 -7986310597085620905, i64 0
  %5742 = add i64 %5741, %5739
  %5743 = lshr i64 %5277, 13
  %5744 = trunc i64 %5743 to i32
  %5745 = and i32 %5744, 2040
  %5746 = insertelement <4 x i32> poison, i32 %5745, i32 0
  %5747 = shufflevector <4 x i32> %5746, <4 x i32> poison, <4 x i32> zeroinitializer
  %5748 = insertelement <4 x i32> poison, i32 %5745, i32 0
  %5749 = shufflevector <4 x i32> %5748, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %5750

5750:                                             ; preds = %13451, %5719
  %5751 = phi i32 [ 0, %5719 ], [ %13471, %13451 ]
  %5752 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5719 ], [ %13469, %13451 ]
  %5753 = phi <4 x i64> [ zeroinitializer, %5719 ], [ %13470, %13451 ]
  %5754 = or i32 %5751, 1
  %5755 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5754
  %5756 = bitcast i32* %5755 to <4 x i32>*
  %5757 = load <4 x i32>, <4 x i32>* %5756, align 4, !tbaa !3
  %5758 = getelementptr inbounds i32, i32* %5755, i32 4
  %5759 = bitcast i32* %5758 to <4 x i32>*
  %5760 = load <4 x i32>, <4 x i32>* %5759, align 4, !tbaa !3
  %5761 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5757
  %5762 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5760
  %5763 = bitcast <4 x i8*> %5761 to <4 x i64*>
  %5764 = bitcast <4 x i8*> %5762 to <4 x i64*>
  %5765 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5763, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5766 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5764, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5767 = icmp eq <4 x i32> %5747, %5757
  %5768 = icmp eq <4 x i32> %5749, %5760
  %5769 = select <4 x i1> %5767, <4 x i64> %5765, <4 x i64> zeroinitializer
  %5770 = select <4 x i1> %5768, <4 x i64> %5766, <4 x i64> zeroinitializer
  %5771 = add <4 x i64> %5769, %5752
  %5772 = add <4 x i64> %5770, %5753
  %5773 = or i32 %5751, 9
  %5774 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5773
  %5775 = bitcast i32* %5774 to <4 x i32>*
  %5776 = load <4 x i32>, <4 x i32>* %5775, align 4, !tbaa !3
  %5777 = getelementptr inbounds i32, i32* %5774, i32 4
  %5778 = bitcast i32* %5777 to <4 x i32>*
  %5779 = load <4 x i32>, <4 x i32>* %5778, align 4, !tbaa !3
  %5780 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5776
  %5781 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5779
  %5782 = bitcast <4 x i8*> %5780 to <4 x i64*>
  %5783 = bitcast <4 x i8*> %5781 to <4 x i64*>
  %5784 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5782, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5785 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5783, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5786 = icmp eq <4 x i32> %5747, %5776
  %5787 = icmp eq <4 x i32> %5749, %5779
  %5788 = select <4 x i1> %5786, <4 x i64> %5784, <4 x i64> zeroinitializer
  %5789 = select <4 x i1> %5787, <4 x i64> %5785, <4 x i64> zeroinitializer
  %5790 = add <4 x i64> %5788, %5771
  %5791 = add <4 x i64> %5789, %5772
  %5792 = or i32 %5751, 17
  %5793 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5792
  %5794 = bitcast i32* %5793 to <4 x i32>*
  %5795 = load <4 x i32>, <4 x i32>* %5794, align 4, !tbaa !3
  %5796 = getelementptr inbounds i32, i32* %5793, i32 4
  %5797 = bitcast i32* %5796 to <4 x i32>*
  %5798 = load <4 x i32>, <4 x i32>* %5797, align 4, !tbaa !3
  %5799 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5795
  %5800 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %5798
  %5801 = bitcast <4 x i8*> %5799 to <4 x i64*>
  %5802 = bitcast <4 x i8*> %5800 to <4 x i64*>
  %5803 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5801, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5804 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5802, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5805 = icmp eq <4 x i32> %5747, %5795
  %5806 = icmp eq <4 x i32> %5749, %5798
  %5807 = select <4 x i1> %5805, <4 x i64> %5803, <4 x i64> zeroinitializer
  %5808 = select <4 x i1> %5806, <4 x i64> %5804, <4 x i64> zeroinitializer
  %5809 = add <4 x i64> %5807, %5790
  %5810 = add <4 x i64> %5808, %5791
  %5811 = icmp eq i32 %5751, 224
  br i1 %5811, label %5812, label %13451, !llvm.loop !75

5812:                                             ; preds = %5750
  %5813 = add <4 x i64> %5810, %5809
  %5814 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5813)
  %5815 = icmp eq i32 %5745, 1992
  %5816 = select i1 %5815, i64 8785196325032562866, i64 0
  %5817 = add i64 %5816, %5814
  %5818 = icmp eq i32 %5745, 2000
  %5819 = select i1 %5818, i64 8369843054303033914, i64 0
  %5820 = add i64 %5819, %5817
  %5821 = icmp eq i32 %5745, 2008
  %5822 = select i1 %5821, i64 4809827444717481505, i64 0
  %5823 = add i64 %5822, %5820
  %5824 = icmp eq i32 %5745, 2016
  %5825 = select i1 %5824, i64 -557780216695528580, i64 0
  %5826 = add i64 %5825, %5823
  %5827 = icmp eq i32 %5745, 2024
  %5828 = select i1 %5827, i64 2199529431470097679, i64 0
  %5829 = add i64 %5828, %5826
  %5830 = icmp eq i32 %5745, 2032
  %5831 = select i1 %5830, i64 4169051064997918866, i64 0
  %5832 = add i64 %5831, %5829
  %5833 = icmp eq i32 %5745, 2040
  %5834 = select i1 %5833, i64 3067465835107997461, i64 0
  %5835 = add i64 %5834, %5832
  %5836 = lshr i64 %5277, 5
  %5837 = trunc i64 %5836 to i32
  %5838 = and i32 %5837, 2040
  %5839 = insertelement <4 x i32> poison, i32 %5838, i32 0
  %5840 = shufflevector <4 x i32> %5839, <4 x i32> poison, <4 x i32> zeroinitializer
  %5841 = insertelement <4 x i32> poison, i32 %5838, i32 0
  %5842 = shufflevector <4 x i32> %5841, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %5843

5843:                                             ; preds = %13430, %5812
  %5844 = phi i32 [ 0, %5812 ], [ %13450, %13430 ]
  %5845 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5812 ], [ %13448, %13430 ]
  %5846 = phi <4 x i64> [ zeroinitializer, %5812 ], [ %13449, %13430 ]
  %5847 = or i32 %5844, 1
  %5848 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5847
  %5849 = bitcast i32* %5848 to <4 x i32>*
  %5850 = load <4 x i32>, <4 x i32>* %5849, align 4, !tbaa !3
  %5851 = getelementptr inbounds i32, i32* %5848, i32 4
  %5852 = bitcast i32* %5851 to <4 x i32>*
  %5853 = load <4 x i32>, <4 x i32>* %5852, align 4, !tbaa !3
  %5854 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5850
  %5855 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5853
  %5856 = bitcast <4 x i8*> %5854 to <4 x i64*>
  %5857 = bitcast <4 x i8*> %5855 to <4 x i64*>
  %5858 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5856, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5859 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5857, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5860 = icmp eq <4 x i32> %5840, %5850
  %5861 = icmp eq <4 x i32> %5842, %5853
  %5862 = select <4 x i1> %5860, <4 x i64> %5858, <4 x i64> zeroinitializer
  %5863 = select <4 x i1> %5861, <4 x i64> %5859, <4 x i64> zeroinitializer
  %5864 = add <4 x i64> %5862, %5845
  %5865 = add <4 x i64> %5863, %5846
  %5866 = or i32 %5844, 9
  %5867 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5866
  %5868 = bitcast i32* %5867 to <4 x i32>*
  %5869 = load <4 x i32>, <4 x i32>* %5868, align 4, !tbaa !3
  %5870 = getelementptr inbounds i32, i32* %5867, i32 4
  %5871 = bitcast i32* %5870 to <4 x i32>*
  %5872 = load <4 x i32>, <4 x i32>* %5871, align 4, !tbaa !3
  %5873 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5869
  %5874 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5872
  %5875 = bitcast <4 x i8*> %5873 to <4 x i64*>
  %5876 = bitcast <4 x i8*> %5874 to <4 x i64*>
  %5877 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5875, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5878 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5876, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5879 = icmp eq <4 x i32> %5840, %5869
  %5880 = icmp eq <4 x i32> %5842, %5872
  %5881 = select <4 x i1> %5879, <4 x i64> %5877, <4 x i64> zeroinitializer
  %5882 = select <4 x i1> %5880, <4 x i64> %5878, <4 x i64> zeroinitializer
  %5883 = add <4 x i64> %5881, %5864
  %5884 = add <4 x i64> %5882, %5865
  %5885 = or i32 %5844, 17
  %5886 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5885
  %5887 = bitcast i32* %5886 to <4 x i32>*
  %5888 = load <4 x i32>, <4 x i32>* %5887, align 4, !tbaa !3
  %5889 = getelementptr inbounds i32, i32* %5886, i32 4
  %5890 = bitcast i32* %5889 to <4 x i32>*
  %5891 = load <4 x i32>, <4 x i32>* %5890, align 4, !tbaa !3
  %5892 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5888
  %5893 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %5891
  %5894 = bitcast <4 x i8*> %5892 to <4 x i64*>
  %5895 = bitcast <4 x i8*> %5893 to <4 x i64*>
  %5896 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5894, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5897 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5895, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5898 = icmp eq <4 x i32> %5840, %5888
  %5899 = icmp eq <4 x i32> %5842, %5891
  %5900 = select <4 x i1> %5898, <4 x i64> %5896, <4 x i64> zeroinitializer
  %5901 = select <4 x i1> %5899, <4 x i64> %5897, <4 x i64> zeroinitializer
  %5902 = add <4 x i64> %5900, %5883
  %5903 = add <4 x i64> %5901, %5884
  %5904 = icmp eq i32 %5844, 224
  br i1 %5904, label %5905, label %13430, !llvm.loop !76

5905:                                             ; preds = %5843
  %5906 = add <4 x i64> %5903, %5902
  %5907 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5906)
  %5908 = icmp eq i32 %5838, 1992
  %5909 = select i1 %5908, i64 -9058450267568037125, i64 0
  %5910 = add i64 %5909, %5907
  %5911 = icmp eq i32 %5838, 2000
  %5912 = select i1 %5911, i64 -1610274961606672227, i64 0
  %5913 = add i64 %5912, %5910
  %5914 = icmp eq i32 %5838, 2008
  %5915 = select i1 %5914, i64 -7786513464973963311, i64 0
  %5916 = add i64 %5915, %5913
  %5917 = icmp eq i32 %5838, 2016
  %5918 = select i1 %5917, i64 -2783995359638905055, i64 0
  %5919 = add i64 %5918, %5916
  %5920 = icmp eq i32 %5838, 2024
  %5921 = select i1 %5920, i64 6722895807429069379, i64 0
  %5922 = add i64 %5921, %5919
  %5923 = icmp eq i32 %5838, 2032
  %5924 = select i1 %5923, i64 -2706140860760151325, i64 0
  %5925 = add i64 %5924, %5922
  %5926 = icmp eq i32 %5838, 2040
  %5927 = select i1 %5926, i64 -1381601050739916090, i64 0
  %5928 = add i64 %5927, %5925
  %5929 = trunc i64 %5277 to i32
  %5930 = and i32 %5929, 255
  %5931 = getelementptr inbounds [256 x i64], [256 x i64]* @T7, i32 0, i32 %5930
  %5932 = insertelement <4 x i64*> poison, i64* %5931, i32 0
  %5933 = shufflevector <4 x i64*> %5932, <4 x i64*> poison, <4 x i32> zeroinitializer
  %5934 = insertelement <4 x i64*> poison, i64* %5931, i32 0
  %5935 = shufflevector <4 x i64*> %5934, <4 x i64*> poison, <4 x i32> zeroinitializer
  br label %5936

5936:                                             ; preds = %13409, %5905
  %5937 = phi i32 [ 0, %5905 ], [ %13429, %13409 ]
  %5938 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5905 ], [ %13427, %13409 ]
  %5939 = phi <4 x i64> [ zeroinitializer, %5905 ], [ %13428, %13409 ]
  %5940 = or i32 %5937, 1
  %5941 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5940
  %5942 = bitcast i32* %5941 to <4 x i32>*
  %5943 = load <4 x i32>, <4 x i32>* %5942, align 4, !tbaa !3
  %5944 = getelementptr inbounds i32, i32* %5941, i32 4
  %5945 = bitcast i32* %5944 to <4 x i32>*
  %5946 = load <4 x i32>, <4 x i32>* %5945, align 4, !tbaa !3
  %5947 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5943
  %5948 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5946
  %5949 = bitcast <4 x i8*> %5947 to <4 x i64*>
  %5950 = bitcast <4 x i8*> %5948 to <4 x i64*>
  %5951 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5949, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5952 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5950, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5953 = icmp eq <4 x i64*> %5933, %5949
  %5954 = icmp eq <4 x i64*> %5935, %5950
  %5955 = select <4 x i1> %5953, <4 x i64> %5951, <4 x i64> zeroinitializer
  %5956 = select <4 x i1> %5954, <4 x i64> %5952, <4 x i64> zeroinitializer
  %5957 = add <4 x i64> %5955, %5938
  %5958 = add <4 x i64> %5956, %5939
  %5959 = or i32 %5937, 9
  %5960 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5959
  %5961 = bitcast i32* %5960 to <4 x i32>*
  %5962 = load <4 x i32>, <4 x i32>* %5961, align 4, !tbaa !3
  %5963 = getelementptr inbounds i32, i32* %5960, i32 4
  %5964 = bitcast i32* %5963 to <4 x i32>*
  %5965 = load <4 x i32>, <4 x i32>* %5964, align 4, !tbaa !3
  %5966 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5962
  %5967 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5965
  %5968 = bitcast <4 x i8*> %5966 to <4 x i64*>
  %5969 = bitcast <4 x i8*> %5967 to <4 x i64*>
  %5970 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5968, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5971 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5969, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5972 = icmp eq <4 x i64*> %5933, %5968
  %5973 = icmp eq <4 x i64*> %5935, %5969
  %5974 = select <4 x i1> %5972, <4 x i64> %5970, <4 x i64> zeroinitializer
  %5975 = select <4 x i1> %5973, <4 x i64> %5971, <4 x i64> zeroinitializer
  %5976 = add <4 x i64> %5974, %5957
  %5977 = add <4 x i64> %5975, %5958
  %5978 = or i32 %5937, 17
  %5979 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %5978
  %5980 = bitcast i32* %5979 to <4 x i32>*
  %5981 = load <4 x i32>, <4 x i32>* %5980, align 4, !tbaa !3
  %5982 = getelementptr inbounds i32, i32* %5979, i32 4
  %5983 = bitcast i32* %5982 to <4 x i32>*
  %5984 = load <4 x i32>, <4 x i32>* %5983, align 4, !tbaa !3
  %5985 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5981
  %5986 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %5984
  %5987 = bitcast <4 x i8*> %5985 to <4 x i64*>
  %5988 = bitcast <4 x i8*> %5986 to <4 x i64*>
  %5989 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5987, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5990 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %5988, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %5991 = icmp eq <4 x i64*> %5933, %5987
  %5992 = icmp eq <4 x i64*> %5935, %5988
  %5993 = select <4 x i1> %5991, <4 x i64> %5989, <4 x i64> zeroinitializer
  %5994 = select <4 x i1> %5992, <4 x i64> %5990, <4 x i64> zeroinitializer
  %5995 = add <4 x i64> %5993, %5976
  %5996 = add <4 x i64> %5994, %5977
  %5997 = icmp eq i32 %5937, 224
  br i1 %5997, label %5998, label %13409, !llvm.loop !77

5998:                                             ; preds = %5936
  %5999 = add <4 x i64> %5996, %5995
  %6000 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %5999)
  %6001 = icmp eq i32 %5930, 249
  %6002 = select i1 %6001, i64 5296930162245565346, i64 0
  %6003 = add i64 %6002, %6000
  %6004 = icmp eq i32 %5930, 250
  %6005 = select i1 %6004, i64 -6347414485825053312, i64 0
  %6006 = add i64 %6005, %6003
  %6007 = icmp eq i32 %5930, 251
  %6008 = select i1 %6007, i64 -1111471293076483761, i64 0
  %6009 = add i64 %6008, %6006
  %6010 = icmp eq i32 %5930, 252
  %6011 = select i1 %6010, i64 6762709279494119711, i64 0
  %6012 = add i64 %6011, %6009
  %6013 = icmp eq i32 %5930, 253
  %6014 = select i1 %6013, i64 5502587883897177034, i64 0
  %6015 = add i64 %6014, %6012
  %6016 = icmp eq i32 %5930, 254
  %6017 = select i1 %6016, i64 8203933284918551466, i64 0
  %6018 = add i64 %6017, %6015
  %6019 = icmp eq i32 %5930, 255
  %6020 = select i1 %6019, i64 -3176116833483372990, i64 0
  %6021 = add i64 %6020, %6018
  %6022 = xor i64 %4523, %5370
  %6023 = xor i64 %6022, %5463
  %6024 = xor i64 %6023, %5556
  %6025 = xor i64 %6024, %5649
  %6026 = xor i64 %6025, %5742
  %6027 = xor i64 %6026, %5835
  %6028 = xor i64 %6027, %5928
  %6029 = xor i64 %6028, %6021
  %6030 = xor i64 %6029, 8427135945975394542
  store i64 %6030, i64* @ctx.0.7, align 8, !tbaa !7
  %6031 = load i64, i64* @ctx.0.1, align 8, !tbaa !7
  %6032 = load i64, i64* @ctx.0.0, align 8, !tbaa !7
  %6033 = load i64, i64* bitcast ([64 x i8]* @in_pub to i64*), align 8, !tbaa !7
  %6034 = xor i64 %6033, %6032
  %6035 = lshr i64 %6034, 53
  %6036 = trunc i64 %6035 to i32
  %6037 = and i32 %6036, 2040
  %6038 = insertelement <4 x i32> poison, i32 %6037, i32 0
  %6039 = shufflevector <4 x i32> %6038, <4 x i32> poison, <4 x i32> zeroinitializer
  %6040 = insertelement <4 x i32> poison, i32 %6037, i32 0
  %6041 = shufflevector <4 x i32> %6040, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6042

6042:                                             ; preds = %13388, %5998
  %6043 = phi i32 [ 0, %5998 ], [ %13408, %13388 ]
  %6044 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %5998 ], [ %13406, %13388 ]
  %6045 = phi <4 x i64> [ zeroinitializer, %5998 ], [ %13407, %13388 ]
  %6046 = or i32 %6043, 1
  %6047 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6046
  %6048 = bitcast i32* %6047 to <4 x i32>*
  %6049 = load <4 x i32>, <4 x i32>* %6048, align 4, !tbaa !3
  %6050 = getelementptr inbounds i32, i32* %6047, i32 4
  %6051 = bitcast i32* %6050 to <4 x i32>*
  %6052 = load <4 x i32>, <4 x i32>* %6051, align 4, !tbaa !3
  %6053 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6049
  %6054 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6052
  %6055 = bitcast <4 x i8*> %6053 to <4 x i64*>
  %6056 = bitcast <4 x i8*> %6054 to <4 x i64*>
  %6057 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6055, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6058 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6056, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6059 = icmp eq <4 x i32> %6039, %6049
  %6060 = icmp eq <4 x i32> %6041, %6052
  %6061 = select <4 x i1> %6059, <4 x i64> %6057, <4 x i64> zeroinitializer
  %6062 = select <4 x i1> %6060, <4 x i64> %6058, <4 x i64> zeroinitializer
  %6063 = add <4 x i64> %6061, %6044
  %6064 = add <4 x i64> %6062, %6045
  %6065 = or i32 %6043, 9
  %6066 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6065
  %6067 = bitcast i32* %6066 to <4 x i32>*
  %6068 = load <4 x i32>, <4 x i32>* %6067, align 4, !tbaa !3
  %6069 = getelementptr inbounds i32, i32* %6066, i32 4
  %6070 = bitcast i32* %6069 to <4 x i32>*
  %6071 = load <4 x i32>, <4 x i32>* %6070, align 4, !tbaa !3
  %6072 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6068
  %6073 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6071
  %6074 = bitcast <4 x i8*> %6072 to <4 x i64*>
  %6075 = bitcast <4 x i8*> %6073 to <4 x i64*>
  %6076 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6074, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6077 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6075, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6078 = icmp eq <4 x i32> %6039, %6068
  %6079 = icmp eq <4 x i32> %6041, %6071
  %6080 = select <4 x i1> %6078, <4 x i64> %6076, <4 x i64> zeroinitializer
  %6081 = select <4 x i1> %6079, <4 x i64> %6077, <4 x i64> zeroinitializer
  %6082 = add <4 x i64> %6080, %6063
  %6083 = add <4 x i64> %6081, %6064
  %6084 = or i32 %6043, 17
  %6085 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6084
  %6086 = bitcast i32* %6085 to <4 x i32>*
  %6087 = load <4 x i32>, <4 x i32>* %6086, align 4, !tbaa !3
  %6088 = getelementptr inbounds i32, i32* %6085, i32 4
  %6089 = bitcast i32* %6088 to <4 x i32>*
  %6090 = load <4 x i32>, <4 x i32>* %6089, align 4, !tbaa !3
  %6091 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6087
  %6092 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6090
  %6093 = bitcast <4 x i8*> %6091 to <4 x i64*>
  %6094 = bitcast <4 x i8*> %6092 to <4 x i64*>
  %6095 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6093, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6096 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6094, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6097 = icmp eq <4 x i32> %6039, %6087
  %6098 = icmp eq <4 x i32> %6041, %6090
  %6099 = select <4 x i1> %6097, <4 x i64> %6095, <4 x i64> zeroinitializer
  %6100 = select <4 x i1> %6098, <4 x i64> %6096, <4 x i64> zeroinitializer
  %6101 = add <4 x i64> %6099, %6082
  %6102 = add <4 x i64> %6100, %6083
  %6103 = icmp eq i32 %6043, 224
  br i1 %6103, label %6104, label %13388, !llvm.loop !78

6104:                                             ; preds = %6042
  %6105 = add <4 x i64> %6102, %6101
  %6106 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6105)
  %6107 = icmp eq i32 %6037, 1992
  %6108 = select i1 %6107, i64 -6702567834671021495, i64 0
  %6109 = add i64 %6108, %6106
  %6110 = icmp eq i32 %6037, 2000
  %6111 = select i1 %6110, i64 -9179115894310901337, i64 0
  %6112 = add i64 %6111, %6109
  %6113 = icmp eq i32 %6037, 2008
  %6114 = select i1 %6113, i64 5751414958667764720, i64 0
  %6115 = add i64 %6114, %6112
  %6116 = icmp eq i32 %6037, 2016
  %6117 = select i1 %6116, i64 2243210855174429021, i64 0
  %6118 = add i64 %6117, %6115
  %6119 = icmp eq i32 %6037, 2024
  %6120 = select i1 %6119, i64 -3872233913575383732, i64 0
  %6121 = add i64 %6120, %6118
  %6122 = icmp eq i32 %6037, 2032
  %6123 = select i1 %6122, i64 -6132897494654657935, i64 0
  %6124 = add i64 %6123, %6121
  %6125 = icmp eq i32 %6037, 2040
  %6126 = select i1 %6125, i64 4811556717733801171, i64 0
  %6127 = add i64 %6126, %6124
  %6128 = lshr i64 %6034, 45
  %6129 = trunc i64 %6128 to i32
  %6130 = and i32 %6129, 2040
  %6131 = insertelement <4 x i32> poison, i32 %6130, i32 0
  %6132 = shufflevector <4 x i32> %6131, <4 x i32> poison, <4 x i32> zeroinitializer
  %6133 = insertelement <4 x i32> poison, i32 %6130, i32 0
  %6134 = shufflevector <4 x i32> %6133, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6135

6135:                                             ; preds = %13367, %6104
  %6136 = phi i32 [ 0, %6104 ], [ %13387, %13367 ]
  %6137 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6104 ], [ %13385, %13367 ]
  %6138 = phi <4 x i64> [ zeroinitializer, %6104 ], [ %13386, %13367 ]
  %6139 = or i32 %6136, 1
  %6140 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6139
  %6141 = bitcast i32* %6140 to <4 x i32>*
  %6142 = load <4 x i32>, <4 x i32>* %6141, align 4, !tbaa !3
  %6143 = getelementptr inbounds i32, i32* %6140, i32 4
  %6144 = bitcast i32* %6143 to <4 x i32>*
  %6145 = load <4 x i32>, <4 x i32>* %6144, align 4, !tbaa !3
  %6146 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6142
  %6147 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6145
  %6148 = bitcast <4 x i8*> %6146 to <4 x i64*>
  %6149 = bitcast <4 x i8*> %6147 to <4 x i64*>
  %6150 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6148, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6151 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6149, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6152 = icmp eq <4 x i32> %6132, %6142
  %6153 = icmp eq <4 x i32> %6134, %6145
  %6154 = select <4 x i1> %6152, <4 x i64> %6150, <4 x i64> zeroinitializer
  %6155 = select <4 x i1> %6153, <4 x i64> %6151, <4 x i64> zeroinitializer
  %6156 = add <4 x i64> %6154, %6137
  %6157 = add <4 x i64> %6155, %6138
  %6158 = or i32 %6136, 9
  %6159 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6158
  %6160 = bitcast i32* %6159 to <4 x i32>*
  %6161 = load <4 x i32>, <4 x i32>* %6160, align 4, !tbaa !3
  %6162 = getelementptr inbounds i32, i32* %6159, i32 4
  %6163 = bitcast i32* %6162 to <4 x i32>*
  %6164 = load <4 x i32>, <4 x i32>* %6163, align 4, !tbaa !3
  %6165 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6161
  %6166 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6164
  %6167 = bitcast <4 x i8*> %6165 to <4 x i64*>
  %6168 = bitcast <4 x i8*> %6166 to <4 x i64*>
  %6169 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6167, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6170 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6168, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6171 = icmp eq <4 x i32> %6132, %6161
  %6172 = icmp eq <4 x i32> %6134, %6164
  %6173 = select <4 x i1> %6171, <4 x i64> %6169, <4 x i64> zeroinitializer
  %6174 = select <4 x i1> %6172, <4 x i64> %6170, <4 x i64> zeroinitializer
  %6175 = add <4 x i64> %6173, %6156
  %6176 = add <4 x i64> %6174, %6157
  %6177 = or i32 %6136, 17
  %6178 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6177
  %6179 = bitcast i32* %6178 to <4 x i32>*
  %6180 = load <4 x i32>, <4 x i32>* %6179, align 4, !tbaa !3
  %6181 = getelementptr inbounds i32, i32* %6178, i32 4
  %6182 = bitcast i32* %6181 to <4 x i32>*
  %6183 = load <4 x i32>, <4 x i32>* %6182, align 4, !tbaa !3
  %6184 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6180
  %6185 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6183
  %6186 = bitcast <4 x i8*> %6184 to <4 x i64*>
  %6187 = bitcast <4 x i8*> %6185 to <4 x i64*>
  %6188 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6186, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6189 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6187, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6190 = icmp eq <4 x i32> %6132, %6180
  %6191 = icmp eq <4 x i32> %6134, %6183
  %6192 = select <4 x i1> %6190, <4 x i64> %6188, <4 x i64> zeroinitializer
  %6193 = select <4 x i1> %6191, <4 x i64> %6189, <4 x i64> zeroinitializer
  %6194 = add <4 x i64> %6192, %6175
  %6195 = add <4 x i64> %6193, %6176
  %6196 = icmp eq i32 %6136, 224
  br i1 %6196, label %6197, label %13367, !llvm.loop !79

6197:                                             ; preds = %6135
  %6198 = add <4 x i64> %6195, %6194
  %6199 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6198)
  %6200 = icmp eq i32 %6130, 1992
  %6201 = select i1 %6200, i64 -314670665226827390, i64 0
  %6202 = add i64 %6201, %6199
  %6203 = icmp eq i32 %6130, 2000
  %6204 = select i1 %6203, i64 -7097468252516276247, i64 0
  %6205 = add i64 %6204, %6202
  %6206 = icmp eq i32 %6130, 2008
  %6207 = select i1 %6206, i64 -3364349307489619821, i64 0
  %6208 = add i64 %6207, %6205
  %6209 = icmp eq i32 %6130, 2016
  %6210 = select i1 %6209, i64 2386735715921845721, i64 0
  %6211 = add i64 %6210, %6208
  %6212 = icmp eq i32 %6130, 2024
  %6213 = select i1 %6212, i64 4884933414564023389, i64 0
  %6214 = add i64 %6213, %6211
  %6215 = icmp eq i32 %6130, 2032
  %6216 = select i1 %6215, i64 -2041757280372035110, i64 0
  %6217 = add i64 %6216, %6214
  %6218 = icmp eq i32 %6130, 2040
  %6219 = select i1 %6218, i64 -4160667357316787220, i64 0
  %6220 = add i64 %6219, %6217
  %6221 = lshr i64 %6034, 37
  %6222 = trunc i64 %6221 to i32
  %6223 = and i32 %6222, 2040
  %6224 = insertelement <4 x i32> poison, i32 %6223, i32 0
  %6225 = shufflevector <4 x i32> %6224, <4 x i32> poison, <4 x i32> zeroinitializer
  %6226 = insertelement <4 x i32> poison, i32 %6223, i32 0
  %6227 = shufflevector <4 x i32> %6226, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6228

6228:                                             ; preds = %13346, %6197
  %6229 = phi i32 [ 0, %6197 ], [ %13366, %13346 ]
  %6230 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6197 ], [ %13364, %13346 ]
  %6231 = phi <4 x i64> [ zeroinitializer, %6197 ], [ %13365, %13346 ]
  %6232 = or i32 %6229, 1
  %6233 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6232
  %6234 = bitcast i32* %6233 to <4 x i32>*
  %6235 = load <4 x i32>, <4 x i32>* %6234, align 4, !tbaa !3
  %6236 = getelementptr inbounds i32, i32* %6233, i32 4
  %6237 = bitcast i32* %6236 to <4 x i32>*
  %6238 = load <4 x i32>, <4 x i32>* %6237, align 4, !tbaa !3
  %6239 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %6235
  %6240 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %6238
  %6241 = bitcast <4 x i8*> %6239 to <4 x i64*>
  %6242 = bitcast <4 x i8*> %6240 to <4 x i64*>
  %6243 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6241, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6244 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6242, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6245 = icmp eq <4 x i32> %6225, %6235
  %6246 = icmp eq <4 x i32> %6227, %6238
  %6247 = select <4 x i1> %6245, <4 x i64> %6243, <4 x i64> zeroinitializer
  %6248 = select <4 x i1> %6246, <4 x i64> %6244, <4 x i64> zeroinitializer
  %6249 = add <4 x i64> %6247, %6230
  %6250 = add <4 x i64> %6248, %6231
  %6251 = or i32 %6229, 9
  %6252 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6251
  %6253 = bitcast i32* %6252 to <4 x i32>*
  %6254 = load <4 x i32>, <4 x i32>* %6253, align 4, !tbaa !3
  %6255 = getelementptr inbounds i32, i32* %6252, i32 4
  %6256 = bitcast i32* %6255 to <4 x i32>*
  %6257 = load <4 x i32>, <4 x i32>* %6256, align 4, !tbaa !3
  %6258 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %6254
  %6259 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %6257
  %6260 = bitcast <4 x i8*> %6258 to <4 x i64*>
  %6261 = bitcast <4 x i8*> %6259 to <4 x i64*>
  %6262 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6260, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6263 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6261, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6264 = icmp eq <4 x i32> %6225, %6254
  %6265 = icmp eq <4 x i32> %6227, %6257
  %6266 = select <4 x i1> %6264, <4 x i64> %6262, <4 x i64> zeroinitializer
  %6267 = select <4 x i1> %6265, <4 x i64> %6263, <4 x i64> zeroinitializer
  %6268 = add <4 x i64> %6266, %6249
  %6269 = add <4 x i64> %6267, %6250
  %6270 = or i32 %6229, 17
  %6271 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6270
  %6272 = bitcast i32* %6271 to <4 x i32>*
  %6273 = load <4 x i32>, <4 x i32>* %6272, align 4, !tbaa !3
  %6274 = getelementptr inbounds i32, i32* %6271, i32 4
  %6275 = bitcast i32* %6274 to <4 x i32>*
  %6276 = load <4 x i32>, <4 x i32>* %6275, align 4, !tbaa !3
  %6277 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %6273
  %6278 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %6276
  %6279 = bitcast <4 x i8*> %6277 to <4 x i64*>
  %6280 = bitcast <4 x i8*> %6278 to <4 x i64*>
  %6281 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6279, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6282 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6280, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6283 = icmp eq <4 x i32> %6225, %6273
  %6284 = icmp eq <4 x i32> %6227, %6276
  %6285 = select <4 x i1> %6283, <4 x i64> %6281, <4 x i64> zeroinitializer
  %6286 = select <4 x i1> %6284, <4 x i64> %6282, <4 x i64> zeroinitializer
  %6287 = add <4 x i64> %6285, %6268
  %6288 = add <4 x i64> %6286, %6269
  %6289 = icmp eq i32 %6229, 224
  br i1 %6289, label %6290, label %13346, !llvm.loop !80

6290:                                             ; preds = %6228
  %6291 = add <4 x i64> %6288, %6287
  %6292 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6291)
  %6293 = icmp eq i32 %6223, 1992
  %6294 = select i1 %6293, i64 -5615809534224635015, i64 0
  %6295 = add i64 %6294, %6292
  %6296 = icmp eq i32 %6223, 2000
  %6297 = select i1 %6296, i64 4231836215586269044, i64 0
  %6298 = add i64 %6297, %6295
  %6299 = icmp eq i32 %6223, 2008
  %6300 = select i1 %6299, i64 2408950612238581570, i64 0
  %6301 = add i64 %6300, %6298
  %6302 = icmp eq i32 %6223, 2016
  %6303 = select i1 %6302, i64 8963041913638568696, i64 0
  %6304 = add i64 %6303, %6301
  %6305 = icmp eq i32 %6223, 2024
  %6306 = select i1 %6305, i64 1136536871657834014, i64 0
  %6307 = add i64 %6306, %6304
  %6308 = icmp eq i32 %6223, 2032
  %6309 = select i1 %6308, i64 -7910384849877083335, i64 0
  %6310 = add i64 %6309, %6307
  %6311 = icmp eq i32 %6223, 2040
  %6312 = select i1 %6311, i64 1537771219914559786, i64 0
  %6313 = add i64 %6312, %6310
  %6314 = lshr i64 %6034, 29
  %6315 = trunc i64 %6314 to i32
  %6316 = and i32 %6315, 2040
  %6317 = insertelement <4 x i32> poison, i32 %6316, i32 0
  %6318 = shufflevector <4 x i32> %6317, <4 x i32> poison, <4 x i32> zeroinitializer
  %6319 = insertelement <4 x i32> poison, i32 %6316, i32 0
  %6320 = shufflevector <4 x i32> %6319, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6321

6321:                                             ; preds = %13325, %6290
  %6322 = phi i32 [ 0, %6290 ], [ %13345, %13325 ]
  %6323 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6290 ], [ %13343, %13325 ]
  %6324 = phi <4 x i64> [ zeroinitializer, %6290 ], [ %13344, %13325 ]
  %6325 = or i32 %6322, 1
  %6326 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6325
  %6327 = bitcast i32* %6326 to <4 x i32>*
  %6328 = load <4 x i32>, <4 x i32>* %6327, align 4, !tbaa !3
  %6329 = getelementptr inbounds i32, i32* %6326, i32 4
  %6330 = bitcast i32* %6329 to <4 x i32>*
  %6331 = load <4 x i32>, <4 x i32>* %6330, align 4, !tbaa !3
  %6332 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %6328
  %6333 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %6331
  %6334 = bitcast <4 x i8*> %6332 to <4 x i64*>
  %6335 = bitcast <4 x i8*> %6333 to <4 x i64*>
  %6336 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6334, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6337 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6335, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6338 = icmp eq <4 x i32> %6318, %6328
  %6339 = icmp eq <4 x i32> %6320, %6331
  %6340 = select <4 x i1> %6338, <4 x i64> %6336, <4 x i64> zeroinitializer
  %6341 = select <4 x i1> %6339, <4 x i64> %6337, <4 x i64> zeroinitializer
  %6342 = add <4 x i64> %6340, %6323
  %6343 = add <4 x i64> %6341, %6324
  %6344 = or i32 %6322, 9
  %6345 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6344
  %6346 = bitcast i32* %6345 to <4 x i32>*
  %6347 = load <4 x i32>, <4 x i32>* %6346, align 4, !tbaa !3
  %6348 = getelementptr inbounds i32, i32* %6345, i32 4
  %6349 = bitcast i32* %6348 to <4 x i32>*
  %6350 = load <4 x i32>, <4 x i32>* %6349, align 4, !tbaa !3
  %6351 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %6347
  %6352 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %6350
  %6353 = bitcast <4 x i8*> %6351 to <4 x i64*>
  %6354 = bitcast <4 x i8*> %6352 to <4 x i64*>
  %6355 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6353, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6356 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6354, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6357 = icmp eq <4 x i32> %6318, %6347
  %6358 = icmp eq <4 x i32> %6320, %6350
  %6359 = select <4 x i1> %6357, <4 x i64> %6355, <4 x i64> zeroinitializer
  %6360 = select <4 x i1> %6358, <4 x i64> %6356, <4 x i64> zeroinitializer
  %6361 = add <4 x i64> %6359, %6342
  %6362 = add <4 x i64> %6360, %6343
  %6363 = or i32 %6322, 17
  %6364 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6363
  %6365 = bitcast i32* %6364 to <4 x i32>*
  %6366 = load <4 x i32>, <4 x i32>* %6365, align 4, !tbaa !3
  %6367 = getelementptr inbounds i32, i32* %6364, i32 4
  %6368 = bitcast i32* %6367 to <4 x i32>*
  %6369 = load <4 x i32>, <4 x i32>* %6368, align 4, !tbaa !3
  %6370 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %6366
  %6371 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %6369
  %6372 = bitcast <4 x i8*> %6370 to <4 x i64*>
  %6373 = bitcast <4 x i8*> %6371 to <4 x i64*>
  %6374 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6372, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6375 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6373, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6376 = icmp eq <4 x i32> %6318, %6366
  %6377 = icmp eq <4 x i32> %6320, %6369
  %6378 = select <4 x i1> %6376, <4 x i64> %6374, <4 x i64> zeroinitializer
  %6379 = select <4 x i1> %6377, <4 x i64> %6375, <4 x i64> zeroinitializer
  %6380 = add <4 x i64> %6378, %6361
  %6381 = add <4 x i64> %6379, %6362
  %6382 = icmp eq i32 %6322, 224
  br i1 %6382, label %6383, label %13325, !llvm.loop !81

6383:                                             ; preds = %6321
  %6384 = add <4 x i64> %6381, %6380
  %6385 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6384)
  %6386 = icmp eq i32 %6316, 1992
  %6387 = select i1 %6386, i64 1203300724897905131, i64 0
  %6388 = add i64 %6387, %6385
  %6389 = icmp eq i32 %6316, 2000
  %6390 = select i1 %6389, i64 -5027532858107268057, i64 0
  %6391 = add i64 %6390, %6388
  %6392 = icmp eq i32 %6316, 2008
  %6393 = select i1 %6392, i64 7935854159672328895, i64 0
  %6394 = add i64 %6393, %6391
  %6395 = icmp eq i32 %6316, 2016
  %6396 = select i1 %6395, i64 7168641125469255746, i64 0
  %6397 = add i64 %6396, %6394
  %6398 = icmp eq i32 %6316, 2024
  %6399 = select i1 %6398, i64 -4247101387443462522, i64 0
  %6400 = add i64 %6399, %6397
  %6401 = icmp eq i32 %6316, 2032
  %6402 = select i1 %6401, i64 4076570933917792731, i64 0
  %6403 = add i64 %6402, %6400
  %6404 = icmp eq i32 %6316, 2040
  %6405 = select i1 %6404, i64 6275139646136265361, i64 0
  %6406 = add i64 %6405, %6403
  %6407 = lshr i64 %6034, 21
  %6408 = trunc i64 %6407 to i32
  %6409 = and i32 %6408, 2040
  %6410 = insertelement <4 x i32> poison, i32 %6409, i32 0
  %6411 = shufflevector <4 x i32> %6410, <4 x i32> poison, <4 x i32> zeroinitializer
  %6412 = insertelement <4 x i32> poison, i32 %6409, i32 0
  %6413 = shufflevector <4 x i32> %6412, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6414

6414:                                             ; preds = %13304, %6383
  %6415 = phi i32 [ 0, %6383 ], [ %13324, %13304 ]
  %6416 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6383 ], [ %13322, %13304 ]
  %6417 = phi <4 x i64> [ zeroinitializer, %6383 ], [ %13323, %13304 ]
  %6418 = or i32 %6415, 1
  %6419 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6418
  %6420 = bitcast i32* %6419 to <4 x i32>*
  %6421 = load <4 x i32>, <4 x i32>* %6420, align 4, !tbaa !3
  %6422 = getelementptr inbounds i32, i32* %6419, i32 4
  %6423 = bitcast i32* %6422 to <4 x i32>*
  %6424 = load <4 x i32>, <4 x i32>* %6423, align 4, !tbaa !3
  %6425 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %6421
  %6426 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %6424
  %6427 = bitcast <4 x i8*> %6425 to <4 x i64*>
  %6428 = bitcast <4 x i8*> %6426 to <4 x i64*>
  %6429 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6427, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6430 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6428, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6431 = icmp eq <4 x i32> %6411, %6421
  %6432 = icmp eq <4 x i32> %6413, %6424
  %6433 = select <4 x i1> %6431, <4 x i64> %6429, <4 x i64> zeroinitializer
  %6434 = select <4 x i1> %6432, <4 x i64> %6430, <4 x i64> zeroinitializer
  %6435 = add <4 x i64> %6433, %6416
  %6436 = add <4 x i64> %6434, %6417
  %6437 = or i32 %6415, 9
  %6438 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6437
  %6439 = bitcast i32* %6438 to <4 x i32>*
  %6440 = load <4 x i32>, <4 x i32>* %6439, align 4, !tbaa !3
  %6441 = getelementptr inbounds i32, i32* %6438, i32 4
  %6442 = bitcast i32* %6441 to <4 x i32>*
  %6443 = load <4 x i32>, <4 x i32>* %6442, align 4, !tbaa !3
  %6444 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %6440
  %6445 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %6443
  %6446 = bitcast <4 x i8*> %6444 to <4 x i64*>
  %6447 = bitcast <4 x i8*> %6445 to <4 x i64*>
  %6448 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6446, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6449 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6447, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6450 = icmp eq <4 x i32> %6411, %6440
  %6451 = icmp eq <4 x i32> %6413, %6443
  %6452 = select <4 x i1> %6450, <4 x i64> %6448, <4 x i64> zeroinitializer
  %6453 = select <4 x i1> %6451, <4 x i64> %6449, <4 x i64> zeroinitializer
  %6454 = add <4 x i64> %6452, %6435
  %6455 = add <4 x i64> %6453, %6436
  %6456 = or i32 %6415, 17
  %6457 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6456
  %6458 = bitcast i32* %6457 to <4 x i32>*
  %6459 = load <4 x i32>, <4 x i32>* %6458, align 4, !tbaa !3
  %6460 = getelementptr inbounds i32, i32* %6457, i32 4
  %6461 = bitcast i32* %6460 to <4 x i32>*
  %6462 = load <4 x i32>, <4 x i32>* %6461, align 4, !tbaa !3
  %6463 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %6459
  %6464 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %6462
  %6465 = bitcast <4 x i8*> %6463 to <4 x i64*>
  %6466 = bitcast <4 x i8*> %6464 to <4 x i64*>
  %6467 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6465, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6468 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6466, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6469 = icmp eq <4 x i32> %6411, %6459
  %6470 = icmp eq <4 x i32> %6413, %6462
  %6471 = select <4 x i1> %6469, <4 x i64> %6467, <4 x i64> zeroinitializer
  %6472 = select <4 x i1> %6470, <4 x i64> %6468, <4 x i64> zeroinitializer
  %6473 = add <4 x i64> %6471, %6454
  %6474 = add <4 x i64> %6472, %6455
  %6475 = icmp eq i32 %6415, 224
  br i1 %6475, label %6476, label %13304, !llvm.loop !82

6476:                                             ; preds = %6414
  %6477 = add <4 x i64> %6474, %6473
  %6478 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6477)
  %6479 = icmp eq i32 %6409, 1992
  %6480 = select i1 %6479, i64 -1479007749835869680, i64 0
  %6481 = add i64 %6480, %6478
  %6482 = icmp eq i32 %6409, 2000
  %6483 = select i1 %6482, i64 2843154170404223674, i64 0
  %6484 = add i64 %6483, %6481
  %6485 = icmp eq i32 %6409, 2008
  %6486 = select i1 %6485, i64 -4665003603661872786, i64 0
  %6487 = add i64 %6486, %6484
  %6488 = icmp eq i32 %6409, 2016
  %6489 = select i1 %6488, i64 4825845994704960611, i64 0
  %6490 = add i64 %6489, %6487
  %6491 = icmp eq i32 %6409, 2024
  %6492 = select i1 %6491, i64 -8782479638933598267, i64 0
  %6493 = add i64 %6492, %6490
  %6494 = icmp eq i32 %6409, 2032
  %6495 = select i1 %6494, i64 -2649846723997625800, i64 0
  %6496 = add i64 %6495, %6493
  %6497 = icmp eq i32 %6409, 2040
  %6498 = select i1 %6497, i64 -7986310597085620905, i64 0
  %6499 = add i64 %6498, %6496
  %6500 = lshr i64 %6034, 13
  %6501 = trunc i64 %6500 to i32
  %6502 = and i32 %6501, 2040
  %6503 = insertelement <4 x i32> poison, i32 %6502, i32 0
  %6504 = shufflevector <4 x i32> %6503, <4 x i32> poison, <4 x i32> zeroinitializer
  %6505 = insertelement <4 x i32> poison, i32 %6502, i32 0
  %6506 = shufflevector <4 x i32> %6505, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6507

6507:                                             ; preds = %13283, %6476
  %6508 = phi i32 [ 0, %6476 ], [ %13303, %13283 ]
  %6509 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6476 ], [ %13301, %13283 ]
  %6510 = phi <4 x i64> [ zeroinitializer, %6476 ], [ %13302, %13283 ]
  %6511 = or i32 %6508, 1
  %6512 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6511
  %6513 = bitcast i32* %6512 to <4 x i32>*
  %6514 = load <4 x i32>, <4 x i32>* %6513, align 4, !tbaa !3
  %6515 = getelementptr inbounds i32, i32* %6512, i32 4
  %6516 = bitcast i32* %6515 to <4 x i32>*
  %6517 = load <4 x i32>, <4 x i32>* %6516, align 4, !tbaa !3
  %6518 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %6514
  %6519 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %6517
  %6520 = bitcast <4 x i8*> %6518 to <4 x i64*>
  %6521 = bitcast <4 x i8*> %6519 to <4 x i64*>
  %6522 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6520, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6523 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6521, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6524 = icmp eq <4 x i32> %6504, %6514
  %6525 = icmp eq <4 x i32> %6506, %6517
  %6526 = select <4 x i1> %6524, <4 x i64> %6522, <4 x i64> zeroinitializer
  %6527 = select <4 x i1> %6525, <4 x i64> %6523, <4 x i64> zeroinitializer
  %6528 = add <4 x i64> %6526, %6509
  %6529 = add <4 x i64> %6527, %6510
  %6530 = or i32 %6508, 9
  %6531 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6530
  %6532 = bitcast i32* %6531 to <4 x i32>*
  %6533 = load <4 x i32>, <4 x i32>* %6532, align 4, !tbaa !3
  %6534 = getelementptr inbounds i32, i32* %6531, i32 4
  %6535 = bitcast i32* %6534 to <4 x i32>*
  %6536 = load <4 x i32>, <4 x i32>* %6535, align 4, !tbaa !3
  %6537 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %6533
  %6538 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %6536
  %6539 = bitcast <4 x i8*> %6537 to <4 x i64*>
  %6540 = bitcast <4 x i8*> %6538 to <4 x i64*>
  %6541 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6539, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6542 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6540, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6543 = icmp eq <4 x i32> %6504, %6533
  %6544 = icmp eq <4 x i32> %6506, %6536
  %6545 = select <4 x i1> %6543, <4 x i64> %6541, <4 x i64> zeroinitializer
  %6546 = select <4 x i1> %6544, <4 x i64> %6542, <4 x i64> zeroinitializer
  %6547 = add <4 x i64> %6545, %6528
  %6548 = add <4 x i64> %6546, %6529
  %6549 = or i32 %6508, 17
  %6550 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6549
  %6551 = bitcast i32* %6550 to <4 x i32>*
  %6552 = load <4 x i32>, <4 x i32>* %6551, align 4, !tbaa !3
  %6553 = getelementptr inbounds i32, i32* %6550, i32 4
  %6554 = bitcast i32* %6553 to <4 x i32>*
  %6555 = load <4 x i32>, <4 x i32>* %6554, align 4, !tbaa !3
  %6556 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %6552
  %6557 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %6555
  %6558 = bitcast <4 x i8*> %6556 to <4 x i64*>
  %6559 = bitcast <4 x i8*> %6557 to <4 x i64*>
  %6560 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6558, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6561 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6559, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6562 = icmp eq <4 x i32> %6504, %6552
  %6563 = icmp eq <4 x i32> %6506, %6555
  %6564 = select <4 x i1> %6562, <4 x i64> %6560, <4 x i64> zeroinitializer
  %6565 = select <4 x i1> %6563, <4 x i64> %6561, <4 x i64> zeroinitializer
  %6566 = add <4 x i64> %6564, %6547
  %6567 = add <4 x i64> %6565, %6548
  %6568 = icmp eq i32 %6508, 224
  br i1 %6568, label %6569, label %13283, !llvm.loop !83

6569:                                             ; preds = %6507
  %6570 = add <4 x i64> %6567, %6566
  %6571 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6570)
  %6572 = icmp eq i32 %6502, 1992
  %6573 = select i1 %6572, i64 8785196325032562866, i64 0
  %6574 = add i64 %6573, %6571
  %6575 = icmp eq i32 %6502, 2000
  %6576 = select i1 %6575, i64 8369843054303033914, i64 0
  %6577 = add i64 %6576, %6574
  %6578 = icmp eq i32 %6502, 2008
  %6579 = select i1 %6578, i64 4809827444717481505, i64 0
  %6580 = add i64 %6579, %6577
  %6581 = icmp eq i32 %6502, 2016
  %6582 = select i1 %6581, i64 -557780216695528580, i64 0
  %6583 = add i64 %6582, %6580
  %6584 = icmp eq i32 %6502, 2024
  %6585 = select i1 %6584, i64 2199529431470097679, i64 0
  %6586 = add i64 %6585, %6583
  %6587 = icmp eq i32 %6502, 2032
  %6588 = select i1 %6587, i64 4169051064997918866, i64 0
  %6589 = add i64 %6588, %6586
  %6590 = icmp eq i32 %6502, 2040
  %6591 = select i1 %6590, i64 3067465835107997461, i64 0
  %6592 = add i64 %6591, %6589
  %6593 = lshr i64 %6034, 5
  %6594 = trunc i64 %6593 to i32
  %6595 = and i32 %6594, 2040
  %6596 = insertelement <4 x i32> poison, i32 %6595, i32 0
  %6597 = shufflevector <4 x i32> %6596, <4 x i32> poison, <4 x i32> zeroinitializer
  %6598 = insertelement <4 x i32> poison, i32 %6595, i32 0
  %6599 = shufflevector <4 x i32> %6598, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6600

6600:                                             ; preds = %13262, %6569
  %6601 = phi i32 [ 0, %6569 ], [ %13282, %13262 ]
  %6602 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6569 ], [ %13280, %13262 ]
  %6603 = phi <4 x i64> [ zeroinitializer, %6569 ], [ %13281, %13262 ]
  %6604 = or i32 %6601, 1
  %6605 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6604
  %6606 = bitcast i32* %6605 to <4 x i32>*
  %6607 = load <4 x i32>, <4 x i32>* %6606, align 4, !tbaa !3
  %6608 = getelementptr inbounds i32, i32* %6605, i32 4
  %6609 = bitcast i32* %6608 to <4 x i32>*
  %6610 = load <4 x i32>, <4 x i32>* %6609, align 4, !tbaa !3
  %6611 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %6607
  %6612 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %6610
  %6613 = bitcast <4 x i8*> %6611 to <4 x i64*>
  %6614 = bitcast <4 x i8*> %6612 to <4 x i64*>
  %6615 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6613, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6616 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6614, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6617 = icmp eq <4 x i32> %6597, %6607
  %6618 = icmp eq <4 x i32> %6599, %6610
  %6619 = select <4 x i1> %6617, <4 x i64> %6615, <4 x i64> zeroinitializer
  %6620 = select <4 x i1> %6618, <4 x i64> %6616, <4 x i64> zeroinitializer
  %6621 = add <4 x i64> %6619, %6602
  %6622 = add <4 x i64> %6620, %6603
  %6623 = or i32 %6601, 9
  %6624 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6623
  %6625 = bitcast i32* %6624 to <4 x i32>*
  %6626 = load <4 x i32>, <4 x i32>* %6625, align 4, !tbaa !3
  %6627 = getelementptr inbounds i32, i32* %6624, i32 4
  %6628 = bitcast i32* %6627 to <4 x i32>*
  %6629 = load <4 x i32>, <4 x i32>* %6628, align 4, !tbaa !3
  %6630 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %6626
  %6631 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %6629
  %6632 = bitcast <4 x i8*> %6630 to <4 x i64*>
  %6633 = bitcast <4 x i8*> %6631 to <4 x i64*>
  %6634 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6632, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6635 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6633, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6636 = icmp eq <4 x i32> %6597, %6626
  %6637 = icmp eq <4 x i32> %6599, %6629
  %6638 = select <4 x i1> %6636, <4 x i64> %6634, <4 x i64> zeroinitializer
  %6639 = select <4 x i1> %6637, <4 x i64> %6635, <4 x i64> zeroinitializer
  %6640 = add <4 x i64> %6638, %6621
  %6641 = add <4 x i64> %6639, %6622
  %6642 = or i32 %6601, 17
  %6643 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6642
  %6644 = bitcast i32* %6643 to <4 x i32>*
  %6645 = load <4 x i32>, <4 x i32>* %6644, align 4, !tbaa !3
  %6646 = getelementptr inbounds i32, i32* %6643, i32 4
  %6647 = bitcast i32* %6646 to <4 x i32>*
  %6648 = load <4 x i32>, <4 x i32>* %6647, align 4, !tbaa !3
  %6649 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %6645
  %6650 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %6648
  %6651 = bitcast <4 x i8*> %6649 to <4 x i64*>
  %6652 = bitcast <4 x i8*> %6650 to <4 x i64*>
  %6653 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6651, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6654 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6652, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6655 = icmp eq <4 x i32> %6597, %6645
  %6656 = icmp eq <4 x i32> %6599, %6648
  %6657 = select <4 x i1> %6655, <4 x i64> %6653, <4 x i64> zeroinitializer
  %6658 = select <4 x i1> %6656, <4 x i64> %6654, <4 x i64> zeroinitializer
  %6659 = add <4 x i64> %6657, %6640
  %6660 = add <4 x i64> %6658, %6641
  %6661 = icmp eq i32 %6601, 224
  br i1 %6661, label %6662, label %13262, !llvm.loop !84

6662:                                             ; preds = %6600
  %6663 = add <4 x i64> %6660, %6659
  %6664 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6663)
  %6665 = icmp eq i32 %6595, 1992
  %6666 = select i1 %6665, i64 -9058450267568037125, i64 0
  %6667 = add i64 %6666, %6664
  %6668 = icmp eq i32 %6595, 2000
  %6669 = select i1 %6668, i64 -1610274961606672227, i64 0
  %6670 = add i64 %6669, %6667
  %6671 = icmp eq i32 %6595, 2008
  %6672 = select i1 %6671, i64 -7786513464973963311, i64 0
  %6673 = add i64 %6672, %6670
  %6674 = icmp eq i32 %6595, 2016
  %6675 = select i1 %6674, i64 -2783995359638905055, i64 0
  %6676 = add i64 %6675, %6673
  %6677 = icmp eq i32 %6595, 2024
  %6678 = select i1 %6677, i64 6722895807429069379, i64 0
  %6679 = add i64 %6678, %6676
  %6680 = icmp eq i32 %6595, 2032
  %6681 = select i1 %6680, i64 -2706140860760151325, i64 0
  %6682 = add i64 %6681, %6679
  %6683 = icmp eq i32 %6595, 2040
  %6684 = select i1 %6683, i64 -1381601050739916090, i64 0
  %6685 = add i64 %6684, %6682
  %6686 = trunc i64 %6034 to i32
  %6687 = shl i32 %6686, 3
  %6688 = and i32 %6687, 2040
  %6689 = insertelement <4 x i32> poison, i32 %6688, i32 0
  %6690 = shufflevector <4 x i32> %6689, <4 x i32> poison, <4 x i32> zeroinitializer
  %6691 = insertelement <4 x i32> poison, i32 %6688, i32 0
  %6692 = shufflevector <4 x i32> %6691, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6693

6693:                                             ; preds = %13241, %6662
  %6694 = phi i32 [ 0, %6662 ], [ %13261, %13241 ]
  %6695 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6662 ], [ %13259, %13241 ]
  %6696 = phi <4 x i64> [ zeroinitializer, %6662 ], [ %13260, %13241 ]
  %6697 = or i32 %6694, 1
  %6698 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6697
  %6699 = bitcast i32* %6698 to <4 x i32>*
  %6700 = load <4 x i32>, <4 x i32>* %6699, align 4, !tbaa !3
  %6701 = getelementptr inbounds i32, i32* %6698, i32 4
  %6702 = bitcast i32* %6701 to <4 x i32>*
  %6703 = load <4 x i32>, <4 x i32>* %6702, align 4, !tbaa !3
  %6704 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %6700
  %6705 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %6703
  %6706 = bitcast <4 x i8*> %6704 to <4 x i64*>
  %6707 = bitcast <4 x i8*> %6705 to <4 x i64*>
  %6708 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6706, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6709 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6707, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6710 = icmp eq <4 x i32> %6690, %6700
  %6711 = icmp eq <4 x i32> %6692, %6703
  %6712 = select <4 x i1> %6710, <4 x i64> %6708, <4 x i64> zeroinitializer
  %6713 = select <4 x i1> %6711, <4 x i64> %6709, <4 x i64> zeroinitializer
  %6714 = add <4 x i64> %6712, %6695
  %6715 = add <4 x i64> %6713, %6696
  %6716 = or i32 %6694, 9
  %6717 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6716
  %6718 = bitcast i32* %6717 to <4 x i32>*
  %6719 = load <4 x i32>, <4 x i32>* %6718, align 4, !tbaa !3
  %6720 = getelementptr inbounds i32, i32* %6717, i32 4
  %6721 = bitcast i32* %6720 to <4 x i32>*
  %6722 = load <4 x i32>, <4 x i32>* %6721, align 4, !tbaa !3
  %6723 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %6719
  %6724 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %6722
  %6725 = bitcast <4 x i8*> %6723 to <4 x i64*>
  %6726 = bitcast <4 x i8*> %6724 to <4 x i64*>
  %6727 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6725, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6728 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6726, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6729 = icmp eq <4 x i32> %6690, %6719
  %6730 = icmp eq <4 x i32> %6692, %6722
  %6731 = select <4 x i1> %6729, <4 x i64> %6727, <4 x i64> zeroinitializer
  %6732 = select <4 x i1> %6730, <4 x i64> %6728, <4 x i64> zeroinitializer
  %6733 = add <4 x i64> %6731, %6714
  %6734 = add <4 x i64> %6732, %6715
  %6735 = or i32 %6694, 17
  %6736 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6735
  %6737 = bitcast i32* %6736 to <4 x i32>*
  %6738 = load <4 x i32>, <4 x i32>* %6737, align 4, !tbaa !3
  %6739 = getelementptr inbounds i32, i32* %6736, i32 4
  %6740 = bitcast i32* %6739 to <4 x i32>*
  %6741 = load <4 x i32>, <4 x i32>* %6740, align 4, !tbaa !3
  %6742 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %6738
  %6743 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %6741
  %6744 = bitcast <4 x i8*> %6742 to <4 x i64*>
  %6745 = bitcast <4 x i8*> %6743 to <4 x i64*>
  %6746 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6744, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6747 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6745, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6748 = icmp eq <4 x i32> %6690, %6738
  %6749 = icmp eq <4 x i32> %6692, %6741
  %6750 = select <4 x i1> %6748, <4 x i64> %6746, <4 x i64> zeroinitializer
  %6751 = select <4 x i1> %6749, <4 x i64> %6747, <4 x i64> zeroinitializer
  %6752 = add <4 x i64> %6750, %6733
  %6753 = add <4 x i64> %6751, %6734
  %6754 = icmp eq i32 %6694, 224
  br i1 %6754, label %6755, label %13241, !llvm.loop !85

6755:                                             ; preds = %6693
  %6756 = add <4 x i64> %6753, %6752
  %6757 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6756)
  %6758 = icmp eq i32 %6688, 1992
  %6759 = select i1 %6758, i64 5296930162245565346, i64 0
  %6760 = add i64 %6759, %6757
  %6761 = icmp eq i32 %6688, 2000
  %6762 = select i1 %6761, i64 -6347414485825053312, i64 0
  %6763 = add i64 %6762, %6760
  %6764 = icmp eq i32 %6688, 2008
  %6765 = select i1 %6764, i64 -1111471293076483761, i64 0
  %6766 = add i64 %6765, %6763
  %6767 = icmp eq i32 %6688, 2016
  %6768 = select i1 %6767, i64 6762709279494119711, i64 0
  %6769 = add i64 %6768, %6766
  %6770 = icmp eq i32 %6688, 2024
  %6771 = select i1 %6770, i64 5502587883897177034, i64 0
  %6772 = add i64 %6771, %6769
  %6773 = icmp eq i32 %6688, 2032
  %6774 = select i1 %6773, i64 8203933284918551466, i64 0
  %6775 = add i64 %6774, %6772
  %6776 = icmp eq i32 %6688, 2040
  %6777 = select i1 %6776, i64 -3176116833483372990, i64 0
  %6778 = add i64 %6777, %6775
  %6779 = xor i64 %6220, %6127
  %6780 = xor i64 %6779, %6313
  %6781 = xor i64 %6780, %6406
  %6782 = xor i64 %6781, %6499
  %6783 = xor i64 %6782, %6592
  %6784 = xor i64 %6783, %6685
  %6785 = xor i64 %6784, %6778
  %6786 = xor i64 %6785, %6031
  %6787 = lshr i64 %6786, 53
  %6788 = trunc i64 %6787 to i32
  %6789 = and i32 %6788, 2040
  %6790 = insertelement <4 x i32> poison, i32 %6789, i32 0
  %6791 = shufflevector <4 x i32> %6790, <4 x i32> poison, <4 x i32> zeroinitializer
  %6792 = insertelement <4 x i32> poison, i32 %6789, i32 0
  %6793 = shufflevector <4 x i32> %6792, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6794

6794:                                             ; preds = %13220, %6755
  %6795 = phi i32 [ 0, %6755 ], [ %13240, %13220 ]
  %6796 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6755 ], [ %13238, %13220 ]
  %6797 = phi <4 x i64> [ zeroinitializer, %6755 ], [ %13239, %13220 ]
  %6798 = or i32 %6795, 1
  %6799 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6798
  %6800 = bitcast i32* %6799 to <4 x i32>*
  %6801 = load <4 x i32>, <4 x i32>* %6800, align 4, !tbaa !3
  %6802 = getelementptr inbounds i32, i32* %6799, i32 4
  %6803 = bitcast i32* %6802 to <4 x i32>*
  %6804 = load <4 x i32>, <4 x i32>* %6803, align 4, !tbaa !3
  %6805 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6801
  %6806 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6804
  %6807 = bitcast <4 x i8*> %6805 to <4 x i64*>
  %6808 = bitcast <4 x i8*> %6806 to <4 x i64*>
  %6809 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6807, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6810 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6808, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6811 = icmp eq <4 x i32> %6791, %6801
  %6812 = icmp eq <4 x i32> %6793, %6804
  %6813 = select <4 x i1> %6811, <4 x i64> %6809, <4 x i64> zeroinitializer
  %6814 = select <4 x i1> %6812, <4 x i64> %6810, <4 x i64> zeroinitializer
  %6815 = add <4 x i64> %6813, %6796
  %6816 = add <4 x i64> %6814, %6797
  %6817 = or i32 %6795, 9
  %6818 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6817
  %6819 = bitcast i32* %6818 to <4 x i32>*
  %6820 = load <4 x i32>, <4 x i32>* %6819, align 4, !tbaa !3
  %6821 = getelementptr inbounds i32, i32* %6818, i32 4
  %6822 = bitcast i32* %6821 to <4 x i32>*
  %6823 = load <4 x i32>, <4 x i32>* %6822, align 4, !tbaa !3
  %6824 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6820
  %6825 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6823
  %6826 = bitcast <4 x i8*> %6824 to <4 x i64*>
  %6827 = bitcast <4 x i8*> %6825 to <4 x i64*>
  %6828 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6826, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6829 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6827, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6830 = icmp eq <4 x i32> %6791, %6820
  %6831 = icmp eq <4 x i32> %6793, %6823
  %6832 = select <4 x i1> %6830, <4 x i64> %6828, <4 x i64> zeroinitializer
  %6833 = select <4 x i1> %6831, <4 x i64> %6829, <4 x i64> zeroinitializer
  %6834 = add <4 x i64> %6832, %6815
  %6835 = add <4 x i64> %6833, %6816
  %6836 = or i32 %6795, 17
  %6837 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6836
  %6838 = bitcast i32* %6837 to <4 x i32>*
  %6839 = load <4 x i32>, <4 x i32>* %6838, align 4, !tbaa !3
  %6840 = getelementptr inbounds i32, i32* %6837, i32 4
  %6841 = bitcast i32* %6840 to <4 x i32>*
  %6842 = load <4 x i32>, <4 x i32>* %6841, align 4, !tbaa !3
  %6843 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6839
  %6844 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %6842
  %6845 = bitcast <4 x i8*> %6843 to <4 x i64*>
  %6846 = bitcast <4 x i8*> %6844 to <4 x i64*>
  %6847 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6845, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6848 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6846, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6849 = icmp eq <4 x i32> %6791, %6839
  %6850 = icmp eq <4 x i32> %6793, %6842
  %6851 = select <4 x i1> %6849, <4 x i64> %6847, <4 x i64> zeroinitializer
  %6852 = select <4 x i1> %6850, <4 x i64> %6848, <4 x i64> zeroinitializer
  %6853 = add <4 x i64> %6851, %6834
  %6854 = add <4 x i64> %6852, %6835
  %6855 = icmp eq i32 %6795, 224
  br i1 %6855, label %6856, label %13220, !llvm.loop !86

6856:                                             ; preds = %6794
  %6857 = add <4 x i64> %6854, %6853
  %6858 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6857)
  %6859 = icmp eq i32 %6789, 1992
  %6860 = select i1 %6859, i64 -6702567834671021495, i64 0
  %6861 = add i64 %6860, %6858
  %6862 = icmp eq i32 %6789, 2000
  %6863 = select i1 %6862, i64 -9179115894310901337, i64 0
  %6864 = add i64 %6863, %6861
  %6865 = icmp eq i32 %6789, 2008
  %6866 = select i1 %6865, i64 5751414958667764720, i64 0
  %6867 = add i64 %6866, %6864
  %6868 = icmp eq i32 %6789, 2016
  %6869 = select i1 %6868, i64 2243210855174429021, i64 0
  %6870 = add i64 %6869, %6867
  %6871 = icmp eq i32 %6789, 2024
  %6872 = select i1 %6871, i64 -3872233913575383732, i64 0
  %6873 = add i64 %6872, %6870
  %6874 = icmp eq i32 %6789, 2032
  %6875 = select i1 %6874, i64 -6132897494654657935, i64 0
  %6876 = add i64 %6875, %6873
  %6877 = icmp eq i32 %6789, 2040
  %6878 = select i1 %6877, i64 4811556717733801171, i64 0
  %6879 = add i64 %6878, %6876
  %6880 = lshr i64 %6786, 45
  %6881 = trunc i64 %6880 to i32
  %6882 = and i32 %6881, 2040
  %6883 = insertelement <4 x i32> poison, i32 %6882, i32 0
  %6884 = shufflevector <4 x i32> %6883, <4 x i32> poison, <4 x i32> zeroinitializer
  %6885 = insertelement <4 x i32> poison, i32 %6882, i32 0
  %6886 = shufflevector <4 x i32> %6885, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6887

6887:                                             ; preds = %13199, %6856
  %6888 = phi i32 [ 0, %6856 ], [ %13219, %13199 ]
  %6889 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6856 ], [ %13217, %13199 ]
  %6890 = phi <4 x i64> [ zeroinitializer, %6856 ], [ %13218, %13199 ]
  %6891 = or i32 %6888, 1
  %6892 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6891
  %6893 = bitcast i32* %6892 to <4 x i32>*
  %6894 = load <4 x i32>, <4 x i32>* %6893, align 4, !tbaa !3
  %6895 = getelementptr inbounds i32, i32* %6892, i32 4
  %6896 = bitcast i32* %6895 to <4 x i32>*
  %6897 = load <4 x i32>, <4 x i32>* %6896, align 4, !tbaa !3
  %6898 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6894
  %6899 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6897
  %6900 = bitcast <4 x i8*> %6898 to <4 x i64*>
  %6901 = bitcast <4 x i8*> %6899 to <4 x i64*>
  %6902 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6900, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6903 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6901, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6904 = icmp eq <4 x i32> %6884, %6894
  %6905 = icmp eq <4 x i32> %6886, %6897
  %6906 = select <4 x i1> %6904, <4 x i64> %6902, <4 x i64> zeroinitializer
  %6907 = select <4 x i1> %6905, <4 x i64> %6903, <4 x i64> zeroinitializer
  %6908 = add <4 x i64> %6906, %6889
  %6909 = add <4 x i64> %6907, %6890
  %6910 = or i32 %6888, 9
  %6911 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6910
  %6912 = bitcast i32* %6911 to <4 x i32>*
  %6913 = load <4 x i32>, <4 x i32>* %6912, align 4, !tbaa !3
  %6914 = getelementptr inbounds i32, i32* %6911, i32 4
  %6915 = bitcast i32* %6914 to <4 x i32>*
  %6916 = load <4 x i32>, <4 x i32>* %6915, align 4, !tbaa !3
  %6917 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6913
  %6918 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6916
  %6919 = bitcast <4 x i8*> %6917 to <4 x i64*>
  %6920 = bitcast <4 x i8*> %6918 to <4 x i64*>
  %6921 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6919, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6922 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6920, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6923 = icmp eq <4 x i32> %6884, %6913
  %6924 = icmp eq <4 x i32> %6886, %6916
  %6925 = select <4 x i1> %6923, <4 x i64> %6921, <4 x i64> zeroinitializer
  %6926 = select <4 x i1> %6924, <4 x i64> %6922, <4 x i64> zeroinitializer
  %6927 = add <4 x i64> %6925, %6908
  %6928 = add <4 x i64> %6926, %6909
  %6929 = or i32 %6888, 17
  %6930 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6929
  %6931 = bitcast i32* %6930 to <4 x i32>*
  %6932 = load <4 x i32>, <4 x i32>* %6931, align 4, !tbaa !3
  %6933 = getelementptr inbounds i32, i32* %6930, i32 4
  %6934 = bitcast i32* %6933 to <4 x i32>*
  %6935 = load <4 x i32>, <4 x i32>* %6934, align 4, !tbaa !3
  %6936 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6932
  %6937 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %6935
  %6938 = bitcast <4 x i8*> %6936 to <4 x i64*>
  %6939 = bitcast <4 x i8*> %6937 to <4 x i64*>
  %6940 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6938, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6941 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6939, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6942 = icmp eq <4 x i32> %6884, %6932
  %6943 = icmp eq <4 x i32> %6886, %6935
  %6944 = select <4 x i1> %6942, <4 x i64> %6940, <4 x i64> zeroinitializer
  %6945 = select <4 x i1> %6943, <4 x i64> %6941, <4 x i64> zeroinitializer
  %6946 = add <4 x i64> %6944, %6927
  %6947 = add <4 x i64> %6945, %6928
  %6948 = icmp eq i32 %6888, 224
  br i1 %6948, label %6949, label %13199, !llvm.loop !87

6949:                                             ; preds = %6887
  %6950 = add <4 x i64> %6947, %6946
  %6951 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %6950)
  %6952 = icmp eq i32 %6882, 1992
  %6953 = select i1 %6952, i64 -314670665226827390, i64 0
  %6954 = add i64 %6953, %6951
  %6955 = icmp eq i32 %6882, 2000
  %6956 = select i1 %6955, i64 -7097468252516276247, i64 0
  %6957 = add i64 %6956, %6954
  %6958 = icmp eq i32 %6882, 2008
  %6959 = select i1 %6958, i64 -3364349307489619821, i64 0
  %6960 = add i64 %6959, %6957
  %6961 = icmp eq i32 %6882, 2016
  %6962 = select i1 %6961, i64 2386735715921845721, i64 0
  %6963 = add i64 %6962, %6960
  %6964 = icmp eq i32 %6882, 2024
  %6965 = select i1 %6964, i64 4884933414564023389, i64 0
  %6966 = add i64 %6965, %6963
  %6967 = icmp eq i32 %6882, 2032
  %6968 = select i1 %6967, i64 -2041757280372035110, i64 0
  %6969 = add i64 %6968, %6966
  %6970 = icmp eq i32 %6882, 2040
  %6971 = select i1 %6970, i64 -4160667357316787220, i64 0
  %6972 = add i64 %6971, %6969
  %6973 = lshr i64 %6786, 37
  %6974 = trunc i64 %6973 to i32
  %6975 = and i32 %6974, 2040
  %6976 = insertelement <4 x i32> poison, i32 %6975, i32 0
  %6977 = shufflevector <4 x i32> %6976, <4 x i32> poison, <4 x i32> zeroinitializer
  %6978 = insertelement <4 x i32> poison, i32 %6975, i32 0
  %6979 = shufflevector <4 x i32> %6978, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %6980

6980:                                             ; preds = %13178, %6949
  %6981 = phi i32 [ 0, %6949 ], [ %13198, %13178 ]
  %6982 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %6949 ], [ %13196, %13178 ]
  %6983 = phi <4 x i64> [ zeroinitializer, %6949 ], [ %13197, %13178 ]
  %6984 = or i32 %6981, 1
  %6985 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %6984
  %6986 = bitcast i32* %6985 to <4 x i32>*
  %6987 = load <4 x i32>, <4 x i32>* %6986, align 4, !tbaa !3
  %6988 = getelementptr inbounds i32, i32* %6985, i32 4
  %6989 = bitcast i32* %6988 to <4 x i32>*
  %6990 = load <4 x i32>, <4 x i32>* %6989, align 4, !tbaa !3
  %6991 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %6987
  %6992 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %6990
  %6993 = bitcast <4 x i8*> %6991 to <4 x i64*>
  %6994 = bitcast <4 x i8*> %6992 to <4 x i64*>
  %6995 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6993, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6996 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %6994, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %6997 = icmp eq <4 x i32> %6977, %6987
  %6998 = icmp eq <4 x i32> %6979, %6990
  %6999 = select <4 x i1> %6997, <4 x i64> %6995, <4 x i64> zeroinitializer
  %7000 = select <4 x i1> %6998, <4 x i64> %6996, <4 x i64> zeroinitializer
  %7001 = add <4 x i64> %6999, %6982
  %7002 = add <4 x i64> %7000, %6983
  %7003 = or i32 %6981, 9
  %7004 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7003
  %7005 = bitcast i32* %7004 to <4 x i32>*
  %7006 = load <4 x i32>, <4 x i32>* %7005, align 4, !tbaa !3
  %7007 = getelementptr inbounds i32, i32* %7004, i32 4
  %7008 = bitcast i32* %7007 to <4 x i32>*
  %7009 = load <4 x i32>, <4 x i32>* %7008, align 4, !tbaa !3
  %7010 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7006
  %7011 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7009
  %7012 = bitcast <4 x i8*> %7010 to <4 x i64*>
  %7013 = bitcast <4 x i8*> %7011 to <4 x i64*>
  %7014 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7012, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7015 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7013, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7016 = icmp eq <4 x i32> %6977, %7006
  %7017 = icmp eq <4 x i32> %6979, %7009
  %7018 = select <4 x i1> %7016, <4 x i64> %7014, <4 x i64> zeroinitializer
  %7019 = select <4 x i1> %7017, <4 x i64> %7015, <4 x i64> zeroinitializer
  %7020 = add <4 x i64> %7018, %7001
  %7021 = add <4 x i64> %7019, %7002
  %7022 = or i32 %6981, 17
  %7023 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7022
  %7024 = bitcast i32* %7023 to <4 x i32>*
  %7025 = load <4 x i32>, <4 x i32>* %7024, align 4, !tbaa !3
  %7026 = getelementptr inbounds i32, i32* %7023, i32 4
  %7027 = bitcast i32* %7026 to <4 x i32>*
  %7028 = load <4 x i32>, <4 x i32>* %7027, align 4, !tbaa !3
  %7029 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7025
  %7030 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7028
  %7031 = bitcast <4 x i8*> %7029 to <4 x i64*>
  %7032 = bitcast <4 x i8*> %7030 to <4 x i64*>
  %7033 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7031, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7034 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7032, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7035 = icmp eq <4 x i32> %6977, %7025
  %7036 = icmp eq <4 x i32> %6979, %7028
  %7037 = select <4 x i1> %7035, <4 x i64> %7033, <4 x i64> zeroinitializer
  %7038 = select <4 x i1> %7036, <4 x i64> %7034, <4 x i64> zeroinitializer
  %7039 = add <4 x i64> %7037, %7020
  %7040 = add <4 x i64> %7038, %7021
  %7041 = icmp eq i32 %6981, 224
  br i1 %7041, label %7042, label %13178, !llvm.loop !88

7042:                                             ; preds = %6980
  %7043 = add <4 x i64> %7040, %7039
  %7044 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7043)
  %7045 = icmp eq i32 %6975, 1992
  %7046 = select i1 %7045, i64 -5615809534224635015, i64 0
  %7047 = add i64 %7046, %7044
  %7048 = icmp eq i32 %6975, 2000
  %7049 = select i1 %7048, i64 4231836215586269044, i64 0
  %7050 = add i64 %7049, %7047
  %7051 = icmp eq i32 %6975, 2008
  %7052 = select i1 %7051, i64 2408950612238581570, i64 0
  %7053 = add i64 %7052, %7050
  %7054 = icmp eq i32 %6975, 2016
  %7055 = select i1 %7054, i64 8963041913638568696, i64 0
  %7056 = add i64 %7055, %7053
  %7057 = icmp eq i32 %6975, 2024
  %7058 = select i1 %7057, i64 1136536871657834014, i64 0
  %7059 = add i64 %7058, %7056
  %7060 = icmp eq i32 %6975, 2032
  %7061 = select i1 %7060, i64 -7910384849877083335, i64 0
  %7062 = add i64 %7061, %7059
  %7063 = icmp eq i32 %6975, 2040
  %7064 = select i1 %7063, i64 1537771219914559786, i64 0
  %7065 = add i64 %7064, %7062
  %7066 = lshr i64 %6786, 29
  %7067 = trunc i64 %7066 to i32
  %7068 = and i32 %7067, 2040
  %7069 = insertelement <4 x i32> poison, i32 %7068, i32 0
  %7070 = shufflevector <4 x i32> %7069, <4 x i32> poison, <4 x i32> zeroinitializer
  %7071 = insertelement <4 x i32> poison, i32 %7068, i32 0
  %7072 = shufflevector <4 x i32> %7071, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7073

7073:                                             ; preds = %13157, %7042
  %7074 = phi i32 [ 0, %7042 ], [ %13177, %13157 ]
  %7075 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7042 ], [ %13175, %13157 ]
  %7076 = phi <4 x i64> [ zeroinitializer, %7042 ], [ %13176, %13157 ]
  %7077 = or i32 %7074, 1
  %7078 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7077
  %7079 = bitcast i32* %7078 to <4 x i32>*
  %7080 = load <4 x i32>, <4 x i32>* %7079, align 4, !tbaa !3
  %7081 = getelementptr inbounds i32, i32* %7078, i32 4
  %7082 = bitcast i32* %7081 to <4 x i32>*
  %7083 = load <4 x i32>, <4 x i32>* %7082, align 4, !tbaa !3
  %7084 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7080
  %7085 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7083
  %7086 = bitcast <4 x i8*> %7084 to <4 x i64*>
  %7087 = bitcast <4 x i8*> %7085 to <4 x i64*>
  %7088 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7086, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7089 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7087, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7090 = icmp eq <4 x i32> %7070, %7080
  %7091 = icmp eq <4 x i32> %7072, %7083
  %7092 = select <4 x i1> %7090, <4 x i64> %7088, <4 x i64> zeroinitializer
  %7093 = select <4 x i1> %7091, <4 x i64> %7089, <4 x i64> zeroinitializer
  %7094 = add <4 x i64> %7092, %7075
  %7095 = add <4 x i64> %7093, %7076
  %7096 = or i32 %7074, 9
  %7097 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7096
  %7098 = bitcast i32* %7097 to <4 x i32>*
  %7099 = load <4 x i32>, <4 x i32>* %7098, align 4, !tbaa !3
  %7100 = getelementptr inbounds i32, i32* %7097, i32 4
  %7101 = bitcast i32* %7100 to <4 x i32>*
  %7102 = load <4 x i32>, <4 x i32>* %7101, align 4, !tbaa !3
  %7103 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7099
  %7104 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7102
  %7105 = bitcast <4 x i8*> %7103 to <4 x i64*>
  %7106 = bitcast <4 x i8*> %7104 to <4 x i64*>
  %7107 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7105, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7108 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7106, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7109 = icmp eq <4 x i32> %7070, %7099
  %7110 = icmp eq <4 x i32> %7072, %7102
  %7111 = select <4 x i1> %7109, <4 x i64> %7107, <4 x i64> zeroinitializer
  %7112 = select <4 x i1> %7110, <4 x i64> %7108, <4 x i64> zeroinitializer
  %7113 = add <4 x i64> %7111, %7094
  %7114 = add <4 x i64> %7112, %7095
  %7115 = or i32 %7074, 17
  %7116 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7115
  %7117 = bitcast i32* %7116 to <4 x i32>*
  %7118 = load <4 x i32>, <4 x i32>* %7117, align 4, !tbaa !3
  %7119 = getelementptr inbounds i32, i32* %7116, i32 4
  %7120 = bitcast i32* %7119 to <4 x i32>*
  %7121 = load <4 x i32>, <4 x i32>* %7120, align 4, !tbaa !3
  %7122 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7118
  %7123 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7121
  %7124 = bitcast <4 x i8*> %7122 to <4 x i64*>
  %7125 = bitcast <4 x i8*> %7123 to <4 x i64*>
  %7126 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7124, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7127 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7125, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7128 = icmp eq <4 x i32> %7070, %7118
  %7129 = icmp eq <4 x i32> %7072, %7121
  %7130 = select <4 x i1> %7128, <4 x i64> %7126, <4 x i64> zeroinitializer
  %7131 = select <4 x i1> %7129, <4 x i64> %7127, <4 x i64> zeroinitializer
  %7132 = add <4 x i64> %7130, %7113
  %7133 = add <4 x i64> %7131, %7114
  %7134 = icmp eq i32 %7074, 224
  br i1 %7134, label %7135, label %13157, !llvm.loop !89

7135:                                             ; preds = %7073
  %7136 = add <4 x i64> %7133, %7132
  %7137 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7136)
  %7138 = icmp eq i32 %7068, 1992
  %7139 = select i1 %7138, i64 1203300724897905131, i64 0
  %7140 = add i64 %7139, %7137
  %7141 = icmp eq i32 %7068, 2000
  %7142 = select i1 %7141, i64 -5027532858107268057, i64 0
  %7143 = add i64 %7142, %7140
  %7144 = icmp eq i32 %7068, 2008
  %7145 = select i1 %7144, i64 7935854159672328895, i64 0
  %7146 = add i64 %7145, %7143
  %7147 = icmp eq i32 %7068, 2016
  %7148 = select i1 %7147, i64 7168641125469255746, i64 0
  %7149 = add i64 %7148, %7146
  %7150 = icmp eq i32 %7068, 2024
  %7151 = select i1 %7150, i64 -4247101387443462522, i64 0
  %7152 = add i64 %7151, %7149
  %7153 = icmp eq i32 %7068, 2032
  %7154 = select i1 %7153, i64 4076570933917792731, i64 0
  %7155 = add i64 %7154, %7152
  %7156 = icmp eq i32 %7068, 2040
  %7157 = select i1 %7156, i64 6275139646136265361, i64 0
  %7158 = add i64 %7157, %7155
  %7159 = lshr i64 %6786, 21
  %7160 = trunc i64 %7159 to i32
  %7161 = and i32 %7160, 2040
  %7162 = insertelement <4 x i32> poison, i32 %7161, i32 0
  %7163 = shufflevector <4 x i32> %7162, <4 x i32> poison, <4 x i32> zeroinitializer
  %7164 = insertelement <4 x i32> poison, i32 %7161, i32 0
  %7165 = shufflevector <4 x i32> %7164, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7166

7166:                                             ; preds = %13136, %7135
  %7167 = phi i32 [ 0, %7135 ], [ %13156, %13136 ]
  %7168 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7135 ], [ %13154, %13136 ]
  %7169 = phi <4 x i64> [ zeroinitializer, %7135 ], [ %13155, %13136 ]
  %7170 = or i32 %7167, 1
  %7171 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7170
  %7172 = bitcast i32* %7171 to <4 x i32>*
  %7173 = load <4 x i32>, <4 x i32>* %7172, align 4, !tbaa !3
  %7174 = getelementptr inbounds i32, i32* %7171, i32 4
  %7175 = bitcast i32* %7174 to <4 x i32>*
  %7176 = load <4 x i32>, <4 x i32>* %7175, align 4, !tbaa !3
  %7177 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7173
  %7178 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7176
  %7179 = bitcast <4 x i8*> %7177 to <4 x i64*>
  %7180 = bitcast <4 x i8*> %7178 to <4 x i64*>
  %7181 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7179, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7182 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7180, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7183 = icmp eq <4 x i32> %7163, %7173
  %7184 = icmp eq <4 x i32> %7165, %7176
  %7185 = select <4 x i1> %7183, <4 x i64> %7181, <4 x i64> zeroinitializer
  %7186 = select <4 x i1> %7184, <4 x i64> %7182, <4 x i64> zeroinitializer
  %7187 = add <4 x i64> %7185, %7168
  %7188 = add <4 x i64> %7186, %7169
  %7189 = or i32 %7167, 9
  %7190 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7189
  %7191 = bitcast i32* %7190 to <4 x i32>*
  %7192 = load <4 x i32>, <4 x i32>* %7191, align 4, !tbaa !3
  %7193 = getelementptr inbounds i32, i32* %7190, i32 4
  %7194 = bitcast i32* %7193 to <4 x i32>*
  %7195 = load <4 x i32>, <4 x i32>* %7194, align 4, !tbaa !3
  %7196 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7192
  %7197 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7195
  %7198 = bitcast <4 x i8*> %7196 to <4 x i64*>
  %7199 = bitcast <4 x i8*> %7197 to <4 x i64*>
  %7200 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7198, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7201 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7199, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7202 = icmp eq <4 x i32> %7163, %7192
  %7203 = icmp eq <4 x i32> %7165, %7195
  %7204 = select <4 x i1> %7202, <4 x i64> %7200, <4 x i64> zeroinitializer
  %7205 = select <4 x i1> %7203, <4 x i64> %7201, <4 x i64> zeroinitializer
  %7206 = add <4 x i64> %7204, %7187
  %7207 = add <4 x i64> %7205, %7188
  %7208 = or i32 %7167, 17
  %7209 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7208
  %7210 = bitcast i32* %7209 to <4 x i32>*
  %7211 = load <4 x i32>, <4 x i32>* %7210, align 4, !tbaa !3
  %7212 = getelementptr inbounds i32, i32* %7209, i32 4
  %7213 = bitcast i32* %7212 to <4 x i32>*
  %7214 = load <4 x i32>, <4 x i32>* %7213, align 4, !tbaa !3
  %7215 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7211
  %7216 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7214
  %7217 = bitcast <4 x i8*> %7215 to <4 x i64*>
  %7218 = bitcast <4 x i8*> %7216 to <4 x i64*>
  %7219 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7217, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7220 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7218, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7221 = icmp eq <4 x i32> %7163, %7211
  %7222 = icmp eq <4 x i32> %7165, %7214
  %7223 = select <4 x i1> %7221, <4 x i64> %7219, <4 x i64> zeroinitializer
  %7224 = select <4 x i1> %7222, <4 x i64> %7220, <4 x i64> zeroinitializer
  %7225 = add <4 x i64> %7223, %7206
  %7226 = add <4 x i64> %7224, %7207
  %7227 = icmp eq i32 %7167, 224
  br i1 %7227, label %7228, label %13136, !llvm.loop !90

7228:                                             ; preds = %7166
  %7229 = add <4 x i64> %7226, %7225
  %7230 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7229)
  %7231 = icmp eq i32 %7161, 1992
  %7232 = select i1 %7231, i64 -1479007749835869680, i64 0
  %7233 = add i64 %7232, %7230
  %7234 = icmp eq i32 %7161, 2000
  %7235 = select i1 %7234, i64 2843154170404223674, i64 0
  %7236 = add i64 %7235, %7233
  %7237 = icmp eq i32 %7161, 2008
  %7238 = select i1 %7237, i64 -4665003603661872786, i64 0
  %7239 = add i64 %7238, %7236
  %7240 = icmp eq i32 %7161, 2016
  %7241 = select i1 %7240, i64 4825845994704960611, i64 0
  %7242 = add i64 %7241, %7239
  %7243 = icmp eq i32 %7161, 2024
  %7244 = select i1 %7243, i64 -8782479638933598267, i64 0
  %7245 = add i64 %7244, %7242
  %7246 = icmp eq i32 %7161, 2032
  %7247 = select i1 %7246, i64 -2649846723997625800, i64 0
  %7248 = add i64 %7247, %7245
  %7249 = icmp eq i32 %7161, 2040
  %7250 = select i1 %7249, i64 -7986310597085620905, i64 0
  %7251 = add i64 %7250, %7248
  %7252 = lshr i64 %6786, 13
  %7253 = trunc i64 %7252 to i32
  %7254 = and i32 %7253, 2040
  %7255 = insertelement <4 x i32> poison, i32 %7254, i32 0
  %7256 = shufflevector <4 x i32> %7255, <4 x i32> poison, <4 x i32> zeroinitializer
  %7257 = insertelement <4 x i32> poison, i32 %7254, i32 0
  %7258 = shufflevector <4 x i32> %7257, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7259

7259:                                             ; preds = %13115, %7228
  %7260 = phi i32 [ 0, %7228 ], [ %13135, %13115 ]
  %7261 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7228 ], [ %13133, %13115 ]
  %7262 = phi <4 x i64> [ zeroinitializer, %7228 ], [ %13134, %13115 ]
  %7263 = or i32 %7260, 1
  %7264 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7263
  %7265 = bitcast i32* %7264 to <4 x i32>*
  %7266 = load <4 x i32>, <4 x i32>* %7265, align 4, !tbaa !3
  %7267 = getelementptr inbounds i32, i32* %7264, i32 4
  %7268 = bitcast i32* %7267 to <4 x i32>*
  %7269 = load <4 x i32>, <4 x i32>* %7268, align 4, !tbaa !3
  %7270 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %7266
  %7271 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %7269
  %7272 = bitcast <4 x i8*> %7270 to <4 x i64*>
  %7273 = bitcast <4 x i8*> %7271 to <4 x i64*>
  %7274 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7272, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7275 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7273, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7276 = icmp eq <4 x i32> %7256, %7266
  %7277 = icmp eq <4 x i32> %7258, %7269
  %7278 = select <4 x i1> %7276, <4 x i64> %7274, <4 x i64> zeroinitializer
  %7279 = select <4 x i1> %7277, <4 x i64> %7275, <4 x i64> zeroinitializer
  %7280 = add <4 x i64> %7278, %7261
  %7281 = add <4 x i64> %7279, %7262
  %7282 = or i32 %7260, 9
  %7283 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7282
  %7284 = bitcast i32* %7283 to <4 x i32>*
  %7285 = load <4 x i32>, <4 x i32>* %7284, align 4, !tbaa !3
  %7286 = getelementptr inbounds i32, i32* %7283, i32 4
  %7287 = bitcast i32* %7286 to <4 x i32>*
  %7288 = load <4 x i32>, <4 x i32>* %7287, align 4, !tbaa !3
  %7289 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %7285
  %7290 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %7288
  %7291 = bitcast <4 x i8*> %7289 to <4 x i64*>
  %7292 = bitcast <4 x i8*> %7290 to <4 x i64*>
  %7293 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7291, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7294 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7292, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7295 = icmp eq <4 x i32> %7256, %7285
  %7296 = icmp eq <4 x i32> %7258, %7288
  %7297 = select <4 x i1> %7295, <4 x i64> %7293, <4 x i64> zeroinitializer
  %7298 = select <4 x i1> %7296, <4 x i64> %7294, <4 x i64> zeroinitializer
  %7299 = add <4 x i64> %7297, %7280
  %7300 = add <4 x i64> %7298, %7281
  %7301 = or i32 %7260, 17
  %7302 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7301
  %7303 = bitcast i32* %7302 to <4 x i32>*
  %7304 = load <4 x i32>, <4 x i32>* %7303, align 4, !tbaa !3
  %7305 = getelementptr inbounds i32, i32* %7302, i32 4
  %7306 = bitcast i32* %7305 to <4 x i32>*
  %7307 = load <4 x i32>, <4 x i32>* %7306, align 4, !tbaa !3
  %7308 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %7304
  %7309 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %7307
  %7310 = bitcast <4 x i8*> %7308 to <4 x i64*>
  %7311 = bitcast <4 x i8*> %7309 to <4 x i64*>
  %7312 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7310, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7313 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7311, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7314 = icmp eq <4 x i32> %7256, %7304
  %7315 = icmp eq <4 x i32> %7258, %7307
  %7316 = select <4 x i1> %7314, <4 x i64> %7312, <4 x i64> zeroinitializer
  %7317 = select <4 x i1> %7315, <4 x i64> %7313, <4 x i64> zeroinitializer
  %7318 = add <4 x i64> %7316, %7299
  %7319 = add <4 x i64> %7317, %7300
  %7320 = icmp eq i32 %7260, 224
  br i1 %7320, label %7321, label %13115, !llvm.loop !91

7321:                                             ; preds = %7259
  %7322 = add <4 x i64> %7319, %7318
  %7323 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7322)
  %7324 = icmp eq i32 %7254, 1992
  %7325 = select i1 %7324, i64 8785196325032562866, i64 0
  %7326 = add i64 %7325, %7323
  %7327 = icmp eq i32 %7254, 2000
  %7328 = select i1 %7327, i64 8369843054303033914, i64 0
  %7329 = add i64 %7328, %7326
  %7330 = icmp eq i32 %7254, 2008
  %7331 = select i1 %7330, i64 4809827444717481505, i64 0
  %7332 = add i64 %7331, %7329
  %7333 = icmp eq i32 %7254, 2016
  %7334 = select i1 %7333, i64 -557780216695528580, i64 0
  %7335 = add i64 %7334, %7332
  %7336 = icmp eq i32 %7254, 2024
  %7337 = select i1 %7336, i64 2199529431470097679, i64 0
  %7338 = add i64 %7337, %7335
  %7339 = icmp eq i32 %7254, 2032
  %7340 = select i1 %7339, i64 4169051064997918866, i64 0
  %7341 = add i64 %7340, %7338
  %7342 = icmp eq i32 %7254, 2040
  %7343 = select i1 %7342, i64 3067465835107997461, i64 0
  %7344 = add i64 %7343, %7341
  %7345 = lshr i64 %6786, 5
  %7346 = trunc i64 %7345 to i32
  %7347 = and i32 %7346, 2040
  %7348 = insertelement <4 x i32> poison, i32 %7347, i32 0
  %7349 = shufflevector <4 x i32> %7348, <4 x i32> poison, <4 x i32> zeroinitializer
  %7350 = insertelement <4 x i32> poison, i32 %7347, i32 0
  %7351 = shufflevector <4 x i32> %7350, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7352

7352:                                             ; preds = %13094, %7321
  %7353 = phi i32 [ 0, %7321 ], [ %13114, %13094 ]
  %7354 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7321 ], [ %13112, %13094 ]
  %7355 = phi <4 x i64> [ zeroinitializer, %7321 ], [ %13113, %13094 ]
  %7356 = or i32 %7353, 1
  %7357 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7356
  %7358 = bitcast i32* %7357 to <4 x i32>*
  %7359 = load <4 x i32>, <4 x i32>* %7358, align 4, !tbaa !3
  %7360 = getelementptr inbounds i32, i32* %7357, i32 4
  %7361 = bitcast i32* %7360 to <4 x i32>*
  %7362 = load <4 x i32>, <4 x i32>* %7361, align 4, !tbaa !3
  %7363 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %7359
  %7364 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %7362
  %7365 = bitcast <4 x i8*> %7363 to <4 x i64*>
  %7366 = bitcast <4 x i8*> %7364 to <4 x i64*>
  %7367 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7365, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7368 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7366, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7369 = icmp eq <4 x i32> %7349, %7359
  %7370 = icmp eq <4 x i32> %7351, %7362
  %7371 = select <4 x i1> %7369, <4 x i64> %7367, <4 x i64> zeroinitializer
  %7372 = select <4 x i1> %7370, <4 x i64> %7368, <4 x i64> zeroinitializer
  %7373 = add <4 x i64> %7371, %7354
  %7374 = add <4 x i64> %7372, %7355
  %7375 = or i32 %7353, 9
  %7376 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7375
  %7377 = bitcast i32* %7376 to <4 x i32>*
  %7378 = load <4 x i32>, <4 x i32>* %7377, align 4, !tbaa !3
  %7379 = getelementptr inbounds i32, i32* %7376, i32 4
  %7380 = bitcast i32* %7379 to <4 x i32>*
  %7381 = load <4 x i32>, <4 x i32>* %7380, align 4, !tbaa !3
  %7382 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %7378
  %7383 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %7381
  %7384 = bitcast <4 x i8*> %7382 to <4 x i64*>
  %7385 = bitcast <4 x i8*> %7383 to <4 x i64*>
  %7386 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7384, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7387 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7385, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7388 = icmp eq <4 x i32> %7349, %7378
  %7389 = icmp eq <4 x i32> %7351, %7381
  %7390 = select <4 x i1> %7388, <4 x i64> %7386, <4 x i64> zeroinitializer
  %7391 = select <4 x i1> %7389, <4 x i64> %7387, <4 x i64> zeroinitializer
  %7392 = add <4 x i64> %7390, %7373
  %7393 = add <4 x i64> %7391, %7374
  %7394 = or i32 %7353, 17
  %7395 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7394
  %7396 = bitcast i32* %7395 to <4 x i32>*
  %7397 = load <4 x i32>, <4 x i32>* %7396, align 4, !tbaa !3
  %7398 = getelementptr inbounds i32, i32* %7395, i32 4
  %7399 = bitcast i32* %7398 to <4 x i32>*
  %7400 = load <4 x i32>, <4 x i32>* %7399, align 4, !tbaa !3
  %7401 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %7397
  %7402 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %7400
  %7403 = bitcast <4 x i8*> %7401 to <4 x i64*>
  %7404 = bitcast <4 x i8*> %7402 to <4 x i64*>
  %7405 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7403, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7406 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7404, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7407 = icmp eq <4 x i32> %7349, %7397
  %7408 = icmp eq <4 x i32> %7351, %7400
  %7409 = select <4 x i1> %7407, <4 x i64> %7405, <4 x i64> zeroinitializer
  %7410 = select <4 x i1> %7408, <4 x i64> %7406, <4 x i64> zeroinitializer
  %7411 = add <4 x i64> %7409, %7392
  %7412 = add <4 x i64> %7410, %7393
  %7413 = icmp eq i32 %7353, 224
  br i1 %7413, label %7414, label %13094, !llvm.loop !92

7414:                                             ; preds = %7352
  %7415 = add <4 x i64> %7412, %7411
  %7416 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7415)
  %7417 = icmp eq i32 %7347, 1992
  %7418 = select i1 %7417, i64 -9058450267568037125, i64 0
  %7419 = add i64 %7418, %7416
  %7420 = icmp eq i32 %7347, 2000
  %7421 = select i1 %7420, i64 -1610274961606672227, i64 0
  %7422 = add i64 %7421, %7419
  %7423 = icmp eq i32 %7347, 2008
  %7424 = select i1 %7423, i64 -7786513464973963311, i64 0
  %7425 = add i64 %7424, %7422
  %7426 = icmp eq i32 %7347, 2016
  %7427 = select i1 %7426, i64 -2783995359638905055, i64 0
  %7428 = add i64 %7427, %7425
  %7429 = icmp eq i32 %7347, 2024
  %7430 = select i1 %7429, i64 6722895807429069379, i64 0
  %7431 = add i64 %7430, %7428
  %7432 = icmp eq i32 %7347, 2032
  %7433 = select i1 %7432, i64 -2706140860760151325, i64 0
  %7434 = add i64 %7433, %7431
  %7435 = icmp eq i32 %7347, 2040
  %7436 = select i1 %7435, i64 -1381601050739916090, i64 0
  %7437 = add i64 %7436, %7434
  %7438 = trunc i64 %6786 to i32
  %7439 = shl i32 %7438, 3
  %7440 = and i32 %7439, 2040
  %7441 = insertelement <4 x i32> poison, i32 %7440, i32 0
  %7442 = shufflevector <4 x i32> %7441, <4 x i32> poison, <4 x i32> zeroinitializer
  %7443 = insertelement <4 x i32> poison, i32 %7440, i32 0
  %7444 = shufflevector <4 x i32> %7443, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7445

7445:                                             ; preds = %13073, %7414
  %7446 = phi i32 [ 0, %7414 ], [ %13093, %13073 ]
  %7447 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7414 ], [ %13091, %13073 ]
  %7448 = phi <4 x i64> [ zeroinitializer, %7414 ], [ %13092, %13073 ]
  %7449 = or i32 %7446, 1
  %7450 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7449
  %7451 = bitcast i32* %7450 to <4 x i32>*
  %7452 = load <4 x i32>, <4 x i32>* %7451, align 4, !tbaa !3
  %7453 = getelementptr inbounds i32, i32* %7450, i32 4
  %7454 = bitcast i32* %7453 to <4 x i32>*
  %7455 = load <4 x i32>, <4 x i32>* %7454, align 4, !tbaa !3
  %7456 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %7452
  %7457 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %7455
  %7458 = bitcast <4 x i8*> %7456 to <4 x i64*>
  %7459 = bitcast <4 x i8*> %7457 to <4 x i64*>
  %7460 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7458, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7461 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7459, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7462 = icmp eq <4 x i32> %7442, %7452
  %7463 = icmp eq <4 x i32> %7444, %7455
  %7464 = select <4 x i1> %7462, <4 x i64> %7460, <4 x i64> zeroinitializer
  %7465 = select <4 x i1> %7463, <4 x i64> %7461, <4 x i64> zeroinitializer
  %7466 = add <4 x i64> %7464, %7447
  %7467 = add <4 x i64> %7465, %7448
  %7468 = or i32 %7446, 9
  %7469 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7468
  %7470 = bitcast i32* %7469 to <4 x i32>*
  %7471 = load <4 x i32>, <4 x i32>* %7470, align 4, !tbaa !3
  %7472 = getelementptr inbounds i32, i32* %7469, i32 4
  %7473 = bitcast i32* %7472 to <4 x i32>*
  %7474 = load <4 x i32>, <4 x i32>* %7473, align 4, !tbaa !3
  %7475 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %7471
  %7476 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %7474
  %7477 = bitcast <4 x i8*> %7475 to <4 x i64*>
  %7478 = bitcast <4 x i8*> %7476 to <4 x i64*>
  %7479 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7477, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7480 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7478, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7481 = icmp eq <4 x i32> %7442, %7471
  %7482 = icmp eq <4 x i32> %7444, %7474
  %7483 = select <4 x i1> %7481, <4 x i64> %7479, <4 x i64> zeroinitializer
  %7484 = select <4 x i1> %7482, <4 x i64> %7480, <4 x i64> zeroinitializer
  %7485 = add <4 x i64> %7483, %7466
  %7486 = add <4 x i64> %7484, %7467
  %7487 = or i32 %7446, 17
  %7488 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7487
  %7489 = bitcast i32* %7488 to <4 x i32>*
  %7490 = load <4 x i32>, <4 x i32>* %7489, align 4, !tbaa !3
  %7491 = getelementptr inbounds i32, i32* %7488, i32 4
  %7492 = bitcast i32* %7491 to <4 x i32>*
  %7493 = load <4 x i32>, <4 x i32>* %7492, align 4, !tbaa !3
  %7494 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %7490
  %7495 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %7493
  %7496 = bitcast <4 x i8*> %7494 to <4 x i64*>
  %7497 = bitcast <4 x i8*> %7495 to <4 x i64*>
  %7498 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7496, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7499 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7497, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7500 = icmp eq <4 x i32> %7442, %7490
  %7501 = icmp eq <4 x i32> %7444, %7493
  %7502 = select <4 x i1> %7500, <4 x i64> %7498, <4 x i64> zeroinitializer
  %7503 = select <4 x i1> %7501, <4 x i64> %7499, <4 x i64> zeroinitializer
  %7504 = add <4 x i64> %7502, %7485
  %7505 = add <4 x i64> %7503, %7486
  %7506 = icmp eq i32 %7446, 224
  br i1 %7506, label %7507, label %13073, !llvm.loop !93

7507:                                             ; preds = %7445
  %7508 = add <4 x i64> %7505, %7504
  %7509 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7508)
  %7510 = icmp eq i32 %7440, 1992
  %7511 = select i1 %7510, i64 5296930162245565346, i64 0
  %7512 = add i64 %7511, %7509
  %7513 = icmp eq i32 %7440, 2000
  %7514 = select i1 %7513, i64 -6347414485825053312, i64 0
  %7515 = add i64 %7514, %7512
  %7516 = icmp eq i32 %7440, 2008
  %7517 = select i1 %7516, i64 -1111471293076483761, i64 0
  %7518 = add i64 %7517, %7515
  %7519 = icmp eq i32 %7440, 2016
  %7520 = select i1 %7519, i64 6762709279494119711, i64 0
  %7521 = add i64 %7520, %7518
  %7522 = icmp eq i32 %7440, 2024
  %7523 = select i1 %7522, i64 5502587883897177034, i64 0
  %7524 = add i64 %7523, %7521
  %7525 = icmp eq i32 %7440, 2032
  %7526 = select i1 %7525, i64 8203933284918551466, i64 0
  %7527 = add i64 %7526, %7524
  %7528 = icmp eq i32 %7440, 2040
  %7529 = select i1 %7528, i64 -3176116833483372990, i64 0
  %7530 = add i64 %7529, %7527
  %7531 = load i64, i64* @ctx.0.2, align 8, !tbaa !7
  %7532 = xor i64 %6972, %6879
  %7533 = xor i64 %7532, %7065
  %7534 = xor i64 %7533, %7158
  %7535 = xor i64 %7534, %7251
  %7536 = xor i64 %7535, %7344
  %7537 = xor i64 %7536, %7437
  %7538 = xor i64 %7537, %7530
  %7539 = xor i64 %7538, %7531
  %7540 = lshr i64 %7539, 53
  %7541 = trunc i64 %7540 to i32
  %7542 = and i32 %7541, 2040
  %7543 = insertelement <4 x i32> poison, i32 %7542, i32 0
  %7544 = shufflevector <4 x i32> %7543, <4 x i32> poison, <4 x i32> zeroinitializer
  %7545 = insertelement <4 x i32> poison, i32 %7542, i32 0
  %7546 = shufflevector <4 x i32> %7545, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7547

7547:                                             ; preds = %13052, %7507
  %7548 = phi i32 [ 0, %7507 ], [ %13072, %13052 ]
  %7549 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7507 ], [ %13070, %13052 ]
  %7550 = phi <4 x i64> [ zeroinitializer, %7507 ], [ %13071, %13052 ]
  %7551 = or i32 %7548, 1
  %7552 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7551
  %7553 = bitcast i32* %7552 to <4 x i32>*
  %7554 = load <4 x i32>, <4 x i32>* %7553, align 4, !tbaa !3
  %7555 = getelementptr inbounds i32, i32* %7552, i32 4
  %7556 = bitcast i32* %7555 to <4 x i32>*
  %7557 = load <4 x i32>, <4 x i32>* %7556, align 4, !tbaa !3
  %7558 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %7554
  %7559 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %7557
  %7560 = bitcast <4 x i8*> %7558 to <4 x i64*>
  %7561 = bitcast <4 x i8*> %7559 to <4 x i64*>
  %7562 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7560, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7563 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7561, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7564 = icmp eq <4 x i32> %7544, %7554
  %7565 = icmp eq <4 x i32> %7546, %7557
  %7566 = select <4 x i1> %7564, <4 x i64> %7562, <4 x i64> zeroinitializer
  %7567 = select <4 x i1> %7565, <4 x i64> %7563, <4 x i64> zeroinitializer
  %7568 = add <4 x i64> %7566, %7549
  %7569 = add <4 x i64> %7567, %7550
  %7570 = or i32 %7548, 9
  %7571 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7570
  %7572 = bitcast i32* %7571 to <4 x i32>*
  %7573 = load <4 x i32>, <4 x i32>* %7572, align 4, !tbaa !3
  %7574 = getelementptr inbounds i32, i32* %7571, i32 4
  %7575 = bitcast i32* %7574 to <4 x i32>*
  %7576 = load <4 x i32>, <4 x i32>* %7575, align 4, !tbaa !3
  %7577 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %7573
  %7578 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %7576
  %7579 = bitcast <4 x i8*> %7577 to <4 x i64*>
  %7580 = bitcast <4 x i8*> %7578 to <4 x i64*>
  %7581 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7579, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7582 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7580, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7583 = icmp eq <4 x i32> %7544, %7573
  %7584 = icmp eq <4 x i32> %7546, %7576
  %7585 = select <4 x i1> %7583, <4 x i64> %7581, <4 x i64> zeroinitializer
  %7586 = select <4 x i1> %7584, <4 x i64> %7582, <4 x i64> zeroinitializer
  %7587 = add <4 x i64> %7585, %7568
  %7588 = add <4 x i64> %7586, %7569
  %7589 = or i32 %7548, 17
  %7590 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7589
  %7591 = bitcast i32* %7590 to <4 x i32>*
  %7592 = load <4 x i32>, <4 x i32>* %7591, align 4, !tbaa !3
  %7593 = getelementptr inbounds i32, i32* %7590, i32 4
  %7594 = bitcast i32* %7593 to <4 x i32>*
  %7595 = load <4 x i32>, <4 x i32>* %7594, align 4, !tbaa !3
  %7596 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %7592
  %7597 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %7595
  %7598 = bitcast <4 x i8*> %7596 to <4 x i64*>
  %7599 = bitcast <4 x i8*> %7597 to <4 x i64*>
  %7600 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7598, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7601 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7599, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7602 = icmp eq <4 x i32> %7544, %7592
  %7603 = icmp eq <4 x i32> %7546, %7595
  %7604 = select <4 x i1> %7602, <4 x i64> %7600, <4 x i64> zeroinitializer
  %7605 = select <4 x i1> %7603, <4 x i64> %7601, <4 x i64> zeroinitializer
  %7606 = add <4 x i64> %7604, %7587
  %7607 = add <4 x i64> %7605, %7588
  %7608 = icmp eq i32 %7548, 224
  br i1 %7608, label %7609, label %13052, !llvm.loop !94

7609:                                             ; preds = %7547
  %7610 = add <4 x i64> %7607, %7606
  %7611 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7610)
  %7612 = icmp eq i32 %7542, 1992
  %7613 = select i1 %7612, i64 -6702567834671021495, i64 0
  %7614 = add i64 %7613, %7611
  %7615 = icmp eq i32 %7542, 2000
  %7616 = select i1 %7615, i64 -9179115894310901337, i64 0
  %7617 = add i64 %7616, %7614
  %7618 = icmp eq i32 %7542, 2008
  %7619 = select i1 %7618, i64 5751414958667764720, i64 0
  %7620 = add i64 %7619, %7617
  %7621 = icmp eq i32 %7542, 2016
  %7622 = select i1 %7621, i64 2243210855174429021, i64 0
  %7623 = add i64 %7622, %7620
  %7624 = icmp eq i32 %7542, 2024
  %7625 = select i1 %7624, i64 -3872233913575383732, i64 0
  %7626 = add i64 %7625, %7623
  %7627 = icmp eq i32 %7542, 2032
  %7628 = select i1 %7627, i64 -6132897494654657935, i64 0
  %7629 = add i64 %7628, %7626
  %7630 = icmp eq i32 %7542, 2040
  %7631 = select i1 %7630, i64 4811556717733801171, i64 0
  %7632 = add i64 %7631, %7629
  %7633 = lshr i64 %7539, 45
  %7634 = trunc i64 %7633 to i32
  %7635 = and i32 %7634, 2040
  %7636 = insertelement <4 x i32> poison, i32 %7635, i32 0
  %7637 = shufflevector <4 x i32> %7636, <4 x i32> poison, <4 x i32> zeroinitializer
  %7638 = insertelement <4 x i32> poison, i32 %7635, i32 0
  %7639 = shufflevector <4 x i32> %7638, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7640

7640:                                             ; preds = %13031, %7609
  %7641 = phi i32 [ 0, %7609 ], [ %13051, %13031 ]
  %7642 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7609 ], [ %13049, %13031 ]
  %7643 = phi <4 x i64> [ zeroinitializer, %7609 ], [ %13050, %13031 ]
  %7644 = or i32 %7641, 1
  %7645 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7644
  %7646 = bitcast i32* %7645 to <4 x i32>*
  %7647 = load <4 x i32>, <4 x i32>* %7646, align 4, !tbaa !3
  %7648 = getelementptr inbounds i32, i32* %7645, i32 4
  %7649 = bitcast i32* %7648 to <4 x i32>*
  %7650 = load <4 x i32>, <4 x i32>* %7649, align 4, !tbaa !3
  %7651 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %7647
  %7652 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %7650
  %7653 = bitcast <4 x i8*> %7651 to <4 x i64*>
  %7654 = bitcast <4 x i8*> %7652 to <4 x i64*>
  %7655 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7653, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7656 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7654, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7657 = icmp eq <4 x i32> %7637, %7647
  %7658 = icmp eq <4 x i32> %7639, %7650
  %7659 = select <4 x i1> %7657, <4 x i64> %7655, <4 x i64> zeroinitializer
  %7660 = select <4 x i1> %7658, <4 x i64> %7656, <4 x i64> zeroinitializer
  %7661 = add <4 x i64> %7659, %7642
  %7662 = add <4 x i64> %7660, %7643
  %7663 = or i32 %7641, 9
  %7664 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7663
  %7665 = bitcast i32* %7664 to <4 x i32>*
  %7666 = load <4 x i32>, <4 x i32>* %7665, align 4, !tbaa !3
  %7667 = getelementptr inbounds i32, i32* %7664, i32 4
  %7668 = bitcast i32* %7667 to <4 x i32>*
  %7669 = load <4 x i32>, <4 x i32>* %7668, align 4, !tbaa !3
  %7670 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %7666
  %7671 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %7669
  %7672 = bitcast <4 x i8*> %7670 to <4 x i64*>
  %7673 = bitcast <4 x i8*> %7671 to <4 x i64*>
  %7674 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7672, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7675 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7673, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7676 = icmp eq <4 x i32> %7637, %7666
  %7677 = icmp eq <4 x i32> %7639, %7669
  %7678 = select <4 x i1> %7676, <4 x i64> %7674, <4 x i64> zeroinitializer
  %7679 = select <4 x i1> %7677, <4 x i64> %7675, <4 x i64> zeroinitializer
  %7680 = add <4 x i64> %7678, %7661
  %7681 = add <4 x i64> %7679, %7662
  %7682 = or i32 %7641, 17
  %7683 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7682
  %7684 = bitcast i32* %7683 to <4 x i32>*
  %7685 = load <4 x i32>, <4 x i32>* %7684, align 4, !tbaa !3
  %7686 = getelementptr inbounds i32, i32* %7683, i32 4
  %7687 = bitcast i32* %7686 to <4 x i32>*
  %7688 = load <4 x i32>, <4 x i32>* %7687, align 4, !tbaa !3
  %7689 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %7685
  %7690 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %7688
  %7691 = bitcast <4 x i8*> %7689 to <4 x i64*>
  %7692 = bitcast <4 x i8*> %7690 to <4 x i64*>
  %7693 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7691, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7694 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7692, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7695 = icmp eq <4 x i32> %7637, %7685
  %7696 = icmp eq <4 x i32> %7639, %7688
  %7697 = select <4 x i1> %7695, <4 x i64> %7693, <4 x i64> zeroinitializer
  %7698 = select <4 x i1> %7696, <4 x i64> %7694, <4 x i64> zeroinitializer
  %7699 = add <4 x i64> %7697, %7680
  %7700 = add <4 x i64> %7698, %7681
  %7701 = icmp eq i32 %7641, 224
  br i1 %7701, label %7702, label %13031, !llvm.loop !95

7702:                                             ; preds = %7640
  %7703 = add <4 x i64> %7700, %7699
  %7704 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7703)
  %7705 = icmp eq i32 %7635, 1992
  %7706 = select i1 %7705, i64 -314670665226827390, i64 0
  %7707 = add i64 %7706, %7704
  %7708 = icmp eq i32 %7635, 2000
  %7709 = select i1 %7708, i64 -7097468252516276247, i64 0
  %7710 = add i64 %7709, %7707
  %7711 = icmp eq i32 %7635, 2008
  %7712 = select i1 %7711, i64 -3364349307489619821, i64 0
  %7713 = add i64 %7712, %7710
  %7714 = icmp eq i32 %7635, 2016
  %7715 = select i1 %7714, i64 2386735715921845721, i64 0
  %7716 = add i64 %7715, %7713
  %7717 = icmp eq i32 %7635, 2024
  %7718 = select i1 %7717, i64 4884933414564023389, i64 0
  %7719 = add i64 %7718, %7716
  %7720 = icmp eq i32 %7635, 2032
  %7721 = select i1 %7720, i64 -2041757280372035110, i64 0
  %7722 = add i64 %7721, %7719
  %7723 = icmp eq i32 %7635, 2040
  %7724 = select i1 %7723, i64 -4160667357316787220, i64 0
  %7725 = add i64 %7724, %7722
  %7726 = lshr i64 %7539, 37
  %7727 = trunc i64 %7726 to i32
  %7728 = and i32 %7727, 2040
  %7729 = insertelement <4 x i32> poison, i32 %7728, i32 0
  %7730 = shufflevector <4 x i32> %7729, <4 x i32> poison, <4 x i32> zeroinitializer
  %7731 = insertelement <4 x i32> poison, i32 %7728, i32 0
  %7732 = shufflevector <4 x i32> %7731, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7733

7733:                                             ; preds = %13010, %7702
  %7734 = phi i32 [ 0, %7702 ], [ %13030, %13010 ]
  %7735 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7702 ], [ %13028, %13010 ]
  %7736 = phi <4 x i64> [ zeroinitializer, %7702 ], [ %13029, %13010 ]
  %7737 = or i32 %7734, 1
  %7738 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7737
  %7739 = bitcast i32* %7738 to <4 x i32>*
  %7740 = load <4 x i32>, <4 x i32>* %7739, align 4, !tbaa !3
  %7741 = getelementptr inbounds i32, i32* %7738, i32 4
  %7742 = bitcast i32* %7741 to <4 x i32>*
  %7743 = load <4 x i32>, <4 x i32>* %7742, align 4, !tbaa !3
  %7744 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7740
  %7745 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7743
  %7746 = bitcast <4 x i8*> %7744 to <4 x i64*>
  %7747 = bitcast <4 x i8*> %7745 to <4 x i64*>
  %7748 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7746, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7749 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7747, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7750 = icmp eq <4 x i32> %7730, %7740
  %7751 = icmp eq <4 x i32> %7732, %7743
  %7752 = select <4 x i1> %7750, <4 x i64> %7748, <4 x i64> zeroinitializer
  %7753 = select <4 x i1> %7751, <4 x i64> %7749, <4 x i64> zeroinitializer
  %7754 = add <4 x i64> %7752, %7735
  %7755 = add <4 x i64> %7753, %7736
  %7756 = or i32 %7734, 9
  %7757 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7756
  %7758 = bitcast i32* %7757 to <4 x i32>*
  %7759 = load <4 x i32>, <4 x i32>* %7758, align 4, !tbaa !3
  %7760 = getelementptr inbounds i32, i32* %7757, i32 4
  %7761 = bitcast i32* %7760 to <4 x i32>*
  %7762 = load <4 x i32>, <4 x i32>* %7761, align 4, !tbaa !3
  %7763 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7759
  %7764 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7762
  %7765 = bitcast <4 x i8*> %7763 to <4 x i64*>
  %7766 = bitcast <4 x i8*> %7764 to <4 x i64*>
  %7767 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7765, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7768 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7766, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7769 = icmp eq <4 x i32> %7730, %7759
  %7770 = icmp eq <4 x i32> %7732, %7762
  %7771 = select <4 x i1> %7769, <4 x i64> %7767, <4 x i64> zeroinitializer
  %7772 = select <4 x i1> %7770, <4 x i64> %7768, <4 x i64> zeroinitializer
  %7773 = add <4 x i64> %7771, %7754
  %7774 = add <4 x i64> %7772, %7755
  %7775 = or i32 %7734, 17
  %7776 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7775
  %7777 = bitcast i32* %7776 to <4 x i32>*
  %7778 = load <4 x i32>, <4 x i32>* %7777, align 4, !tbaa !3
  %7779 = getelementptr inbounds i32, i32* %7776, i32 4
  %7780 = bitcast i32* %7779 to <4 x i32>*
  %7781 = load <4 x i32>, <4 x i32>* %7780, align 4, !tbaa !3
  %7782 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7778
  %7783 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %7781
  %7784 = bitcast <4 x i8*> %7782 to <4 x i64*>
  %7785 = bitcast <4 x i8*> %7783 to <4 x i64*>
  %7786 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7784, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7787 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7785, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7788 = icmp eq <4 x i32> %7730, %7778
  %7789 = icmp eq <4 x i32> %7732, %7781
  %7790 = select <4 x i1> %7788, <4 x i64> %7786, <4 x i64> zeroinitializer
  %7791 = select <4 x i1> %7789, <4 x i64> %7787, <4 x i64> zeroinitializer
  %7792 = add <4 x i64> %7790, %7773
  %7793 = add <4 x i64> %7791, %7774
  %7794 = icmp eq i32 %7734, 224
  br i1 %7794, label %7795, label %13010, !llvm.loop !96

7795:                                             ; preds = %7733
  %7796 = add <4 x i64> %7793, %7792
  %7797 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7796)
  %7798 = icmp eq i32 %7728, 1992
  %7799 = select i1 %7798, i64 -5615809534224635015, i64 0
  %7800 = add i64 %7799, %7797
  %7801 = icmp eq i32 %7728, 2000
  %7802 = select i1 %7801, i64 4231836215586269044, i64 0
  %7803 = add i64 %7802, %7800
  %7804 = icmp eq i32 %7728, 2008
  %7805 = select i1 %7804, i64 2408950612238581570, i64 0
  %7806 = add i64 %7805, %7803
  %7807 = icmp eq i32 %7728, 2016
  %7808 = select i1 %7807, i64 8963041913638568696, i64 0
  %7809 = add i64 %7808, %7806
  %7810 = icmp eq i32 %7728, 2024
  %7811 = select i1 %7810, i64 1136536871657834014, i64 0
  %7812 = add i64 %7811, %7809
  %7813 = icmp eq i32 %7728, 2032
  %7814 = select i1 %7813, i64 -7910384849877083335, i64 0
  %7815 = add i64 %7814, %7812
  %7816 = icmp eq i32 %7728, 2040
  %7817 = select i1 %7816, i64 1537771219914559786, i64 0
  %7818 = add i64 %7817, %7815
  %7819 = lshr i64 %7539, 29
  %7820 = trunc i64 %7819 to i32
  %7821 = and i32 %7820, 2040
  %7822 = insertelement <4 x i32> poison, i32 %7821, i32 0
  %7823 = shufflevector <4 x i32> %7822, <4 x i32> poison, <4 x i32> zeroinitializer
  %7824 = insertelement <4 x i32> poison, i32 %7821, i32 0
  %7825 = shufflevector <4 x i32> %7824, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7826

7826:                                             ; preds = %12989, %7795
  %7827 = phi i32 [ 0, %7795 ], [ %13009, %12989 ]
  %7828 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7795 ], [ %13007, %12989 ]
  %7829 = phi <4 x i64> [ zeroinitializer, %7795 ], [ %13008, %12989 ]
  %7830 = or i32 %7827, 1
  %7831 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7830
  %7832 = bitcast i32* %7831 to <4 x i32>*
  %7833 = load <4 x i32>, <4 x i32>* %7832, align 4, !tbaa !3
  %7834 = getelementptr inbounds i32, i32* %7831, i32 4
  %7835 = bitcast i32* %7834 to <4 x i32>*
  %7836 = load <4 x i32>, <4 x i32>* %7835, align 4, !tbaa !3
  %7837 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7833
  %7838 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7836
  %7839 = bitcast <4 x i8*> %7837 to <4 x i64*>
  %7840 = bitcast <4 x i8*> %7838 to <4 x i64*>
  %7841 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7839, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7842 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7840, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7843 = icmp eq <4 x i32> %7823, %7833
  %7844 = icmp eq <4 x i32> %7825, %7836
  %7845 = select <4 x i1> %7843, <4 x i64> %7841, <4 x i64> zeroinitializer
  %7846 = select <4 x i1> %7844, <4 x i64> %7842, <4 x i64> zeroinitializer
  %7847 = add <4 x i64> %7845, %7828
  %7848 = add <4 x i64> %7846, %7829
  %7849 = or i32 %7827, 9
  %7850 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7849
  %7851 = bitcast i32* %7850 to <4 x i32>*
  %7852 = load <4 x i32>, <4 x i32>* %7851, align 4, !tbaa !3
  %7853 = getelementptr inbounds i32, i32* %7850, i32 4
  %7854 = bitcast i32* %7853 to <4 x i32>*
  %7855 = load <4 x i32>, <4 x i32>* %7854, align 4, !tbaa !3
  %7856 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7852
  %7857 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7855
  %7858 = bitcast <4 x i8*> %7856 to <4 x i64*>
  %7859 = bitcast <4 x i8*> %7857 to <4 x i64*>
  %7860 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7858, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7861 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7859, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7862 = icmp eq <4 x i32> %7823, %7852
  %7863 = icmp eq <4 x i32> %7825, %7855
  %7864 = select <4 x i1> %7862, <4 x i64> %7860, <4 x i64> zeroinitializer
  %7865 = select <4 x i1> %7863, <4 x i64> %7861, <4 x i64> zeroinitializer
  %7866 = add <4 x i64> %7864, %7847
  %7867 = add <4 x i64> %7865, %7848
  %7868 = or i32 %7827, 17
  %7869 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7868
  %7870 = bitcast i32* %7869 to <4 x i32>*
  %7871 = load <4 x i32>, <4 x i32>* %7870, align 4, !tbaa !3
  %7872 = getelementptr inbounds i32, i32* %7869, i32 4
  %7873 = bitcast i32* %7872 to <4 x i32>*
  %7874 = load <4 x i32>, <4 x i32>* %7873, align 4, !tbaa !3
  %7875 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7871
  %7876 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %7874
  %7877 = bitcast <4 x i8*> %7875 to <4 x i64*>
  %7878 = bitcast <4 x i8*> %7876 to <4 x i64*>
  %7879 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7877, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7880 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7878, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7881 = icmp eq <4 x i32> %7823, %7871
  %7882 = icmp eq <4 x i32> %7825, %7874
  %7883 = select <4 x i1> %7881, <4 x i64> %7879, <4 x i64> zeroinitializer
  %7884 = select <4 x i1> %7882, <4 x i64> %7880, <4 x i64> zeroinitializer
  %7885 = add <4 x i64> %7883, %7866
  %7886 = add <4 x i64> %7884, %7867
  %7887 = icmp eq i32 %7827, 224
  br i1 %7887, label %7888, label %12989, !llvm.loop !97

7888:                                             ; preds = %7826
  %7889 = add <4 x i64> %7886, %7885
  %7890 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7889)
  %7891 = icmp eq i32 %7821, 1992
  %7892 = select i1 %7891, i64 1203300724897905131, i64 0
  %7893 = add i64 %7892, %7890
  %7894 = icmp eq i32 %7821, 2000
  %7895 = select i1 %7894, i64 -5027532858107268057, i64 0
  %7896 = add i64 %7895, %7893
  %7897 = icmp eq i32 %7821, 2008
  %7898 = select i1 %7897, i64 7935854159672328895, i64 0
  %7899 = add i64 %7898, %7896
  %7900 = icmp eq i32 %7821, 2016
  %7901 = select i1 %7900, i64 7168641125469255746, i64 0
  %7902 = add i64 %7901, %7899
  %7903 = icmp eq i32 %7821, 2024
  %7904 = select i1 %7903, i64 -4247101387443462522, i64 0
  %7905 = add i64 %7904, %7902
  %7906 = icmp eq i32 %7821, 2032
  %7907 = select i1 %7906, i64 4076570933917792731, i64 0
  %7908 = add i64 %7907, %7905
  %7909 = icmp eq i32 %7821, 2040
  %7910 = select i1 %7909, i64 6275139646136265361, i64 0
  %7911 = add i64 %7910, %7908
  %7912 = lshr i64 %7539, 21
  %7913 = trunc i64 %7912 to i32
  %7914 = and i32 %7913, 2040
  %7915 = insertelement <4 x i32> poison, i32 %7914, i32 0
  %7916 = shufflevector <4 x i32> %7915, <4 x i32> poison, <4 x i32> zeroinitializer
  %7917 = insertelement <4 x i32> poison, i32 %7914, i32 0
  %7918 = shufflevector <4 x i32> %7917, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7919

7919:                                             ; preds = %12968, %7888
  %7920 = phi i32 [ 0, %7888 ], [ %12988, %12968 ]
  %7921 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7888 ], [ %12986, %12968 ]
  %7922 = phi <4 x i64> [ zeroinitializer, %7888 ], [ %12987, %12968 ]
  %7923 = or i32 %7920, 1
  %7924 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7923
  %7925 = bitcast i32* %7924 to <4 x i32>*
  %7926 = load <4 x i32>, <4 x i32>* %7925, align 4, !tbaa !3
  %7927 = getelementptr inbounds i32, i32* %7924, i32 4
  %7928 = bitcast i32* %7927 to <4 x i32>*
  %7929 = load <4 x i32>, <4 x i32>* %7928, align 4, !tbaa !3
  %7930 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7926
  %7931 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7929
  %7932 = bitcast <4 x i8*> %7930 to <4 x i64*>
  %7933 = bitcast <4 x i8*> %7931 to <4 x i64*>
  %7934 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7932, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7935 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7933, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7936 = icmp eq <4 x i32> %7916, %7926
  %7937 = icmp eq <4 x i32> %7918, %7929
  %7938 = select <4 x i1> %7936, <4 x i64> %7934, <4 x i64> zeroinitializer
  %7939 = select <4 x i1> %7937, <4 x i64> %7935, <4 x i64> zeroinitializer
  %7940 = add <4 x i64> %7938, %7921
  %7941 = add <4 x i64> %7939, %7922
  %7942 = or i32 %7920, 9
  %7943 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7942
  %7944 = bitcast i32* %7943 to <4 x i32>*
  %7945 = load <4 x i32>, <4 x i32>* %7944, align 4, !tbaa !3
  %7946 = getelementptr inbounds i32, i32* %7943, i32 4
  %7947 = bitcast i32* %7946 to <4 x i32>*
  %7948 = load <4 x i32>, <4 x i32>* %7947, align 4, !tbaa !3
  %7949 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7945
  %7950 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7948
  %7951 = bitcast <4 x i8*> %7949 to <4 x i64*>
  %7952 = bitcast <4 x i8*> %7950 to <4 x i64*>
  %7953 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7951, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7954 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7952, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7955 = icmp eq <4 x i32> %7916, %7945
  %7956 = icmp eq <4 x i32> %7918, %7948
  %7957 = select <4 x i1> %7955, <4 x i64> %7953, <4 x i64> zeroinitializer
  %7958 = select <4 x i1> %7956, <4 x i64> %7954, <4 x i64> zeroinitializer
  %7959 = add <4 x i64> %7957, %7940
  %7960 = add <4 x i64> %7958, %7941
  %7961 = or i32 %7920, 17
  %7962 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %7961
  %7963 = bitcast i32* %7962 to <4 x i32>*
  %7964 = load <4 x i32>, <4 x i32>* %7963, align 4, !tbaa !3
  %7965 = getelementptr inbounds i32, i32* %7962, i32 4
  %7966 = bitcast i32* %7965 to <4 x i32>*
  %7967 = load <4 x i32>, <4 x i32>* %7966, align 4, !tbaa !3
  %7968 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7964
  %7969 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %7967
  %7970 = bitcast <4 x i8*> %7968 to <4 x i64*>
  %7971 = bitcast <4 x i8*> %7969 to <4 x i64*>
  %7972 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7970, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7973 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %7971, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %7974 = icmp eq <4 x i32> %7916, %7964
  %7975 = icmp eq <4 x i32> %7918, %7967
  %7976 = select <4 x i1> %7974, <4 x i64> %7972, <4 x i64> zeroinitializer
  %7977 = select <4 x i1> %7975, <4 x i64> %7973, <4 x i64> zeroinitializer
  %7978 = add <4 x i64> %7976, %7959
  %7979 = add <4 x i64> %7977, %7960
  %7980 = icmp eq i32 %7920, 224
  br i1 %7980, label %7981, label %12968, !llvm.loop !98

7981:                                             ; preds = %7919
  %7982 = add <4 x i64> %7979, %7978
  %7983 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %7982)
  %7984 = icmp eq i32 %7914, 1992
  %7985 = select i1 %7984, i64 -1479007749835869680, i64 0
  %7986 = add i64 %7985, %7983
  %7987 = icmp eq i32 %7914, 2000
  %7988 = select i1 %7987, i64 2843154170404223674, i64 0
  %7989 = add i64 %7988, %7986
  %7990 = icmp eq i32 %7914, 2008
  %7991 = select i1 %7990, i64 -4665003603661872786, i64 0
  %7992 = add i64 %7991, %7989
  %7993 = icmp eq i32 %7914, 2016
  %7994 = select i1 %7993, i64 4825845994704960611, i64 0
  %7995 = add i64 %7994, %7992
  %7996 = icmp eq i32 %7914, 2024
  %7997 = select i1 %7996, i64 -8782479638933598267, i64 0
  %7998 = add i64 %7997, %7995
  %7999 = icmp eq i32 %7914, 2032
  %8000 = select i1 %7999, i64 -2649846723997625800, i64 0
  %8001 = add i64 %8000, %7998
  %8002 = icmp eq i32 %7914, 2040
  %8003 = select i1 %8002, i64 -7986310597085620905, i64 0
  %8004 = add i64 %8003, %8001
  %8005 = lshr i64 %7539, 13
  %8006 = trunc i64 %8005 to i32
  %8007 = and i32 %8006, 2040
  %8008 = insertelement <4 x i32> poison, i32 %8007, i32 0
  %8009 = shufflevector <4 x i32> %8008, <4 x i32> poison, <4 x i32> zeroinitializer
  %8010 = insertelement <4 x i32> poison, i32 %8007, i32 0
  %8011 = shufflevector <4 x i32> %8010, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8012

8012:                                             ; preds = %12947, %7981
  %8013 = phi i32 [ 0, %7981 ], [ %12967, %12947 ]
  %8014 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %7981 ], [ %12965, %12947 ]
  %8015 = phi <4 x i64> [ zeroinitializer, %7981 ], [ %12966, %12947 ]
  %8016 = or i32 %8013, 1
  %8017 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8016
  %8018 = bitcast i32* %8017 to <4 x i32>*
  %8019 = load <4 x i32>, <4 x i32>* %8018, align 4, !tbaa !3
  %8020 = getelementptr inbounds i32, i32* %8017, i32 4
  %8021 = bitcast i32* %8020 to <4 x i32>*
  %8022 = load <4 x i32>, <4 x i32>* %8021, align 4, !tbaa !3
  %8023 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8019
  %8024 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8022
  %8025 = bitcast <4 x i8*> %8023 to <4 x i64*>
  %8026 = bitcast <4 x i8*> %8024 to <4 x i64*>
  %8027 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8025, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8028 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8026, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8029 = icmp eq <4 x i32> %8009, %8019
  %8030 = icmp eq <4 x i32> %8011, %8022
  %8031 = select <4 x i1> %8029, <4 x i64> %8027, <4 x i64> zeroinitializer
  %8032 = select <4 x i1> %8030, <4 x i64> %8028, <4 x i64> zeroinitializer
  %8033 = add <4 x i64> %8031, %8014
  %8034 = add <4 x i64> %8032, %8015
  %8035 = or i32 %8013, 9
  %8036 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8035
  %8037 = bitcast i32* %8036 to <4 x i32>*
  %8038 = load <4 x i32>, <4 x i32>* %8037, align 4, !tbaa !3
  %8039 = getelementptr inbounds i32, i32* %8036, i32 4
  %8040 = bitcast i32* %8039 to <4 x i32>*
  %8041 = load <4 x i32>, <4 x i32>* %8040, align 4, !tbaa !3
  %8042 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8038
  %8043 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8041
  %8044 = bitcast <4 x i8*> %8042 to <4 x i64*>
  %8045 = bitcast <4 x i8*> %8043 to <4 x i64*>
  %8046 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8044, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8047 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8045, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8048 = icmp eq <4 x i32> %8009, %8038
  %8049 = icmp eq <4 x i32> %8011, %8041
  %8050 = select <4 x i1> %8048, <4 x i64> %8046, <4 x i64> zeroinitializer
  %8051 = select <4 x i1> %8049, <4 x i64> %8047, <4 x i64> zeroinitializer
  %8052 = add <4 x i64> %8050, %8033
  %8053 = add <4 x i64> %8051, %8034
  %8054 = or i32 %8013, 17
  %8055 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8054
  %8056 = bitcast i32* %8055 to <4 x i32>*
  %8057 = load <4 x i32>, <4 x i32>* %8056, align 4, !tbaa !3
  %8058 = getelementptr inbounds i32, i32* %8055, i32 4
  %8059 = bitcast i32* %8058 to <4 x i32>*
  %8060 = load <4 x i32>, <4 x i32>* %8059, align 4, !tbaa !3
  %8061 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8057
  %8062 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8060
  %8063 = bitcast <4 x i8*> %8061 to <4 x i64*>
  %8064 = bitcast <4 x i8*> %8062 to <4 x i64*>
  %8065 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8063, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8066 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8064, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8067 = icmp eq <4 x i32> %8009, %8057
  %8068 = icmp eq <4 x i32> %8011, %8060
  %8069 = select <4 x i1> %8067, <4 x i64> %8065, <4 x i64> zeroinitializer
  %8070 = select <4 x i1> %8068, <4 x i64> %8066, <4 x i64> zeroinitializer
  %8071 = add <4 x i64> %8069, %8052
  %8072 = add <4 x i64> %8070, %8053
  %8073 = icmp eq i32 %8013, 224
  br i1 %8073, label %8074, label %12947, !llvm.loop !99

8074:                                             ; preds = %8012
  %8075 = add <4 x i64> %8072, %8071
  %8076 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8075)
  %8077 = icmp eq i32 %8007, 1992
  %8078 = select i1 %8077, i64 8785196325032562866, i64 0
  %8079 = add i64 %8078, %8076
  %8080 = icmp eq i32 %8007, 2000
  %8081 = select i1 %8080, i64 8369843054303033914, i64 0
  %8082 = add i64 %8081, %8079
  %8083 = icmp eq i32 %8007, 2008
  %8084 = select i1 %8083, i64 4809827444717481505, i64 0
  %8085 = add i64 %8084, %8082
  %8086 = icmp eq i32 %8007, 2016
  %8087 = select i1 %8086, i64 -557780216695528580, i64 0
  %8088 = add i64 %8087, %8085
  %8089 = icmp eq i32 %8007, 2024
  %8090 = select i1 %8089, i64 2199529431470097679, i64 0
  %8091 = add i64 %8090, %8088
  %8092 = icmp eq i32 %8007, 2032
  %8093 = select i1 %8092, i64 4169051064997918866, i64 0
  %8094 = add i64 %8093, %8091
  %8095 = icmp eq i32 %8007, 2040
  %8096 = select i1 %8095, i64 3067465835107997461, i64 0
  %8097 = add i64 %8096, %8094
  %8098 = lshr i64 %7539, 5
  %8099 = trunc i64 %8098 to i32
  %8100 = and i32 %8099, 2040
  %8101 = insertelement <4 x i32> poison, i32 %8100, i32 0
  %8102 = shufflevector <4 x i32> %8101, <4 x i32> poison, <4 x i32> zeroinitializer
  %8103 = insertelement <4 x i32> poison, i32 %8100, i32 0
  %8104 = shufflevector <4 x i32> %8103, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8105

8105:                                             ; preds = %12926, %8074
  %8106 = phi i32 [ 0, %8074 ], [ %12946, %12926 ]
  %8107 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8074 ], [ %12944, %12926 ]
  %8108 = phi <4 x i64> [ zeroinitializer, %8074 ], [ %12945, %12926 ]
  %8109 = or i32 %8106, 1
  %8110 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8109
  %8111 = bitcast i32* %8110 to <4 x i32>*
  %8112 = load <4 x i32>, <4 x i32>* %8111, align 4, !tbaa !3
  %8113 = getelementptr inbounds i32, i32* %8110, i32 4
  %8114 = bitcast i32* %8113 to <4 x i32>*
  %8115 = load <4 x i32>, <4 x i32>* %8114, align 4, !tbaa !3
  %8116 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8112
  %8117 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8115
  %8118 = bitcast <4 x i8*> %8116 to <4 x i64*>
  %8119 = bitcast <4 x i8*> %8117 to <4 x i64*>
  %8120 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8118, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8121 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8119, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8122 = icmp eq <4 x i32> %8102, %8112
  %8123 = icmp eq <4 x i32> %8104, %8115
  %8124 = select <4 x i1> %8122, <4 x i64> %8120, <4 x i64> zeroinitializer
  %8125 = select <4 x i1> %8123, <4 x i64> %8121, <4 x i64> zeroinitializer
  %8126 = add <4 x i64> %8124, %8107
  %8127 = add <4 x i64> %8125, %8108
  %8128 = or i32 %8106, 9
  %8129 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8128
  %8130 = bitcast i32* %8129 to <4 x i32>*
  %8131 = load <4 x i32>, <4 x i32>* %8130, align 4, !tbaa !3
  %8132 = getelementptr inbounds i32, i32* %8129, i32 4
  %8133 = bitcast i32* %8132 to <4 x i32>*
  %8134 = load <4 x i32>, <4 x i32>* %8133, align 4, !tbaa !3
  %8135 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8131
  %8136 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8134
  %8137 = bitcast <4 x i8*> %8135 to <4 x i64*>
  %8138 = bitcast <4 x i8*> %8136 to <4 x i64*>
  %8139 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8137, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8140 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8138, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8141 = icmp eq <4 x i32> %8102, %8131
  %8142 = icmp eq <4 x i32> %8104, %8134
  %8143 = select <4 x i1> %8141, <4 x i64> %8139, <4 x i64> zeroinitializer
  %8144 = select <4 x i1> %8142, <4 x i64> %8140, <4 x i64> zeroinitializer
  %8145 = add <4 x i64> %8143, %8126
  %8146 = add <4 x i64> %8144, %8127
  %8147 = or i32 %8106, 17
  %8148 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8147
  %8149 = bitcast i32* %8148 to <4 x i32>*
  %8150 = load <4 x i32>, <4 x i32>* %8149, align 4, !tbaa !3
  %8151 = getelementptr inbounds i32, i32* %8148, i32 4
  %8152 = bitcast i32* %8151 to <4 x i32>*
  %8153 = load <4 x i32>, <4 x i32>* %8152, align 4, !tbaa !3
  %8154 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8150
  %8155 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8153
  %8156 = bitcast <4 x i8*> %8154 to <4 x i64*>
  %8157 = bitcast <4 x i8*> %8155 to <4 x i64*>
  %8158 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8156, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8159 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8157, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8160 = icmp eq <4 x i32> %8102, %8150
  %8161 = icmp eq <4 x i32> %8104, %8153
  %8162 = select <4 x i1> %8160, <4 x i64> %8158, <4 x i64> zeroinitializer
  %8163 = select <4 x i1> %8161, <4 x i64> %8159, <4 x i64> zeroinitializer
  %8164 = add <4 x i64> %8162, %8145
  %8165 = add <4 x i64> %8163, %8146
  %8166 = icmp eq i32 %8106, 224
  br i1 %8166, label %8167, label %12926, !llvm.loop !100

8167:                                             ; preds = %8105
  %8168 = add <4 x i64> %8165, %8164
  %8169 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8168)
  %8170 = icmp eq i32 %8100, 1992
  %8171 = select i1 %8170, i64 -9058450267568037125, i64 0
  %8172 = add i64 %8171, %8169
  %8173 = icmp eq i32 %8100, 2000
  %8174 = select i1 %8173, i64 -1610274961606672227, i64 0
  %8175 = add i64 %8174, %8172
  %8176 = icmp eq i32 %8100, 2008
  %8177 = select i1 %8176, i64 -7786513464973963311, i64 0
  %8178 = add i64 %8177, %8175
  %8179 = icmp eq i32 %8100, 2016
  %8180 = select i1 %8179, i64 -2783995359638905055, i64 0
  %8181 = add i64 %8180, %8178
  %8182 = icmp eq i32 %8100, 2024
  %8183 = select i1 %8182, i64 6722895807429069379, i64 0
  %8184 = add i64 %8183, %8181
  %8185 = icmp eq i32 %8100, 2032
  %8186 = select i1 %8185, i64 -2706140860760151325, i64 0
  %8187 = add i64 %8186, %8184
  %8188 = icmp eq i32 %8100, 2040
  %8189 = select i1 %8188, i64 -1381601050739916090, i64 0
  %8190 = add i64 %8189, %8187
  %8191 = trunc i64 %7539 to i32
  %8192 = shl i32 %8191, 3
  %8193 = and i32 %8192, 2040
  %8194 = insertelement <4 x i32> poison, i32 %8193, i32 0
  %8195 = shufflevector <4 x i32> %8194, <4 x i32> poison, <4 x i32> zeroinitializer
  %8196 = insertelement <4 x i32> poison, i32 %8193, i32 0
  %8197 = shufflevector <4 x i32> %8196, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8198

8198:                                             ; preds = %12905, %8167
  %8199 = phi i32 [ 0, %8167 ], [ %12925, %12905 ]
  %8200 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8167 ], [ %12923, %12905 ]
  %8201 = phi <4 x i64> [ zeroinitializer, %8167 ], [ %12924, %12905 ]
  %8202 = or i32 %8199, 1
  %8203 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8202
  %8204 = bitcast i32* %8203 to <4 x i32>*
  %8205 = load <4 x i32>, <4 x i32>* %8204, align 4, !tbaa !3
  %8206 = getelementptr inbounds i32, i32* %8203, i32 4
  %8207 = bitcast i32* %8206 to <4 x i32>*
  %8208 = load <4 x i32>, <4 x i32>* %8207, align 4, !tbaa !3
  %8209 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8205
  %8210 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8208
  %8211 = bitcast <4 x i8*> %8209 to <4 x i64*>
  %8212 = bitcast <4 x i8*> %8210 to <4 x i64*>
  %8213 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8211, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8214 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8212, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8215 = icmp eq <4 x i32> %8195, %8205
  %8216 = icmp eq <4 x i32> %8197, %8208
  %8217 = select <4 x i1> %8215, <4 x i64> %8213, <4 x i64> zeroinitializer
  %8218 = select <4 x i1> %8216, <4 x i64> %8214, <4 x i64> zeroinitializer
  %8219 = add <4 x i64> %8217, %8200
  %8220 = add <4 x i64> %8218, %8201
  %8221 = or i32 %8199, 9
  %8222 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8221
  %8223 = bitcast i32* %8222 to <4 x i32>*
  %8224 = load <4 x i32>, <4 x i32>* %8223, align 4, !tbaa !3
  %8225 = getelementptr inbounds i32, i32* %8222, i32 4
  %8226 = bitcast i32* %8225 to <4 x i32>*
  %8227 = load <4 x i32>, <4 x i32>* %8226, align 4, !tbaa !3
  %8228 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8224
  %8229 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8227
  %8230 = bitcast <4 x i8*> %8228 to <4 x i64*>
  %8231 = bitcast <4 x i8*> %8229 to <4 x i64*>
  %8232 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8230, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8233 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8231, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8234 = icmp eq <4 x i32> %8195, %8224
  %8235 = icmp eq <4 x i32> %8197, %8227
  %8236 = select <4 x i1> %8234, <4 x i64> %8232, <4 x i64> zeroinitializer
  %8237 = select <4 x i1> %8235, <4 x i64> %8233, <4 x i64> zeroinitializer
  %8238 = add <4 x i64> %8236, %8219
  %8239 = add <4 x i64> %8237, %8220
  %8240 = or i32 %8199, 17
  %8241 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8240
  %8242 = bitcast i32* %8241 to <4 x i32>*
  %8243 = load <4 x i32>, <4 x i32>* %8242, align 4, !tbaa !3
  %8244 = getelementptr inbounds i32, i32* %8241, i32 4
  %8245 = bitcast i32* %8244 to <4 x i32>*
  %8246 = load <4 x i32>, <4 x i32>* %8245, align 4, !tbaa !3
  %8247 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8243
  %8248 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8246
  %8249 = bitcast <4 x i8*> %8247 to <4 x i64*>
  %8250 = bitcast <4 x i8*> %8248 to <4 x i64*>
  %8251 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8249, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8252 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8250, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8253 = icmp eq <4 x i32> %8195, %8243
  %8254 = icmp eq <4 x i32> %8197, %8246
  %8255 = select <4 x i1> %8253, <4 x i64> %8251, <4 x i64> zeroinitializer
  %8256 = select <4 x i1> %8254, <4 x i64> %8252, <4 x i64> zeroinitializer
  %8257 = add <4 x i64> %8255, %8238
  %8258 = add <4 x i64> %8256, %8239
  %8259 = icmp eq i32 %8199, 224
  br i1 %8259, label %8260, label %12905, !llvm.loop !101

8260:                                             ; preds = %8198
  %8261 = add <4 x i64> %8258, %8257
  %8262 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8261)
  %8263 = icmp eq i32 %8193, 1992
  %8264 = select i1 %8263, i64 5296930162245565346, i64 0
  %8265 = add i64 %8264, %8262
  %8266 = icmp eq i32 %8193, 2000
  %8267 = select i1 %8266, i64 -6347414485825053312, i64 0
  %8268 = add i64 %8267, %8265
  %8269 = icmp eq i32 %8193, 2008
  %8270 = select i1 %8269, i64 -1111471293076483761, i64 0
  %8271 = add i64 %8270, %8268
  %8272 = icmp eq i32 %8193, 2016
  %8273 = select i1 %8272, i64 6762709279494119711, i64 0
  %8274 = add i64 %8273, %8271
  %8275 = icmp eq i32 %8193, 2024
  %8276 = select i1 %8275, i64 5502587883897177034, i64 0
  %8277 = add i64 %8276, %8274
  %8278 = icmp eq i32 %8193, 2032
  %8279 = select i1 %8278, i64 8203933284918551466, i64 0
  %8280 = add i64 %8279, %8277
  %8281 = icmp eq i32 %8193, 2040
  %8282 = select i1 %8281, i64 -3176116833483372990, i64 0
  %8283 = add i64 %8282, %8280
  %8284 = load i64, i64* @ctx.0.3, align 8, !tbaa !7
  %8285 = xor i64 %7725, %7632
  %8286 = xor i64 %8285, %7818
  %8287 = xor i64 %8286, %7911
  %8288 = xor i64 %8287, %8004
  %8289 = xor i64 %8288, %8097
  %8290 = xor i64 %8289, %8190
  %8291 = xor i64 %8290, %8283
  %8292 = xor i64 %8291, %8284
  %8293 = lshr i64 %8292, 53
  %8294 = trunc i64 %8293 to i32
  %8295 = and i32 %8294, 2040
  %8296 = insertelement <4 x i32> poison, i32 %8295, i32 0
  %8297 = shufflevector <4 x i32> %8296, <4 x i32> poison, <4 x i32> zeroinitializer
  %8298 = insertelement <4 x i32> poison, i32 %8295, i32 0
  %8299 = shufflevector <4 x i32> %8298, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8300

8300:                                             ; preds = %12884, %8260
  %8301 = phi i32 [ 0, %8260 ], [ %12904, %12884 ]
  %8302 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8260 ], [ %12902, %12884 ]
  %8303 = phi <4 x i64> [ zeroinitializer, %8260 ], [ %12903, %12884 ]
  %8304 = or i32 %8301, 1
  %8305 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8304
  %8306 = bitcast i32* %8305 to <4 x i32>*
  %8307 = load <4 x i32>, <4 x i32>* %8306, align 4, !tbaa !3
  %8308 = getelementptr inbounds i32, i32* %8305, i32 4
  %8309 = bitcast i32* %8308 to <4 x i32>*
  %8310 = load <4 x i32>, <4 x i32>* %8309, align 4, !tbaa !3
  %8311 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %8307
  %8312 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %8310
  %8313 = bitcast <4 x i8*> %8311 to <4 x i64*>
  %8314 = bitcast <4 x i8*> %8312 to <4 x i64*>
  %8315 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8313, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8316 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8314, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8317 = icmp eq <4 x i32> %8297, %8307
  %8318 = icmp eq <4 x i32> %8299, %8310
  %8319 = select <4 x i1> %8317, <4 x i64> %8315, <4 x i64> zeroinitializer
  %8320 = select <4 x i1> %8318, <4 x i64> %8316, <4 x i64> zeroinitializer
  %8321 = add <4 x i64> %8319, %8302
  %8322 = add <4 x i64> %8320, %8303
  %8323 = or i32 %8301, 9
  %8324 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8323
  %8325 = bitcast i32* %8324 to <4 x i32>*
  %8326 = load <4 x i32>, <4 x i32>* %8325, align 4, !tbaa !3
  %8327 = getelementptr inbounds i32, i32* %8324, i32 4
  %8328 = bitcast i32* %8327 to <4 x i32>*
  %8329 = load <4 x i32>, <4 x i32>* %8328, align 4, !tbaa !3
  %8330 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %8326
  %8331 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %8329
  %8332 = bitcast <4 x i8*> %8330 to <4 x i64*>
  %8333 = bitcast <4 x i8*> %8331 to <4 x i64*>
  %8334 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8332, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8335 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8333, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8336 = icmp eq <4 x i32> %8297, %8326
  %8337 = icmp eq <4 x i32> %8299, %8329
  %8338 = select <4 x i1> %8336, <4 x i64> %8334, <4 x i64> zeroinitializer
  %8339 = select <4 x i1> %8337, <4 x i64> %8335, <4 x i64> zeroinitializer
  %8340 = add <4 x i64> %8338, %8321
  %8341 = add <4 x i64> %8339, %8322
  %8342 = or i32 %8301, 17
  %8343 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8342
  %8344 = bitcast i32* %8343 to <4 x i32>*
  %8345 = load <4 x i32>, <4 x i32>* %8344, align 4, !tbaa !3
  %8346 = getelementptr inbounds i32, i32* %8343, i32 4
  %8347 = bitcast i32* %8346 to <4 x i32>*
  %8348 = load <4 x i32>, <4 x i32>* %8347, align 4, !tbaa !3
  %8349 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %8345
  %8350 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %8348
  %8351 = bitcast <4 x i8*> %8349 to <4 x i64*>
  %8352 = bitcast <4 x i8*> %8350 to <4 x i64*>
  %8353 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8351, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8354 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8352, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8355 = icmp eq <4 x i32> %8297, %8345
  %8356 = icmp eq <4 x i32> %8299, %8348
  %8357 = select <4 x i1> %8355, <4 x i64> %8353, <4 x i64> zeroinitializer
  %8358 = select <4 x i1> %8356, <4 x i64> %8354, <4 x i64> zeroinitializer
  %8359 = add <4 x i64> %8357, %8340
  %8360 = add <4 x i64> %8358, %8341
  %8361 = icmp eq i32 %8301, 224
  br i1 %8361, label %8362, label %12884, !llvm.loop !102

8362:                                             ; preds = %8300
  %8363 = add <4 x i64> %8360, %8359
  %8364 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8363)
  %8365 = icmp eq i32 %8295, 1992
  %8366 = select i1 %8365, i64 -6702567834671021495, i64 0
  %8367 = add i64 %8366, %8364
  %8368 = icmp eq i32 %8295, 2000
  %8369 = select i1 %8368, i64 -9179115894310901337, i64 0
  %8370 = add i64 %8369, %8367
  %8371 = icmp eq i32 %8295, 2008
  %8372 = select i1 %8371, i64 5751414958667764720, i64 0
  %8373 = add i64 %8372, %8370
  %8374 = icmp eq i32 %8295, 2016
  %8375 = select i1 %8374, i64 2243210855174429021, i64 0
  %8376 = add i64 %8375, %8373
  %8377 = icmp eq i32 %8295, 2024
  %8378 = select i1 %8377, i64 -3872233913575383732, i64 0
  %8379 = add i64 %8378, %8376
  %8380 = icmp eq i32 %8295, 2032
  %8381 = select i1 %8380, i64 -6132897494654657935, i64 0
  %8382 = add i64 %8381, %8379
  %8383 = icmp eq i32 %8295, 2040
  %8384 = select i1 %8383, i64 4811556717733801171, i64 0
  %8385 = add i64 %8384, %8382
  %8386 = lshr i64 %8292, 45
  %8387 = trunc i64 %8386 to i32
  %8388 = and i32 %8387, 2040
  %8389 = insertelement <4 x i32> poison, i32 %8388, i32 0
  %8390 = shufflevector <4 x i32> %8389, <4 x i32> poison, <4 x i32> zeroinitializer
  %8391 = insertelement <4 x i32> poison, i32 %8388, i32 0
  %8392 = shufflevector <4 x i32> %8391, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8393

8393:                                             ; preds = %12863, %8362
  %8394 = phi i32 [ 0, %8362 ], [ %12883, %12863 ]
  %8395 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8362 ], [ %12881, %12863 ]
  %8396 = phi <4 x i64> [ zeroinitializer, %8362 ], [ %12882, %12863 ]
  %8397 = or i32 %8394, 1
  %8398 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8397
  %8399 = bitcast i32* %8398 to <4 x i32>*
  %8400 = load <4 x i32>, <4 x i32>* %8399, align 4, !tbaa !3
  %8401 = getelementptr inbounds i32, i32* %8398, i32 4
  %8402 = bitcast i32* %8401 to <4 x i32>*
  %8403 = load <4 x i32>, <4 x i32>* %8402, align 4, !tbaa !3
  %8404 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %8400
  %8405 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %8403
  %8406 = bitcast <4 x i8*> %8404 to <4 x i64*>
  %8407 = bitcast <4 x i8*> %8405 to <4 x i64*>
  %8408 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8406, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8409 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8407, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8410 = icmp eq <4 x i32> %8390, %8400
  %8411 = icmp eq <4 x i32> %8392, %8403
  %8412 = select <4 x i1> %8410, <4 x i64> %8408, <4 x i64> zeroinitializer
  %8413 = select <4 x i1> %8411, <4 x i64> %8409, <4 x i64> zeroinitializer
  %8414 = add <4 x i64> %8412, %8395
  %8415 = add <4 x i64> %8413, %8396
  %8416 = or i32 %8394, 9
  %8417 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8416
  %8418 = bitcast i32* %8417 to <4 x i32>*
  %8419 = load <4 x i32>, <4 x i32>* %8418, align 4, !tbaa !3
  %8420 = getelementptr inbounds i32, i32* %8417, i32 4
  %8421 = bitcast i32* %8420 to <4 x i32>*
  %8422 = load <4 x i32>, <4 x i32>* %8421, align 4, !tbaa !3
  %8423 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %8419
  %8424 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %8422
  %8425 = bitcast <4 x i8*> %8423 to <4 x i64*>
  %8426 = bitcast <4 x i8*> %8424 to <4 x i64*>
  %8427 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8425, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8428 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8426, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8429 = icmp eq <4 x i32> %8390, %8419
  %8430 = icmp eq <4 x i32> %8392, %8422
  %8431 = select <4 x i1> %8429, <4 x i64> %8427, <4 x i64> zeroinitializer
  %8432 = select <4 x i1> %8430, <4 x i64> %8428, <4 x i64> zeroinitializer
  %8433 = add <4 x i64> %8431, %8414
  %8434 = add <4 x i64> %8432, %8415
  %8435 = or i32 %8394, 17
  %8436 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8435
  %8437 = bitcast i32* %8436 to <4 x i32>*
  %8438 = load <4 x i32>, <4 x i32>* %8437, align 4, !tbaa !3
  %8439 = getelementptr inbounds i32, i32* %8436, i32 4
  %8440 = bitcast i32* %8439 to <4 x i32>*
  %8441 = load <4 x i32>, <4 x i32>* %8440, align 4, !tbaa !3
  %8442 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %8438
  %8443 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %8441
  %8444 = bitcast <4 x i8*> %8442 to <4 x i64*>
  %8445 = bitcast <4 x i8*> %8443 to <4 x i64*>
  %8446 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8444, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8447 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8445, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8448 = icmp eq <4 x i32> %8390, %8438
  %8449 = icmp eq <4 x i32> %8392, %8441
  %8450 = select <4 x i1> %8448, <4 x i64> %8446, <4 x i64> zeroinitializer
  %8451 = select <4 x i1> %8449, <4 x i64> %8447, <4 x i64> zeroinitializer
  %8452 = add <4 x i64> %8450, %8433
  %8453 = add <4 x i64> %8451, %8434
  %8454 = icmp eq i32 %8394, 224
  br i1 %8454, label %8455, label %12863, !llvm.loop !103

8455:                                             ; preds = %8393
  %8456 = add <4 x i64> %8453, %8452
  %8457 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8456)
  %8458 = icmp eq i32 %8388, 1992
  %8459 = select i1 %8458, i64 -314670665226827390, i64 0
  %8460 = add i64 %8459, %8457
  %8461 = icmp eq i32 %8388, 2000
  %8462 = select i1 %8461, i64 -7097468252516276247, i64 0
  %8463 = add i64 %8462, %8460
  %8464 = icmp eq i32 %8388, 2008
  %8465 = select i1 %8464, i64 -3364349307489619821, i64 0
  %8466 = add i64 %8465, %8463
  %8467 = icmp eq i32 %8388, 2016
  %8468 = select i1 %8467, i64 2386735715921845721, i64 0
  %8469 = add i64 %8468, %8466
  %8470 = icmp eq i32 %8388, 2024
  %8471 = select i1 %8470, i64 4884933414564023389, i64 0
  %8472 = add i64 %8471, %8469
  %8473 = icmp eq i32 %8388, 2032
  %8474 = select i1 %8473, i64 -2041757280372035110, i64 0
  %8475 = add i64 %8474, %8472
  %8476 = icmp eq i32 %8388, 2040
  %8477 = select i1 %8476, i64 -4160667357316787220, i64 0
  %8478 = add i64 %8477, %8475
  %8479 = lshr i64 %8292, 37
  %8480 = trunc i64 %8479 to i32
  %8481 = and i32 %8480, 2040
  %8482 = insertelement <4 x i32> poison, i32 %8481, i32 0
  %8483 = shufflevector <4 x i32> %8482, <4 x i32> poison, <4 x i32> zeroinitializer
  %8484 = insertelement <4 x i32> poison, i32 %8481, i32 0
  %8485 = shufflevector <4 x i32> %8484, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8486

8486:                                             ; preds = %12842, %8455
  %8487 = phi i32 [ 0, %8455 ], [ %12862, %12842 ]
  %8488 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8455 ], [ %12860, %12842 ]
  %8489 = phi <4 x i64> [ zeroinitializer, %8455 ], [ %12861, %12842 ]
  %8490 = or i32 %8487, 1
  %8491 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8490
  %8492 = bitcast i32* %8491 to <4 x i32>*
  %8493 = load <4 x i32>, <4 x i32>* %8492, align 4, !tbaa !3
  %8494 = getelementptr inbounds i32, i32* %8491, i32 4
  %8495 = bitcast i32* %8494 to <4 x i32>*
  %8496 = load <4 x i32>, <4 x i32>* %8495, align 4, !tbaa !3
  %8497 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %8493
  %8498 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %8496
  %8499 = bitcast <4 x i8*> %8497 to <4 x i64*>
  %8500 = bitcast <4 x i8*> %8498 to <4 x i64*>
  %8501 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8499, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8502 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8500, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8503 = icmp eq <4 x i32> %8483, %8493
  %8504 = icmp eq <4 x i32> %8485, %8496
  %8505 = select <4 x i1> %8503, <4 x i64> %8501, <4 x i64> zeroinitializer
  %8506 = select <4 x i1> %8504, <4 x i64> %8502, <4 x i64> zeroinitializer
  %8507 = add <4 x i64> %8505, %8488
  %8508 = add <4 x i64> %8506, %8489
  %8509 = or i32 %8487, 9
  %8510 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8509
  %8511 = bitcast i32* %8510 to <4 x i32>*
  %8512 = load <4 x i32>, <4 x i32>* %8511, align 4, !tbaa !3
  %8513 = getelementptr inbounds i32, i32* %8510, i32 4
  %8514 = bitcast i32* %8513 to <4 x i32>*
  %8515 = load <4 x i32>, <4 x i32>* %8514, align 4, !tbaa !3
  %8516 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %8512
  %8517 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %8515
  %8518 = bitcast <4 x i8*> %8516 to <4 x i64*>
  %8519 = bitcast <4 x i8*> %8517 to <4 x i64*>
  %8520 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8518, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8521 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8519, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8522 = icmp eq <4 x i32> %8483, %8512
  %8523 = icmp eq <4 x i32> %8485, %8515
  %8524 = select <4 x i1> %8522, <4 x i64> %8520, <4 x i64> zeroinitializer
  %8525 = select <4 x i1> %8523, <4 x i64> %8521, <4 x i64> zeroinitializer
  %8526 = add <4 x i64> %8524, %8507
  %8527 = add <4 x i64> %8525, %8508
  %8528 = or i32 %8487, 17
  %8529 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8528
  %8530 = bitcast i32* %8529 to <4 x i32>*
  %8531 = load <4 x i32>, <4 x i32>* %8530, align 4, !tbaa !3
  %8532 = getelementptr inbounds i32, i32* %8529, i32 4
  %8533 = bitcast i32* %8532 to <4 x i32>*
  %8534 = load <4 x i32>, <4 x i32>* %8533, align 4, !tbaa !3
  %8535 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %8531
  %8536 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %8534
  %8537 = bitcast <4 x i8*> %8535 to <4 x i64*>
  %8538 = bitcast <4 x i8*> %8536 to <4 x i64*>
  %8539 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8537, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8540 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8538, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8541 = icmp eq <4 x i32> %8483, %8531
  %8542 = icmp eq <4 x i32> %8485, %8534
  %8543 = select <4 x i1> %8541, <4 x i64> %8539, <4 x i64> zeroinitializer
  %8544 = select <4 x i1> %8542, <4 x i64> %8540, <4 x i64> zeroinitializer
  %8545 = add <4 x i64> %8543, %8526
  %8546 = add <4 x i64> %8544, %8527
  %8547 = icmp eq i32 %8487, 224
  br i1 %8547, label %8548, label %12842, !llvm.loop !104

8548:                                             ; preds = %8486
  %8549 = add <4 x i64> %8546, %8545
  %8550 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8549)
  %8551 = icmp eq i32 %8481, 1992
  %8552 = select i1 %8551, i64 -5615809534224635015, i64 0
  %8553 = add i64 %8552, %8550
  %8554 = icmp eq i32 %8481, 2000
  %8555 = select i1 %8554, i64 4231836215586269044, i64 0
  %8556 = add i64 %8555, %8553
  %8557 = icmp eq i32 %8481, 2008
  %8558 = select i1 %8557, i64 2408950612238581570, i64 0
  %8559 = add i64 %8558, %8556
  %8560 = icmp eq i32 %8481, 2016
  %8561 = select i1 %8560, i64 8963041913638568696, i64 0
  %8562 = add i64 %8561, %8559
  %8563 = icmp eq i32 %8481, 2024
  %8564 = select i1 %8563, i64 1136536871657834014, i64 0
  %8565 = add i64 %8564, %8562
  %8566 = icmp eq i32 %8481, 2032
  %8567 = select i1 %8566, i64 -7910384849877083335, i64 0
  %8568 = add i64 %8567, %8565
  %8569 = icmp eq i32 %8481, 2040
  %8570 = select i1 %8569, i64 1537771219914559786, i64 0
  %8571 = add i64 %8570, %8568
  %8572 = lshr i64 %8292, 29
  %8573 = trunc i64 %8572 to i32
  %8574 = and i32 %8573, 2040
  %8575 = insertelement <4 x i32> poison, i32 %8574, i32 0
  %8576 = shufflevector <4 x i32> %8575, <4 x i32> poison, <4 x i32> zeroinitializer
  %8577 = insertelement <4 x i32> poison, i32 %8574, i32 0
  %8578 = shufflevector <4 x i32> %8577, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8579

8579:                                             ; preds = %12821, %8548
  %8580 = phi i32 [ 0, %8548 ], [ %12841, %12821 ]
  %8581 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8548 ], [ %12839, %12821 ]
  %8582 = phi <4 x i64> [ zeroinitializer, %8548 ], [ %12840, %12821 ]
  %8583 = or i32 %8580, 1
  %8584 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8583
  %8585 = bitcast i32* %8584 to <4 x i32>*
  %8586 = load <4 x i32>, <4 x i32>* %8585, align 4, !tbaa !3
  %8587 = getelementptr inbounds i32, i32* %8584, i32 4
  %8588 = bitcast i32* %8587 to <4 x i32>*
  %8589 = load <4 x i32>, <4 x i32>* %8588, align 4, !tbaa !3
  %8590 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %8586
  %8591 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %8589
  %8592 = bitcast <4 x i8*> %8590 to <4 x i64*>
  %8593 = bitcast <4 x i8*> %8591 to <4 x i64*>
  %8594 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8592, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8595 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8593, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8596 = icmp eq <4 x i32> %8576, %8586
  %8597 = icmp eq <4 x i32> %8578, %8589
  %8598 = select <4 x i1> %8596, <4 x i64> %8594, <4 x i64> zeroinitializer
  %8599 = select <4 x i1> %8597, <4 x i64> %8595, <4 x i64> zeroinitializer
  %8600 = add <4 x i64> %8598, %8581
  %8601 = add <4 x i64> %8599, %8582
  %8602 = or i32 %8580, 9
  %8603 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8602
  %8604 = bitcast i32* %8603 to <4 x i32>*
  %8605 = load <4 x i32>, <4 x i32>* %8604, align 4, !tbaa !3
  %8606 = getelementptr inbounds i32, i32* %8603, i32 4
  %8607 = bitcast i32* %8606 to <4 x i32>*
  %8608 = load <4 x i32>, <4 x i32>* %8607, align 4, !tbaa !3
  %8609 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %8605
  %8610 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %8608
  %8611 = bitcast <4 x i8*> %8609 to <4 x i64*>
  %8612 = bitcast <4 x i8*> %8610 to <4 x i64*>
  %8613 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8611, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8614 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8612, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8615 = icmp eq <4 x i32> %8576, %8605
  %8616 = icmp eq <4 x i32> %8578, %8608
  %8617 = select <4 x i1> %8615, <4 x i64> %8613, <4 x i64> zeroinitializer
  %8618 = select <4 x i1> %8616, <4 x i64> %8614, <4 x i64> zeroinitializer
  %8619 = add <4 x i64> %8617, %8600
  %8620 = add <4 x i64> %8618, %8601
  %8621 = or i32 %8580, 17
  %8622 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8621
  %8623 = bitcast i32* %8622 to <4 x i32>*
  %8624 = load <4 x i32>, <4 x i32>* %8623, align 4, !tbaa !3
  %8625 = getelementptr inbounds i32, i32* %8622, i32 4
  %8626 = bitcast i32* %8625 to <4 x i32>*
  %8627 = load <4 x i32>, <4 x i32>* %8626, align 4, !tbaa !3
  %8628 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %8624
  %8629 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %8627
  %8630 = bitcast <4 x i8*> %8628 to <4 x i64*>
  %8631 = bitcast <4 x i8*> %8629 to <4 x i64*>
  %8632 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8630, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8633 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8631, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8634 = icmp eq <4 x i32> %8576, %8624
  %8635 = icmp eq <4 x i32> %8578, %8627
  %8636 = select <4 x i1> %8634, <4 x i64> %8632, <4 x i64> zeroinitializer
  %8637 = select <4 x i1> %8635, <4 x i64> %8633, <4 x i64> zeroinitializer
  %8638 = add <4 x i64> %8636, %8619
  %8639 = add <4 x i64> %8637, %8620
  %8640 = icmp eq i32 %8580, 224
  br i1 %8640, label %8641, label %12821, !llvm.loop !105

8641:                                             ; preds = %8579
  %8642 = add <4 x i64> %8639, %8638
  %8643 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8642)
  %8644 = icmp eq i32 %8574, 1992
  %8645 = select i1 %8644, i64 1203300724897905131, i64 0
  %8646 = add i64 %8645, %8643
  %8647 = icmp eq i32 %8574, 2000
  %8648 = select i1 %8647, i64 -5027532858107268057, i64 0
  %8649 = add i64 %8648, %8646
  %8650 = icmp eq i32 %8574, 2008
  %8651 = select i1 %8650, i64 7935854159672328895, i64 0
  %8652 = add i64 %8651, %8649
  %8653 = icmp eq i32 %8574, 2016
  %8654 = select i1 %8653, i64 7168641125469255746, i64 0
  %8655 = add i64 %8654, %8652
  %8656 = icmp eq i32 %8574, 2024
  %8657 = select i1 %8656, i64 -4247101387443462522, i64 0
  %8658 = add i64 %8657, %8655
  %8659 = icmp eq i32 %8574, 2032
  %8660 = select i1 %8659, i64 4076570933917792731, i64 0
  %8661 = add i64 %8660, %8658
  %8662 = icmp eq i32 %8574, 2040
  %8663 = select i1 %8662, i64 6275139646136265361, i64 0
  %8664 = add i64 %8663, %8661
  %8665 = lshr i64 %8292, 21
  %8666 = trunc i64 %8665 to i32
  %8667 = and i32 %8666, 2040
  %8668 = insertelement <4 x i32> poison, i32 %8667, i32 0
  %8669 = shufflevector <4 x i32> %8668, <4 x i32> poison, <4 x i32> zeroinitializer
  %8670 = insertelement <4 x i32> poison, i32 %8667, i32 0
  %8671 = shufflevector <4 x i32> %8670, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8672

8672:                                             ; preds = %12800, %8641
  %8673 = phi i32 [ 0, %8641 ], [ %12820, %12800 ]
  %8674 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8641 ], [ %12818, %12800 ]
  %8675 = phi <4 x i64> [ zeroinitializer, %8641 ], [ %12819, %12800 ]
  %8676 = or i32 %8673, 1
  %8677 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8676
  %8678 = bitcast i32* %8677 to <4 x i32>*
  %8679 = load <4 x i32>, <4 x i32>* %8678, align 4, !tbaa !3
  %8680 = getelementptr inbounds i32, i32* %8677, i32 4
  %8681 = bitcast i32* %8680 to <4 x i32>*
  %8682 = load <4 x i32>, <4 x i32>* %8681, align 4, !tbaa !3
  %8683 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %8679
  %8684 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %8682
  %8685 = bitcast <4 x i8*> %8683 to <4 x i64*>
  %8686 = bitcast <4 x i8*> %8684 to <4 x i64*>
  %8687 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8685, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8688 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8686, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8689 = icmp eq <4 x i32> %8669, %8679
  %8690 = icmp eq <4 x i32> %8671, %8682
  %8691 = select <4 x i1> %8689, <4 x i64> %8687, <4 x i64> zeroinitializer
  %8692 = select <4 x i1> %8690, <4 x i64> %8688, <4 x i64> zeroinitializer
  %8693 = add <4 x i64> %8691, %8674
  %8694 = add <4 x i64> %8692, %8675
  %8695 = or i32 %8673, 9
  %8696 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8695
  %8697 = bitcast i32* %8696 to <4 x i32>*
  %8698 = load <4 x i32>, <4 x i32>* %8697, align 4, !tbaa !3
  %8699 = getelementptr inbounds i32, i32* %8696, i32 4
  %8700 = bitcast i32* %8699 to <4 x i32>*
  %8701 = load <4 x i32>, <4 x i32>* %8700, align 4, !tbaa !3
  %8702 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %8698
  %8703 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %8701
  %8704 = bitcast <4 x i8*> %8702 to <4 x i64*>
  %8705 = bitcast <4 x i8*> %8703 to <4 x i64*>
  %8706 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8704, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8707 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8705, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8708 = icmp eq <4 x i32> %8669, %8698
  %8709 = icmp eq <4 x i32> %8671, %8701
  %8710 = select <4 x i1> %8708, <4 x i64> %8706, <4 x i64> zeroinitializer
  %8711 = select <4 x i1> %8709, <4 x i64> %8707, <4 x i64> zeroinitializer
  %8712 = add <4 x i64> %8710, %8693
  %8713 = add <4 x i64> %8711, %8694
  %8714 = or i32 %8673, 17
  %8715 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8714
  %8716 = bitcast i32* %8715 to <4 x i32>*
  %8717 = load <4 x i32>, <4 x i32>* %8716, align 4, !tbaa !3
  %8718 = getelementptr inbounds i32, i32* %8715, i32 4
  %8719 = bitcast i32* %8718 to <4 x i32>*
  %8720 = load <4 x i32>, <4 x i32>* %8719, align 4, !tbaa !3
  %8721 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %8717
  %8722 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %8720
  %8723 = bitcast <4 x i8*> %8721 to <4 x i64*>
  %8724 = bitcast <4 x i8*> %8722 to <4 x i64*>
  %8725 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8723, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8726 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8724, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8727 = icmp eq <4 x i32> %8669, %8717
  %8728 = icmp eq <4 x i32> %8671, %8720
  %8729 = select <4 x i1> %8727, <4 x i64> %8725, <4 x i64> zeroinitializer
  %8730 = select <4 x i1> %8728, <4 x i64> %8726, <4 x i64> zeroinitializer
  %8731 = add <4 x i64> %8729, %8712
  %8732 = add <4 x i64> %8730, %8713
  %8733 = icmp eq i32 %8673, 224
  br i1 %8733, label %8734, label %12800, !llvm.loop !106

8734:                                             ; preds = %8672
  %8735 = add <4 x i64> %8732, %8731
  %8736 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8735)
  %8737 = icmp eq i32 %8667, 1992
  %8738 = select i1 %8737, i64 -1479007749835869680, i64 0
  %8739 = add i64 %8738, %8736
  %8740 = icmp eq i32 %8667, 2000
  %8741 = select i1 %8740, i64 2843154170404223674, i64 0
  %8742 = add i64 %8741, %8739
  %8743 = icmp eq i32 %8667, 2008
  %8744 = select i1 %8743, i64 -4665003603661872786, i64 0
  %8745 = add i64 %8744, %8742
  %8746 = icmp eq i32 %8667, 2016
  %8747 = select i1 %8746, i64 4825845994704960611, i64 0
  %8748 = add i64 %8747, %8745
  %8749 = icmp eq i32 %8667, 2024
  %8750 = select i1 %8749, i64 -8782479638933598267, i64 0
  %8751 = add i64 %8750, %8748
  %8752 = icmp eq i32 %8667, 2032
  %8753 = select i1 %8752, i64 -2649846723997625800, i64 0
  %8754 = add i64 %8753, %8751
  %8755 = icmp eq i32 %8667, 2040
  %8756 = select i1 %8755, i64 -7986310597085620905, i64 0
  %8757 = add i64 %8756, %8754
  %8758 = lshr i64 %8292, 13
  %8759 = trunc i64 %8758 to i32
  %8760 = and i32 %8759, 2040
  %8761 = insertelement <4 x i32> poison, i32 %8760, i32 0
  %8762 = shufflevector <4 x i32> %8761, <4 x i32> poison, <4 x i32> zeroinitializer
  %8763 = insertelement <4 x i32> poison, i32 %8760, i32 0
  %8764 = shufflevector <4 x i32> %8763, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8765

8765:                                             ; preds = %12779, %8734
  %8766 = phi i32 [ 0, %8734 ], [ %12799, %12779 ]
  %8767 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8734 ], [ %12797, %12779 ]
  %8768 = phi <4 x i64> [ zeroinitializer, %8734 ], [ %12798, %12779 ]
  %8769 = or i32 %8766, 1
  %8770 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8769
  %8771 = bitcast i32* %8770 to <4 x i32>*
  %8772 = load <4 x i32>, <4 x i32>* %8771, align 4, !tbaa !3
  %8773 = getelementptr inbounds i32, i32* %8770, i32 4
  %8774 = bitcast i32* %8773 to <4 x i32>*
  %8775 = load <4 x i32>, <4 x i32>* %8774, align 4, !tbaa !3
  %8776 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8772
  %8777 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8775
  %8778 = bitcast <4 x i8*> %8776 to <4 x i64*>
  %8779 = bitcast <4 x i8*> %8777 to <4 x i64*>
  %8780 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8778, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8781 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8779, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8782 = icmp eq <4 x i32> %8762, %8772
  %8783 = icmp eq <4 x i32> %8764, %8775
  %8784 = select <4 x i1> %8782, <4 x i64> %8780, <4 x i64> zeroinitializer
  %8785 = select <4 x i1> %8783, <4 x i64> %8781, <4 x i64> zeroinitializer
  %8786 = add <4 x i64> %8784, %8767
  %8787 = add <4 x i64> %8785, %8768
  %8788 = or i32 %8766, 9
  %8789 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8788
  %8790 = bitcast i32* %8789 to <4 x i32>*
  %8791 = load <4 x i32>, <4 x i32>* %8790, align 4, !tbaa !3
  %8792 = getelementptr inbounds i32, i32* %8789, i32 4
  %8793 = bitcast i32* %8792 to <4 x i32>*
  %8794 = load <4 x i32>, <4 x i32>* %8793, align 4, !tbaa !3
  %8795 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8791
  %8796 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8794
  %8797 = bitcast <4 x i8*> %8795 to <4 x i64*>
  %8798 = bitcast <4 x i8*> %8796 to <4 x i64*>
  %8799 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8797, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8800 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8798, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8801 = icmp eq <4 x i32> %8762, %8791
  %8802 = icmp eq <4 x i32> %8764, %8794
  %8803 = select <4 x i1> %8801, <4 x i64> %8799, <4 x i64> zeroinitializer
  %8804 = select <4 x i1> %8802, <4 x i64> %8800, <4 x i64> zeroinitializer
  %8805 = add <4 x i64> %8803, %8786
  %8806 = add <4 x i64> %8804, %8787
  %8807 = or i32 %8766, 17
  %8808 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8807
  %8809 = bitcast i32* %8808 to <4 x i32>*
  %8810 = load <4 x i32>, <4 x i32>* %8809, align 4, !tbaa !3
  %8811 = getelementptr inbounds i32, i32* %8808, i32 4
  %8812 = bitcast i32* %8811 to <4 x i32>*
  %8813 = load <4 x i32>, <4 x i32>* %8812, align 4, !tbaa !3
  %8814 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8810
  %8815 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %8813
  %8816 = bitcast <4 x i8*> %8814 to <4 x i64*>
  %8817 = bitcast <4 x i8*> %8815 to <4 x i64*>
  %8818 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8816, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8819 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8817, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8820 = icmp eq <4 x i32> %8762, %8810
  %8821 = icmp eq <4 x i32> %8764, %8813
  %8822 = select <4 x i1> %8820, <4 x i64> %8818, <4 x i64> zeroinitializer
  %8823 = select <4 x i1> %8821, <4 x i64> %8819, <4 x i64> zeroinitializer
  %8824 = add <4 x i64> %8822, %8805
  %8825 = add <4 x i64> %8823, %8806
  %8826 = icmp eq i32 %8766, 224
  br i1 %8826, label %8827, label %12779, !llvm.loop !107

8827:                                             ; preds = %8765
  %8828 = add <4 x i64> %8825, %8824
  %8829 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8828)
  %8830 = icmp eq i32 %8760, 1992
  %8831 = select i1 %8830, i64 8785196325032562866, i64 0
  %8832 = add i64 %8831, %8829
  %8833 = icmp eq i32 %8760, 2000
  %8834 = select i1 %8833, i64 8369843054303033914, i64 0
  %8835 = add i64 %8834, %8832
  %8836 = icmp eq i32 %8760, 2008
  %8837 = select i1 %8836, i64 4809827444717481505, i64 0
  %8838 = add i64 %8837, %8835
  %8839 = icmp eq i32 %8760, 2016
  %8840 = select i1 %8839, i64 -557780216695528580, i64 0
  %8841 = add i64 %8840, %8838
  %8842 = icmp eq i32 %8760, 2024
  %8843 = select i1 %8842, i64 2199529431470097679, i64 0
  %8844 = add i64 %8843, %8841
  %8845 = icmp eq i32 %8760, 2032
  %8846 = select i1 %8845, i64 4169051064997918866, i64 0
  %8847 = add i64 %8846, %8844
  %8848 = icmp eq i32 %8760, 2040
  %8849 = select i1 %8848, i64 3067465835107997461, i64 0
  %8850 = add i64 %8849, %8847
  %8851 = lshr i64 %8292, 5
  %8852 = trunc i64 %8851 to i32
  %8853 = and i32 %8852, 2040
  %8854 = insertelement <4 x i32> poison, i32 %8853, i32 0
  %8855 = shufflevector <4 x i32> %8854, <4 x i32> poison, <4 x i32> zeroinitializer
  %8856 = insertelement <4 x i32> poison, i32 %8853, i32 0
  %8857 = shufflevector <4 x i32> %8856, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8858

8858:                                             ; preds = %12758, %8827
  %8859 = phi i32 [ 0, %8827 ], [ %12778, %12758 ]
  %8860 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8827 ], [ %12776, %12758 ]
  %8861 = phi <4 x i64> [ zeroinitializer, %8827 ], [ %12777, %12758 ]
  %8862 = or i32 %8859, 1
  %8863 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8862
  %8864 = bitcast i32* %8863 to <4 x i32>*
  %8865 = load <4 x i32>, <4 x i32>* %8864, align 4, !tbaa !3
  %8866 = getelementptr inbounds i32, i32* %8863, i32 4
  %8867 = bitcast i32* %8866 to <4 x i32>*
  %8868 = load <4 x i32>, <4 x i32>* %8867, align 4, !tbaa !3
  %8869 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8865
  %8870 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8868
  %8871 = bitcast <4 x i8*> %8869 to <4 x i64*>
  %8872 = bitcast <4 x i8*> %8870 to <4 x i64*>
  %8873 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8871, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8874 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8872, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8875 = icmp eq <4 x i32> %8855, %8865
  %8876 = icmp eq <4 x i32> %8857, %8868
  %8877 = select <4 x i1> %8875, <4 x i64> %8873, <4 x i64> zeroinitializer
  %8878 = select <4 x i1> %8876, <4 x i64> %8874, <4 x i64> zeroinitializer
  %8879 = add <4 x i64> %8877, %8860
  %8880 = add <4 x i64> %8878, %8861
  %8881 = or i32 %8859, 9
  %8882 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8881
  %8883 = bitcast i32* %8882 to <4 x i32>*
  %8884 = load <4 x i32>, <4 x i32>* %8883, align 4, !tbaa !3
  %8885 = getelementptr inbounds i32, i32* %8882, i32 4
  %8886 = bitcast i32* %8885 to <4 x i32>*
  %8887 = load <4 x i32>, <4 x i32>* %8886, align 4, !tbaa !3
  %8888 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8884
  %8889 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8887
  %8890 = bitcast <4 x i8*> %8888 to <4 x i64*>
  %8891 = bitcast <4 x i8*> %8889 to <4 x i64*>
  %8892 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8890, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8893 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8891, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8894 = icmp eq <4 x i32> %8855, %8884
  %8895 = icmp eq <4 x i32> %8857, %8887
  %8896 = select <4 x i1> %8894, <4 x i64> %8892, <4 x i64> zeroinitializer
  %8897 = select <4 x i1> %8895, <4 x i64> %8893, <4 x i64> zeroinitializer
  %8898 = add <4 x i64> %8896, %8879
  %8899 = add <4 x i64> %8897, %8880
  %8900 = or i32 %8859, 17
  %8901 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8900
  %8902 = bitcast i32* %8901 to <4 x i32>*
  %8903 = load <4 x i32>, <4 x i32>* %8902, align 4, !tbaa !3
  %8904 = getelementptr inbounds i32, i32* %8901, i32 4
  %8905 = bitcast i32* %8904 to <4 x i32>*
  %8906 = load <4 x i32>, <4 x i32>* %8905, align 4, !tbaa !3
  %8907 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8903
  %8908 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %8906
  %8909 = bitcast <4 x i8*> %8907 to <4 x i64*>
  %8910 = bitcast <4 x i8*> %8908 to <4 x i64*>
  %8911 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8909, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8912 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8910, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8913 = icmp eq <4 x i32> %8855, %8903
  %8914 = icmp eq <4 x i32> %8857, %8906
  %8915 = select <4 x i1> %8913, <4 x i64> %8911, <4 x i64> zeroinitializer
  %8916 = select <4 x i1> %8914, <4 x i64> %8912, <4 x i64> zeroinitializer
  %8917 = add <4 x i64> %8915, %8898
  %8918 = add <4 x i64> %8916, %8899
  %8919 = icmp eq i32 %8859, 224
  br i1 %8919, label %8920, label %12758, !llvm.loop !108

8920:                                             ; preds = %8858
  %8921 = add <4 x i64> %8918, %8917
  %8922 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %8921)
  %8923 = icmp eq i32 %8853, 1992
  %8924 = select i1 %8923, i64 -9058450267568037125, i64 0
  %8925 = add i64 %8924, %8922
  %8926 = icmp eq i32 %8853, 2000
  %8927 = select i1 %8926, i64 -1610274961606672227, i64 0
  %8928 = add i64 %8927, %8925
  %8929 = icmp eq i32 %8853, 2008
  %8930 = select i1 %8929, i64 -7786513464973963311, i64 0
  %8931 = add i64 %8930, %8928
  %8932 = icmp eq i32 %8853, 2016
  %8933 = select i1 %8932, i64 -2783995359638905055, i64 0
  %8934 = add i64 %8933, %8931
  %8935 = icmp eq i32 %8853, 2024
  %8936 = select i1 %8935, i64 6722895807429069379, i64 0
  %8937 = add i64 %8936, %8934
  %8938 = icmp eq i32 %8853, 2032
  %8939 = select i1 %8938, i64 -2706140860760151325, i64 0
  %8940 = add i64 %8939, %8937
  %8941 = icmp eq i32 %8853, 2040
  %8942 = select i1 %8941, i64 -1381601050739916090, i64 0
  %8943 = add i64 %8942, %8940
  %8944 = trunc i64 %8292 to i32
  %8945 = shl i32 %8944, 3
  %8946 = and i32 %8945, 2040
  %8947 = insertelement <4 x i32> poison, i32 %8946, i32 0
  %8948 = shufflevector <4 x i32> %8947, <4 x i32> poison, <4 x i32> zeroinitializer
  %8949 = insertelement <4 x i32> poison, i32 %8946, i32 0
  %8950 = shufflevector <4 x i32> %8949, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %8951

8951:                                             ; preds = %12737, %8920
  %8952 = phi i32 [ 0, %8920 ], [ %12757, %12737 ]
  %8953 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %8920 ], [ %12755, %12737 ]
  %8954 = phi <4 x i64> [ zeroinitializer, %8920 ], [ %12756, %12737 ]
  %8955 = or i32 %8952, 1
  %8956 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8955
  %8957 = bitcast i32* %8956 to <4 x i32>*
  %8958 = load <4 x i32>, <4 x i32>* %8957, align 4, !tbaa !3
  %8959 = getelementptr inbounds i32, i32* %8956, i32 4
  %8960 = bitcast i32* %8959 to <4 x i32>*
  %8961 = load <4 x i32>, <4 x i32>* %8960, align 4, !tbaa !3
  %8962 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8958
  %8963 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8961
  %8964 = bitcast <4 x i8*> %8962 to <4 x i64*>
  %8965 = bitcast <4 x i8*> %8963 to <4 x i64*>
  %8966 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8964, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8967 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8965, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8968 = icmp eq <4 x i32> %8948, %8958
  %8969 = icmp eq <4 x i32> %8950, %8961
  %8970 = select <4 x i1> %8968, <4 x i64> %8966, <4 x i64> zeroinitializer
  %8971 = select <4 x i1> %8969, <4 x i64> %8967, <4 x i64> zeroinitializer
  %8972 = add <4 x i64> %8970, %8953
  %8973 = add <4 x i64> %8971, %8954
  %8974 = or i32 %8952, 9
  %8975 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8974
  %8976 = bitcast i32* %8975 to <4 x i32>*
  %8977 = load <4 x i32>, <4 x i32>* %8976, align 4, !tbaa !3
  %8978 = getelementptr inbounds i32, i32* %8975, i32 4
  %8979 = bitcast i32* %8978 to <4 x i32>*
  %8980 = load <4 x i32>, <4 x i32>* %8979, align 4, !tbaa !3
  %8981 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8977
  %8982 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8980
  %8983 = bitcast <4 x i8*> %8981 to <4 x i64*>
  %8984 = bitcast <4 x i8*> %8982 to <4 x i64*>
  %8985 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8983, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8986 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %8984, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %8987 = icmp eq <4 x i32> %8948, %8977
  %8988 = icmp eq <4 x i32> %8950, %8980
  %8989 = select <4 x i1> %8987, <4 x i64> %8985, <4 x i64> zeroinitializer
  %8990 = select <4 x i1> %8988, <4 x i64> %8986, <4 x i64> zeroinitializer
  %8991 = add <4 x i64> %8989, %8972
  %8992 = add <4 x i64> %8990, %8973
  %8993 = or i32 %8952, 17
  %8994 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %8993
  %8995 = bitcast i32* %8994 to <4 x i32>*
  %8996 = load <4 x i32>, <4 x i32>* %8995, align 4, !tbaa !3
  %8997 = getelementptr inbounds i32, i32* %8994, i32 4
  %8998 = bitcast i32* %8997 to <4 x i32>*
  %8999 = load <4 x i32>, <4 x i32>* %8998, align 4, !tbaa !3
  %9000 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8996
  %9001 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %8999
  %9002 = bitcast <4 x i8*> %9000 to <4 x i64*>
  %9003 = bitcast <4 x i8*> %9001 to <4 x i64*>
  %9004 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9002, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9005 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9003, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9006 = icmp eq <4 x i32> %8948, %8996
  %9007 = icmp eq <4 x i32> %8950, %8999
  %9008 = select <4 x i1> %9006, <4 x i64> %9004, <4 x i64> zeroinitializer
  %9009 = select <4 x i1> %9007, <4 x i64> %9005, <4 x i64> zeroinitializer
  %9010 = add <4 x i64> %9008, %8991
  %9011 = add <4 x i64> %9009, %8992
  %9012 = icmp eq i32 %8952, 224
  br i1 %9012, label %9013, label %12737, !llvm.loop !109

9013:                                             ; preds = %8951
  %9014 = add <4 x i64> %9011, %9010
  %9015 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9014)
  %9016 = icmp eq i32 %8946, 1992
  %9017 = select i1 %9016, i64 5296930162245565346, i64 0
  %9018 = add i64 %9017, %9015
  %9019 = icmp eq i32 %8946, 2000
  %9020 = select i1 %9019, i64 -6347414485825053312, i64 0
  %9021 = add i64 %9020, %9018
  %9022 = icmp eq i32 %8946, 2008
  %9023 = select i1 %9022, i64 -1111471293076483761, i64 0
  %9024 = add i64 %9023, %9021
  %9025 = icmp eq i32 %8946, 2016
  %9026 = select i1 %9025, i64 6762709279494119711, i64 0
  %9027 = add i64 %9026, %9024
  %9028 = icmp eq i32 %8946, 2024
  %9029 = select i1 %9028, i64 5502587883897177034, i64 0
  %9030 = add i64 %9029, %9027
  %9031 = icmp eq i32 %8946, 2032
  %9032 = select i1 %9031, i64 8203933284918551466, i64 0
  %9033 = add i64 %9032, %9030
  %9034 = icmp eq i32 %8946, 2040
  %9035 = select i1 %9034, i64 -3176116833483372990, i64 0
  %9036 = add i64 %9035, %9033
  %9037 = load i64, i64* @ctx.0.4, align 8, !tbaa !7
  %9038 = xor i64 %8478, %8385
  %9039 = xor i64 %9038, %8571
  %9040 = xor i64 %9039, %8664
  %9041 = xor i64 %9040, %8757
  %9042 = xor i64 %9041, %8850
  %9043 = xor i64 %9042, %8943
  %9044 = xor i64 %9043, %9036
  %9045 = xor i64 %9044, %9037
  %9046 = lshr i64 %9045, 53
  %9047 = trunc i64 %9046 to i32
  %9048 = and i32 %9047, 2040
  %9049 = insertelement <4 x i32> poison, i32 %9048, i32 0
  %9050 = shufflevector <4 x i32> %9049, <4 x i32> poison, <4 x i32> zeroinitializer
  %9051 = insertelement <4 x i32> poison, i32 %9048, i32 0
  %9052 = shufflevector <4 x i32> %9051, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9053

9053:                                             ; preds = %12716, %9013
  %9054 = phi i32 [ 0, %9013 ], [ %12736, %12716 ]
  %9055 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9013 ], [ %12734, %12716 ]
  %9056 = phi <4 x i64> [ zeroinitializer, %9013 ], [ %12735, %12716 ]
  %9057 = or i32 %9054, 1
  %9058 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9057
  %9059 = bitcast i32* %9058 to <4 x i32>*
  %9060 = load <4 x i32>, <4 x i32>* %9059, align 4, !tbaa !3
  %9061 = getelementptr inbounds i32, i32* %9058, i32 4
  %9062 = bitcast i32* %9061 to <4 x i32>*
  %9063 = load <4 x i32>, <4 x i32>* %9062, align 4, !tbaa !3
  %9064 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9060
  %9065 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9063
  %9066 = bitcast <4 x i8*> %9064 to <4 x i64*>
  %9067 = bitcast <4 x i8*> %9065 to <4 x i64*>
  %9068 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9066, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9069 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9067, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9070 = icmp eq <4 x i32> %9050, %9060
  %9071 = icmp eq <4 x i32> %9052, %9063
  %9072 = select <4 x i1> %9070, <4 x i64> %9068, <4 x i64> zeroinitializer
  %9073 = select <4 x i1> %9071, <4 x i64> %9069, <4 x i64> zeroinitializer
  %9074 = add <4 x i64> %9072, %9055
  %9075 = add <4 x i64> %9073, %9056
  %9076 = or i32 %9054, 9
  %9077 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9076
  %9078 = bitcast i32* %9077 to <4 x i32>*
  %9079 = load <4 x i32>, <4 x i32>* %9078, align 4, !tbaa !3
  %9080 = getelementptr inbounds i32, i32* %9077, i32 4
  %9081 = bitcast i32* %9080 to <4 x i32>*
  %9082 = load <4 x i32>, <4 x i32>* %9081, align 4, !tbaa !3
  %9083 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9079
  %9084 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9082
  %9085 = bitcast <4 x i8*> %9083 to <4 x i64*>
  %9086 = bitcast <4 x i8*> %9084 to <4 x i64*>
  %9087 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9085, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9088 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9086, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9089 = icmp eq <4 x i32> %9050, %9079
  %9090 = icmp eq <4 x i32> %9052, %9082
  %9091 = select <4 x i1> %9089, <4 x i64> %9087, <4 x i64> zeroinitializer
  %9092 = select <4 x i1> %9090, <4 x i64> %9088, <4 x i64> zeroinitializer
  %9093 = add <4 x i64> %9091, %9074
  %9094 = add <4 x i64> %9092, %9075
  %9095 = or i32 %9054, 17
  %9096 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9095
  %9097 = bitcast i32* %9096 to <4 x i32>*
  %9098 = load <4 x i32>, <4 x i32>* %9097, align 4, !tbaa !3
  %9099 = getelementptr inbounds i32, i32* %9096, i32 4
  %9100 = bitcast i32* %9099 to <4 x i32>*
  %9101 = load <4 x i32>, <4 x i32>* %9100, align 4, !tbaa !3
  %9102 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9098
  %9103 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9101
  %9104 = bitcast <4 x i8*> %9102 to <4 x i64*>
  %9105 = bitcast <4 x i8*> %9103 to <4 x i64*>
  %9106 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9104, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9107 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9105, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9108 = icmp eq <4 x i32> %9050, %9098
  %9109 = icmp eq <4 x i32> %9052, %9101
  %9110 = select <4 x i1> %9108, <4 x i64> %9106, <4 x i64> zeroinitializer
  %9111 = select <4 x i1> %9109, <4 x i64> %9107, <4 x i64> zeroinitializer
  %9112 = add <4 x i64> %9110, %9093
  %9113 = add <4 x i64> %9111, %9094
  %9114 = icmp eq i32 %9054, 224
  br i1 %9114, label %9115, label %12716, !llvm.loop !110

9115:                                             ; preds = %9053
  %9116 = add <4 x i64> %9113, %9112
  %9117 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9116)
  %9118 = icmp eq i32 %9048, 1992
  %9119 = select i1 %9118, i64 -6702567834671021495, i64 0
  %9120 = add i64 %9119, %9117
  %9121 = icmp eq i32 %9048, 2000
  %9122 = select i1 %9121, i64 -9179115894310901337, i64 0
  %9123 = add i64 %9122, %9120
  %9124 = icmp eq i32 %9048, 2008
  %9125 = select i1 %9124, i64 5751414958667764720, i64 0
  %9126 = add i64 %9125, %9123
  %9127 = icmp eq i32 %9048, 2016
  %9128 = select i1 %9127, i64 2243210855174429021, i64 0
  %9129 = add i64 %9128, %9126
  %9130 = icmp eq i32 %9048, 2024
  %9131 = select i1 %9130, i64 -3872233913575383732, i64 0
  %9132 = add i64 %9131, %9129
  %9133 = icmp eq i32 %9048, 2032
  %9134 = select i1 %9133, i64 -6132897494654657935, i64 0
  %9135 = add i64 %9134, %9132
  %9136 = icmp eq i32 %9048, 2040
  %9137 = select i1 %9136, i64 4811556717733801171, i64 0
  %9138 = add i64 %9137, %9135
  %9139 = lshr i64 %9045, 45
  %9140 = trunc i64 %9139 to i32
  %9141 = and i32 %9140, 2040
  %9142 = insertelement <4 x i32> poison, i32 %9141, i32 0
  %9143 = shufflevector <4 x i32> %9142, <4 x i32> poison, <4 x i32> zeroinitializer
  %9144 = insertelement <4 x i32> poison, i32 %9141, i32 0
  %9145 = shufflevector <4 x i32> %9144, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9146

9146:                                             ; preds = %12695, %9115
  %9147 = phi i32 [ 0, %9115 ], [ %12715, %12695 ]
  %9148 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9115 ], [ %12713, %12695 ]
  %9149 = phi <4 x i64> [ zeroinitializer, %9115 ], [ %12714, %12695 ]
  %9150 = or i32 %9147, 1
  %9151 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9150
  %9152 = bitcast i32* %9151 to <4 x i32>*
  %9153 = load <4 x i32>, <4 x i32>* %9152, align 4, !tbaa !3
  %9154 = getelementptr inbounds i32, i32* %9151, i32 4
  %9155 = bitcast i32* %9154 to <4 x i32>*
  %9156 = load <4 x i32>, <4 x i32>* %9155, align 4, !tbaa !3
  %9157 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9153
  %9158 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9156
  %9159 = bitcast <4 x i8*> %9157 to <4 x i64*>
  %9160 = bitcast <4 x i8*> %9158 to <4 x i64*>
  %9161 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9159, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9162 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9160, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9163 = icmp eq <4 x i32> %9143, %9153
  %9164 = icmp eq <4 x i32> %9145, %9156
  %9165 = select <4 x i1> %9163, <4 x i64> %9161, <4 x i64> zeroinitializer
  %9166 = select <4 x i1> %9164, <4 x i64> %9162, <4 x i64> zeroinitializer
  %9167 = add <4 x i64> %9165, %9148
  %9168 = add <4 x i64> %9166, %9149
  %9169 = or i32 %9147, 9
  %9170 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9169
  %9171 = bitcast i32* %9170 to <4 x i32>*
  %9172 = load <4 x i32>, <4 x i32>* %9171, align 4, !tbaa !3
  %9173 = getelementptr inbounds i32, i32* %9170, i32 4
  %9174 = bitcast i32* %9173 to <4 x i32>*
  %9175 = load <4 x i32>, <4 x i32>* %9174, align 4, !tbaa !3
  %9176 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9172
  %9177 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9175
  %9178 = bitcast <4 x i8*> %9176 to <4 x i64*>
  %9179 = bitcast <4 x i8*> %9177 to <4 x i64*>
  %9180 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9178, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9181 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9179, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9182 = icmp eq <4 x i32> %9143, %9172
  %9183 = icmp eq <4 x i32> %9145, %9175
  %9184 = select <4 x i1> %9182, <4 x i64> %9180, <4 x i64> zeroinitializer
  %9185 = select <4 x i1> %9183, <4 x i64> %9181, <4 x i64> zeroinitializer
  %9186 = add <4 x i64> %9184, %9167
  %9187 = add <4 x i64> %9185, %9168
  %9188 = or i32 %9147, 17
  %9189 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9188
  %9190 = bitcast i32* %9189 to <4 x i32>*
  %9191 = load <4 x i32>, <4 x i32>* %9190, align 4, !tbaa !3
  %9192 = getelementptr inbounds i32, i32* %9189, i32 4
  %9193 = bitcast i32* %9192 to <4 x i32>*
  %9194 = load <4 x i32>, <4 x i32>* %9193, align 4, !tbaa !3
  %9195 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9191
  %9196 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9194
  %9197 = bitcast <4 x i8*> %9195 to <4 x i64*>
  %9198 = bitcast <4 x i8*> %9196 to <4 x i64*>
  %9199 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9197, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9200 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9198, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9201 = icmp eq <4 x i32> %9143, %9191
  %9202 = icmp eq <4 x i32> %9145, %9194
  %9203 = select <4 x i1> %9201, <4 x i64> %9199, <4 x i64> zeroinitializer
  %9204 = select <4 x i1> %9202, <4 x i64> %9200, <4 x i64> zeroinitializer
  %9205 = add <4 x i64> %9203, %9186
  %9206 = add <4 x i64> %9204, %9187
  %9207 = icmp eq i32 %9147, 224
  br i1 %9207, label %9208, label %12695, !llvm.loop !111

9208:                                             ; preds = %9146
  %9209 = add <4 x i64> %9206, %9205
  %9210 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9209)
  %9211 = icmp eq i32 %9141, 1992
  %9212 = select i1 %9211, i64 -314670665226827390, i64 0
  %9213 = add i64 %9212, %9210
  %9214 = icmp eq i32 %9141, 2000
  %9215 = select i1 %9214, i64 -7097468252516276247, i64 0
  %9216 = add i64 %9215, %9213
  %9217 = icmp eq i32 %9141, 2008
  %9218 = select i1 %9217, i64 -3364349307489619821, i64 0
  %9219 = add i64 %9218, %9216
  %9220 = icmp eq i32 %9141, 2016
  %9221 = select i1 %9220, i64 2386735715921845721, i64 0
  %9222 = add i64 %9221, %9219
  %9223 = icmp eq i32 %9141, 2024
  %9224 = select i1 %9223, i64 4884933414564023389, i64 0
  %9225 = add i64 %9224, %9222
  %9226 = icmp eq i32 %9141, 2032
  %9227 = select i1 %9226, i64 -2041757280372035110, i64 0
  %9228 = add i64 %9227, %9225
  %9229 = icmp eq i32 %9141, 2040
  %9230 = select i1 %9229, i64 -4160667357316787220, i64 0
  %9231 = add i64 %9230, %9228
  %9232 = lshr i64 %9045, 37
  %9233 = trunc i64 %9232 to i32
  %9234 = and i32 %9233, 2040
  %9235 = insertelement <4 x i32> poison, i32 %9234, i32 0
  %9236 = shufflevector <4 x i32> %9235, <4 x i32> poison, <4 x i32> zeroinitializer
  %9237 = insertelement <4 x i32> poison, i32 %9234, i32 0
  %9238 = shufflevector <4 x i32> %9237, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9239

9239:                                             ; preds = %12674, %9208
  %9240 = phi i32 [ 0, %9208 ], [ %12694, %12674 ]
  %9241 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9208 ], [ %12692, %12674 ]
  %9242 = phi <4 x i64> [ zeroinitializer, %9208 ], [ %12693, %12674 ]
  %9243 = or i32 %9240, 1
  %9244 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9243
  %9245 = bitcast i32* %9244 to <4 x i32>*
  %9246 = load <4 x i32>, <4 x i32>* %9245, align 4, !tbaa !3
  %9247 = getelementptr inbounds i32, i32* %9244, i32 4
  %9248 = bitcast i32* %9247 to <4 x i32>*
  %9249 = load <4 x i32>, <4 x i32>* %9248, align 4, !tbaa !3
  %9250 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %9246
  %9251 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %9249
  %9252 = bitcast <4 x i8*> %9250 to <4 x i64*>
  %9253 = bitcast <4 x i8*> %9251 to <4 x i64*>
  %9254 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9252, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9255 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9253, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9256 = icmp eq <4 x i32> %9236, %9246
  %9257 = icmp eq <4 x i32> %9238, %9249
  %9258 = select <4 x i1> %9256, <4 x i64> %9254, <4 x i64> zeroinitializer
  %9259 = select <4 x i1> %9257, <4 x i64> %9255, <4 x i64> zeroinitializer
  %9260 = add <4 x i64> %9258, %9241
  %9261 = add <4 x i64> %9259, %9242
  %9262 = or i32 %9240, 9
  %9263 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9262
  %9264 = bitcast i32* %9263 to <4 x i32>*
  %9265 = load <4 x i32>, <4 x i32>* %9264, align 4, !tbaa !3
  %9266 = getelementptr inbounds i32, i32* %9263, i32 4
  %9267 = bitcast i32* %9266 to <4 x i32>*
  %9268 = load <4 x i32>, <4 x i32>* %9267, align 4, !tbaa !3
  %9269 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %9265
  %9270 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %9268
  %9271 = bitcast <4 x i8*> %9269 to <4 x i64*>
  %9272 = bitcast <4 x i8*> %9270 to <4 x i64*>
  %9273 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9271, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9274 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9272, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9275 = icmp eq <4 x i32> %9236, %9265
  %9276 = icmp eq <4 x i32> %9238, %9268
  %9277 = select <4 x i1> %9275, <4 x i64> %9273, <4 x i64> zeroinitializer
  %9278 = select <4 x i1> %9276, <4 x i64> %9274, <4 x i64> zeroinitializer
  %9279 = add <4 x i64> %9277, %9260
  %9280 = add <4 x i64> %9278, %9261
  %9281 = or i32 %9240, 17
  %9282 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9281
  %9283 = bitcast i32* %9282 to <4 x i32>*
  %9284 = load <4 x i32>, <4 x i32>* %9283, align 4, !tbaa !3
  %9285 = getelementptr inbounds i32, i32* %9282, i32 4
  %9286 = bitcast i32* %9285 to <4 x i32>*
  %9287 = load <4 x i32>, <4 x i32>* %9286, align 4, !tbaa !3
  %9288 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %9284
  %9289 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %9287
  %9290 = bitcast <4 x i8*> %9288 to <4 x i64*>
  %9291 = bitcast <4 x i8*> %9289 to <4 x i64*>
  %9292 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9290, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9293 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9291, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9294 = icmp eq <4 x i32> %9236, %9284
  %9295 = icmp eq <4 x i32> %9238, %9287
  %9296 = select <4 x i1> %9294, <4 x i64> %9292, <4 x i64> zeroinitializer
  %9297 = select <4 x i1> %9295, <4 x i64> %9293, <4 x i64> zeroinitializer
  %9298 = add <4 x i64> %9296, %9279
  %9299 = add <4 x i64> %9297, %9280
  %9300 = icmp eq i32 %9240, 224
  br i1 %9300, label %9301, label %12674, !llvm.loop !112

9301:                                             ; preds = %9239
  %9302 = add <4 x i64> %9299, %9298
  %9303 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9302)
  %9304 = icmp eq i32 %9234, 1992
  %9305 = select i1 %9304, i64 -5615809534224635015, i64 0
  %9306 = add i64 %9305, %9303
  %9307 = icmp eq i32 %9234, 2000
  %9308 = select i1 %9307, i64 4231836215586269044, i64 0
  %9309 = add i64 %9308, %9306
  %9310 = icmp eq i32 %9234, 2008
  %9311 = select i1 %9310, i64 2408950612238581570, i64 0
  %9312 = add i64 %9311, %9309
  %9313 = icmp eq i32 %9234, 2016
  %9314 = select i1 %9313, i64 8963041913638568696, i64 0
  %9315 = add i64 %9314, %9312
  %9316 = icmp eq i32 %9234, 2024
  %9317 = select i1 %9316, i64 1136536871657834014, i64 0
  %9318 = add i64 %9317, %9315
  %9319 = icmp eq i32 %9234, 2032
  %9320 = select i1 %9319, i64 -7910384849877083335, i64 0
  %9321 = add i64 %9320, %9318
  %9322 = icmp eq i32 %9234, 2040
  %9323 = select i1 %9322, i64 1537771219914559786, i64 0
  %9324 = add i64 %9323, %9321
  %9325 = lshr i64 %9045, 29
  %9326 = trunc i64 %9325 to i32
  %9327 = and i32 %9326, 2040
  %9328 = insertelement <4 x i32> poison, i32 %9327, i32 0
  %9329 = shufflevector <4 x i32> %9328, <4 x i32> poison, <4 x i32> zeroinitializer
  %9330 = insertelement <4 x i32> poison, i32 %9327, i32 0
  %9331 = shufflevector <4 x i32> %9330, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9332

9332:                                             ; preds = %12653, %9301
  %9333 = phi i32 [ 0, %9301 ], [ %12673, %12653 ]
  %9334 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9301 ], [ %12671, %12653 ]
  %9335 = phi <4 x i64> [ zeroinitializer, %9301 ], [ %12672, %12653 ]
  %9336 = or i32 %9333, 1
  %9337 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9336
  %9338 = bitcast i32* %9337 to <4 x i32>*
  %9339 = load <4 x i32>, <4 x i32>* %9338, align 4, !tbaa !3
  %9340 = getelementptr inbounds i32, i32* %9337, i32 4
  %9341 = bitcast i32* %9340 to <4 x i32>*
  %9342 = load <4 x i32>, <4 x i32>* %9341, align 4, !tbaa !3
  %9343 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %9339
  %9344 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %9342
  %9345 = bitcast <4 x i8*> %9343 to <4 x i64*>
  %9346 = bitcast <4 x i8*> %9344 to <4 x i64*>
  %9347 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9345, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9348 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9346, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9349 = icmp eq <4 x i32> %9329, %9339
  %9350 = icmp eq <4 x i32> %9331, %9342
  %9351 = select <4 x i1> %9349, <4 x i64> %9347, <4 x i64> zeroinitializer
  %9352 = select <4 x i1> %9350, <4 x i64> %9348, <4 x i64> zeroinitializer
  %9353 = add <4 x i64> %9351, %9334
  %9354 = add <4 x i64> %9352, %9335
  %9355 = or i32 %9333, 9
  %9356 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9355
  %9357 = bitcast i32* %9356 to <4 x i32>*
  %9358 = load <4 x i32>, <4 x i32>* %9357, align 4, !tbaa !3
  %9359 = getelementptr inbounds i32, i32* %9356, i32 4
  %9360 = bitcast i32* %9359 to <4 x i32>*
  %9361 = load <4 x i32>, <4 x i32>* %9360, align 4, !tbaa !3
  %9362 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %9358
  %9363 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %9361
  %9364 = bitcast <4 x i8*> %9362 to <4 x i64*>
  %9365 = bitcast <4 x i8*> %9363 to <4 x i64*>
  %9366 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9364, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9367 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9365, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9368 = icmp eq <4 x i32> %9329, %9358
  %9369 = icmp eq <4 x i32> %9331, %9361
  %9370 = select <4 x i1> %9368, <4 x i64> %9366, <4 x i64> zeroinitializer
  %9371 = select <4 x i1> %9369, <4 x i64> %9367, <4 x i64> zeroinitializer
  %9372 = add <4 x i64> %9370, %9353
  %9373 = add <4 x i64> %9371, %9354
  %9374 = or i32 %9333, 17
  %9375 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9374
  %9376 = bitcast i32* %9375 to <4 x i32>*
  %9377 = load <4 x i32>, <4 x i32>* %9376, align 4, !tbaa !3
  %9378 = getelementptr inbounds i32, i32* %9375, i32 4
  %9379 = bitcast i32* %9378 to <4 x i32>*
  %9380 = load <4 x i32>, <4 x i32>* %9379, align 4, !tbaa !3
  %9381 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %9377
  %9382 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %9380
  %9383 = bitcast <4 x i8*> %9381 to <4 x i64*>
  %9384 = bitcast <4 x i8*> %9382 to <4 x i64*>
  %9385 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9383, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9386 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9384, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9387 = icmp eq <4 x i32> %9329, %9377
  %9388 = icmp eq <4 x i32> %9331, %9380
  %9389 = select <4 x i1> %9387, <4 x i64> %9385, <4 x i64> zeroinitializer
  %9390 = select <4 x i1> %9388, <4 x i64> %9386, <4 x i64> zeroinitializer
  %9391 = add <4 x i64> %9389, %9372
  %9392 = add <4 x i64> %9390, %9373
  %9393 = icmp eq i32 %9333, 224
  br i1 %9393, label %9394, label %12653, !llvm.loop !113

9394:                                             ; preds = %9332
  %9395 = add <4 x i64> %9392, %9391
  %9396 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9395)
  %9397 = icmp eq i32 %9327, 1992
  %9398 = select i1 %9397, i64 1203300724897905131, i64 0
  %9399 = add i64 %9398, %9396
  %9400 = icmp eq i32 %9327, 2000
  %9401 = select i1 %9400, i64 -5027532858107268057, i64 0
  %9402 = add i64 %9401, %9399
  %9403 = icmp eq i32 %9327, 2008
  %9404 = select i1 %9403, i64 7935854159672328895, i64 0
  %9405 = add i64 %9404, %9402
  %9406 = icmp eq i32 %9327, 2016
  %9407 = select i1 %9406, i64 7168641125469255746, i64 0
  %9408 = add i64 %9407, %9405
  %9409 = icmp eq i32 %9327, 2024
  %9410 = select i1 %9409, i64 -4247101387443462522, i64 0
  %9411 = add i64 %9410, %9408
  %9412 = icmp eq i32 %9327, 2032
  %9413 = select i1 %9412, i64 4076570933917792731, i64 0
  %9414 = add i64 %9413, %9411
  %9415 = icmp eq i32 %9327, 2040
  %9416 = select i1 %9415, i64 6275139646136265361, i64 0
  %9417 = add i64 %9416, %9414
  %9418 = lshr i64 %9045, 21
  %9419 = trunc i64 %9418 to i32
  %9420 = and i32 %9419, 2040
  %9421 = insertelement <4 x i32> poison, i32 %9420, i32 0
  %9422 = shufflevector <4 x i32> %9421, <4 x i32> poison, <4 x i32> zeroinitializer
  %9423 = insertelement <4 x i32> poison, i32 %9420, i32 0
  %9424 = shufflevector <4 x i32> %9423, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9425

9425:                                             ; preds = %12632, %9394
  %9426 = phi i32 [ 0, %9394 ], [ %12652, %12632 ]
  %9427 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9394 ], [ %12650, %12632 ]
  %9428 = phi <4 x i64> [ zeroinitializer, %9394 ], [ %12651, %12632 ]
  %9429 = or i32 %9426, 1
  %9430 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9429
  %9431 = bitcast i32* %9430 to <4 x i32>*
  %9432 = load <4 x i32>, <4 x i32>* %9431, align 4, !tbaa !3
  %9433 = getelementptr inbounds i32, i32* %9430, i32 4
  %9434 = bitcast i32* %9433 to <4 x i32>*
  %9435 = load <4 x i32>, <4 x i32>* %9434, align 4, !tbaa !3
  %9436 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %9432
  %9437 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %9435
  %9438 = bitcast <4 x i8*> %9436 to <4 x i64*>
  %9439 = bitcast <4 x i8*> %9437 to <4 x i64*>
  %9440 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9438, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9441 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9439, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9442 = icmp eq <4 x i32> %9422, %9432
  %9443 = icmp eq <4 x i32> %9424, %9435
  %9444 = select <4 x i1> %9442, <4 x i64> %9440, <4 x i64> zeroinitializer
  %9445 = select <4 x i1> %9443, <4 x i64> %9441, <4 x i64> zeroinitializer
  %9446 = add <4 x i64> %9444, %9427
  %9447 = add <4 x i64> %9445, %9428
  %9448 = or i32 %9426, 9
  %9449 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9448
  %9450 = bitcast i32* %9449 to <4 x i32>*
  %9451 = load <4 x i32>, <4 x i32>* %9450, align 4, !tbaa !3
  %9452 = getelementptr inbounds i32, i32* %9449, i32 4
  %9453 = bitcast i32* %9452 to <4 x i32>*
  %9454 = load <4 x i32>, <4 x i32>* %9453, align 4, !tbaa !3
  %9455 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %9451
  %9456 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %9454
  %9457 = bitcast <4 x i8*> %9455 to <4 x i64*>
  %9458 = bitcast <4 x i8*> %9456 to <4 x i64*>
  %9459 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9457, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9460 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9458, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9461 = icmp eq <4 x i32> %9422, %9451
  %9462 = icmp eq <4 x i32> %9424, %9454
  %9463 = select <4 x i1> %9461, <4 x i64> %9459, <4 x i64> zeroinitializer
  %9464 = select <4 x i1> %9462, <4 x i64> %9460, <4 x i64> zeroinitializer
  %9465 = add <4 x i64> %9463, %9446
  %9466 = add <4 x i64> %9464, %9447
  %9467 = or i32 %9426, 17
  %9468 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9467
  %9469 = bitcast i32* %9468 to <4 x i32>*
  %9470 = load <4 x i32>, <4 x i32>* %9469, align 4, !tbaa !3
  %9471 = getelementptr inbounds i32, i32* %9468, i32 4
  %9472 = bitcast i32* %9471 to <4 x i32>*
  %9473 = load <4 x i32>, <4 x i32>* %9472, align 4, !tbaa !3
  %9474 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %9470
  %9475 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %9473
  %9476 = bitcast <4 x i8*> %9474 to <4 x i64*>
  %9477 = bitcast <4 x i8*> %9475 to <4 x i64*>
  %9478 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9476, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9479 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9477, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9480 = icmp eq <4 x i32> %9422, %9470
  %9481 = icmp eq <4 x i32> %9424, %9473
  %9482 = select <4 x i1> %9480, <4 x i64> %9478, <4 x i64> zeroinitializer
  %9483 = select <4 x i1> %9481, <4 x i64> %9479, <4 x i64> zeroinitializer
  %9484 = add <4 x i64> %9482, %9465
  %9485 = add <4 x i64> %9483, %9466
  %9486 = icmp eq i32 %9426, 224
  br i1 %9486, label %9487, label %12632, !llvm.loop !114

9487:                                             ; preds = %9425
  %9488 = add <4 x i64> %9485, %9484
  %9489 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9488)
  %9490 = icmp eq i32 %9420, 1992
  %9491 = select i1 %9490, i64 -1479007749835869680, i64 0
  %9492 = add i64 %9491, %9489
  %9493 = icmp eq i32 %9420, 2000
  %9494 = select i1 %9493, i64 2843154170404223674, i64 0
  %9495 = add i64 %9494, %9492
  %9496 = icmp eq i32 %9420, 2008
  %9497 = select i1 %9496, i64 -4665003603661872786, i64 0
  %9498 = add i64 %9497, %9495
  %9499 = icmp eq i32 %9420, 2016
  %9500 = select i1 %9499, i64 4825845994704960611, i64 0
  %9501 = add i64 %9500, %9498
  %9502 = icmp eq i32 %9420, 2024
  %9503 = select i1 %9502, i64 -8782479638933598267, i64 0
  %9504 = add i64 %9503, %9501
  %9505 = icmp eq i32 %9420, 2032
  %9506 = select i1 %9505, i64 -2649846723997625800, i64 0
  %9507 = add i64 %9506, %9504
  %9508 = icmp eq i32 %9420, 2040
  %9509 = select i1 %9508, i64 -7986310597085620905, i64 0
  %9510 = add i64 %9509, %9507
  %9511 = lshr i64 %9045, 13
  %9512 = trunc i64 %9511 to i32
  %9513 = and i32 %9512, 2040
  %9514 = insertelement <4 x i32> poison, i32 %9513, i32 0
  %9515 = shufflevector <4 x i32> %9514, <4 x i32> poison, <4 x i32> zeroinitializer
  %9516 = insertelement <4 x i32> poison, i32 %9513, i32 0
  %9517 = shufflevector <4 x i32> %9516, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9518

9518:                                             ; preds = %12611, %9487
  %9519 = phi i32 [ 0, %9487 ], [ %12631, %12611 ]
  %9520 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9487 ], [ %12629, %12611 ]
  %9521 = phi <4 x i64> [ zeroinitializer, %9487 ], [ %12630, %12611 ]
  %9522 = or i32 %9519, 1
  %9523 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9522
  %9524 = bitcast i32* %9523 to <4 x i32>*
  %9525 = load <4 x i32>, <4 x i32>* %9524, align 4, !tbaa !3
  %9526 = getelementptr inbounds i32, i32* %9523, i32 4
  %9527 = bitcast i32* %9526 to <4 x i32>*
  %9528 = load <4 x i32>, <4 x i32>* %9527, align 4, !tbaa !3
  %9529 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %9525
  %9530 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %9528
  %9531 = bitcast <4 x i8*> %9529 to <4 x i64*>
  %9532 = bitcast <4 x i8*> %9530 to <4 x i64*>
  %9533 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9531, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9534 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9532, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9535 = icmp eq <4 x i32> %9515, %9525
  %9536 = icmp eq <4 x i32> %9517, %9528
  %9537 = select <4 x i1> %9535, <4 x i64> %9533, <4 x i64> zeroinitializer
  %9538 = select <4 x i1> %9536, <4 x i64> %9534, <4 x i64> zeroinitializer
  %9539 = add <4 x i64> %9537, %9520
  %9540 = add <4 x i64> %9538, %9521
  %9541 = or i32 %9519, 9
  %9542 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9541
  %9543 = bitcast i32* %9542 to <4 x i32>*
  %9544 = load <4 x i32>, <4 x i32>* %9543, align 4, !tbaa !3
  %9545 = getelementptr inbounds i32, i32* %9542, i32 4
  %9546 = bitcast i32* %9545 to <4 x i32>*
  %9547 = load <4 x i32>, <4 x i32>* %9546, align 4, !tbaa !3
  %9548 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %9544
  %9549 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %9547
  %9550 = bitcast <4 x i8*> %9548 to <4 x i64*>
  %9551 = bitcast <4 x i8*> %9549 to <4 x i64*>
  %9552 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9550, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9553 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9551, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9554 = icmp eq <4 x i32> %9515, %9544
  %9555 = icmp eq <4 x i32> %9517, %9547
  %9556 = select <4 x i1> %9554, <4 x i64> %9552, <4 x i64> zeroinitializer
  %9557 = select <4 x i1> %9555, <4 x i64> %9553, <4 x i64> zeroinitializer
  %9558 = add <4 x i64> %9556, %9539
  %9559 = add <4 x i64> %9557, %9540
  %9560 = or i32 %9519, 17
  %9561 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9560
  %9562 = bitcast i32* %9561 to <4 x i32>*
  %9563 = load <4 x i32>, <4 x i32>* %9562, align 4, !tbaa !3
  %9564 = getelementptr inbounds i32, i32* %9561, i32 4
  %9565 = bitcast i32* %9564 to <4 x i32>*
  %9566 = load <4 x i32>, <4 x i32>* %9565, align 4, !tbaa !3
  %9567 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %9563
  %9568 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %9566
  %9569 = bitcast <4 x i8*> %9567 to <4 x i64*>
  %9570 = bitcast <4 x i8*> %9568 to <4 x i64*>
  %9571 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9569, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9572 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9570, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9573 = icmp eq <4 x i32> %9515, %9563
  %9574 = icmp eq <4 x i32> %9517, %9566
  %9575 = select <4 x i1> %9573, <4 x i64> %9571, <4 x i64> zeroinitializer
  %9576 = select <4 x i1> %9574, <4 x i64> %9572, <4 x i64> zeroinitializer
  %9577 = add <4 x i64> %9575, %9558
  %9578 = add <4 x i64> %9576, %9559
  %9579 = icmp eq i32 %9519, 224
  br i1 %9579, label %9580, label %12611, !llvm.loop !115

9580:                                             ; preds = %9518
  %9581 = add <4 x i64> %9578, %9577
  %9582 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9581)
  %9583 = icmp eq i32 %9513, 1992
  %9584 = select i1 %9583, i64 8785196325032562866, i64 0
  %9585 = add i64 %9584, %9582
  %9586 = icmp eq i32 %9513, 2000
  %9587 = select i1 %9586, i64 8369843054303033914, i64 0
  %9588 = add i64 %9587, %9585
  %9589 = icmp eq i32 %9513, 2008
  %9590 = select i1 %9589, i64 4809827444717481505, i64 0
  %9591 = add i64 %9590, %9588
  %9592 = icmp eq i32 %9513, 2016
  %9593 = select i1 %9592, i64 -557780216695528580, i64 0
  %9594 = add i64 %9593, %9591
  %9595 = icmp eq i32 %9513, 2024
  %9596 = select i1 %9595, i64 2199529431470097679, i64 0
  %9597 = add i64 %9596, %9594
  %9598 = icmp eq i32 %9513, 2032
  %9599 = select i1 %9598, i64 4169051064997918866, i64 0
  %9600 = add i64 %9599, %9597
  %9601 = icmp eq i32 %9513, 2040
  %9602 = select i1 %9601, i64 3067465835107997461, i64 0
  %9603 = add i64 %9602, %9600
  %9604 = lshr i64 %9045, 5
  %9605 = trunc i64 %9604 to i32
  %9606 = and i32 %9605, 2040
  %9607 = insertelement <4 x i32> poison, i32 %9606, i32 0
  %9608 = shufflevector <4 x i32> %9607, <4 x i32> poison, <4 x i32> zeroinitializer
  %9609 = insertelement <4 x i32> poison, i32 %9606, i32 0
  %9610 = shufflevector <4 x i32> %9609, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9611

9611:                                             ; preds = %12590, %9580
  %9612 = phi i32 [ 0, %9580 ], [ %12610, %12590 ]
  %9613 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9580 ], [ %12608, %12590 ]
  %9614 = phi <4 x i64> [ zeroinitializer, %9580 ], [ %12609, %12590 ]
  %9615 = or i32 %9612, 1
  %9616 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9615
  %9617 = bitcast i32* %9616 to <4 x i32>*
  %9618 = load <4 x i32>, <4 x i32>* %9617, align 4, !tbaa !3
  %9619 = getelementptr inbounds i32, i32* %9616, i32 4
  %9620 = bitcast i32* %9619 to <4 x i32>*
  %9621 = load <4 x i32>, <4 x i32>* %9620, align 4, !tbaa !3
  %9622 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %9618
  %9623 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %9621
  %9624 = bitcast <4 x i8*> %9622 to <4 x i64*>
  %9625 = bitcast <4 x i8*> %9623 to <4 x i64*>
  %9626 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9624, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9627 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9625, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9628 = icmp eq <4 x i32> %9608, %9618
  %9629 = icmp eq <4 x i32> %9610, %9621
  %9630 = select <4 x i1> %9628, <4 x i64> %9626, <4 x i64> zeroinitializer
  %9631 = select <4 x i1> %9629, <4 x i64> %9627, <4 x i64> zeroinitializer
  %9632 = add <4 x i64> %9630, %9613
  %9633 = add <4 x i64> %9631, %9614
  %9634 = or i32 %9612, 9
  %9635 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9634
  %9636 = bitcast i32* %9635 to <4 x i32>*
  %9637 = load <4 x i32>, <4 x i32>* %9636, align 4, !tbaa !3
  %9638 = getelementptr inbounds i32, i32* %9635, i32 4
  %9639 = bitcast i32* %9638 to <4 x i32>*
  %9640 = load <4 x i32>, <4 x i32>* %9639, align 4, !tbaa !3
  %9641 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %9637
  %9642 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %9640
  %9643 = bitcast <4 x i8*> %9641 to <4 x i64*>
  %9644 = bitcast <4 x i8*> %9642 to <4 x i64*>
  %9645 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9643, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9646 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9644, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9647 = icmp eq <4 x i32> %9608, %9637
  %9648 = icmp eq <4 x i32> %9610, %9640
  %9649 = select <4 x i1> %9647, <4 x i64> %9645, <4 x i64> zeroinitializer
  %9650 = select <4 x i1> %9648, <4 x i64> %9646, <4 x i64> zeroinitializer
  %9651 = add <4 x i64> %9649, %9632
  %9652 = add <4 x i64> %9650, %9633
  %9653 = or i32 %9612, 17
  %9654 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9653
  %9655 = bitcast i32* %9654 to <4 x i32>*
  %9656 = load <4 x i32>, <4 x i32>* %9655, align 4, !tbaa !3
  %9657 = getelementptr inbounds i32, i32* %9654, i32 4
  %9658 = bitcast i32* %9657 to <4 x i32>*
  %9659 = load <4 x i32>, <4 x i32>* %9658, align 4, !tbaa !3
  %9660 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %9656
  %9661 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %9659
  %9662 = bitcast <4 x i8*> %9660 to <4 x i64*>
  %9663 = bitcast <4 x i8*> %9661 to <4 x i64*>
  %9664 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9662, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9665 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9663, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9666 = icmp eq <4 x i32> %9608, %9656
  %9667 = icmp eq <4 x i32> %9610, %9659
  %9668 = select <4 x i1> %9666, <4 x i64> %9664, <4 x i64> zeroinitializer
  %9669 = select <4 x i1> %9667, <4 x i64> %9665, <4 x i64> zeroinitializer
  %9670 = add <4 x i64> %9668, %9651
  %9671 = add <4 x i64> %9669, %9652
  %9672 = icmp eq i32 %9612, 224
  br i1 %9672, label %9673, label %12590, !llvm.loop !116

9673:                                             ; preds = %9611
  %9674 = add <4 x i64> %9671, %9670
  %9675 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9674)
  %9676 = icmp eq i32 %9606, 1992
  %9677 = select i1 %9676, i64 -9058450267568037125, i64 0
  %9678 = add i64 %9677, %9675
  %9679 = icmp eq i32 %9606, 2000
  %9680 = select i1 %9679, i64 -1610274961606672227, i64 0
  %9681 = add i64 %9680, %9678
  %9682 = icmp eq i32 %9606, 2008
  %9683 = select i1 %9682, i64 -7786513464973963311, i64 0
  %9684 = add i64 %9683, %9681
  %9685 = icmp eq i32 %9606, 2016
  %9686 = select i1 %9685, i64 -2783995359638905055, i64 0
  %9687 = add i64 %9686, %9684
  %9688 = icmp eq i32 %9606, 2024
  %9689 = select i1 %9688, i64 6722895807429069379, i64 0
  %9690 = add i64 %9689, %9687
  %9691 = icmp eq i32 %9606, 2032
  %9692 = select i1 %9691, i64 -2706140860760151325, i64 0
  %9693 = add i64 %9692, %9690
  %9694 = icmp eq i32 %9606, 2040
  %9695 = select i1 %9694, i64 -1381601050739916090, i64 0
  %9696 = add i64 %9695, %9693
  %9697 = trunc i64 %9045 to i32
  %9698 = shl i32 %9697, 3
  %9699 = and i32 %9698, 2040
  %9700 = insertelement <4 x i32> poison, i32 %9699, i32 0
  %9701 = shufflevector <4 x i32> %9700, <4 x i32> poison, <4 x i32> zeroinitializer
  %9702 = insertelement <4 x i32> poison, i32 %9699, i32 0
  %9703 = shufflevector <4 x i32> %9702, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9704

9704:                                             ; preds = %12569, %9673
  %9705 = phi i32 [ 0, %9673 ], [ %12589, %12569 ]
  %9706 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9673 ], [ %12587, %12569 ]
  %9707 = phi <4 x i64> [ zeroinitializer, %9673 ], [ %12588, %12569 ]
  %9708 = or i32 %9705, 1
  %9709 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9708
  %9710 = bitcast i32* %9709 to <4 x i32>*
  %9711 = load <4 x i32>, <4 x i32>* %9710, align 4, !tbaa !3
  %9712 = getelementptr inbounds i32, i32* %9709, i32 4
  %9713 = bitcast i32* %9712 to <4 x i32>*
  %9714 = load <4 x i32>, <4 x i32>* %9713, align 4, !tbaa !3
  %9715 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %9711
  %9716 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %9714
  %9717 = bitcast <4 x i8*> %9715 to <4 x i64*>
  %9718 = bitcast <4 x i8*> %9716 to <4 x i64*>
  %9719 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9717, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9720 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9718, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9721 = icmp eq <4 x i32> %9701, %9711
  %9722 = icmp eq <4 x i32> %9703, %9714
  %9723 = select <4 x i1> %9721, <4 x i64> %9719, <4 x i64> zeroinitializer
  %9724 = select <4 x i1> %9722, <4 x i64> %9720, <4 x i64> zeroinitializer
  %9725 = add <4 x i64> %9723, %9706
  %9726 = add <4 x i64> %9724, %9707
  %9727 = or i32 %9705, 9
  %9728 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9727
  %9729 = bitcast i32* %9728 to <4 x i32>*
  %9730 = load <4 x i32>, <4 x i32>* %9729, align 4, !tbaa !3
  %9731 = getelementptr inbounds i32, i32* %9728, i32 4
  %9732 = bitcast i32* %9731 to <4 x i32>*
  %9733 = load <4 x i32>, <4 x i32>* %9732, align 4, !tbaa !3
  %9734 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %9730
  %9735 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %9733
  %9736 = bitcast <4 x i8*> %9734 to <4 x i64*>
  %9737 = bitcast <4 x i8*> %9735 to <4 x i64*>
  %9738 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9736, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9739 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9737, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9740 = icmp eq <4 x i32> %9701, %9730
  %9741 = icmp eq <4 x i32> %9703, %9733
  %9742 = select <4 x i1> %9740, <4 x i64> %9738, <4 x i64> zeroinitializer
  %9743 = select <4 x i1> %9741, <4 x i64> %9739, <4 x i64> zeroinitializer
  %9744 = add <4 x i64> %9742, %9725
  %9745 = add <4 x i64> %9743, %9726
  %9746 = or i32 %9705, 17
  %9747 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9746
  %9748 = bitcast i32* %9747 to <4 x i32>*
  %9749 = load <4 x i32>, <4 x i32>* %9748, align 4, !tbaa !3
  %9750 = getelementptr inbounds i32, i32* %9747, i32 4
  %9751 = bitcast i32* %9750 to <4 x i32>*
  %9752 = load <4 x i32>, <4 x i32>* %9751, align 4, !tbaa !3
  %9753 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %9749
  %9754 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %9752
  %9755 = bitcast <4 x i8*> %9753 to <4 x i64*>
  %9756 = bitcast <4 x i8*> %9754 to <4 x i64*>
  %9757 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9755, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9758 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9756, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9759 = icmp eq <4 x i32> %9701, %9749
  %9760 = icmp eq <4 x i32> %9703, %9752
  %9761 = select <4 x i1> %9759, <4 x i64> %9757, <4 x i64> zeroinitializer
  %9762 = select <4 x i1> %9760, <4 x i64> %9758, <4 x i64> zeroinitializer
  %9763 = add <4 x i64> %9761, %9744
  %9764 = add <4 x i64> %9762, %9745
  %9765 = icmp eq i32 %9705, 224
  br i1 %9765, label %9766, label %12569, !llvm.loop !117

9766:                                             ; preds = %9704
  %9767 = add <4 x i64> %9764, %9763
  %9768 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9767)
  %9769 = icmp eq i32 %9699, 1992
  %9770 = select i1 %9769, i64 5296930162245565346, i64 0
  %9771 = add i64 %9770, %9768
  %9772 = icmp eq i32 %9699, 2000
  %9773 = select i1 %9772, i64 -6347414485825053312, i64 0
  %9774 = add i64 %9773, %9771
  %9775 = icmp eq i32 %9699, 2008
  %9776 = select i1 %9775, i64 -1111471293076483761, i64 0
  %9777 = add i64 %9776, %9774
  %9778 = icmp eq i32 %9699, 2016
  %9779 = select i1 %9778, i64 6762709279494119711, i64 0
  %9780 = add i64 %9779, %9777
  %9781 = icmp eq i32 %9699, 2024
  %9782 = select i1 %9781, i64 5502587883897177034, i64 0
  %9783 = add i64 %9782, %9780
  %9784 = icmp eq i32 %9699, 2032
  %9785 = select i1 %9784, i64 8203933284918551466, i64 0
  %9786 = add i64 %9785, %9783
  %9787 = icmp eq i32 %9699, 2040
  %9788 = select i1 %9787, i64 -3176116833483372990, i64 0
  %9789 = add i64 %9788, %9786
  %9790 = load i64, i64* @ctx.0.5, align 8, !tbaa !7
  %9791 = xor i64 %9231, %9138
  %9792 = xor i64 %9791, %9324
  %9793 = xor i64 %9792, %9417
  %9794 = xor i64 %9793, %9510
  %9795 = xor i64 %9794, %9603
  %9796 = xor i64 %9795, %9696
  %9797 = xor i64 %9796, %9789
  %9798 = xor i64 %9797, %9790
  %9799 = lshr i64 %9798, 53
  %9800 = trunc i64 %9799 to i32
  %9801 = and i32 %9800, 2040
  %9802 = insertelement <4 x i32> poison, i32 %9801, i32 0
  %9803 = shufflevector <4 x i32> %9802, <4 x i32> poison, <4 x i32> zeroinitializer
  %9804 = insertelement <4 x i32> poison, i32 %9801, i32 0
  %9805 = shufflevector <4 x i32> %9804, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9806

9806:                                             ; preds = %12548, %9766
  %9807 = phi i32 [ 0, %9766 ], [ %12568, %12548 ]
  %9808 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9766 ], [ %12566, %12548 ]
  %9809 = phi <4 x i64> [ zeroinitializer, %9766 ], [ %12567, %12548 ]
  %9810 = or i32 %9807, 1
  %9811 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9810
  %9812 = bitcast i32* %9811 to <4 x i32>*
  %9813 = load <4 x i32>, <4 x i32>* %9812, align 4, !tbaa !3
  %9814 = getelementptr inbounds i32, i32* %9811, i32 4
  %9815 = bitcast i32* %9814 to <4 x i32>*
  %9816 = load <4 x i32>, <4 x i32>* %9815, align 4, !tbaa !3
  %9817 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9813
  %9818 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9816
  %9819 = bitcast <4 x i8*> %9817 to <4 x i64*>
  %9820 = bitcast <4 x i8*> %9818 to <4 x i64*>
  %9821 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9819, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9822 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9820, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9823 = icmp eq <4 x i32> %9803, %9813
  %9824 = icmp eq <4 x i32> %9805, %9816
  %9825 = select <4 x i1> %9823, <4 x i64> %9821, <4 x i64> zeroinitializer
  %9826 = select <4 x i1> %9824, <4 x i64> %9822, <4 x i64> zeroinitializer
  %9827 = add <4 x i64> %9825, %9808
  %9828 = add <4 x i64> %9826, %9809
  %9829 = or i32 %9807, 9
  %9830 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9829
  %9831 = bitcast i32* %9830 to <4 x i32>*
  %9832 = load <4 x i32>, <4 x i32>* %9831, align 4, !tbaa !3
  %9833 = getelementptr inbounds i32, i32* %9830, i32 4
  %9834 = bitcast i32* %9833 to <4 x i32>*
  %9835 = load <4 x i32>, <4 x i32>* %9834, align 4, !tbaa !3
  %9836 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9832
  %9837 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9835
  %9838 = bitcast <4 x i8*> %9836 to <4 x i64*>
  %9839 = bitcast <4 x i8*> %9837 to <4 x i64*>
  %9840 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9838, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9841 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9839, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9842 = icmp eq <4 x i32> %9803, %9832
  %9843 = icmp eq <4 x i32> %9805, %9835
  %9844 = select <4 x i1> %9842, <4 x i64> %9840, <4 x i64> zeroinitializer
  %9845 = select <4 x i1> %9843, <4 x i64> %9841, <4 x i64> zeroinitializer
  %9846 = add <4 x i64> %9844, %9827
  %9847 = add <4 x i64> %9845, %9828
  %9848 = or i32 %9807, 17
  %9849 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9848
  %9850 = bitcast i32* %9849 to <4 x i32>*
  %9851 = load <4 x i32>, <4 x i32>* %9850, align 4, !tbaa !3
  %9852 = getelementptr inbounds i32, i32* %9849, i32 4
  %9853 = bitcast i32* %9852 to <4 x i32>*
  %9854 = load <4 x i32>, <4 x i32>* %9853, align 4, !tbaa !3
  %9855 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9851
  %9856 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %9854
  %9857 = bitcast <4 x i8*> %9855 to <4 x i64*>
  %9858 = bitcast <4 x i8*> %9856 to <4 x i64*>
  %9859 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9857, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9860 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9858, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9861 = icmp eq <4 x i32> %9803, %9851
  %9862 = icmp eq <4 x i32> %9805, %9854
  %9863 = select <4 x i1> %9861, <4 x i64> %9859, <4 x i64> zeroinitializer
  %9864 = select <4 x i1> %9862, <4 x i64> %9860, <4 x i64> zeroinitializer
  %9865 = add <4 x i64> %9863, %9846
  %9866 = add <4 x i64> %9864, %9847
  %9867 = icmp eq i32 %9807, 224
  br i1 %9867, label %9868, label %12548, !llvm.loop !118

9868:                                             ; preds = %9806
  %9869 = add <4 x i64> %9866, %9865
  %9870 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9869)
  %9871 = icmp eq i32 %9801, 1992
  %9872 = select i1 %9871, i64 -6702567834671021495, i64 0
  %9873 = add i64 %9872, %9870
  %9874 = icmp eq i32 %9801, 2000
  %9875 = select i1 %9874, i64 -9179115894310901337, i64 0
  %9876 = add i64 %9875, %9873
  %9877 = icmp eq i32 %9801, 2008
  %9878 = select i1 %9877, i64 5751414958667764720, i64 0
  %9879 = add i64 %9878, %9876
  %9880 = icmp eq i32 %9801, 2016
  %9881 = select i1 %9880, i64 2243210855174429021, i64 0
  %9882 = add i64 %9881, %9879
  %9883 = icmp eq i32 %9801, 2024
  %9884 = select i1 %9883, i64 -3872233913575383732, i64 0
  %9885 = add i64 %9884, %9882
  %9886 = icmp eq i32 %9801, 2032
  %9887 = select i1 %9886, i64 -6132897494654657935, i64 0
  %9888 = add i64 %9887, %9885
  %9889 = icmp eq i32 %9801, 2040
  %9890 = select i1 %9889, i64 4811556717733801171, i64 0
  %9891 = add i64 %9890, %9888
  %9892 = lshr i64 %9798, 45
  %9893 = trunc i64 %9892 to i32
  %9894 = and i32 %9893, 2040
  %9895 = insertelement <4 x i32> poison, i32 %9894, i32 0
  %9896 = shufflevector <4 x i32> %9895, <4 x i32> poison, <4 x i32> zeroinitializer
  %9897 = insertelement <4 x i32> poison, i32 %9894, i32 0
  %9898 = shufflevector <4 x i32> %9897, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9899

9899:                                             ; preds = %12527, %9868
  %9900 = phi i32 [ 0, %9868 ], [ %12547, %12527 ]
  %9901 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9868 ], [ %12545, %12527 ]
  %9902 = phi <4 x i64> [ zeroinitializer, %9868 ], [ %12546, %12527 ]
  %9903 = or i32 %9900, 1
  %9904 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9903
  %9905 = bitcast i32* %9904 to <4 x i32>*
  %9906 = load <4 x i32>, <4 x i32>* %9905, align 4, !tbaa !3
  %9907 = getelementptr inbounds i32, i32* %9904, i32 4
  %9908 = bitcast i32* %9907 to <4 x i32>*
  %9909 = load <4 x i32>, <4 x i32>* %9908, align 4, !tbaa !3
  %9910 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9906
  %9911 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9909
  %9912 = bitcast <4 x i8*> %9910 to <4 x i64*>
  %9913 = bitcast <4 x i8*> %9911 to <4 x i64*>
  %9914 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9912, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9915 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9913, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9916 = icmp eq <4 x i32> %9896, %9906
  %9917 = icmp eq <4 x i32> %9898, %9909
  %9918 = select <4 x i1> %9916, <4 x i64> %9914, <4 x i64> zeroinitializer
  %9919 = select <4 x i1> %9917, <4 x i64> %9915, <4 x i64> zeroinitializer
  %9920 = add <4 x i64> %9918, %9901
  %9921 = add <4 x i64> %9919, %9902
  %9922 = or i32 %9900, 9
  %9923 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9922
  %9924 = bitcast i32* %9923 to <4 x i32>*
  %9925 = load <4 x i32>, <4 x i32>* %9924, align 4, !tbaa !3
  %9926 = getelementptr inbounds i32, i32* %9923, i32 4
  %9927 = bitcast i32* %9926 to <4 x i32>*
  %9928 = load <4 x i32>, <4 x i32>* %9927, align 4, !tbaa !3
  %9929 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9925
  %9930 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9928
  %9931 = bitcast <4 x i8*> %9929 to <4 x i64*>
  %9932 = bitcast <4 x i8*> %9930 to <4 x i64*>
  %9933 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9931, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9934 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9932, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9935 = icmp eq <4 x i32> %9896, %9925
  %9936 = icmp eq <4 x i32> %9898, %9928
  %9937 = select <4 x i1> %9935, <4 x i64> %9933, <4 x i64> zeroinitializer
  %9938 = select <4 x i1> %9936, <4 x i64> %9934, <4 x i64> zeroinitializer
  %9939 = add <4 x i64> %9937, %9920
  %9940 = add <4 x i64> %9938, %9921
  %9941 = or i32 %9900, 17
  %9942 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9941
  %9943 = bitcast i32* %9942 to <4 x i32>*
  %9944 = load <4 x i32>, <4 x i32>* %9943, align 4, !tbaa !3
  %9945 = getelementptr inbounds i32, i32* %9942, i32 4
  %9946 = bitcast i32* %9945 to <4 x i32>*
  %9947 = load <4 x i32>, <4 x i32>* %9946, align 4, !tbaa !3
  %9948 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9944
  %9949 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %9947
  %9950 = bitcast <4 x i8*> %9948 to <4 x i64*>
  %9951 = bitcast <4 x i8*> %9949 to <4 x i64*>
  %9952 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9950, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9953 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %9951, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %9954 = icmp eq <4 x i32> %9896, %9944
  %9955 = icmp eq <4 x i32> %9898, %9947
  %9956 = select <4 x i1> %9954, <4 x i64> %9952, <4 x i64> zeroinitializer
  %9957 = select <4 x i1> %9955, <4 x i64> %9953, <4 x i64> zeroinitializer
  %9958 = add <4 x i64> %9956, %9939
  %9959 = add <4 x i64> %9957, %9940
  %9960 = icmp eq i32 %9900, 224
  br i1 %9960, label %9961, label %12527, !llvm.loop !119

9961:                                             ; preds = %9899
  %9962 = add <4 x i64> %9959, %9958
  %9963 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %9962)
  %9964 = icmp eq i32 %9894, 1992
  %9965 = select i1 %9964, i64 -314670665226827390, i64 0
  %9966 = add i64 %9965, %9963
  %9967 = icmp eq i32 %9894, 2000
  %9968 = select i1 %9967, i64 -7097468252516276247, i64 0
  %9969 = add i64 %9968, %9966
  %9970 = icmp eq i32 %9894, 2008
  %9971 = select i1 %9970, i64 -3364349307489619821, i64 0
  %9972 = add i64 %9971, %9969
  %9973 = icmp eq i32 %9894, 2016
  %9974 = select i1 %9973, i64 2386735715921845721, i64 0
  %9975 = add i64 %9974, %9972
  %9976 = icmp eq i32 %9894, 2024
  %9977 = select i1 %9976, i64 4884933414564023389, i64 0
  %9978 = add i64 %9977, %9975
  %9979 = icmp eq i32 %9894, 2032
  %9980 = select i1 %9979, i64 -2041757280372035110, i64 0
  %9981 = add i64 %9980, %9978
  %9982 = icmp eq i32 %9894, 2040
  %9983 = select i1 %9982, i64 -4160667357316787220, i64 0
  %9984 = add i64 %9983, %9981
  %9985 = lshr i64 %9798, 37
  %9986 = trunc i64 %9985 to i32
  %9987 = and i32 %9986, 2040
  %9988 = insertelement <4 x i32> poison, i32 %9987, i32 0
  %9989 = shufflevector <4 x i32> %9988, <4 x i32> poison, <4 x i32> zeroinitializer
  %9990 = insertelement <4 x i32> poison, i32 %9987, i32 0
  %9991 = shufflevector <4 x i32> %9990, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %9992

9992:                                             ; preds = %12506, %9961
  %9993 = phi i32 [ 0, %9961 ], [ %12526, %12506 ]
  %9994 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %9961 ], [ %12524, %12506 ]
  %9995 = phi <4 x i64> [ zeroinitializer, %9961 ], [ %12525, %12506 ]
  %9996 = or i32 %9993, 1
  %9997 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %9996
  %9998 = bitcast i32* %9997 to <4 x i32>*
  %9999 = load <4 x i32>, <4 x i32>* %9998, align 4, !tbaa !3
  %10000 = getelementptr inbounds i32, i32* %9997, i32 4
  %10001 = bitcast i32* %10000 to <4 x i32>*
  %10002 = load <4 x i32>, <4 x i32>* %10001, align 4, !tbaa !3
  %10003 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %9999
  %10004 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10002
  %10005 = bitcast <4 x i8*> %10003 to <4 x i64*>
  %10006 = bitcast <4 x i8*> %10004 to <4 x i64*>
  %10007 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10005, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10008 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10006, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10009 = icmp eq <4 x i32> %9989, %9999
  %10010 = icmp eq <4 x i32> %9991, %10002
  %10011 = select <4 x i1> %10009, <4 x i64> %10007, <4 x i64> zeroinitializer
  %10012 = select <4 x i1> %10010, <4 x i64> %10008, <4 x i64> zeroinitializer
  %10013 = add <4 x i64> %10011, %9994
  %10014 = add <4 x i64> %10012, %9995
  %10015 = or i32 %9993, 9
  %10016 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10015
  %10017 = bitcast i32* %10016 to <4 x i32>*
  %10018 = load <4 x i32>, <4 x i32>* %10017, align 4, !tbaa !3
  %10019 = getelementptr inbounds i32, i32* %10016, i32 4
  %10020 = bitcast i32* %10019 to <4 x i32>*
  %10021 = load <4 x i32>, <4 x i32>* %10020, align 4, !tbaa !3
  %10022 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10018
  %10023 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10021
  %10024 = bitcast <4 x i8*> %10022 to <4 x i64*>
  %10025 = bitcast <4 x i8*> %10023 to <4 x i64*>
  %10026 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10024, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10027 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10025, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10028 = icmp eq <4 x i32> %9989, %10018
  %10029 = icmp eq <4 x i32> %9991, %10021
  %10030 = select <4 x i1> %10028, <4 x i64> %10026, <4 x i64> zeroinitializer
  %10031 = select <4 x i1> %10029, <4 x i64> %10027, <4 x i64> zeroinitializer
  %10032 = add <4 x i64> %10030, %10013
  %10033 = add <4 x i64> %10031, %10014
  %10034 = or i32 %9993, 17
  %10035 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10034
  %10036 = bitcast i32* %10035 to <4 x i32>*
  %10037 = load <4 x i32>, <4 x i32>* %10036, align 4, !tbaa !3
  %10038 = getelementptr inbounds i32, i32* %10035, i32 4
  %10039 = bitcast i32* %10038 to <4 x i32>*
  %10040 = load <4 x i32>, <4 x i32>* %10039, align 4, !tbaa !3
  %10041 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10037
  %10042 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10040
  %10043 = bitcast <4 x i8*> %10041 to <4 x i64*>
  %10044 = bitcast <4 x i8*> %10042 to <4 x i64*>
  %10045 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10043, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10046 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10044, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10047 = icmp eq <4 x i32> %9989, %10037
  %10048 = icmp eq <4 x i32> %9991, %10040
  %10049 = select <4 x i1> %10047, <4 x i64> %10045, <4 x i64> zeroinitializer
  %10050 = select <4 x i1> %10048, <4 x i64> %10046, <4 x i64> zeroinitializer
  %10051 = add <4 x i64> %10049, %10032
  %10052 = add <4 x i64> %10050, %10033
  %10053 = icmp eq i32 %9993, 224
  br i1 %10053, label %10054, label %12506, !llvm.loop !120

10054:                                            ; preds = %9992
  %10055 = add <4 x i64> %10052, %10051
  %10056 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10055)
  %10057 = icmp eq i32 %9987, 1992
  %10058 = select i1 %10057, i64 -5615809534224635015, i64 0
  %10059 = add i64 %10058, %10056
  %10060 = icmp eq i32 %9987, 2000
  %10061 = select i1 %10060, i64 4231836215586269044, i64 0
  %10062 = add i64 %10061, %10059
  %10063 = icmp eq i32 %9987, 2008
  %10064 = select i1 %10063, i64 2408950612238581570, i64 0
  %10065 = add i64 %10064, %10062
  %10066 = icmp eq i32 %9987, 2016
  %10067 = select i1 %10066, i64 8963041913638568696, i64 0
  %10068 = add i64 %10067, %10065
  %10069 = icmp eq i32 %9987, 2024
  %10070 = select i1 %10069, i64 1136536871657834014, i64 0
  %10071 = add i64 %10070, %10068
  %10072 = icmp eq i32 %9987, 2032
  %10073 = select i1 %10072, i64 -7910384849877083335, i64 0
  %10074 = add i64 %10073, %10071
  %10075 = icmp eq i32 %9987, 2040
  %10076 = select i1 %10075, i64 1537771219914559786, i64 0
  %10077 = add i64 %10076, %10074
  %10078 = lshr i64 %9798, 29
  %10079 = trunc i64 %10078 to i32
  %10080 = and i32 %10079, 2040
  %10081 = insertelement <4 x i32> poison, i32 %10080, i32 0
  %10082 = shufflevector <4 x i32> %10081, <4 x i32> poison, <4 x i32> zeroinitializer
  %10083 = insertelement <4 x i32> poison, i32 %10080, i32 0
  %10084 = shufflevector <4 x i32> %10083, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10085

10085:                                            ; preds = %12485, %10054
  %10086 = phi i32 [ 0, %10054 ], [ %12505, %12485 ]
  %10087 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10054 ], [ %12503, %12485 ]
  %10088 = phi <4 x i64> [ zeroinitializer, %10054 ], [ %12504, %12485 ]
  %10089 = or i32 %10086, 1
  %10090 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10089
  %10091 = bitcast i32* %10090 to <4 x i32>*
  %10092 = load <4 x i32>, <4 x i32>* %10091, align 4, !tbaa !3
  %10093 = getelementptr inbounds i32, i32* %10090, i32 4
  %10094 = bitcast i32* %10093 to <4 x i32>*
  %10095 = load <4 x i32>, <4 x i32>* %10094, align 4, !tbaa !3
  %10096 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10092
  %10097 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10095
  %10098 = bitcast <4 x i8*> %10096 to <4 x i64*>
  %10099 = bitcast <4 x i8*> %10097 to <4 x i64*>
  %10100 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10098, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10101 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10099, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10102 = icmp eq <4 x i32> %10082, %10092
  %10103 = icmp eq <4 x i32> %10084, %10095
  %10104 = select <4 x i1> %10102, <4 x i64> %10100, <4 x i64> zeroinitializer
  %10105 = select <4 x i1> %10103, <4 x i64> %10101, <4 x i64> zeroinitializer
  %10106 = add <4 x i64> %10104, %10087
  %10107 = add <4 x i64> %10105, %10088
  %10108 = or i32 %10086, 9
  %10109 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10108
  %10110 = bitcast i32* %10109 to <4 x i32>*
  %10111 = load <4 x i32>, <4 x i32>* %10110, align 4, !tbaa !3
  %10112 = getelementptr inbounds i32, i32* %10109, i32 4
  %10113 = bitcast i32* %10112 to <4 x i32>*
  %10114 = load <4 x i32>, <4 x i32>* %10113, align 4, !tbaa !3
  %10115 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10111
  %10116 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10114
  %10117 = bitcast <4 x i8*> %10115 to <4 x i64*>
  %10118 = bitcast <4 x i8*> %10116 to <4 x i64*>
  %10119 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10117, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10120 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10118, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10121 = icmp eq <4 x i32> %10082, %10111
  %10122 = icmp eq <4 x i32> %10084, %10114
  %10123 = select <4 x i1> %10121, <4 x i64> %10119, <4 x i64> zeroinitializer
  %10124 = select <4 x i1> %10122, <4 x i64> %10120, <4 x i64> zeroinitializer
  %10125 = add <4 x i64> %10123, %10106
  %10126 = add <4 x i64> %10124, %10107
  %10127 = or i32 %10086, 17
  %10128 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10127
  %10129 = bitcast i32* %10128 to <4 x i32>*
  %10130 = load <4 x i32>, <4 x i32>* %10129, align 4, !tbaa !3
  %10131 = getelementptr inbounds i32, i32* %10128, i32 4
  %10132 = bitcast i32* %10131 to <4 x i32>*
  %10133 = load <4 x i32>, <4 x i32>* %10132, align 4, !tbaa !3
  %10134 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10130
  %10135 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10133
  %10136 = bitcast <4 x i8*> %10134 to <4 x i64*>
  %10137 = bitcast <4 x i8*> %10135 to <4 x i64*>
  %10138 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10136, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10139 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10137, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10140 = icmp eq <4 x i32> %10082, %10130
  %10141 = icmp eq <4 x i32> %10084, %10133
  %10142 = select <4 x i1> %10140, <4 x i64> %10138, <4 x i64> zeroinitializer
  %10143 = select <4 x i1> %10141, <4 x i64> %10139, <4 x i64> zeroinitializer
  %10144 = add <4 x i64> %10142, %10125
  %10145 = add <4 x i64> %10143, %10126
  %10146 = icmp eq i32 %10086, 224
  br i1 %10146, label %10147, label %12485, !llvm.loop !121

10147:                                            ; preds = %10085
  %10148 = add <4 x i64> %10145, %10144
  %10149 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10148)
  %10150 = icmp eq i32 %10080, 1992
  %10151 = select i1 %10150, i64 1203300724897905131, i64 0
  %10152 = add i64 %10151, %10149
  %10153 = icmp eq i32 %10080, 2000
  %10154 = select i1 %10153, i64 -5027532858107268057, i64 0
  %10155 = add i64 %10154, %10152
  %10156 = icmp eq i32 %10080, 2008
  %10157 = select i1 %10156, i64 7935854159672328895, i64 0
  %10158 = add i64 %10157, %10155
  %10159 = icmp eq i32 %10080, 2016
  %10160 = select i1 %10159, i64 7168641125469255746, i64 0
  %10161 = add i64 %10160, %10158
  %10162 = icmp eq i32 %10080, 2024
  %10163 = select i1 %10162, i64 -4247101387443462522, i64 0
  %10164 = add i64 %10163, %10161
  %10165 = icmp eq i32 %10080, 2032
  %10166 = select i1 %10165, i64 4076570933917792731, i64 0
  %10167 = add i64 %10166, %10164
  %10168 = icmp eq i32 %10080, 2040
  %10169 = select i1 %10168, i64 6275139646136265361, i64 0
  %10170 = add i64 %10169, %10167
  %10171 = lshr i64 %9798, 21
  %10172 = trunc i64 %10171 to i32
  %10173 = and i32 %10172, 2040
  %10174 = insertelement <4 x i32> poison, i32 %10173, i32 0
  %10175 = shufflevector <4 x i32> %10174, <4 x i32> poison, <4 x i32> zeroinitializer
  %10176 = insertelement <4 x i32> poison, i32 %10173, i32 0
  %10177 = shufflevector <4 x i32> %10176, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10178

10178:                                            ; preds = %12464, %10147
  %10179 = phi i32 [ 0, %10147 ], [ %12484, %12464 ]
  %10180 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10147 ], [ %12482, %12464 ]
  %10181 = phi <4 x i64> [ zeroinitializer, %10147 ], [ %12483, %12464 ]
  %10182 = or i32 %10179, 1
  %10183 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10182
  %10184 = bitcast i32* %10183 to <4 x i32>*
  %10185 = load <4 x i32>, <4 x i32>* %10184, align 4, !tbaa !3
  %10186 = getelementptr inbounds i32, i32* %10183, i32 4
  %10187 = bitcast i32* %10186 to <4 x i32>*
  %10188 = load <4 x i32>, <4 x i32>* %10187, align 4, !tbaa !3
  %10189 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10185
  %10190 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10188
  %10191 = bitcast <4 x i8*> %10189 to <4 x i64*>
  %10192 = bitcast <4 x i8*> %10190 to <4 x i64*>
  %10193 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10191, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10194 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10192, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10195 = icmp eq <4 x i32> %10175, %10185
  %10196 = icmp eq <4 x i32> %10177, %10188
  %10197 = select <4 x i1> %10195, <4 x i64> %10193, <4 x i64> zeroinitializer
  %10198 = select <4 x i1> %10196, <4 x i64> %10194, <4 x i64> zeroinitializer
  %10199 = add <4 x i64> %10197, %10180
  %10200 = add <4 x i64> %10198, %10181
  %10201 = or i32 %10179, 9
  %10202 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10201
  %10203 = bitcast i32* %10202 to <4 x i32>*
  %10204 = load <4 x i32>, <4 x i32>* %10203, align 4, !tbaa !3
  %10205 = getelementptr inbounds i32, i32* %10202, i32 4
  %10206 = bitcast i32* %10205 to <4 x i32>*
  %10207 = load <4 x i32>, <4 x i32>* %10206, align 4, !tbaa !3
  %10208 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10204
  %10209 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10207
  %10210 = bitcast <4 x i8*> %10208 to <4 x i64*>
  %10211 = bitcast <4 x i8*> %10209 to <4 x i64*>
  %10212 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10210, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10213 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10211, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10214 = icmp eq <4 x i32> %10175, %10204
  %10215 = icmp eq <4 x i32> %10177, %10207
  %10216 = select <4 x i1> %10214, <4 x i64> %10212, <4 x i64> zeroinitializer
  %10217 = select <4 x i1> %10215, <4 x i64> %10213, <4 x i64> zeroinitializer
  %10218 = add <4 x i64> %10216, %10199
  %10219 = add <4 x i64> %10217, %10200
  %10220 = or i32 %10179, 17
  %10221 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10220
  %10222 = bitcast i32* %10221 to <4 x i32>*
  %10223 = load <4 x i32>, <4 x i32>* %10222, align 4, !tbaa !3
  %10224 = getelementptr inbounds i32, i32* %10221, i32 4
  %10225 = bitcast i32* %10224 to <4 x i32>*
  %10226 = load <4 x i32>, <4 x i32>* %10225, align 4, !tbaa !3
  %10227 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10223
  %10228 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10226
  %10229 = bitcast <4 x i8*> %10227 to <4 x i64*>
  %10230 = bitcast <4 x i8*> %10228 to <4 x i64*>
  %10231 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10229, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10232 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10230, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10233 = icmp eq <4 x i32> %10175, %10223
  %10234 = icmp eq <4 x i32> %10177, %10226
  %10235 = select <4 x i1> %10233, <4 x i64> %10231, <4 x i64> zeroinitializer
  %10236 = select <4 x i1> %10234, <4 x i64> %10232, <4 x i64> zeroinitializer
  %10237 = add <4 x i64> %10235, %10218
  %10238 = add <4 x i64> %10236, %10219
  %10239 = icmp eq i32 %10179, 224
  br i1 %10239, label %10240, label %12464, !llvm.loop !122

10240:                                            ; preds = %10178
  %10241 = add <4 x i64> %10238, %10237
  %10242 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10241)
  %10243 = icmp eq i32 %10173, 1992
  %10244 = select i1 %10243, i64 -1479007749835869680, i64 0
  %10245 = add i64 %10244, %10242
  %10246 = icmp eq i32 %10173, 2000
  %10247 = select i1 %10246, i64 2843154170404223674, i64 0
  %10248 = add i64 %10247, %10245
  %10249 = icmp eq i32 %10173, 2008
  %10250 = select i1 %10249, i64 -4665003603661872786, i64 0
  %10251 = add i64 %10250, %10248
  %10252 = icmp eq i32 %10173, 2016
  %10253 = select i1 %10252, i64 4825845994704960611, i64 0
  %10254 = add i64 %10253, %10251
  %10255 = icmp eq i32 %10173, 2024
  %10256 = select i1 %10255, i64 -8782479638933598267, i64 0
  %10257 = add i64 %10256, %10254
  %10258 = icmp eq i32 %10173, 2032
  %10259 = select i1 %10258, i64 -2649846723997625800, i64 0
  %10260 = add i64 %10259, %10257
  %10261 = icmp eq i32 %10173, 2040
  %10262 = select i1 %10261, i64 -7986310597085620905, i64 0
  %10263 = add i64 %10262, %10260
  %10264 = lshr i64 %9798, 13
  %10265 = trunc i64 %10264 to i32
  %10266 = and i32 %10265, 2040
  %10267 = insertelement <4 x i32> poison, i32 %10266, i32 0
  %10268 = shufflevector <4 x i32> %10267, <4 x i32> poison, <4 x i32> zeroinitializer
  %10269 = insertelement <4 x i32> poison, i32 %10266, i32 0
  %10270 = shufflevector <4 x i32> %10269, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10271

10271:                                            ; preds = %12443, %10240
  %10272 = phi i32 [ 0, %10240 ], [ %12463, %12443 ]
  %10273 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10240 ], [ %12461, %12443 ]
  %10274 = phi <4 x i64> [ zeroinitializer, %10240 ], [ %12462, %12443 ]
  %10275 = or i32 %10272, 1
  %10276 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10275
  %10277 = bitcast i32* %10276 to <4 x i32>*
  %10278 = load <4 x i32>, <4 x i32>* %10277, align 4, !tbaa !3
  %10279 = getelementptr inbounds i32, i32* %10276, i32 4
  %10280 = bitcast i32* %10279 to <4 x i32>*
  %10281 = load <4 x i32>, <4 x i32>* %10280, align 4, !tbaa !3
  %10282 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %10278
  %10283 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %10281
  %10284 = bitcast <4 x i8*> %10282 to <4 x i64*>
  %10285 = bitcast <4 x i8*> %10283 to <4 x i64*>
  %10286 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10284, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10287 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10285, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10288 = icmp eq <4 x i32> %10268, %10278
  %10289 = icmp eq <4 x i32> %10270, %10281
  %10290 = select <4 x i1> %10288, <4 x i64> %10286, <4 x i64> zeroinitializer
  %10291 = select <4 x i1> %10289, <4 x i64> %10287, <4 x i64> zeroinitializer
  %10292 = add <4 x i64> %10290, %10273
  %10293 = add <4 x i64> %10291, %10274
  %10294 = or i32 %10272, 9
  %10295 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10294
  %10296 = bitcast i32* %10295 to <4 x i32>*
  %10297 = load <4 x i32>, <4 x i32>* %10296, align 4, !tbaa !3
  %10298 = getelementptr inbounds i32, i32* %10295, i32 4
  %10299 = bitcast i32* %10298 to <4 x i32>*
  %10300 = load <4 x i32>, <4 x i32>* %10299, align 4, !tbaa !3
  %10301 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %10297
  %10302 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %10300
  %10303 = bitcast <4 x i8*> %10301 to <4 x i64*>
  %10304 = bitcast <4 x i8*> %10302 to <4 x i64*>
  %10305 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10303, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10306 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10304, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10307 = icmp eq <4 x i32> %10268, %10297
  %10308 = icmp eq <4 x i32> %10270, %10300
  %10309 = select <4 x i1> %10307, <4 x i64> %10305, <4 x i64> zeroinitializer
  %10310 = select <4 x i1> %10308, <4 x i64> %10306, <4 x i64> zeroinitializer
  %10311 = add <4 x i64> %10309, %10292
  %10312 = add <4 x i64> %10310, %10293
  %10313 = or i32 %10272, 17
  %10314 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10313
  %10315 = bitcast i32* %10314 to <4 x i32>*
  %10316 = load <4 x i32>, <4 x i32>* %10315, align 4, !tbaa !3
  %10317 = getelementptr inbounds i32, i32* %10314, i32 4
  %10318 = bitcast i32* %10317 to <4 x i32>*
  %10319 = load <4 x i32>, <4 x i32>* %10318, align 4, !tbaa !3
  %10320 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %10316
  %10321 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %10319
  %10322 = bitcast <4 x i8*> %10320 to <4 x i64*>
  %10323 = bitcast <4 x i8*> %10321 to <4 x i64*>
  %10324 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10322, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10325 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10323, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10326 = icmp eq <4 x i32> %10268, %10316
  %10327 = icmp eq <4 x i32> %10270, %10319
  %10328 = select <4 x i1> %10326, <4 x i64> %10324, <4 x i64> zeroinitializer
  %10329 = select <4 x i1> %10327, <4 x i64> %10325, <4 x i64> zeroinitializer
  %10330 = add <4 x i64> %10328, %10311
  %10331 = add <4 x i64> %10329, %10312
  %10332 = icmp eq i32 %10272, 224
  br i1 %10332, label %10333, label %12443, !llvm.loop !123

10333:                                            ; preds = %10271
  %10334 = add <4 x i64> %10331, %10330
  %10335 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10334)
  %10336 = icmp eq i32 %10266, 1992
  %10337 = select i1 %10336, i64 8785196325032562866, i64 0
  %10338 = add i64 %10337, %10335
  %10339 = icmp eq i32 %10266, 2000
  %10340 = select i1 %10339, i64 8369843054303033914, i64 0
  %10341 = add i64 %10340, %10338
  %10342 = icmp eq i32 %10266, 2008
  %10343 = select i1 %10342, i64 4809827444717481505, i64 0
  %10344 = add i64 %10343, %10341
  %10345 = icmp eq i32 %10266, 2016
  %10346 = select i1 %10345, i64 -557780216695528580, i64 0
  %10347 = add i64 %10346, %10344
  %10348 = icmp eq i32 %10266, 2024
  %10349 = select i1 %10348, i64 2199529431470097679, i64 0
  %10350 = add i64 %10349, %10347
  %10351 = icmp eq i32 %10266, 2032
  %10352 = select i1 %10351, i64 4169051064997918866, i64 0
  %10353 = add i64 %10352, %10350
  %10354 = icmp eq i32 %10266, 2040
  %10355 = select i1 %10354, i64 3067465835107997461, i64 0
  %10356 = add i64 %10355, %10353
  %10357 = lshr i64 %9798, 5
  %10358 = trunc i64 %10357 to i32
  %10359 = and i32 %10358, 2040
  %10360 = insertelement <4 x i32> poison, i32 %10359, i32 0
  %10361 = shufflevector <4 x i32> %10360, <4 x i32> poison, <4 x i32> zeroinitializer
  %10362 = insertelement <4 x i32> poison, i32 %10359, i32 0
  %10363 = shufflevector <4 x i32> %10362, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10364

10364:                                            ; preds = %12422, %10333
  %10365 = phi i32 [ 0, %10333 ], [ %12442, %12422 ]
  %10366 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10333 ], [ %12440, %12422 ]
  %10367 = phi <4 x i64> [ zeroinitializer, %10333 ], [ %12441, %12422 ]
  %10368 = or i32 %10365, 1
  %10369 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10368
  %10370 = bitcast i32* %10369 to <4 x i32>*
  %10371 = load <4 x i32>, <4 x i32>* %10370, align 4, !tbaa !3
  %10372 = getelementptr inbounds i32, i32* %10369, i32 4
  %10373 = bitcast i32* %10372 to <4 x i32>*
  %10374 = load <4 x i32>, <4 x i32>* %10373, align 4, !tbaa !3
  %10375 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %10371
  %10376 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %10374
  %10377 = bitcast <4 x i8*> %10375 to <4 x i64*>
  %10378 = bitcast <4 x i8*> %10376 to <4 x i64*>
  %10379 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10377, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10380 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10378, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10381 = icmp eq <4 x i32> %10361, %10371
  %10382 = icmp eq <4 x i32> %10363, %10374
  %10383 = select <4 x i1> %10381, <4 x i64> %10379, <4 x i64> zeroinitializer
  %10384 = select <4 x i1> %10382, <4 x i64> %10380, <4 x i64> zeroinitializer
  %10385 = add <4 x i64> %10383, %10366
  %10386 = add <4 x i64> %10384, %10367
  %10387 = or i32 %10365, 9
  %10388 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10387
  %10389 = bitcast i32* %10388 to <4 x i32>*
  %10390 = load <4 x i32>, <4 x i32>* %10389, align 4, !tbaa !3
  %10391 = getelementptr inbounds i32, i32* %10388, i32 4
  %10392 = bitcast i32* %10391 to <4 x i32>*
  %10393 = load <4 x i32>, <4 x i32>* %10392, align 4, !tbaa !3
  %10394 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %10390
  %10395 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %10393
  %10396 = bitcast <4 x i8*> %10394 to <4 x i64*>
  %10397 = bitcast <4 x i8*> %10395 to <4 x i64*>
  %10398 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10396, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10399 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10397, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10400 = icmp eq <4 x i32> %10361, %10390
  %10401 = icmp eq <4 x i32> %10363, %10393
  %10402 = select <4 x i1> %10400, <4 x i64> %10398, <4 x i64> zeroinitializer
  %10403 = select <4 x i1> %10401, <4 x i64> %10399, <4 x i64> zeroinitializer
  %10404 = add <4 x i64> %10402, %10385
  %10405 = add <4 x i64> %10403, %10386
  %10406 = or i32 %10365, 17
  %10407 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10406
  %10408 = bitcast i32* %10407 to <4 x i32>*
  %10409 = load <4 x i32>, <4 x i32>* %10408, align 4, !tbaa !3
  %10410 = getelementptr inbounds i32, i32* %10407, i32 4
  %10411 = bitcast i32* %10410 to <4 x i32>*
  %10412 = load <4 x i32>, <4 x i32>* %10411, align 4, !tbaa !3
  %10413 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %10409
  %10414 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %10412
  %10415 = bitcast <4 x i8*> %10413 to <4 x i64*>
  %10416 = bitcast <4 x i8*> %10414 to <4 x i64*>
  %10417 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10415, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10418 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10416, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10419 = icmp eq <4 x i32> %10361, %10409
  %10420 = icmp eq <4 x i32> %10363, %10412
  %10421 = select <4 x i1> %10419, <4 x i64> %10417, <4 x i64> zeroinitializer
  %10422 = select <4 x i1> %10420, <4 x i64> %10418, <4 x i64> zeroinitializer
  %10423 = add <4 x i64> %10421, %10404
  %10424 = add <4 x i64> %10422, %10405
  %10425 = icmp eq i32 %10365, 224
  br i1 %10425, label %10426, label %12422, !llvm.loop !124

10426:                                            ; preds = %10364
  %10427 = add <4 x i64> %10424, %10423
  %10428 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10427)
  %10429 = icmp eq i32 %10359, 1992
  %10430 = select i1 %10429, i64 -9058450267568037125, i64 0
  %10431 = add i64 %10430, %10428
  %10432 = icmp eq i32 %10359, 2000
  %10433 = select i1 %10432, i64 -1610274961606672227, i64 0
  %10434 = add i64 %10433, %10431
  %10435 = icmp eq i32 %10359, 2008
  %10436 = select i1 %10435, i64 -7786513464973963311, i64 0
  %10437 = add i64 %10436, %10434
  %10438 = icmp eq i32 %10359, 2016
  %10439 = select i1 %10438, i64 -2783995359638905055, i64 0
  %10440 = add i64 %10439, %10437
  %10441 = icmp eq i32 %10359, 2024
  %10442 = select i1 %10441, i64 6722895807429069379, i64 0
  %10443 = add i64 %10442, %10440
  %10444 = icmp eq i32 %10359, 2032
  %10445 = select i1 %10444, i64 -2706140860760151325, i64 0
  %10446 = add i64 %10445, %10443
  %10447 = icmp eq i32 %10359, 2040
  %10448 = select i1 %10447, i64 -1381601050739916090, i64 0
  %10449 = add i64 %10448, %10446
  %10450 = trunc i64 %9798 to i32
  %10451 = shl i32 %10450, 3
  %10452 = and i32 %10451, 2040
  %10453 = insertelement <4 x i32> poison, i32 %10452, i32 0
  %10454 = shufflevector <4 x i32> %10453, <4 x i32> poison, <4 x i32> zeroinitializer
  %10455 = insertelement <4 x i32> poison, i32 %10452, i32 0
  %10456 = shufflevector <4 x i32> %10455, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10457

10457:                                            ; preds = %12401, %10426
  %10458 = phi i32 [ 0, %10426 ], [ %12421, %12401 ]
  %10459 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10426 ], [ %12419, %12401 ]
  %10460 = phi <4 x i64> [ zeroinitializer, %10426 ], [ %12420, %12401 ]
  %10461 = or i32 %10458, 1
  %10462 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10461
  %10463 = bitcast i32* %10462 to <4 x i32>*
  %10464 = load <4 x i32>, <4 x i32>* %10463, align 4, !tbaa !3
  %10465 = getelementptr inbounds i32, i32* %10462, i32 4
  %10466 = bitcast i32* %10465 to <4 x i32>*
  %10467 = load <4 x i32>, <4 x i32>* %10466, align 4, !tbaa !3
  %10468 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %10464
  %10469 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %10467
  %10470 = bitcast <4 x i8*> %10468 to <4 x i64*>
  %10471 = bitcast <4 x i8*> %10469 to <4 x i64*>
  %10472 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10470, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10473 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10471, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10474 = icmp eq <4 x i32> %10454, %10464
  %10475 = icmp eq <4 x i32> %10456, %10467
  %10476 = select <4 x i1> %10474, <4 x i64> %10472, <4 x i64> zeroinitializer
  %10477 = select <4 x i1> %10475, <4 x i64> %10473, <4 x i64> zeroinitializer
  %10478 = add <4 x i64> %10476, %10459
  %10479 = add <4 x i64> %10477, %10460
  %10480 = or i32 %10458, 9
  %10481 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10480
  %10482 = bitcast i32* %10481 to <4 x i32>*
  %10483 = load <4 x i32>, <4 x i32>* %10482, align 4, !tbaa !3
  %10484 = getelementptr inbounds i32, i32* %10481, i32 4
  %10485 = bitcast i32* %10484 to <4 x i32>*
  %10486 = load <4 x i32>, <4 x i32>* %10485, align 4, !tbaa !3
  %10487 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %10483
  %10488 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %10486
  %10489 = bitcast <4 x i8*> %10487 to <4 x i64*>
  %10490 = bitcast <4 x i8*> %10488 to <4 x i64*>
  %10491 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10489, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10492 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10490, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10493 = icmp eq <4 x i32> %10454, %10483
  %10494 = icmp eq <4 x i32> %10456, %10486
  %10495 = select <4 x i1> %10493, <4 x i64> %10491, <4 x i64> zeroinitializer
  %10496 = select <4 x i1> %10494, <4 x i64> %10492, <4 x i64> zeroinitializer
  %10497 = add <4 x i64> %10495, %10478
  %10498 = add <4 x i64> %10496, %10479
  %10499 = or i32 %10458, 17
  %10500 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10499
  %10501 = bitcast i32* %10500 to <4 x i32>*
  %10502 = load <4 x i32>, <4 x i32>* %10501, align 4, !tbaa !3
  %10503 = getelementptr inbounds i32, i32* %10500, i32 4
  %10504 = bitcast i32* %10503 to <4 x i32>*
  %10505 = load <4 x i32>, <4 x i32>* %10504, align 4, !tbaa !3
  %10506 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %10502
  %10507 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %10505
  %10508 = bitcast <4 x i8*> %10506 to <4 x i64*>
  %10509 = bitcast <4 x i8*> %10507 to <4 x i64*>
  %10510 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10508, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10511 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10509, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10512 = icmp eq <4 x i32> %10454, %10502
  %10513 = icmp eq <4 x i32> %10456, %10505
  %10514 = select <4 x i1> %10512, <4 x i64> %10510, <4 x i64> zeroinitializer
  %10515 = select <4 x i1> %10513, <4 x i64> %10511, <4 x i64> zeroinitializer
  %10516 = add <4 x i64> %10514, %10497
  %10517 = add <4 x i64> %10515, %10498
  %10518 = icmp eq i32 %10458, 224
  br i1 %10518, label %10519, label %12401, !llvm.loop !125

10519:                                            ; preds = %10457
  %10520 = add <4 x i64> %10517, %10516
  %10521 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10520)
  %10522 = icmp eq i32 %10452, 1992
  %10523 = select i1 %10522, i64 5296930162245565346, i64 0
  %10524 = add i64 %10523, %10521
  %10525 = icmp eq i32 %10452, 2000
  %10526 = select i1 %10525, i64 -6347414485825053312, i64 0
  %10527 = add i64 %10526, %10524
  %10528 = icmp eq i32 %10452, 2008
  %10529 = select i1 %10528, i64 -1111471293076483761, i64 0
  %10530 = add i64 %10529, %10527
  %10531 = icmp eq i32 %10452, 2016
  %10532 = select i1 %10531, i64 6762709279494119711, i64 0
  %10533 = add i64 %10532, %10530
  %10534 = icmp eq i32 %10452, 2024
  %10535 = select i1 %10534, i64 5502587883897177034, i64 0
  %10536 = add i64 %10535, %10533
  %10537 = icmp eq i32 %10452, 2032
  %10538 = select i1 %10537, i64 8203933284918551466, i64 0
  %10539 = add i64 %10538, %10536
  %10540 = icmp eq i32 %10452, 2040
  %10541 = select i1 %10540, i64 -3176116833483372990, i64 0
  %10542 = add i64 %10541, %10539
  %10543 = load i64, i64* @ctx.0.6, align 8, !tbaa !7
  %10544 = xor i64 %9984, %9891
  %10545 = xor i64 %10544, %10077
  %10546 = xor i64 %10545, %10170
  %10547 = xor i64 %10546, %10263
  %10548 = xor i64 %10547, %10356
  %10549 = xor i64 %10548, %10449
  %10550 = xor i64 %10549, %10542
  %10551 = xor i64 %10550, %10543
  %10552 = lshr i64 %10551, 53
  %10553 = trunc i64 %10552 to i32
  %10554 = and i32 %10553, 2040
  %10555 = insertelement <4 x i32> poison, i32 %10554, i32 0
  %10556 = shufflevector <4 x i32> %10555, <4 x i32> poison, <4 x i32> zeroinitializer
  %10557 = insertelement <4 x i32> poison, i32 %10554, i32 0
  %10558 = shufflevector <4 x i32> %10557, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10559

10559:                                            ; preds = %12380, %10519
  %10560 = phi i32 [ 0, %10519 ], [ %12400, %12380 ]
  %10561 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10519 ], [ %12398, %12380 ]
  %10562 = phi <4 x i64> [ zeroinitializer, %10519 ], [ %12399, %12380 ]
  %10563 = or i32 %10560, 1
  %10564 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10563
  %10565 = bitcast i32* %10564 to <4 x i32>*
  %10566 = load <4 x i32>, <4 x i32>* %10565, align 4, !tbaa !3
  %10567 = getelementptr inbounds i32, i32* %10564, i32 4
  %10568 = bitcast i32* %10567 to <4 x i32>*
  %10569 = load <4 x i32>, <4 x i32>* %10568, align 4, !tbaa !3
  %10570 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %10566
  %10571 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %10569
  %10572 = bitcast <4 x i8*> %10570 to <4 x i64*>
  %10573 = bitcast <4 x i8*> %10571 to <4 x i64*>
  %10574 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10572, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10575 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10573, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10576 = icmp eq <4 x i32> %10556, %10566
  %10577 = icmp eq <4 x i32> %10558, %10569
  %10578 = select <4 x i1> %10576, <4 x i64> %10574, <4 x i64> zeroinitializer
  %10579 = select <4 x i1> %10577, <4 x i64> %10575, <4 x i64> zeroinitializer
  %10580 = add <4 x i64> %10578, %10561
  %10581 = add <4 x i64> %10579, %10562
  %10582 = or i32 %10560, 9
  %10583 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10582
  %10584 = bitcast i32* %10583 to <4 x i32>*
  %10585 = load <4 x i32>, <4 x i32>* %10584, align 4, !tbaa !3
  %10586 = getelementptr inbounds i32, i32* %10583, i32 4
  %10587 = bitcast i32* %10586 to <4 x i32>*
  %10588 = load <4 x i32>, <4 x i32>* %10587, align 4, !tbaa !3
  %10589 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %10585
  %10590 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %10588
  %10591 = bitcast <4 x i8*> %10589 to <4 x i64*>
  %10592 = bitcast <4 x i8*> %10590 to <4 x i64*>
  %10593 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10591, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10594 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10592, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10595 = icmp eq <4 x i32> %10556, %10585
  %10596 = icmp eq <4 x i32> %10558, %10588
  %10597 = select <4 x i1> %10595, <4 x i64> %10593, <4 x i64> zeroinitializer
  %10598 = select <4 x i1> %10596, <4 x i64> %10594, <4 x i64> zeroinitializer
  %10599 = add <4 x i64> %10597, %10580
  %10600 = add <4 x i64> %10598, %10581
  %10601 = or i32 %10560, 17
  %10602 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10601
  %10603 = bitcast i32* %10602 to <4 x i32>*
  %10604 = load <4 x i32>, <4 x i32>* %10603, align 4, !tbaa !3
  %10605 = getelementptr inbounds i32, i32* %10602, i32 4
  %10606 = bitcast i32* %10605 to <4 x i32>*
  %10607 = load <4 x i32>, <4 x i32>* %10606, align 4, !tbaa !3
  %10608 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %10604
  %10609 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %10607
  %10610 = bitcast <4 x i8*> %10608 to <4 x i64*>
  %10611 = bitcast <4 x i8*> %10609 to <4 x i64*>
  %10612 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10610, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10613 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10611, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10614 = icmp eq <4 x i32> %10556, %10604
  %10615 = icmp eq <4 x i32> %10558, %10607
  %10616 = select <4 x i1> %10614, <4 x i64> %10612, <4 x i64> zeroinitializer
  %10617 = select <4 x i1> %10615, <4 x i64> %10613, <4 x i64> zeroinitializer
  %10618 = add <4 x i64> %10616, %10599
  %10619 = add <4 x i64> %10617, %10600
  %10620 = icmp eq i32 %10560, 224
  br i1 %10620, label %10621, label %12380, !llvm.loop !126

10621:                                            ; preds = %10559
  %10622 = add <4 x i64> %10619, %10618
  %10623 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10622)
  %10624 = icmp eq i32 %10554, 1992
  %10625 = select i1 %10624, i64 -6702567834671021495, i64 0
  %10626 = add i64 %10625, %10623
  %10627 = icmp eq i32 %10554, 2000
  %10628 = select i1 %10627, i64 -9179115894310901337, i64 0
  %10629 = add i64 %10628, %10626
  %10630 = icmp eq i32 %10554, 2008
  %10631 = select i1 %10630, i64 5751414958667764720, i64 0
  %10632 = add i64 %10631, %10629
  %10633 = icmp eq i32 %10554, 2016
  %10634 = select i1 %10633, i64 2243210855174429021, i64 0
  %10635 = add i64 %10634, %10632
  %10636 = icmp eq i32 %10554, 2024
  %10637 = select i1 %10636, i64 -3872233913575383732, i64 0
  %10638 = add i64 %10637, %10635
  %10639 = icmp eq i32 %10554, 2032
  %10640 = select i1 %10639, i64 -6132897494654657935, i64 0
  %10641 = add i64 %10640, %10638
  %10642 = icmp eq i32 %10554, 2040
  %10643 = select i1 %10642, i64 4811556717733801171, i64 0
  %10644 = add i64 %10643, %10641
  %10645 = lshr i64 %10551, 45
  %10646 = trunc i64 %10645 to i32
  %10647 = and i32 %10646, 2040
  %10648 = insertelement <4 x i32> poison, i32 %10647, i32 0
  %10649 = shufflevector <4 x i32> %10648, <4 x i32> poison, <4 x i32> zeroinitializer
  %10650 = insertelement <4 x i32> poison, i32 %10647, i32 0
  %10651 = shufflevector <4 x i32> %10650, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10652

10652:                                            ; preds = %12359, %10621
  %10653 = phi i32 [ 0, %10621 ], [ %12379, %12359 ]
  %10654 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10621 ], [ %12377, %12359 ]
  %10655 = phi <4 x i64> [ zeroinitializer, %10621 ], [ %12378, %12359 ]
  %10656 = or i32 %10653, 1
  %10657 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10656
  %10658 = bitcast i32* %10657 to <4 x i32>*
  %10659 = load <4 x i32>, <4 x i32>* %10658, align 4, !tbaa !3
  %10660 = getelementptr inbounds i32, i32* %10657, i32 4
  %10661 = bitcast i32* %10660 to <4 x i32>*
  %10662 = load <4 x i32>, <4 x i32>* %10661, align 4, !tbaa !3
  %10663 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %10659
  %10664 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %10662
  %10665 = bitcast <4 x i8*> %10663 to <4 x i64*>
  %10666 = bitcast <4 x i8*> %10664 to <4 x i64*>
  %10667 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10665, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10668 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10666, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10669 = icmp eq <4 x i32> %10649, %10659
  %10670 = icmp eq <4 x i32> %10651, %10662
  %10671 = select <4 x i1> %10669, <4 x i64> %10667, <4 x i64> zeroinitializer
  %10672 = select <4 x i1> %10670, <4 x i64> %10668, <4 x i64> zeroinitializer
  %10673 = add <4 x i64> %10671, %10654
  %10674 = add <4 x i64> %10672, %10655
  %10675 = or i32 %10653, 9
  %10676 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10675
  %10677 = bitcast i32* %10676 to <4 x i32>*
  %10678 = load <4 x i32>, <4 x i32>* %10677, align 4, !tbaa !3
  %10679 = getelementptr inbounds i32, i32* %10676, i32 4
  %10680 = bitcast i32* %10679 to <4 x i32>*
  %10681 = load <4 x i32>, <4 x i32>* %10680, align 4, !tbaa !3
  %10682 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %10678
  %10683 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %10681
  %10684 = bitcast <4 x i8*> %10682 to <4 x i64*>
  %10685 = bitcast <4 x i8*> %10683 to <4 x i64*>
  %10686 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10684, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10687 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10685, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10688 = icmp eq <4 x i32> %10649, %10678
  %10689 = icmp eq <4 x i32> %10651, %10681
  %10690 = select <4 x i1> %10688, <4 x i64> %10686, <4 x i64> zeroinitializer
  %10691 = select <4 x i1> %10689, <4 x i64> %10687, <4 x i64> zeroinitializer
  %10692 = add <4 x i64> %10690, %10673
  %10693 = add <4 x i64> %10691, %10674
  %10694 = or i32 %10653, 17
  %10695 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10694
  %10696 = bitcast i32* %10695 to <4 x i32>*
  %10697 = load <4 x i32>, <4 x i32>* %10696, align 4, !tbaa !3
  %10698 = getelementptr inbounds i32, i32* %10695, i32 4
  %10699 = bitcast i32* %10698 to <4 x i32>*
  %10700 = load <4 x i32>, <4 x i32>* %10699, align 4, !tbaa !3
  %10701 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %10697
  %10702 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %10700
  %10703 = bitcast <4 x i8*> %10701 to <4 x i64*>
  %10704 = bitcast <4 x i8*> %10702 to <4 x i64*>
  %10705 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10703, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10706 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10704, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10707 = icmp eq <4 x i32> %10649, %10697
  %10708 = icmp eq <4 x i32> %10651, %10700
  %10709 = select <4 x i1> %10707, <4 x i64> %10705, <4 x i64> zeroinitializer
  %10710 = select <4 x i1> %10708, <4 x i64> %10706, <4 x i64> zeroinitializer
  %10711 = add <4 x i64> %10709, %10692
  %10712 = add <4 x i64> %10710, %10693
  %10713 = icmp eq i32 %10653, 224
  br i1 %10713, label %10714, label %12359, !llvm.loop !127

10714:                                            ; preds = %10652
  %10715 = add <4 x i64> %10712, %10711
  %10716 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10715)
  %10717 = icmp eq i32 %10647, 1992
  %10718 = select i1 %10717, i64 -314670665226827390, i64 0
  %10719 = add i64 %10718, %10716
  %10720 = icmp eq i32 %10647, 2000
  %10721 = select i1 %10720, i64 -7097468252516276247, i64 0
  %10722 = add i64 %10721, %10719
  %10723 = icmp eq i32 %10647, 2008
  %10724 = select i1 %10723, i64 -3364349307489619821, i64 0
  %10725 = add i64 %10724, %10722
  %10726 = icmp eq i32 %10647, 2016
  %10727 = select i1 %10726, i64 2386735715921845721, i64 0
  %10728 = add i64 %10727, %10725
  %10729 = icmp eq i32 %10647, 2024
  %10730 = select i1 %10729, i64 4884933414564023389, i64 0
  %10731 = add i64 %10730, %10728
  %10732 = icmp eq i32 %10647, 2032
  %10733 = select i1 %10732, i64 -2041757280372035110, i64 0
  %10734 = add i64 %10733, %10731
  %10735 = icmp eq i32 %10647, 2040
  %10736 = select i1 %10735, i64 -4160667357316787220, i64 0
  %10737 = add i64 %10736, %10734
  %10738 = lshr i64 %10551, 37
  %10739 = trunc i64 %10738 to i32
  %10740 = and i32 %10739, 2040
  %10741 = insertelement <4 x i32> poison, i32 %10740, i32 0
  %10742 = shufflevector <4 x i32> %10741, <4 x i32> poison, <4 x i32> zeroinitializer
  %10743 = insertelement <4 x i32> poison, i32 %10740, i32 0
  %10744 = shufflevector <4 x i32> %10743, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10745

10745:                                            ; preds = %12338, %10714
  %10746 = phi i32 [ 0, %10714 ], [ %12358, %12338 ]
  %10747 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10714 ], [ %12356, %12338 ]
  %10748 = phi <4 x i64> [ zeroinitializer, %10714 ], [ %12357, %12338 ]
  %10749 = or i32 %10746, 1
  %10750 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10749
  %10751 = bitcast i32* %10750 to <4 x i32>*
  %10752 = load <4 x i32>, <4 x i32>* %10751, align 4, !tbaa !3
  %10753 = getelementptr inbounds i32, i32* %10750, i32 4
  %10754 = bitcast i32* %10753 to <4 x i32>*
  %10755 = load <4 x i32>, <4 x i32>* %10754, align 4, !tbaa !3
  %10756 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10752
  %10757 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10755
  %10758 = bitcast <4 x i8*> %10756 to <4 x i64*>
  %10759 = bitcast <4 x i8*> %10757 to <4 x i64*>
  %10760 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10758, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10761 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10759, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10762 = icmp eq <4 x i32> %10742, %10752
  %10763 = icmp eq <4 x i32> %10744, %10755
  %10764 = select <4 x i1> %10762, <4 x i64> %10760, <4 x i64> zeroinitializer
  %10765 = select <4 x i1> %10763, <4 x i64> %10761, <4 x i64> zeroinitializer
  %10766 = add <4 x i64> %10764, %10747
  %10767 = add <4 x i64> %10765, %10748
  %10768 = or i32 %10746, 9
  %10769 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10768
  %10770 = bitcast i32* %10769 to <4 x i32>*
  %10771 = load <4 x i32>, <4 x i32>* %10770, align 4, !tbaa !3
  %10772 = getelementptr inbounds i32, i32* %10769, i32 4
  %10773 = bitcast i32* %10772 to <4 x i32>*
  %10774 = load <4 x i32>, <4 x i32>* %10773, align 4, !tbaa !3
  %10775 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10771
  %10776 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10774
  %10777 = bitcast <4 x i8*> %10775 to <4 x i64*>
  %10778 = bitcast <4 x i8*> %10776 to <4 x i64*>
  %10779 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10777, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10780 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10778, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10781 = icmp eq <4 x i32> %10742, %10771
  %10782 = icmp eq <4 x i32> %10744, %10774
  %10783 = select <4 x i1> %10781, <4 x i64> %10779, <4 x i64> zeroinitializer
  %10784 = select <4 x i1> %10782, <4 x i64> %10780, <4 x i64> zeroinitializer
  %10785 = add <4 x i64> %10783, %10766
  %10786 = add <4 x i64> %10784, %10767
  %10787 = or i32 %10746, 17
  %10788 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10787
  %10789 = bitcast i32* %10788 to <4 x i32>*
  %10790 = load <4 x i32>, <4 x i32>* %10789, align 4, !tbaa !3
  %10791 = getelementptr inbounds i32, i32* %10788, i32 4
  %10792 = bitcast i32* %10791 to <4 x i32>*
  %10793 = load <4 x i32>, <4 x i32>* %10792, align 4, !tbaa !3
  %10794 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10790
  %10795 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %10793
  %10796 = bitcast <4 x i8*> %10794 to <4 x i64*>
  %10797 = bitcast <4 x i8*> %10795 to <4 x i64*>
  %10798 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10796, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10799 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10797, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10800 = icmp eq <4 x i32> %10742, %10790
  %10801 = icmp eq <4 x i32> %10744, %10793
  %10802 = select <4 x i1> %10800, <4 x i64> %10798, <4 x i64> zeroinitializer
  %10803 = select <4 x i1> %10801, <4 x i64> %10799, <4 x i64> zeroinitializer
  %10804 = add <4 x i64> %10802, %10785
  %10805 = add <4 x i64> %10803, %10786
  %10806 = icmp eq i32 %10746, 224
  br i1 %10806, label %10807, label %12338, !llvm.loop !128

10807:                                            ; preds = %10745
  %10808 = add <4 x i64> %10805, %10804
  %10809 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10808)
  %10810 = icmp eq i32 %10740, 1992
  %10811 = select i1 %10810, i64 -5615809534224635015, i64 0
  %10812 = add i64 %10811, %10809
  %10813 = icmp eq i32 %10740, 2000
  %10814 = select i1 %10813, i64 4231836215586269044, i64 0
  %10815 = add i64 %10814, %10812
  %10816 = icmp eq i32 %10740, 2008
  %10817 = select i1 %10816, i64 2408950612238581570, i64 0
  %10818 = add i64 %10817, %10815
  %10819 = icmp eq i32 %10740, 2016
  %10820 = select i1 %10819, i64 8963041913638568696, i64 0
  %10821 = add i64 %10820, %10818
  %10822 = icmp eq i32 %10740, 2024
  %10823 = select i1 %10822, i64 1136536871657834014, i64 0
  %10824 = add i64 %10823, %10821
  %10825 = icmp eq i32 %10740, 2032
  %10826 = select i1 %10825, i64 -7910384849877083335, i64 0
  %10827 = add i64 %10826, %10824
  %10828 = icmp eq i32 %10740, 2040
  %10829 = select i1 %10828, i64 1537771219914559786, i64 0
  %10830 = add i64 %10829, %10827
  %10831 = lshr i64 %10551, 29
  %10832 = trunc i64 %10831 to i32
  %10833 = and i32 %10832, 2040
  %10834 = insertelement <4 x i32> poison, i32 %10833, i32 0
  %10835 = shufflevector <4 x i32> %10834, <4 x i32> poison, <4 x i32> zeroinitializer
  %10836 = insertelement <4 x i32> poison, i32 %10833, i32 0
  %10837 = shufflevector <4 x i32> %10836, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10838

10838:                                            ; preds = %12317, %10807
  %10839 = phi i32 [ 0, %10807 ], [ %12337, %12317 ]
  %10840 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10807 ], [ %12335, %12317 ]
  %10841 = phi <4 x i64> [ zeroinitializer, %10807 ], [ %12336, %12317 ]
  %10842 = or i32 %10839, 1
  %10843 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10842
  %10844 = bitcast i32* %10843 to <4 x i32>*
  %10845 = load <4 x i32>, <4 x i32>* %10844, align 4, !tbaa !3
  %10846 = getelementptr inbounds i32, i32* %10843, i32 4
  %10847 = bitcast i32* %10846 to <4 x i32>*
  %10848 = load <4 x i32>, <4 x i32>* %10847, align 4, !tbaa !3
  %10849 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10845
  %10850 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10848
  %10851 = bitcast <4 x i8*> %10849 to <4 x i64*>
  %10852 = bitcast <4 x i8*> %10850 to <4 x i64*>
  %10853 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10851, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10854 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10852, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10855 = icmp eq <4 x i32> %10835, %10845
  %10856 = icmp eq <4 x i32> %10837, %10848
  %10857 = select <4 x i1> %10855, <4 x i64> %10853, <4 x i64> zeroinitializer
  %10858 = select <4 x i1> %10856, <4 x i64> %10854, <4 x i64> zeroinitializer
  %10859 = add <4 x i64> %10857, %10840
  %10860 = add <4 x i64> %10858, %10841
  %10861 = or i32 %10839, 9
  %10862 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10861
  %10863 = bitcast i32* %10862 to <4 x i32>*
  %10864 = load <4 x i32>, <4 x i32>* %10863, align 4, !tbaa !3
  %10865 = getelementptr inbounds i32, i32* %10862, i32 4
  %10866 = bitcast i32* %10865 to <4 x i32>*
  %10867 = load <4 x i32>, <4 x i32>* %10866, align 4, !tbaa !3
  %10868 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10864
  %10869 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10867
  %10870 = bitcast <4 x i8*> %10868 to <4 x i64*>
  %10871 = bitcast <4 x i8*> %10869 to <4 x i64*>
  %10872 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10870, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10873 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10871, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10874 = icmp eq <4 x i32> %10835, %10864
  %10875 = icmp eq <4 x i32> %10837, %10867
  %10876 = select <4 x i1> %10874, <4 x i64> %10872, <4 x i64> zeroinitializer
  %10877 = select <4 x i1> %10875, <4 x i64> %10873, <4 x i64> zeroinitializer
  %10878 = add <4 x i64> %10876, %10859
  %10879 = add <4 x i64> %10877, %10860
  %10880 = or i32 %10839, 17
  %10881 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10880
  %10882 = bitcast i32* %10881 to <4 x i32>*
  %10883 = load <4 x i32>, <4 x i32>* %10882, align 4, !tbaa !3
  %10884 = getelementptr inbounds i32, i32* %10881, i32 4
  %10885 = bitcast i32* %10884 to <4 x i32>*
  %10886 = load <4 x i32>, <4 x i32>* %10885, align 4, !tbaa !3
  %10887 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10883
  %10888 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %10886
  %10889 = bitcast <4 x i8*> %10887 to <4 x i64*>
  %10890 = bitcast <4 x i8*> %10888 to <4 x i64*>
  %10891 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10889, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10892 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10890, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10893 = icmp eq <4 x i32> %10835, %10883
  %10894 = icmp eq <4 x i32> %10837, %10886
  %10895 = select <4 x i1> %10893, <4 x i64> %10891, <4 x i64> zeroinitializer
  %10896 = select <4 x i1> %10894, <4 x i64> %10892, <4 x i64> zeroinitializer
  %10897 = add <4 x i64> %10895, %10878
  %10898 = add <4 x i64> %10896, %10879
  %10899 = icmp eq i32 %10839, 224
  br i1 %10899, label %10900, label %12317, !llvm.loop !129

10900:                                            ; preds = %10838
  %10901 = add <4 x i64> %10898, %10897
  %10902 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10901)
  %10903 = icmp eq i32 %10833, 1992
  %10904 = select i1 %10903, i64 1203300724897905131, i64 0
  %10905 = add i64 %10904, %10902
  %10906 = icmp eq i32 %10833, 2000
  %10907 = select i1 %10906, i64 -5027532858107268057, i64 0
  %10908 = add i64 %10907, %10905
  %10909 = icmp eq i32 %10833, 2008
  %10910 = select i1 %10909, i64 7935854159672328895, i64 0
  %10911 = add i64 %10910, %10908
  %10912 = icmp eq i32 %10833, 2016
  %10913 = select i1 %10912, i64 7168641125469255746, i64 0
  %10914 = add i64 %10913, %10911
  %10915 = icmp eq i32 %10833, 2024
  %10916 = select i1 %10915, i64 -4247101387443462522, i64 0
  %10917 = add i64 %10916, %10914
  %10918 = icmp eq i32 %10833, 2032
  %10919 = select i1 %10918, i64 4076570933917792731, i64 0
  %10920 = add i64 %10919, %10917
  %10921 = icmp eq i32 %10833, 2040
  %10922 = select i1 %10921, i64 6275139646136265361, i64 0
  %10923 = add i64 %10922, %10920
  %10924 = lshr i64 %10551, 21
  %10925 = trunc i64 %10924 to i32
  %10926 = and i32 %10925, 2040
  %10927 = insertelement <4 x i32> poison, i32 %10926, i32 0
  %10928 = shufflevector <4 x i32> %10927, <4 x i32> poison, <4 x i32> zeroinitializer
  %10929 = insertelement <4 x i32> poison, i32 %10926, i32 0
  %10930 = shufflevector <4 x i32> %10929, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %10931

10931:                                            ; preds = %12296, %10900
  %10932 = phi i32 [ 0, %10900 ], [ %12316, %12296 ]
  %10933 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10900 ], [ %12314, %12296 ]
  %10934 = phi <4 x i64> [ zeroinitializer, %10900 ], [ %12315, %12296 ]
  %10935 = or i32 %10932, 1
  %10936 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10935
  %10937 = bitcast i32* %10936 to <4 x i32>*
  %10938 = load <4 x i32>, <4 x i32>* %10937, align 4, !tbaa !3
  %10939 = getelementptr inbounds i32, i32* %10936, i32 4
  %10940 = bitcast i32* %10939 to <4 x i32>*
  %10941 = load <4 x i32>, <4 x i32>* %10940, align 4, !tbaa !3
  %10942 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10938
  %10943 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10941
  %10944 = bitcast <4 x i8*> %10942 to <4 x i64*>
  %10945 = bitcast <4 x i8*> %10943 to <4 x i64*>
  %10946 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10944, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10947 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10945, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10948 = icmp eq <4 x i32> %10928, %10938
  %10949 = icmp eq <4 x i32> %10930, %10941
  %10950 = select <4 x i1> %10948, <4 x i64> %10946, <4 x i64> zeroinitializer
  %10951 = select <4 x i1> %10949, <4 x i64> %10947, <4 x i64> zeroinitializer
  %10952 = add <4 x i64> %10950, %10933
  %10953 = add <4 x i64> %10951, %10934
  %10954 = or i32 %10932, 9
  %10955 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10954
  %10956 = bitcast i32* %10955 to <4 x i32>*
  %10957 = load <4 x i32>, <4 x i32>* %10956, align 4, !tbaa !3
  %10958 = getelementptr inbounds i32, i32* %10955, i32 4
  %10959 = bitcast i32* %10958 to <4 x i32>*
  %10960 = load <4 x i32>, <4 x i32>* %10959, align 4, !tbaa !3
  %10961 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10957
  %10962 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10960
  %10963 = bitcast <4 x i8*> %10961 to <4 x i64*>
  %10964 = bitcast <4 x i8*> %10962 to <4 x i64*>
  %10965 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10963, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10966 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10964, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10967 = icmp eq <4 x i32> %10928, %10957
  %10968 = icmp eq <4 x i32> %10930, %10960
  %10969 = select <4 x i1> %10967, <4 x i64> %10965, <4 x i64> zeroinitializer
  %10970 = select <4 x i1> %10968, <4 x i64> %10966, <4 x i64> zeroinitializer
  %10971 = add <4 x i64> %10969, %10952
  %10972 = add <4 x i64> %10970, %10953
  %10973 = or i32 %10932, 17
  %10974 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %10973
  %10975 = bitcast i32* %10974 to <4 x i32>*
  %10976 = load <4 x i32>, <4 x i32>* %10975, align 4, !tbaa !3
  %10977 = getelementptr inbounds i32, i32* %10974, i32 4
  %10978 = bitcast i32* %10977 to <4 x i32>*
  %10979 = load <4 x i32>, <4 x i32>* %10978, align 4, !tbaa !3
  %10980 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10976
  %10981 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %10979
  %10982 = bitcast <4 x i8*> %10980 to <4 x i64*>
  %10983 = bitcast <4 x i8*> %10981 to <4 x i64*>
  %10984 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10982, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10985 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %10983, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %10986 = icmp eq <4 x i32> %10928, %10976
  %10987 = icmp eq <4 x i32> %10930, %10979
  %10988 = select <4 x i1> %10986, <4 x i64> %10984, <4 x i64> zeroinitializer
  %10989 = select <4 x i1> %10987, <4 x i64> %10985, <4 x i64> zeroinitializer
  %10990 = add <4 x i64> %10988, %10971
  %10991 = add <4 x i64> %10989, %10972
  %10992 = icmp eq i32 %10932, 224
  br i1 %10992, label %10993, label %12296, !llvm.loop !130

10993:                                            ; preds = %10931
  %10994 = add <4 x i64> %10991, %10990
  %10995 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %10994)
  %10996 = icmp eq i32 %10926, 1992
  %10997 = select i1 %10996, i64 -1479007749835869680, i64 0
  %10998 = add i64 %10997, %10995
  %10999 = icmp eq i32 %10926, 2000
  %11000 = select i1 %10999, i64 2843154170404223674, i64 0
  %11001 = add i64 %11000, %10998
  %11002 = icmp eq i32 %10926, 2008
  %11003 = select i1 %11002, i64 -4665003603661872786, i64 0
  %11004 = add i64 %11003, %11001
  %11005 = icmp eq i32 %10926, 2016
  %11006 = select i1 %11005, i64 4825845994704960611, i64 0
  %11007 = add i64 %11006, %11004
  %11008 = icmp eq i32 %10926, 2024
  %11009 = select i1 %11008, i64 -8782479638933598267, i64 0
  %11010 = add i64 %11009, %11007
  %11011 = icmp eq i32 %10926, 2032
  %11012 = select i1 %11011, i64 -2649846723997625800, i64 0
  %11013 = add i64 %11012, %11010
  %11014 = icmp eq i32 %10926, 2040
  %11015 = select i1 %11014, i64 -7986310597085620905, i64 0
  %11016 = add i64 %11015, %11013
  %11017 = lshr i64 %10551, 13
  %11018 = trunc i64 %11017 to i32
  %11019 = and i32 %11018, 2040
  %11020 = insertelement <4 x i32> poison, i32 %11019, i32 0
  %11021 = shufflevector <4 x i32> %11020, <4 x i32> poison, <4 x i32> zeroinitializer
  %11022 = insertelement <4 x i32> poison, i32 %11019, i32 0
  %11023 = shufflevector <4 x i32> %11022, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11024

11024:                                            ; preds = %12275, %10993
  %11025 = phi i32 [ 0, %10993 ], [ %12295, %12275 ]
  %11026 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %10993 ], [ %12293, %12275 ]
  %11027 = phi <4 x i64> [ zeroinitializer, %10993 ], [ %12294, %12275 ]
  %11028 = or i32 %11025, 1
  %11029 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11028
  %11030 = bitcast i32* %11029 to <4 x i32>*
  %11031 = load <4 x i32>, <4 x i32>* %11030, align 4, !tbaa !3
  %11032 = getelementptr inbounds i32, i32* %11029, i32 4
  %11033 = bitcast i32* %11032 to <4 x i32>*
  %11034 = load <4 x i32>, <4 x i32>* %11033, align 4, !tbaa !3
  %11035 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11031
  %11036 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11034
  %11037 = bitcast <4 x i8*> %11035 to <4 x i64*>
  %11038 = bitcast <4 x i8*> %11036 to <4 x i64*>
  %11039 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11037, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11040 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11038, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11041 = icmp eq <4 x i32> %11021, %11031
  %11042 = icmp eq <4 x i32> %11023, %11034
  %11043 = select <4 x i1> %11041, <4 x i64> %11039, <4 x i64> zeroinitializer
  %11044 = select <4 x i1> %11042, <4 x i64> %11040, <4 x i64> zeroinitializer
  %11045 = add <4 x i64> %11043, %11026
  %11046 = add <4 x i64> %11044, %11027
  %11047 = or i32 %11025, 9
  %11048 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11047
  %11049 = bitcast i32* %11048 to <4 x i32>*
  %11050 = load <4 x i32>, <4 x i32>* %11049, align 4, !tbaa !3
  %11051 = getelementptr inbounds i32, i32* %11048, i32 4
  %11052 = bitcast i32* %11051 to <4 x i32>*
  %11053 = load <4 x i32>, <4 x i32>* %11052, align 4, !tbaa !3
  %11054 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11050
  %11055 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11053
  %11056 = bitcast <4 x i8*> %11054 to <4 x i64*>
  %11057 = bitcast <4 x i8*> %11055 to <4 x i64*>
  %11058 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11056, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11059 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11057, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11060 = icmp eq <4 x i32> %11021, %11050
  %11061 = icmp eq <4 x i32> %11023, %11053
  %11062 = select <4 x i1> %11060, <4 x i64> %11058, <4 x i64> zeroinitializer
  %11063 = select <4 x i1> %11061, <4 x i64> %11059, <4 x i64> zeroinitializer
  %11064 = add <4 x i64> %11062, %11045
  %11065 = add <4 x i64> %11063, %11046
  %11066 = or i32 %11025, 17
  %11067 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11066
  %11068 = bitcast i32* %11067 to <4 x i32>*
  %11069 = load <4 x i32>, <4 x i32>* %11068, align 4, !tbaa !3
  %11070 = getelementptr inbounds i32, i32* %11067, i32 4
  %11071 = bitcast i32* %11070 to <4 x i32>*
  %11072 = load <4 x i32>, <4 x i32>* %11071, align 4, !tbaa !3
  %11073 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11069
  %11074 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11072
  %11075 = bitcast <4 x i8*> %11073 to <4 x i64*>
  %11076 = bitcast <4 x i8*> %11074 to <4 x i64*>
  %11077 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11075, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11078 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11076, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11079 = icmp eq <4 x i32> %11021, %11069
  %11080 = icmp eq <4 x i32> %11023, %11072
  %11081 = select <4 x i1> %11079, <4 x i64> %11077, <4 x i64> zeroinitializer
  %11082 = select <4 x i1> %11080, <4 x i64> %11078, <4 x i64> zeroinitializer
  %11083 = add <4 x i64> %11081, %11064
  %11084 = add <4 x i64> %11082, %11065
  %11085 = icmp eq i32 %11025, 224
  br i1 %11085, label %11086, label %12275, !llvm.loop !131

11086:                                            ; preds = %11024
  %11087 = add <4 x i64> %11084, %11083
  %11088 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11087)
  %11089 = icmp eq i32 %11019, 1992
  %11090 = select i1 %11089, i64 8785196325032562866, i64 0
  %11091 = add i64 %11090, %11088
  %11092 = icmp eq i32 %11019, 2000
  %11093 = select i1 %11092, i64 8369843054303033914, i64 0
  %11094 = add i64 %11093, %11091
  %11095 = icmp eq i32 %11019, 2008
  %11096 = select i1 %11095, i64 4809827444717481505, i64 0
  %11097 = add i64 %11096, %11094
  %11098 = icmp eq i32 %11019, 2016
  %11099 = select i1 %11098, i64 -557780216695528580, i64 0
  %11100 = add i64 %11099, %11097
  %11101 = icmp eq i32 %11019, 2024
  %11102 = select i1 %11101, i64 2199529431470097679, i64 0
  %11103 = add i64 %11102, %11100
  %11104 = icmp eq i32 %11019, 2032
  %11105 = select i1 %11104, i64 4169051064997918866, i64 0
  %11106 = add i64 %11105, %11103
  %11107 = icmp eq i32 %11019, 2040
  %11108 = select i1 %11107, i64 3067465835107997461, i64 0
  %11109 = add i64 %11108, %11106
  %11110 = lshr i64 %10551, 5
  %11111 = trunc i64 %11110 to i32
  %11112 = and i32 %11111, 2040
  %11113 = insertelement <4 x i32> poison, i32 %11112, i32 0
  %11114 = shufflevector <4 x i32> %11113, <4 x i32> poison, <4 x i32> zeroinitializer
  %11115 = insertelement <4 x i32> poison, i32 %11112, i32 0
  %11116 = shufflevector <4 x i32> %11115, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11117

11117:                                            ; preds = %12254, %11086
  %11118 = phi i32 [ 0, %11086 ], [ %12274, %12254 ]
  %11119 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11086 ], [ %12272, %12254 ]
  %11120 = phi <4 x i64> [ zeroinitializer, %11086 ], [ %12273, %12254 ]
  %11121 = or i32 %11118, 1
  %11122 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11121
  %11123 = bitcast i32* %11122 to <4 x i32>*
  %11124 = load <4 x i32>, <4 x i32>* %11123, align 4, !tbaa !3
  %11125 = getelementptr inbounds i32, i32* %11122, i32 4
  %11126 = bitcast i32* %11125 to <4 x i32>*
  %11127 = load <4 x i32>, <4 x i32>* %11126, align 4, !tbaa !3
  %11128 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11124
  %11129 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11127
  %11130 = bitcast <4 x i8*> %11128 to <4 x i64*>
  %11131 = bitcast <4 x i8*> %11129 to <4 x i64*>
  %11132 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11130, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11133 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11131, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11134 = icmp eq <4 x i32> %11114, %11124
  %11135 = icmp eq <4 x i32> %11116, %11127
  %11136 = select <4 x i1> %11134, <4 x i64> %11132, <4 x i64> zeroinitializer
  %11137 = select <4 x i1> %11135, <4 x i64> %11133, <4 x i64> zeroinitializer
  %11138 = add <4 x i64> %11136, %11119
  %11139 = add <4 x i64> %11137, %11120
  %11140 = or i32 %11118, 9
  %11141 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11140
  %11142 = bitcast i32* %11141 to <4 x i32>*
  %11143 = load <4 x i32>, <4 x i32>* %11142, align 4, !tbaa !3
  %11144 = getelementptr inbounds i32, i32* %11141, i32 4
  %11145 = bitcast i32* %11144 to <4 x i32>*
  %11146 = load <4 x i32>, <4 x i32>* %11145, align 4, !tbaa !3
  %11147 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11143
  %11148 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11146
  %11149 = bitcast <4 x i8*> %11147 to <4 x i64*>
  %11150 = bitcast <4 x i8*> %11148 to <4 x i64*>
  %11151 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11149, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11152 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11150, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11153 = icmp eq <4 x i32> %11114, %11143
  %11154 = icmp eq <4 x i32> %11116, %11146
  %11155 = select <4 x i1> %11153, <4 x i64> %11151, <4 x i64> zeroinitializer
  %11156 = select <4 x i1> %11154, <4 x i64> %11152, <4 x i64> zeroinitializer
  %11157 = add <4 x i64> %11155, %11138
  %11158 = add <4 x i64> %11156, %11139
  %11159 = or i32 %11118, 17
  %11160 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11159
  %11161 = bitcast i32* %11160 to <4 x i32>*
  %11162 = load <4 x i32>, <4 x i32>* %11161, align 4, !tbaa !3
  %11163 = getelementptr inbounds i32, i32* %11160, i32 4
  %11164 = bitcast i32* %11163 to <4 x i32>*
  %11165 = load <4 x i32>, <4 x i32>* %11164, align 4, !tbaa !3
  %11166 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11162
  %11167 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11165
  %11168 = bitcast <4 x i8*> %11166 to <4 x i64*>
  %11169 = bitcast <4 x i8*> %11167 to <4 x i64*>
  %11170 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11168, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11171 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11169, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11172 = icmp eq <4 x i32> %11114, %11162
  %11173 = icmp eq <4 x i32> %11116, %11165
  %11174 = select <4 x i1> %11172, <4 x i64> %11170, <4 x i64> zeroinitializer
  %11175 = select <4 x i1> %11173, <4 x i64> %11171, <4 x i64> zeroinitializer
  %11176 = add <4 x i64> %11174, %11157
  %11177 = add <4 x i64> %11175, %11158
  %11178 = icmp eq i32 %11118, 224
  br i1 %11178, label %11179, label %12254, !llvm.loop !132

11179:                                            ; preds = %11117
  %11180 = add <4 x i64> %11177, %11176
  %11181 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11180)
  %11182 = icmp eq i32 %11112, 1992
  %11183 = select i1 %11182, i64 -9058450267568037125, i64 0
  %11184 = add i64 %11183, %11181
  %11185 = icmp eq i32 %11112, 2000
  %11186 = select i1 %11185, i64 -1610274961606672227, i64 0
  %11187 = add i64 %11186, %11184
  %11188 = icmp eq i32 %11112, 2008
  %11189 = select i1 %11188, i64 -7786513464973963311, i64 0
  %11190 = add i64 %11189, %11187
  %11191 = icmp eq i32 %11112, 2016
  %11192 = select i1 %11191, i64 -2783995359638905055, i64 0
  %11193 = add i64 %11192, %11190
  %11194 = icmp eq i32 %11112, 2024
  %11195 = select i1 %11194, i64 6722895807429069379, i64 0
  %11196 = add i64 %11195, %11193
  %11197 = icmp eq i32 %11112, 2032
  %11198 = select i1 %11197, i64 -2706140860760151325, i64 0
  %11199 = add i64 %11198, %11196
  %11200 = icmp eq i32 %11112, 2040
  %11201 = select i1 %11200, i64 -1381601050739916090, i64 0
  %11202 = add i64 %11201, %11199
  %11203 = trunc i64 %10551 to i32
  %11204 = shl i32 %11203, 3
  %11205 = and i32 %11204, 2040
  %11206 = insertelement <4 x i32> poison, i32 %11205, i32 0
  %11207 = shufflevector <4 x i32> %11206, <4 x i32> poison, <4 x i32> zeroinitializer
  %11208 = insertelement <4 x i32> poison, i32 %11205, i32 0
  %11209 = shufflevector <4 x i32> %11208, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11210

11210:                                            ; preds = %12233, %11179
  %11211 = phi i32 [ 0, %11179 ], [ %12253, %12233 ]
  %11212 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11179 ], [ %12251, %12233 ]
  %11213 = phi <4 x i64> [ zeroinitializer, %11179 ], [ %12252, %12233 ]
  %11214 = or i32 %11211, 1
  %11215 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11214
  %11216 = bitcast i32* %11215 to <4 x i32>*
  %11217 = load <4 x i32>, <4 x i32>* %11216, align 4, !tbaa !3
  %11218 = getelementptr inbounds i32, i32* %11215, i32 4
  %11219 = bitcast i32* %11218 to <4 x i32>*
  %11220 = load <4 x i32>, <4 x i32>* %11219, align 4, !tbaa !3
  %11221 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11217
  %11222 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11220
  %11223 = bitcast <4 x i8*> %11221 to <4 x i64*>
  %11224 = bitcast <4 x i8*> %11222 to <4 x i64*>
  %11225 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11223, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11226 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11224, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11227 = icmp eq <4 x i32> %11207, %11217
  %11228 = icmp eq <4 x i32> %11209, %11220
  %11229 = select <4 x i1> %11227, <4 x i64> %11225, <4 x i64> zeroinitializer
  %11230 = select <4 x i1> %11228, <4 x i64> %11226, <4 x i64> zeroinitializer
  %11231 = add <4 x i64> %11229, %11212
  %11232 = add <4 x i64> %11230, %11213
  %11233 = or i32 %11211, 9
  %11234 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11233
  %11235 = bitcast i32* %11234 to <4 x i32>*
  %11236 = load <4 x i32>, <4 x i32>* %11235, align 4, !tbaa !3
  %11237 = getelementptr inbounds i32, i32* %11234, i32 4
  %11238 = bitcast i32* %11237 to <4 x i32>*
  %11239 = load <4 x i32>, <4 x i32>* %11238, align 4, !tbaa !3
  %11240 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11236
  %11241 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11239
  %11242 = bitcast <4 x i8*> %11240 to <4 x i64*>
  %11243 = bitcast <4 x i8*> %11241 to <4 x i64*>
  %11244 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11242, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11245 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11243, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11246 = icmp eq <4 x i32> %11207, %11236
  %11247 = icmp eq <4 x i32> %11209, %11239
  %11248 = select <4 x i1> %11246, <4 x i64> %11244, <4 x i64> zeroinitializer
  %11249 = select <4 x i1> %11247, <4 x i64> %11245, <4 x i64> zeroinitializer
  %11250 = add <4 x i64> %11248, %11231
  %11251 = add <4 x i64> %11249, %11232
  %11252 = or i32 %11211, 17
  %11253 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11252
  %11254 = bitcast i32* %11253 to <4 x i32>*
  %11255 = load <4 x i32>, <4 x i32>* %11254, align 4, !tbaa !3
  %11256 = getelementptr inbounds i32, i32* %11253, i32 4
  %11257 = bitcast i32* %11256 to <4 x i32>*
  %11258 = load <4 x i32>, <4 x i32>* %11257, align 4, !tbaa !3
  %11259 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11255
  %11260 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11258
  %11261 = bitcast <4 x i8*> %11259 to <4 x i64*>
  %11262 = bitcast <4 x i8*> %11260 to <4 x i64*>
  %11263 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11261, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11264 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11262, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11265 = icmp eq <4 x i32> %11207, %11255
  %11266 = icmp eq <4 x i32> %11209, %11258
  %11267 = select <4 x i1> %11265, <4 x i64> %11263, <4 x i64> zeroinitializer
  %11268 = select <4 x i1> %11266, <4 x i64> %11264, <4 x i64> zeroinitializer
  %11269 = add <4 x i64> %11267, %11250
  %11270 = add <4 x i64> %11268, %11251
  %11271 = icmp eq i32 %11211, 224
  br i1 %11271, label %11272, label %12233, !llvm.loop !133

11272:                                            ; preds = %11210
  %11273 = add <4 x i64> %11270, %11269
  %11274 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11273)
  %11275 = icmp eq i32 %11205, 1992
  %11276 = select i1 %11275, i64 5296930162245565346, i64 0
  %11277 = add i64 %11276, %11274
  %11278 = icmp eq i32 %11205, 2000
  %11279 = select i1 %11278, i64 -6347414485825053312, i64 0
  %11280 = add i64 %11279, %11277
  %11281 = icmp eq i32 %11205, 2008
  %11282 = select i1 %11281, i64 -1111471293076483761, i64 0
  %11283 = add i64 %11282, %11280
  %11284 = icmp eq i32 %11205, 2016
  %11285 = select i1 %11284, i64 6762709279494119711, i64 0
  %11286 = add i64 %11285, %11283
  %11287 = icmp eq i32 %11205, 2024
  %11288 = select i1 %11287, i64 5502587883897177034, i64 0
  %11289 = add i64 %11288, %11286
  %11290 = icmp eq i32 %11205, 2032
  %11291 = select i1 %11290, i64 8203933284918551466, i64 0
  %11292 = add i64 %11291, %11289
  %11293 = icmp eq i32 %11205, 2040
  %11294 = select i1 %11293, i64 -3176116833483372990, i64 0
  %11295 = add i64 %11294, %11292
  %11296 = load i64, i64* @ctx.0.7, align 8, !tbaa !7
  %11297 = xor i64 %10737, %10644
  %11298 = xor i64 %11297, %10830
  %11299 = xor i64 %11298, %10923
  %11300 = xor i64 %11299, %11016
  %11301 = xor i64 %11300, %11109
  %11302 = xor i64 %11301, %11202
  %11303 = xor i64 %11302, %11295
  %11304 = xor i64 %11303, %11296
  %11305 = lshr i64 %11304, 53
  %11306 = trunc i64 %11305 to i32
  %11307 = and i32 %11306, 2040
  %11308 = insertelement <4 x i32> poison, i32 %11307, i32 0
  %11309 = shufflevector <4 x i32> %11308, <4 x i32> poison, <4 x i32> zeroinitializer
  %11310 = insertelement <4 x i32> poison, i32 %11307, i32 0
  %11311 = shufflevector <4 x i32> %11310, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11312

11312:                                            ; preds = %12212, %11272
  %11313 = phi i32 [ 0, %11272 ], [ %12232, %12212 ]
  %11314 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11272 ], [ %12230, %12212 ]
  %11315 = phi <4 x i64> [ zeroinitializer, %11272 ], [ %12231, %12212 ]
  %11316 = or i32 %11313, 1
  %11317 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11316
  %11318 = bitcast i32* %11317 to <4 x i32>*
  %11319 = load <4 x i32>, <4 x i32>* %11318, align 4, !tbaa !3
  %11320 = getelementptr inbounds i32, i32* %11317, i32 4
  %11321 = bitcast i32* %11320 to <4 x i32>*
  %11322 = load <4 x i32>, <4 x i32>* %11321, align 4, !tbaa !3
  %11323 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %11319
  %11324 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %11322
  %11325 = bitcast <4 x i8*> %11323 to <4 x i64*>
  %11326 = bitcast <4 x i8*> %11324 to <4 x i64*>
  %11327 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11325, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11328 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11326, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11329 = icmp eq <4 x i32> %11309, %11319
  %11330 = icmp eq <4 x i32> %11311, %11322
  %11331 = select <4 x i1> %11329, <4 x i64> %11327, <4 x i64> zeroinitializer
  %11332 = select <4 x i1> %11330, <4 x i64> %11328, <4 x i64> zeroinitializer
  %11333 = add <4 x i64> %11331, %11314
  %11334 = add <4 x i64> %11332, %11315
  %11335 = or i32 %11313, 9
  %11336 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11335
  %11337 = bitcast i32* %11336 to <4 x i32>*
  %11338 = load <4 x i32>, <4 x i32>* %11337, align 4, !tbaa !3
  %11339 = getelementptr inbounds i32, i32* %11336, i32 4
  %11340 = bitcast i32* %11339 to <4 x i32>*
  %11341 = load <4 x i32>, <4 x i32>* %11340, align 4, !tbaa !3
  %11342 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %11338
  %11343 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %11341
  %11344 = bitcast <4 x i8*> %11342 to <4 x i64*>
  %11345 = bitcast <4 x i8*> %11343 to <4 x i64*>
  %11346 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11344, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11347 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11345, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11348 = icmp eq <4 x i32> %11309, %11338
  %11349 = icmp eq <4 x i32> %11311, %11341
  %11350 = select <4 x i1> %11348, <4 x i64> %11346, <4 x i64> zeroinitializer
  %11351 = select <4 x i1> %11349, <4 x i64> %11347, <4 x i64> zeroinitializer
  %11352 = add <4 x i64> %11350, %11333
  %11353 = add <4 x i64> %11351, %11334
  %11354 = or i32 %11313, 17
  %11355 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11354
  %11356 = bitcast i32* %11355 to <4 x i32>*
  %11357 = load <4 x i32>, <4 x i32>* %11356, align 4, !tbaa !3
  %11358 = getelementptr inbounds i32, i32* %11355, i32 4
  %11359 = bitcast i32* %11358 to <4 x i32>*
  %11360 = load <4 x i32>, <4 x i32>* %11359, align 4, !tbaa !3
  %11361 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %11357
  %11362 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %11360
  %11363 = bitcast <4 x i8*> %11361 to <4 x i64*>
  %11364 = bitcast <4 x i8*> %11362 to <4 x i64*>
  %11365 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11363, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11366 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11364, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11367 = icmp eq <4 x i32> %11309, %11357
  %11368 = icmp eq <4 x i32> %11311, %11360
  %11369 = select <4 x i1> %11367, <4 x i64> %11365, <4 x i64> zeroinitializer
  %11370 = select <4 x i1> %11368, <4 x i64> %11366, <4 x i64> zeroinitializer
  %11371 = add <4 x i64> %11369, %11352
  %11372 = add <4 x i64> %11370, %11353
  %11373 = icmp eq i32 %11313, 224
  br i1 %11373, label %11374, label %12212, !llvm.loop !134

11374:                                            ; preds = %11312
  %11375 = lshr i64 %11304, 45
  %11376 = trunc i64 %11375 to i32
  %11377 = and i32 %11376, 2040
  %11378 = insertelement <4 x i32> poison, i32 %11377, i32 0
  %11379 = shufflevector <4 x i32> %11378, <4 x i32> poison, <4 x i32> zeroinitializer
  %11380 = insertelement <4 x i32> poison, i32 %11377, i32 0
  %11381 = shufflevector <4 x i32> %11380, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11382

11382:                                            ; preds = %12191, %11374
  %11383 = phi i32 [ 0, %11374 ], [ %12211, %12191 ]
  %11384 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11374 ], [ %12209, %12191 ]
  %11385 = phi <4 x i64> [ zeroinitializer, %11374 ], [ %12210, %12191 ]
  %11386 = or i32 %11383, 1
  %11387 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11386
  %11388 = bitcast i32* %11387 to <4 x i32>*
  %11389 = load <4 x i32>, <4 x i32>* %11388, align 4, !tbaa !3
  %11390 = getelementptr inbounds i32, i32* %11387, i32 4
  %11391 = bitcast i32* %11390 to <4 x i32>*
  %11392 = load <4 x i32>, <4 x i32>* %11391, align 4, !tbaa !3
  %11393 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %11389
  %11394 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %11392
  %11395 = bitcast <4 x i8*> %11393 to <4 x i64*>
  %11396 = bitcast <4 x i8*> %11394 to <4 x i64*>
  %11397 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11395, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11398 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11396, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11399 = icmp eq <4 x i32> %11379, %11389
  %11400 = icmp eq <4 x i32> %11381, %11392
  %11401 = select <4 x i1> %11399, <4 x i64> %11397, <4 x i64> zeroinitializer
  %11402 = select <4 x i1> %11400, <4 x i64> %11398, <4 x i64> zeroinitializer
  %11403 = add <4 x i64> %11401, %11384
  %11404 = add <4 x i64> %11402, %11385
  %11405 = or i32 %11383, 9
  %11406 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11405
  %11407 = bitcast i32* %11406 to <4 x i32>*
  %11408 = load <4 x i32>, <4 x i32>* %11407, align 4, !tbaa !3
  %11409 = getelementptr inbounds i32, i32* %11406, i32 4
  %11410 = bitcast i32* %11409 to <4 x i32>*
  %11411 = load <4 x i32>, <4 x i32>* %11410, align 4, !tbaa !3
  %11412 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %11408
  %11413 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %11411
  %11414 = bitcast <4 x i8*> %11412 to <4 x i64*>
  %11415 = bitcast <4 x i8*> %11413 to <4 x i64*>
  %11416 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11414, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11417 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11415, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11418 = icmp eq <4 x i32> %11379, %11408
  %11419 = icmp eq <4 x i32> %11381, %11411
  %11420 = select <4 x i1> %11418, <4 x i64> %11416, <4 x i64> zeroinitializer
  %11421 = select <4 x i1> %11419, <4 x i64> %11417, <4 x i64> zeroinitializer
  %11422 = add <4 x i64> %11420, %11403
  %11423 = add <4 x i64> %11421, %11404
  %11424 = or i32 %11383, 17
  %11425 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11424
  %11426 = bitcast i32* %11425 to <4 x i32>*
  %11427 = load <4 x i32>, <4 x i32>* %11426, align 4, !tbaa !3
  %11428 = getelementptr inbounds i32, i32* %11425, i32 4
  %11429 = bitcast i32* %11428 to <4 x i32>*
  %11430 = load <4 x i32>, <4 x i32>* %11429, align 4, !tbaa !3
  %11431 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %11427
  %11432 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %11430
  %11433 = bitcast <4 x i8*> %11431 to <4 x i64*>
  %11434 = bitcast <4 x i8*> %11432 to <4 x i64*>
  %11435 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11433, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11436 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11434, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11437 = icmp eq <4 x i32> %11379, %11427
  %11438 = icmp eq <4 x i32> %11381, %11430
  %11439 = select <4 x i1> %11437, <4 x i64> %11435, <4 x i64> zeroinitializer
  %11440 = select <4 x i1> %11438, <4 x i64> %11436, <4 x i64> zeroinitializer
  %11441 = add <4 x i64> %11439, %11422
  %11442 = add <4 x i64> %11440, %11423
  %11443 = icmp eq i32 %11383, 224
  br i1 %11443, label %11444, label %12191, !llvm.loop !135

11444:                                            ; preds = %11382
  %11445 = lshr i64 %11304, 37
  %11446 = trunc i64 %11445 to i32
  %11447 = and i32 %11446, 2040
  %11448 = insertelement <4 x i32> poison, i32 %11447, i32 0
  %11449 = shufflevector <4 x i32> %11448, <4 x i32> poison, <4 x i32> zeroinitializer
  %11450 = insertelement <4 x i32> poison, i32 %11447, i32 0
  %11451 = shufflevector <4 x i32> %11450, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11452

11452:                                            ; preds = %12170, %11444
  %11453 = phi i32 [ 0, %11444 ], [ %12190, %12170 ]
  %11454 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11444 ], [ %12188, %12170 ]
  %11455 = phi <4 x i64> [ zeroinitializer, %11444 ], [ %12189, %12170 ]
  %11456 = or i32 %11453, 1
  %11457 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11456
  %11458 = bitcast i32* %11457 to <4 x i32>*
  %11459 = load <4 x i32>, <4 x i32>* %11458, align 4, !tbaa !3
  %11460 = getelementptr inbounds i32, i32* %11457, i32 4
  %11461 = bitcast i32* %11460 to <4 x i32>*
  %11462 = load <4 x i32>, <4 x i32>* %11461, align 4, !tbaa !3
  %11463 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %11459
  %11464 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %11462
  %11465 = bitcast <4 x i8*> %11463 to <4 x i64*>
  %11466 = bitcast <4 x i8*> %11464 to <4 x i64*>
  %11467 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11465, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11468 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11466, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11469 = icmp eq <4 x i32> %11449, %11459
  %11470 = icmp eq <4 x i32> %11451, %11462
  %11471 = select <4 x i1> %11469, <4 x i64> %11467, <4 x i64> zeroinitializer
  %11472 = select <4 x i1> %11470, <4 x i64> %11468, <4 x i64> zeroinitializer
  %11473 = add <4 x i64> %11471, %11454
  %11474 = add <4 x i64> %11472, %11455
  %11475 = or i32 %11453, 9
  %11476 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11475
  %11477 = bitcast i32* %11476 to <4 x i32>*
  %11478 = load <4 x i32>, <4 x i32>* %11477, align 4, !tbaa !3
  %11479 = getelementptr inbounds i32, i32* %11476, i32 4
  %11480 = bitcast i32* %11479 to <4 x i32>*
  %11481 = load <4 x i32>, <4 x i32>* %11480, align 4, !tbaa !3
  %11482 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %11478
  %11483 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %11481
  %11484 = bitcast <4 x i8*> %11482 to <4 x i64*>
  %11485 = bitcast <4 x i8*> %11483 to <4 x i64*>
  %11486 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11484, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11487 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11485, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11488 = icmp eq <4 x i32> %11449, %11478
  %11489 = icmp eq <4 x i32> %11451, %11481
  %11490 = select <4 x i1> %11488, <4 x i64> %11486, <4 x i64> zeroinitializer
  %11491 = select <4 x i1> %11489, <4 x i64> %11487, <4 x i64> zeroinitializer
  %11492 = add <4 x i64> %11490, %11473
  %11493 = add <4 x i64> %11491, %11474
  %11494 = or i32 %11453, 17
  %11495 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11494
  %11496 = bitcast i32* %11495 to <4 x i32>*
  %11497 = load <4 x i32>, <4 x i32>* %11496, align 4, !tbaa !3
  %11498 = getelementptr inbounds i32, i32* %11495, i32 4
  %11499 = bitcast i32* %11498 to <4 x i32>*
  %11500 = load <4 x i32>, <4 x i32>* %11499, align 4, !tbaa !3
  %11501 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %11497
  %11502 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %11500
  %11503 = bitcast <4 x i8*> %11501 to <4 x i64*>
  %11504 = bitcast <4 x i8*> %11502 to <4 x i64*>
  %11505 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11503, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11506 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11504, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11507 = icmp eq <4 x i32> %11449, %11497
  %11508 = icmp eq <4 x i32> %11451, %11500
  %11509 = select <4 x i1> %11507, <4 x i64> %11505, <4 x i64> zeroinitializer
  %11510 = select <4 x i1> %11508, <4 x i64> %11506, <4 x i64> zeroinitializer
  %11511 = add <4 x i64> %11509, %11492
  %11512 = add <4 x i64> %11510, %11493
  %11513 = icmp eq i32 %11453, 224
  br i1 %11513, label %11514, label %12170, !llvm.loop !136

11514:                                            ; preds = %11452
  %11515 = lshr i64 %11304, 29
  %11516 = trunc i64 %11515 to i32
  %11517 = and i32 %11516, 2040
  %11518 = insertelement <4 x i32> poison, i32 %11517, i32 0
  %11519 = shufflevector <4 x i32> %11518, <4 x i32> poison, <4 x i32> zeroinitializer
  %11520 = insertelement <4 x i32> poison, i32 %11517, i32 0
  %11521 = shufflevector <4 x i32> %11520, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11522

11522:                                            ; preds = %12149, %11514
  %11523 = phi i32 [ 0, %11514 ], [ %12169, %12149 ]
  %11524 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11514 ], [ %12167, %12149 ]
  %11525 = phi <4 x i64> [ zeroinitializer, %11514 ], [ %12168, %12149 ]
  %11526 = or i32 %11523, 1
  %11527 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11526
  %11528 = bitcast i32* %11527 to <4 x i32>*
  %11529 = load <4 x i32>, <4 x i32>* %11528, align 4, !tbaa !3
  %11530 = getelementptr inbounds i32, i32* %11527, i32 4
  %11531 = bitcast i32* %11530 to <4 x i32>*
  %11532 = load <4 x i32>, <4 x i32>* %11531, align 4, !tbaa !3
  %11533 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %11529
  %11534 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %11532
  %11535 = bitcast <4 x i8*> %11533 to <4 x i64*>
  %11536 = bitcast <4 x i8*> %11534 to <4 x i64*>
  %11537 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11535, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11538 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11536, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11539 = icmp eq <4 x i32> %11519, %11529
  %11540 = icmp eq <4 x i32> %11521, %11532
  %11541 = select <4 x i1> %11539, <4 x i64> %11537, <4 x i64> zeroinitializer
  %11542 = select <4 x i1> %11540, <4 x i64> %11538, <4 x i64> zeroinitializer
  %11543 = add <4 x i64> %11541, %11524
  %11544 = add <4 x i64> %11542, %11525
  %11545 = or i32 %11523, 9
  %11546 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11545
  %11547 = bitcast i32* %11546 to <4 x i32>*
  %11548 = load <4 x i32>, <4 x i32>* %11547, align 4, !tbaa !3
  %11549 = getelementptr inbounds i32, i32* %11546, i32 4
  %11550 = bitcast i32* %11549 to <4 x i32>*
  %11551 = load <4 x i32>, <4 x i32>* %11550, align 4, !tbaa !3
  %11552 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %11548
  %11553 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %11551
  %11554 = bitcast <4 x i8*> %11552 to <4 x i64*>
  %11555 = bitcast <4 x i8*> %11553 to <4 x i64*>
  %11556 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11554, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11557 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11555, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11558 = icmp eq <4 x i32> %11519, %11548
  %11559 = icmp eq <4 x i32> %11521, %11551
  %11560 = select <4 x i1> %11558, <4 x i64> %11556, <4 x i64> zeroinitializer
  %11561 = select <4 x i1> %11559, <4 x i64> %11557, <4 x i64> zeroinitializer
  %11562 = add <4 x i64> %11560, %11543
  %11563 = add <4 x i64> %11561, %11544
  %11564 = or i32 %11523, 17
  %11565 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11564
  %11566 = bitcast i32* %11565 to <4 x i32>*
  %11567 = load <4 x i32>, <4 x i32>* %11566, align 4, !tbaa !3
  %11568 = getelementptr inbounds i32, i32* %11565, i32 4
  %11569 = bitcast i32* %11568 to <4 x i32>*
  %11570 = load <4 x i32>, <4 x i32>* %11569, align 4, !tbaa !3
  %11571 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %11567
  %11572 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %11570
  %11573 = bitcast <4 x i8*> %11571 to <4 x i64*>
  %11574 = bitcast <4 x i8*> %11572 to <4 x i64*>
  %11575 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11573, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11576 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11574, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11577 = icmp eq <4 x i32> %11519, %11567
  %11578 = icmp eq <4 x i32> %11521, %11570
  %11579 = select <4 x i1> %11577, <4 x i64> %11575, <4 x i64> zeroinitializer
  %11580 = select <4 x i1> %11578, <4 x i64> %11576, <4 x i64> zeroinitializer
  %11581 = add <4 x i64> %11579, %11562
  %11582 = add <4 x i64> %11580, %11563
  %11583 = icmp eq i32 %11523, 224
  br i1 %11583, label %11584, label %12149, !llvm.loop !137

11584:                                            ; preds = %11522
  %11585 = lshr i64 %11304, 21
  %11586 = trunc i64 %11585 to i32
  %11587 = and i32 %11586, 2040
  %11588 = insertelement <4 x i32> poison, i32 %11587, i32 0
  %11589 = shufflevector <4 x i32> %11588, <4 x i32> poison, <4 x i32> zeroinitializer
  %11590 = insertelement <4 x i32> poison, i32 %11587, i32 0
  %11591 = shufflevector <4 x i32> %11590, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11592

11592:                                            ; preds = %12128, %11584
  %11593 = phi i32 [ 0, %11584 ], [ %12148, %12128 ]
  %11594 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11584 ], [ %12146, %12128 ]
  %11595 = phi <4 x i64> [ zeroinitializer, %11584 ], [ %12147, %12128 ]
  %11596 = or i32 %11593, 1
  %11597 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11596
  %11598 = bitcast i32* %11597 to <4 x i32>*
  %11599 = load <4 x i32>, <4 x i32>* %11598, align 4, !tbaa !3
  %11600 = getelementptr inbounds i32, i32* %11597, i32 4
  %11601 = bitcast i32* %11600 to <4 x i32>*
  %11602 = load <4 x i32>, <4 x i32>* %11601, align 4, !tbaa !3
  %11603 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %11599
  %11604 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %11602
  %11605 = bitcast <4 x i8*> %11603 to <4 x i64*>
  %11606 = bitcast <4 x i8*> %11604 to <4 x i64*>
  %11607 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11605, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11608 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11606, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11609 = icmp eq <4 x i32> %11589, %11599
  %11610 = icmp eq <4 x i32> %11591, %11602
  %11611 = select <4 x i1> %11609, <4 x i64> %11607, <4 x i64> zeroinitializer
  %11612 = select <4 x i1> %11610, <4 x i64> %11608, <4 x i64> zeroinitializer
  %11613 = add <4 x i64> %11611, %11594
  %11614 = add <4 x i64> %11612, %11595
  %11615 = or i32 %11593, 9
  %11616 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11615
  %11617 = bitcast i32* %11616 to <4 x i32>*
  %11618 = load <4 x i32>, <4 x i32>* %11617, align 4, !tbaa !3
  %11619 = getelementptr inbounds i32, i32* %11616, i32 4
  %11620 = bitcast i32* %11619 to <4 x i32>*
  %11621 = load <4 x i32>, <4 x i32>* %11620, align 4, !tbaa !3
  %11622 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %11618
  %11623 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %11621
  %11624 = bitcast <4 x i8*> %11622 to <4 x i64*>
  %11625 = bitcast <4 x i8*> %11623 to <4 x i64*>
  %11626 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11624, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11627 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11625, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11628 = icmp eq <4 x i32> %11589, %11618
  %11629 = icmp eq <4 x i32> %11591, %11621
  %11630 = select <4 x i1> %11628, <4 x i64> %11626, <4 x i64> zeroinitializer
  %11631 = select <4 x i1> %11629, <4 x i64> %11627, <4 x i64> zeroinitializer
  %11632 = add <4 x i64> %11630, %11613
  %11633 = add <4 x i64> %11631, %11614
  %11634 = or i32 %11593, 17
  %11635 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11634
  %11636 = bitcast i32* %11635 to <4 x i32>*
  %11637 = load <4 x i32>, <4 x i32>* %11636, align 4, !tbaa !3
  %11638 = getelementptr inbounds i32, i32* %11635, i32 4
  %11639 = bitcast i32* %11638 to <4 x i32>*
  %11640 = load <4 x i32>, <4 x i32>* %11639, align 4, !tbaa !3
  %11641 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %11637
  %11642 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %11640
  %11643 = bitcast <4 x i8*> %11641 to <4 x i64*>
  %11644 = bitcast <4 x i8*> %11642 to <4 x i64*>
  %11645 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11643, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11646 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11644, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11647 = icmp eq <4 x i32> %11589, %11637
  %11648 = icmp eq <4 x i32> %11591, %11640
  %11649 = select <4 x i1> %11647, <4 x i64> %11645, <4 x i64> zeroinitializer
  %11650 = select <4 x i1> %11648, <4 x i64> %11646, <4 x i64> zeroinitializer
  %11651 = add <4 x i64> %11649, %11632
  %11652 = add <4 x i64> %11650, %11633
  %11653 = icmp eq i32 %11593, 224
  br i1 %11653, label %11654, label %12128, !llvm.loop !138

11654:                                            ; preds = %11592
  %11655 = lshr i64 %11304, 13
  %11656 = trunc i64 %11655 to i32
  %11657 = and i32 %11656, 2040
  %11658 = insertelement <4 x i32> poison, i32 %11657, i32 0
  %11659 = shufflevector <4 x i32> %11658, <4 x i32> poison, <4 x i32> zeroinitializer
  %11660 = insertelement <4 x i32> poison, i32 %11657, i32 0
  %11661 = shufflevector <4 x i32> %11660, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11662

11662:                                            ; preds = %12107, %11654
  %11663 = phi i32 [ 0, %11654 ], [ %12127, %12107 ]
  %11664 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11654 ], [ %12125, %12107 ]
  %11665 = phi <4 x i64> [ zeroinitializer, %11654 ], [ %12126, %12107 ]
  %11666 = or i32 %11663, 1
  %11667 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11666
  %11668 = bitcast i32* %11667 to <4 x i32>*
  %11669 = load <4 x i32>, <4 x i32>* %11668, align 4, !tbaa !3
  %11670 = getelementptr inbounds i32, i32* %11667, i32 4
  %11671 = bitcast i32* %11670 to <4 x i32>*
  %11672 = load <4 x i32>, <4 x i32>* %11671, align 4, !tbaa !3
  %11673 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11669
  %11674 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11672
  %11675 = bitcast <4 x i8*> %11673 to <4 x i64*>
  %11676 = bitcast <4 x i8*> %11674 to <4 x i64*>
  %11677 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11675, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11678 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11676, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11679 = icmp eq <4 x i32> %11659, %11669
  %11680 = icmp eq <4 x i32> %11661, %11672
  %11681 = select <4 x i1> %11679, <4 x i64> %11677, <4 x i64> zeroinitializer
  %11682 = select <4 x i1> %11680, <4 x i64> %11678, <4 x i64> zeroinitializer
  %11683 = add <4 x i64> %11681, %11664
  %11684 = add <4 x i64> %11682, %11665
  %11685 = or i32 %11663, 9
  %11686 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11685
  %11687 = bitcast i32* %11686 to <4 x i32>*
  %11688 = load <4 x i32>, <4 x i32>* %11687, align 4, !tbaa !3
  %11689 = getelementptr inbounds i32, i32* %11686, i32 4
  %11690 = bitcast i32* %11689 to <4 x i32>*
  %11691 = load <4 x i32>, <4 x i32>* %11690, align 4, !tbaa !3
  %11692 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11688
  %11693 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11691
  %11694 = bitcast <4 x i8*> %11692 to <4 x i64*>
  %11695 = bitcast <4 x i8*> %11693 to <4 x i64*>
  %11696 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11694, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11697 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11695, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11698 = icmp eq <4 x i32> %11659, %11688
  %11699 = icmp eq <4 x i32> %11661, %11691
  %11700 = select <4 x i1> %11698, <4 x i64> %11696, <4 x i64> zeroinitializer
  %11701 = select <4 x i1> %11699, <4 x i64> %11697, <4 x i64> zeroinitializer
  %11702 = add <4 x i64> %11700, %11683
  %11703 = add <4 x i64> %11701, %11684
  %11704 = or i32 %11663, 17
  %11705 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11704
  %11706 = bitcast i32* %11705 to <4 x i32>*
  %11707 = load <4 x i32>, <4 x i32>* %11706, align 4, !tbaa !3
  %11708 = getelementptr inbounds i32, i32* %11705, i32 4
  %11709 = bitcast i32* %11708 to <4 x i32>*
  %11710 = load <4 x i32>, <4 x i32>* %11709, align 4, !tbaa !3
  %11711 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11707
  %11712 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %11710
  %11713 = bitcast <4 x i8*> %11711 to <4 x i64*>
  %11714 = bitcast <4 x i8*> %11712 to <4 x i64*>
  %11715 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11713, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11716 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11714, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11717 = icmp eq <4 x i32> %11659, %11707
  %11718 = icmp eq <4 x i32> %11661, %11710
  %11719 = select <4 x i1> %11717, <4 x i64> %11715, <4 x i64> zeroinitializer
  %11720 = select <4 x i1> %11718, <4 x i64> %11716, <4 x i64> zeroinitializer
  %11721 = add <4 x i64> %11719, %11702
  %11722 = add <4 x i64> %11720, %11703
  %11723 = icmp eq i32 %11663, 224
  br i1 %11723, label %11724, label %12107, !llvm.loop !139

11724:                                            ; preds = %11662
  %11725 = lshr i64 %11304, 5
  %11726 = trunc i64 %11725 to i32
  %11727 = and i32 %11726, 2040
  %11728 = insertelement <4 x i32> poison, i32 %11727, i32 0
  %11729 = shufflevector <4 x i32> %11728, <4 x i32> poison, <4 x i32> zeroinitializer
  %11730 = insertelement <4 x i32> poison, i32 %11727, i32 0
  %11731 = shufflevector <4 x i32> %11730, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11732

11732:                                            ; preds = %12086, %11724
  %11733 = phi i32 [ 0, %11724 ], [ %12106, %12086 ]
  %11734 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11724 ], [ %12104, %12086 ]
  %11735 = phi <4 x i64> [ zeroinitializer, %11724 ], [ %12105, %12086 ]
  %11736 = or i32 %11733, 1
  %11737 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11736
  %11738 = bitcast i32* %11737 to <4 x i32>*
  %11739 = load <4 x i32>, <4 x i32>* %11738, align 4, !tbaa !3
  %11740 = getelementptr inbounds i32, i32* %11737, i32 4
  %11741 = bitcast i32* %11740 to <4 x i32>*
  %11742 = load <4 x i32>, <4 x i32>* %11741, align 4, !tbaa !3
  %11743 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11739
  %11744 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11742
  %11745 = bitcast <4 x i8*> %11743 to <4 x i64*>
  %11746 = bitcast <4 x i8*> %11744 to <4 x i64*>
  %11747 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11745, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11748 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11746, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11749 = icmp eq <4 x i32> %11729, %11739
  %11750 = icmp eq <4 x i32> %11731, %11742
  %11751 = select <4 x i1> %11749, <4 x i64> %11747, <4 x i64> zeroinitializer
  %11752 = select <4 x i1> %11750, <4 x i64> %11748, <4 x i64> zeroinitializer
  %11753 = add <4 x i64> %11751, %11734
  %11754 = add <4 x i64> %11752, %11735
  %11755 = or i32 %11733, 9
  %11756 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11755
  %11757 = bitcast i32* %11756 to <4 x i32>*
  %11758 = load <4 x i32>, <4 x i32>* %11757, align 4, !tbaa !3
  %11759 = getelementptr inbounds i32, i32* %11756, i32 4
  %11760 = bitcast i32* %11759 to <4 x i32>*
  %11761 = load <4 x i32>, <4 x i32>* %11760, align 4, !tbaa !3
  %11762 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11758
  %11763 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11761
  %11764 = bitcast <4 x i8*> %11762 to <4 x i64*>
  %11765 = bitcast <4 x i8*> %11763 to <4 x i64*>
  %11766 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11764, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11767 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11765, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11768 = icmp eq <4 x i32> %11729, %11758
  %11769 = icmp eq <4 x i32> %11731, %11761
  %11770 = select <4 x i1> %11768, <4 x i64> %11766, <4 x i64> zeroinitializer
  %11771 = select <4 x i1> %11769, <4 x i64> %11767, <4 x i64> zeroinitializer
  %11772 = add <4 x i64> %11770, %11753
  %11773 = add <4 x i64> %11771, %11754
  %11774 = or i32 %11733, 17
  %11775 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11774
  %11776 = bitcast i32* %11775 to <4 x i32>*
  %11777 = load <4 x i32>, <4 x i32>* %11776, align 4, !tbaa !3
  %11778 = getelementptr inbounds i32, i32* %11775, i32 4
  %11779 = bitcast i32* %11778 to <4 x i32>*
  %11780 = load <4 x i32>, <4 x i32>* %11779, align 4, !tbaa !3
  %11781 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11777
  %11782 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %11780
  %11783 = bitcast <4 x i8*> %11781 to <4 x i64*>
  %11784 = bitcast <4 x i8*> %11782 to <4 x i64*>
  %11785 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11783, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11786 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11784, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11787 = icmp eq <4 x i32> %11729, %11777
  %11788 = icmp eq <4 x i32> %11731, %11780
  %11789 = select <4 x i1> %11787, <4 x i64> %11785, <4 x i64> zeroinitializer
  %11790 = select <4 x i1> %11788, <4 x i64> %11786, <4 x i64> zeroinitializer
  %11791 = add <4 x i64> %11789, %11772
  %11792 = add <4 x i64> %11790, %11773
  %11793 = icmp eq i32 %11733, 224
  br i1 %11793, label %11794, label %12086, !llvm.loop !140

11794:                                            ; preds = %11732
  %11795 = trunc i64 %11304 to i32
  %11796 = shl i32 %11795, 3
  %11797 = and i32 %11796, 2040
  %11798 = insertelement <4 x i32> poison, i32 %11797, i32 0
  %11799 = shufflevector <4 x i32> %11798, <4 x i32> poison, <4 x i32> zeroinitializer
  %11800 = insertelement <4 x i32> poison, i32 %11797, i32 0
  %11801 = shufflevector <4 x i32> %11800, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %11802

11802:                                            ; preds = %12065, %11794
  %11803 = phi i32 [ 0, %11794 ], [ %12085, %12065 ]
  %11804 = phi <4 x i64> [ <i64 undef, i64 0, i64 0, i64 0>, %11794 ], [ %12083, %12065 ]
  %11805 = phi <4 x i64> [ zeroinitializer, %11794 ], [ %12084, %12065 ]
  %11806 = or i32 %11803, 1
  %11807 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11806
  %11808 = bitcast i32* %11807 to <4 x i32>*
  %11809 = load <4 x i32>, <4 x i32>* %11808, align 4, !tbaa !3
  %11810 = getelementptr inbounds i32, i32* %11807, i32 4
  %11811 = bitcast i32* %11810 to <4 x i32>*
  %11812 = load <4 x i32>, <4 x i32>* %11811, align 4, !tbaa !3
  %11813 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11809
  %11814 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11812
  %11815 = bitcast <4 x i8*> %11813 to <4 x i64*>
  %11816 = bitcast <4 x i8*> %11814 to <4 x i64*>
  %11817 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11815, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11818 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11816, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11819 = icmp eq <4 x i32> %11799, %11809
  %11820 = icmp eq <4 x i32> %11801, %11812
  %11821 = select <4 x i1> %11819, <4 x i64> %11817, <4 x i64> zeroinitializer
  %11822 = select <4 x i1> %11820, <4 x i64> %11818, <4 x i64> zeroinitializer
  %11823 = add <4 x i64> %11821, %11804
  %11824 = add <4 x i64> %11822, %11805
  %11825 = or i32 %11803, 9
  %11826 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11825
  %11827 = bitcast i32* %11826 to <4 x i32>*
  %11828 = load <4 x i32>, <4 x i32>* %11827, align 4, !tbaa !3
  %11829 = getelementptr inbounds i32, i32* %11826, i32 4
  %11830 = bitcast i32* %11829 to <4 x i32>*
  %11831 = load <4 x i32>, <4 x i32>* %11830, align 4, !tbaa !3
  %11832 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11828
  %11833 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11831
  %11834 = bitcast <4 x i8*> %11832 to <4 x i64*>
  %11835 = bitcast <4 x i8*> %11833 to <4 x i64*>
  %11836 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11834, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11837 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11835, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11838 = icmp eq <4 x i32> %11799, %11828
  %11839 = icmp eq <4 x i32> %11801, %11831
  %11840 = select <4 x i1> %11838, <4 x i64> %11836, <4 x i64> zeroinitializer
  %11841 = select <4 x i1> %11839, <4 x i64> %11837, <4 x i64> zeroinitializer
  %11842 = add <4 x i64> %11840, %11823
  %11843 = add <4 x i64> %11841, %11824
  %11844 = or i32 %11803, 17
  %11845 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %11844
  %11846 = bitcast i32* %11845 to <4 x i32>*
  %11847 = load <4 x i32>, <4 x i32>* %11846, align 4, !tbaa !3
  %11848 = getelementptr inbounds i32, i32* %11845, i32 4
  %11849 = bitcast i32* %11848 to <4 x i32>*
  %11850 = load <4 x i32>, <4 x i32>* %11849, align 4, !tbaa !3
  %11851 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11847
  %11852 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %11850
  %11853 = bitcast <4 x i8*> %11851 to <4 x i64*>
  %11854 = bitcast <4 x i8*> %11852 to <4 x i64*>
  %11855 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11853, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11856 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %11854, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %11857 = icmp eq <4 x i32> %11799, %11847
  %11858 = icmp eq <4 x i32> %11801, %11850
  %11859 = select <4 x i1> %11857, <4 x i64> %11855, <4 x i64> zeroinitializer
  %11860 = select <4 x i1> %11858, <4 x i64> %11856, <4 x i64> zeroinitializer
  %11861 = add <4 x i64> %11859, %11842
  %11862 = add <4 x i64> %11860, %11843
  %11863 = icmp eq i32 %11803, 224
  br i1 %11863, label %11864, label %12065, !llvm.loop !141

11864:                                            ; preds = %11802
  %11865 = add <4 x i64> %11862, %11861
  %11866 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11865)
  %11867 = icmp eq i32 %11727, 2040
  %11868 = select i1 %11867, i64 17094, i64 0
  %11869 = icmp eq i32 %11727, 2032
  %11870 = select i1 %11869, i64 43747, i64 0
  %11871 = icmp eq i32 %11727, 2024
  %11872 = select i1 %11871, i64 51779, i64 0
  %11873 = icmp eq i32 %11727, 2016
  %11874 = select i1 %11873, i64 7969, i64 0
  %11875 = icmp eq i32 %11727, 2008
  %11876 = select i1 %11875, i64 -7786513464973963311, i64 0
  %11877 = icmp eq i32 %11727, 2000
  %11878 = select i1 %11877, i64 -1610274961606672227, i64 0
  %11879 = icmp eq i32 %11727, 1992
  %11880 = select i1 %11879, i64 -9058450267568037125, i64 0
  %11881 = add <4 x i64> %11792, %11791
  %11882 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11881)
  %11883 = add i64 %11880, %11882
  %11884 = add i64 %11878, %11883
  %11885 = add i64 %11876, %11884
  %11886 = add i64 %11874, %11885
  %11887 = add i64 %11872, %11886
  %11888 = add i64 %11870, %11887
  %11889 = add i64 %11868, %11888
  %11890 = icmp eq i32 %11657, 2040
  %11891 = select i1 %11890, i64 4347669, i64 0
  %11892 = icmp eq i32 %11657, 2032
  %11893 = select i1 %11892, i64 11155602, i64 0
  %11894 = icmp eq i32 %11657, 2024
  %11895 = select i1 %11894, i64 13288719, i64 0
  %11896 = icmp eq i32 %11657, 2016
  %11897 = select i1 %11896, i64 2057084, i64 0
  %11898 = icmp eq i32 %11657, 2008
  %11899 = select i1 %11898, i64 4809827444717481505, i64 0
  %11900 = icmp eq i32 %11657, 2000
  %11901 = select i1 %11900, i64 8369843054303033914, i64 0
  %11902 = icmp eq i32 %11657, 1992
  %11903 = select i1 %11902, i64 8785196325032562866, i64 0
  %11904 = add <4 x i64> %11722, %11721
  %11905 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11904)
  %11906 = add i64 %11903, %11905
  %11907 = add i64 %11901, %11906
  %11908 = add i64 %11899, %11907
  %11909 = add i64 %11897, %11908
  %11910 = add i64 %11895, %11909
  %11911 = add i64 %11893, %11910
  %11912 = add i64 %11891, %11911
  %11913 = icmp eq i32 %11587, 2040
  %11914 = select i1 %11913, i64 1120277847, i64 0
  %11915 = icmp eq i32 %11587, 2032
  %11916 = select i1 %11915, i64 2867040824, i64 0
  %11917 = icmp eq i32 %11587, 2024
  %11918 = select i1 %11917, i64 3393392581, i64 0
  %11919 = icmp eq i32 %11587, 2016
  %11920 = select i1 %11919, i64 522288227, i64 0
  %11921 = icmp eq i32 %11587, 2008
  %11922 = select i1 %11921, i64 -4665003603661872786, i64 0
  %11923 = icmp eq i32 %11587, 2000
  %11924 = select i1 %11923, i64 2843154170404223674, i64 0
  %11925 = icmp eq i32 %11587, 1992
  %11926 = select i1 %11925, i64 -1479007749835869680, i64 0
  %11927 = add <4 x i64> %11652, %11651
  %11928 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11927)
  %11929 = add i64 %11926, %11928
  %11930 = add i64 %11924, %11929
  %11931 = add i64 %11922, %11930
  %11932 = add i64 %11920, %11931
  %11933 = add i64 %11918, %11932
  %11934 = add i64 %11916, %11933
  %11935 = add i64 %11914, %11934
  %11936 = icmp eq i32 %11517, 2040
  %11937 = select i1 %11936, i64 287023311505, i64 0
  %11938 = icmp eq i32 %11517, 2032
  %11939 = select i1 %11938, i64 732054567387, i64 0
  %11940 = icmp eq i32 %11517, 2024
  %11941 = select i1 %11940, i64 868864564870, i64 0
  %11942 = icmp eq i32 %11517, 2016
  %11943 = select i1 %11942, i64 134718552130, i64 0
  %11944 = icmp eq i32 %11517, 2008
  %11945 = select i1 %11944, i64 7935854159672328895, i64 0
  %11946 = icmp eq i32 %11517, 2000
  %11947 = select i1 %11946, i64 -5027532858107268057, i64 0
  %11948 = icmp eq i32 %11517, 1992
  %11949 = select i1 %11948, i64 1203300724897905131, i64 0
  %11950 = add <4 x i64> %11582, %11581
  %11951 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11950)
  %11952 = add i64 %11949, %11951
  %11953 = add i64 %11947, %11952
  %11954 = add i64 %11945, %11953
  %11955 = add i64 %11943, %11954
  %11956 = add i64 %11941, %11955
  %11957 = add i64 %11939, %11956
  %11958 = add i64 %11937, %11957
  %11959 = icmp eq i32 %11447, 2040
  %11960 = select i1 %11959, i64 73422144246058, i64 0
  %11961 = icmp eq i32 %11447, 2032
  %11962 = select i1 %11961, i64 187895599192889, i64 0
  %11963 = icmp eq i32 %11447, 2024
  %11964 = select i1 %11963, i64 222390676915742, i64 0
  %11965 = icmp eq i32 %11447, 2016
  %11966 = select i1 %11965, i64 34230241149688, i64 0
  %11967 = icmp eq i32 %11447, 2008
  %11968 = select i1 %11967, i64 2408950612238581570, i64 0
  %11969 = icmp eq i32 %11447, 2000
  %11970 = select i1 %11969, i64 4231836215586269044, i64 0
  %11971 = icmp eq i32 %11447, 1992
  %11972 = select i1 %11971, i64 -5615809534224635015, i64 0
  %11973 = add <4 x i64> %11512, %11511
  %11974 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11973)
  %11975 = add i64 %11972, %11974
  %11976 = add i64 %11970, %11975
  %11977 = add i64 %11968, %11976
  %11978 = add i64 %11966, %11977
  %11979 = add i64 %11964, %11978
  %11980 = add i64 %11962, %11979
  %11981 = add i64 %11960, %11980
  %11982 = icmp eq i32 %11377, 2040
  %11983 = select i1 %11982, i64 18673096883033068, i64 0
  %11984 = icmp eq i32 %11377, 2032
  %11985 = select i1 %11984, i64 47912946727875034, i64 0
  %11986 = icmp eq i32 %11377, 2024
  %11987 = select i1 %11986, i64 57074614022851677, i64 0
  %11988 = icmp eq i32 %11377, 2016
  %11989 = select i1 %11988, i64 8835112670223833, i64 0
  %11990 = icmp eq i32 %11377, 2008
  %11991 = select i1 %11990, i64 -3364349307489619821, i64 0
  %11992 = icmp eq i32 %11377, 2000
  %11993 = select i1 %11992, i64 -7097468252516276247, i64 0
  %11994 = icmp eq i32 %11377, 1992
  %11995 = select i1 %11994, i64 -314670665226827390, i64 0
  %11996 = add <4 x i64> %11442, %11441
  %11997 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %11996)
  %11998 = add i64 %11995, %11997
  %11999 = add i64 %11993, %11998
  %12000 = add i64 %11991, %11999
  %12001 = add i64 %11989, %12000
  %12002 = add i64 %11987, %12001
  %12003 = add i64 %11985, %12002
  %12004 = add i64 %11983, %12003
  %12005 = icmp eq i32 %11307, 2040
  %12006 = select i1 %12005, i64 4811556717733801171, i64 0
  %12007 = icmp eq i32 %11307, 2032
  %12008 = select i1 %12007, i64 -6132897494654657935, i64 0
  %12009 = icmp eq i32 %11307, 2024
  %12010 = select i1 %12009, i64 -3872233913575383732, i64 0
  %12011 = icmp eq i32 %11307, 2016
  %12012 = select i1 %12011, i64 2243210855174429021, i64 0
  %12013 = icmp eq i32 %11307, 2008
  %12014 = select i1 %12013, i64 5751414958667764720, i64 0
  %12015 = icmp eq i32 %11307, 2000
  %12016 = select i1 %12015, i64 -9179115894310901337, i64 0
  %12017 = icmp eq i32 %11307, 1992
  %12018 = select i1 %12017, i64 -6702567834671021495, i64 0
  %12019 = add <4 x i64> %11372, %11371
  %12020 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %12019)
  %12021 = add i64 %12018, %12020
  %12022 = add i64 %12016, %12021
  %12023 = add i64 %12014, %12022
  %12024 = add i64 %12012, %12023
  %12025 = add i64 %12010, %12024
  %12026 = add i64 %12008, %12025
  %12027 = add i64 %12006, %12026
  %12028 = icmp eq i32 %11797, 1992
  %12029 = select i1 %12028, i64 5296930162245565346, i64 0
  %12030 = add i64 %12029, %11866
  %12031 = icmp eq i32 %11797, 2000
  %12032 = select i1 %12031, i64 -6347414485825053312, i64 0
  %12033 = add i64 %12032, %12030
  %12034 = icmp eq i32 %11797, 2008
  %12035 = select i1 %12034, i64 -1111471293076483761, i64 0
  %12036 = add i64 %12035, %12033
  %12037 = icmp eq i32 %11797, 2016
  %12038 = select i1 %12037, i64 31, i64 0
  %12039 = add i64 %12038, %12036
  %12040 = icmp eq i32 %11797, 2024
  %12041 = select i1 %12040, i64 202, i64 0
  %12042 = add i64 %12041, %12039
  %12043 = icmp eq i32 %11797, 2032
  %12044 = select i1 %12043, i64 170, i64 0
  %12045 = add i64 %12044, %12042
  %12046 = icmp eq i32 %11797, 2040
  %12047 = select i1 %12046, i64 66, i64 0
  %12048 = add i64 %12047, %12045
  %12049 = and i64 %11889, 65280
  %12050 = and i64 %11912, 16711680
  %12051 = and i64 %11935, 4278190080
  %12052 = and i64 %11958, 1095216660480
  %12053 = and i64 %11981, 280375465082880
  %12054 = and i64 %12004, 71776119061217280
  %12055 = and i64 %12027, -72057594037927936
  %12056 = and i64 %12048, 255
  %12057 = or i64 %12054, %12055
  %12058 = or i64 %12057, %12053
  %12059 = or i64 %12058, %12052
  %12060 = or i64 %12059, %12051
  %12061 = or i64 %12060, %12050
  %12062 = xor i64 %12049, %12061
  %12063 = xor i64 %12062, %12056
  store i64 %12063, i64* bitcast ([64 x i8]* @out to i64*), align 8, !tbaa !7
  %12064 = call i32 @write(i32 1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @out, i32 0, i32 0), i32 64) #7
  ret i32 0

12065:                                            ; preds = %11802
  %12066 = or i32 %11803, 25
  %12067 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12066
  %12068 = bitcast i32* %12067 to <4 x i32>*
  %12069 = load <4 x i32>, <4 x i32>* %12068, align 4, !tbaa !3
  %12070 = getelementptr inbounds i32, i32* %12067, i32 4
  %12071 = bitcast i32* %12070 to <4 x i32>*
  %12072 = load <4 x i32>, <4 x i32>* %12071, align 4, !tbaa !3
  %12073 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12069
  %12074 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12072
  %12075 = bitcast <4 x i8*> %12073 to <4 x i64*>
  %12076 = bitcast <4 x i8*> %12074 to <4 x i64*>
  %12077 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12075, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12078 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12076, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12079 = icmp eq <4 x i32> %11799, %12069
  %12080 = icmp eq <4 x i32> %11801, %12072
  %12081 = select <4 x i1> %12079, <4 x i64> %12077, <4 x i64> zeroinitializer
  %12082 = select <4 x i1> %12080, <4 x i64> %12078, <4 x i64> zeroinitializer
  %12083 = add <4 x i64> %12081, %11861
  %12084 = add <4 x i64> %12082, %11862
  %12085 = add nuw nsw i32 %11803, 32
  br label %11802

12086:                                            ; preds = %11732
  %12087 = or i32 %11733, 25
  %12088 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12087
  %12089 = bitcast i32* %12088 to <4 x i32>*
  %12090 = load <4 x i32>, <4 x i32>* %12089, align 4, !tbaa !3
  %12091 = getelementptr inbounds i32, i32* %12088, i32 4
  %12092 = bitcast i32* %12091 to <4 x i32>*
  %12093 = load <4 x i32>, <4 x i32>* %12092, align 4, !tbaa !3
  %12094 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12090
  %12095 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12093
  %12096 = bitcast <4 x i8*> %12094 to <4 x i64*>
  %12097 = bitcast <4 x i8*> %12095 to <4 x i64*>
  %12098 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12096, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12099 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12097, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12100 = icmp eq <4 x i32> %11729, %12090
  %12101 = icmp eq <4 x i32> %11731, %12093
  %12102 = select <4 x i1> %12100, <4 x i64> %12098, <4 x i64> zeroinitializer
  %12103 = select <4 x i1> %12101, <4 x i64> %12099, <4 x i64> zeroinitializer
  %12104 = add <4 x i64> %12102, %11791
  %12105 = add <4 x i64> %12103, %11792
  %12106 = add nuw nsw i32 %11733, 32
  br label %11732

12107:                                            ; preds = %11662
  %12108 = or i32 %11663, 25
  %12109 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12108
  %12110 = bitcast i32* %12109 to <4 x i32>*
  %12111 = load <4 x i32>, <4 x i32>* %12110, align 4, !tbaa !3
  %12112 = getelementptr inbounds i32, i32* %12109, i32 4
  %12113 = bitcast i32* %12112 to <4 x i32>*
  %12114 = load <4 x i32>, <4 x i32>* %12113, align 4, !tbaa !3
  %12115 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12111
  %12116 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12114
  %12117 = bitcast <4 x i8*> %12115 to <4 x i64*>
  %12118 = bitcast <4 x i8*> %12116 to <4 x i64*>
  %12119 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12117, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12120 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12118, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12121 = icmp eq <4 x i32> %11659, %12111
  %12122 = icmp eq <4 x i32> %11661, %12114
  %12123 = select <4 x i1> %12121, <4 x i64> %12119, <4 x i64> zeroinitializer
  %12124 = select <4 x i1> %12122, <4 x i64> %12120, <4 x i64> zeroinitializer
  %12125 = add <4 x i64> %12123, %11721
  %12126 = add <4 x i64> %12124, %11722
  %12127 = add nuw nsw i32 %11663, 32
  br label %11662

12128:                                            ; preds = %11592
  %12129 = or i32 %11593, 25
  %12130 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12129
  %12131 = bitcast i32* %12130 to <4 x i32>*
  %12132 = load <4 x i32>, <4 x i32>* %12131, align 4, !tbaa !3
  %12133 = getelementptr inbounds i32, i32* %12130, i32 4
  %12134 = bitcast i32* %12133 to <4 x i32>*
  %12135 = load <4 x i32>, <4 x i32>* %12134, align 4, !tbaa !3
  %12136 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12132
  %12137 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12135
  %12138 = bitcast <4 x i8*> %12136 to <4 x i64*>
  %12139 = bitcast <4 x i8*> %12137 to <4 x i64*>
  %12140 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12138, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12141 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12139, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12142 = icmp eq <4 x i32> %11589, %12132
  %12143 = icmp eq <4 x i32> %11591, %12135
  %12144 = select <4 x i1> %12142, <4 x i64> %12140, <4 x i64> zeroinitializer
  %12145 = select <4 x i1> %12143, <4 x i64> %12141, <4 x i64> zeroinitializer
  %12146 = add <4 x i64> %12144, %11651
  %12147 = add <4 x i64> %12145, %11652
  %12148 = add nuw nsw i32 %11593, 32
  br label %11592

12149:                                            ; preds = %11522
  %12150 = or i32 %11523, 25
  %12151 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12150
  %12152 = bitcast i32* %12151 to <4 x i32>*
  %12153 = load <4 x i32>, <4 x i32>* %12152, align 4, !tbaa !3
  %12154 = getelementptr inbounds i32, i32* %12151, i32 4
  %12155 = bitcast i32* %12154 to <4 x i32>*
  %12156 = load <4 x i32>, <4 x i32>* %12155, align 4, !tbaa !3
  %12157 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12153
  %12158 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12156
  %12159 = bitcast <4 x i8*> %12157 to <4 x i64*>
  %12160 = bitcast <4 x i8*> %12158 to <4 x i64*>
  %12161 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12159, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12162 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12160, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12163 = icmp eq <4 x i32> %11519, %12153
  %12164 = icmp eq <4 x i32> %11521, %12156
  %12165 = select <4 x i1> %12163, <4 x i64> %12161, <4 x i64> zeroinitializer
  %12166 = select <4 x i1> %12164, <4 x i64> %12162, <4 x i64> zeroinitializer
  %12167 = add <4 x i64> %12165, %11581
  %12168 = add <4 x i64> %12166, %11582
  %12169 = add nuw nsw i32 %11523, 32
  br label %11522

12170:                                            ; preds = %11452
  %12171 = or i32 %11453, 25
  %12172 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12171
  %12173 = bitcast i32* %12172 to <4 x i32>*
  %12174 = load <4 x i32>, <4 x i32>* %12173, align 4, !tbaa !3
  %12175 = getelementptr inbounds i32, i32* %12172, i32 4
  %12176 = bitcast i32* %12175 to <4 x i32>*
  %12177 = load <4 x i32>, <4 x i32>* %12176, align 4, !tbaa !3
  %12178 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12174
  %12179 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12177
  %12180 = bitcast <4 x i8*> %12178 to <4 x i64*>
  %12181 = bitcast <4 x i8*> %12179 to <4 x i64*>
  %12182 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12180, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12183 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12181, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12184 = icmp eq <4 x i32> %11449, %12174
  %12185 = icmp eq <4 x i32> %11451, %12177
  %12186 = select <4 x i1> %12184, <4 x i64> %12182, <4 x i64> zeroinitializer
  %12187 = select <4 x i1> %12185, <4 x i64> %12183, <4 x i64> zeroinitializer
  %12188 = add <4 x i64> %12186, %11511
  %12189 = add <4 x i64> %12187, %11512
  %12190 = add nuw nsw i32 %11453, 32
  br label %11452

12191:                                            ; preds = %11382
  %12192 = or i32 %11383, 25
  %12193 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12192
  %12194 = bitcast i32* %12193 to <4 x i32>*
  %12195 = load <4 x i32>, <4 x i32>* %12194, align 4, !tbaa !3
  %12196 = getelementptr inbounds i32, i32* %12193, i32 4
  %12197 = bitcast i32* %12196 to <4 x i32>*
  %12198 = load <4 x i32>, <4 x i32>* %12197, align 4, !tbaa !3
  %12199 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12195
  %12200 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12198
  %12201 = bitcast <4 x i8*> %12199 to <4 x i64*>
  %12202 = bitcast <4 x i8*> %12200 to <4 x i64*>
  %12203 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12201, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12204 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12202, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12205 = icmp eq <4 x i32> %11379, %12195
  %12206 = icmp eq <4 x i32> %11381, %12198
  %12207 = select <4 x i1> %12205, <4 x i64> %12203, <4 x i64> zeroinitializer
  %12208 = select <4 x i1> %12206, <4 x i64> %12204, <4 x i64> zeroinitializer
  %12209 = add <4 x i64> %12207, %11441
  %12210 = add <4 x i64> %12208, %11442
  %12211 = add nuw nsw i32 %11383, 32
  br label %11382

12212:                                            ; preds = %11312
  %12213 = or i32 %11313, 25
  %12214 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12213
  %12215 = bitcast i32* %12214 to <4 x i32>*
  %12216 = load <4 x i32>, <4 x i32>* %12215, align 4, !tbaa !3
  %12217 = getelementptr inbounds i32, i32* %12214, i32 4
  %12218 = bitcast i32* %12217 to <4 x i32>*
  %12219 = load <4 x i32>, <4 x i32>* %12218, align 4, !tbaa !3
  %12220 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12216
  %12221 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12219
  %12222 = bitcast <4 x i8*> %12220 to <4 x i64*>
  %12223 = bitcast <4 x i8*> %12221 to <4 x i64*>
  %12224 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12222, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12225 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12223, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12226 = icmp eq <4 x i32> %11309, %12216
  %12227 = icmp eq <4 x i32> %11311, %12219
  %12228 = select <4 x i1> %12226, <4 x i64> %12224, <4 x i64> zeroinitializer
  %12229 = select <4 x i1> %12227, <4 x i64> %12225, <4 x i64> zeroinitializer
  %12230 = add <4 x i64> %12228, %11371
  %12231 = add <4 x i64> %12229, %11372
  %12232 = add nuw nsw i32 %11313, 32
  br label %11312

12233:                                            ; preds = %11210
  %12234 = or i32 %11211, 25
  %12235 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12234
  %12236 = bitcast i32* %12235 to <4 x i32>*
  %12237 = load <4 x i32>, <4 x i32>* %12236, align 4, !tbaa !3
  %12238 = getelementptr inbounds i32, i32* %12235, i32 4
  %12239 = bitcast i32* %12238 to <4 x i32>*
  %12240 = load <4 x i32>, <4 x i32>* %12239, align 4, !tbaa !3
  %12241 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12237
  %12242 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12240
  %12243 = bitcast <4 x i8*> %12241 to <4 x i64*>
  %12244 = bitcast <4 x i8*> %12242 to <4 x i64*>
  %12245 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12243, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12246 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12244, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12247 = icmp eq <4 x i32> %11207, %12237
  %12248 = icmp eq <4 x i32> %11209, %12240
  %12249 = select <4 x i1> %12247, <4 x i64> %12245, <4 x i64> zeroinitializer
  %12250 = select <4 x i1> %12248, <4 x i64> %12246, <4 x i64> zeroinitializer
  %12251 = add <4 x i64> %12249, %11269
  %12252 = add <4 x i64> %12250, %11270
  %12253 = add nuw nsw i32 %11211, 32
  br label %11210

12254:                                            ; preds = %11117
  %12255 = or i32 %11118, 25
  %12256 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12255
  %12257 = bitcast i32* %12256 to <4 x i32>*
  %12258 = load <4 x i32>, <4 x i32>* %12257, align 4, !tbaa !3
  %12259 = getelementptr inbounds i32, i32* %12256, i32 4
  %12260 = bitcast i32* %12259 to <4 x i32>*
  %12261 = load <4 x i32>, <4 x i32>* %12260, align 4, !tbaa !3
  %12262 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12258
  %12263 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12261
  %12264 = bitcast <4 x i8*> %12262 to <4 x i64*>
  %12265 = bitcast <4 x i8*> %12263 to <4 x i64*>
  %12266 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12264, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12267 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12265, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12268 = icmp eq <4 x i32> %11114, %12258
  %12269 = icmp eq <4 x i32> %11116, %12261
  %12270 = select <4 x i1> %12268, <4 x i64> %12266, <4 x i64> zeroinitializer
  %12271 = select <4 x i1> %12269, <4 x i64> %12267, <4 x i64> zeroinitializer
  %12272 = add <4 x i64> %12270, %11176
  %12273 = add <4 x i64> %12271, %11177
  %12274 = add nuw nsw i32 %11118, 32
  br label %11117

12275:                                            ; preds = %11024
  %12276 = or i32 %11025, 25
  %12277 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12276
  %12278 = bitcast i32* %12277 to <4 x i32>*
  %12279 = load <4 x i32>, <4 x i32>* %12278, align 4, !tbaa !3
  %12280 = getelementptr inbounds i32, i32* %12277, i32 4
  %12281 = bitcast i32* %12280 to <4 x i32>*
  %12282 = load <4 x i32>, <4 x i32>* %12281, align 4, !tbaa !3
  %12283 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12279
  %12284 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12282
  %12285 = bitcast <4 x i8*> %12283 to <4 x i64*>
  %12286 = bitcast <4 x i8*> %12284 to <4 x i64*>
  %12287 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12285, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12288 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12286, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12289 = icmp eq <4 x i32> %11021, %12279
  %12290 = icmp eq <4 x i32> %11023, %12282
  %12291 = select <4 x i1> %12289, <4 x i64> %12287, <4 x i64> zeroinitializer
  %12292 = select <4 x i1> %12290, <4 x i64> %12288, <4 x i64> zeroinitializer
  %12293 = add <4 x i64> %12291, %11083
  %12294 = add <4 x i64> %12292, %11084
  %12295 = add nuw nsw i32 %11025, 32
  br label %11024

12296:                                            ; preds = %10931
  %12297 = or i32 %10932, 25
  %12298 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12297
  %12299 = bitcast i32* %12298 to <4 x i32>*
  %12300 = load <4 x i32>, <4 x i32>* %12299, align 4, !tbaa !3
  %12301 = getelementptr inbounds i32, i32* %12298, i32 4
  %12302 = bitcast i32* %12301 to <4 x i32>*
  %12303 = load <4 x i32>, <4 x i32>* %12302, align 4, !tbaa !3
  %12304 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12300
  %12305 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12303
  %12306 = bitcast <4 x i8*> %12304 to <4 x i64*>
  %12307 = bitcast <4 x i8*> %12305 to <4 x i64*>
  %12308 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12306, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12309 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12307, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12310 = icmp eq <4 x i32> %10928, %12300
  %12311 = icmp eq <4 x i32> %10930, %12303
  %12312 = select <4 x i1> %12310, <4 x i64> %12308, <4 x i64> zeroinitializer
  %12313 = select <4 x i1> %12311, <4 x i64> %12309, <4 x i64> zeroinitializer
  %12314 = add <4 x i64> %12312, %10990
  %12315 = add <4 x i64> %12313, %10991
  %12316 = add nuw nsw i32 %10932, 32
  br label %10931

12317:                                            ; preds = %10838
  %12318 = or i32 %10839, 25
  %12319 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12318
  %12320 = bitcast i32* %12319 to <4 x i32>*
  %12321 = load <4 x i32>, <4 x i32>* %12320, align 4, !tbaa !3
  %12322 = getelementptr inbounds i32, i32* %12319, i32 4
  %12323 = bitcast i32* %12322 to <4 x i32>*
  %12324 = load <4 x i32>, <4 x i32>* %12323, align 4, !tbaa !3
  %12325 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12321
  %12326 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12324
  %12327 = bitcast <4 x i8*> %12325 to <4 x i64*>
  %12328 = bitcast <4 x i8*> %12326 to <4 x i64*>
  %12329 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12327, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12330 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12328, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12331 = icmp eq <4 x i32> %10835, %12321
  %12332 = icmp eq <4 x i32> %10837, %12324
  %12333 = select <4 x i1> %12331, <4 x i64> %12329, <4 x i64> zeroinitializer
  %12334 = select <4 x i1> %12332, <4 x i64> %12330, <4 x i64> zeroinitializer
  %12335 = add <4 x i64> %12333, %10897
  %12336 = add <4 x i64> %12334, %10898
  %12337 = add nuw nsw i32 %10839, 32
  br label %10838

12338:                                            ; preds = %10745
  %12339 = or i32 %10746, 25
  %12340 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12339
  %12341 = bitcast i32* %12340 to <4 x i32>*
  %12342 = load <4 x i32>, <4 x i32>* %12341, align 4, !tbaa !3
  %12343 = getelementptr inbounds i32, i32* %12340, i32 4
  %12344 = bitcast i32* %12343 to <4 x i32>*
  %12345 = load <4 x i32>, <4 x i32>* %12344, align 4, !tbaa !3
  %12346 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12342
  %12347 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12345
  %12348 = bitcast <4 x i8*> %12346 to <4 x i64*>
  %12349 = bitcast <4 x i8*> %12347 to <4 x i64*>
  %12350 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12348, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12351 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12349, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12352 = icmp eq <4 x i32> %10742, %12342
  %12353 = icmp eq <4 x i32> %10744, %12345
  %12354 = select <4 x i1> %12352, <4 x i64> %12350, <4 x i64> zeroinitializer
  %12355 = select <4 x i1> %12353, <4 x i64> %12351, <4 x i64> zeroinitializer
  %12356 = add <4 x i64> %12354, %10804
  %12357 = add <4 x i64> %12355, %10805
  %12358 = add nuw nsw i32 %10746, 32
  br label %10745

12359:                                            ; preds = %10652
  %12360 = or i32 %10653, 25
  %12361 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12360
  %12362 = bitcast i32* %12361 to <4 x i32>*
  %12363 = load <4 x i32>, <4 x i32>* %12362, align 4, !tbaa !3
  %12364 = getelementptr inbounds i32, i32* %12361, i32 4
  %12365 = bitcast i32* %12364 to <4 x i32>*
  %12366 = load <4 x i32>, <4 x i32>* %12365, align 4, !tbaa !3
  %12367 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12363
  %12368 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12366
  %12369 = bitcast <4 x i8*> %12367 to <4 x i64*>
  %12370 = bitcast <4 x i8*> %12368 to <4 x i64*>
  %12371 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12369, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12372 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12370, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12373 = icmp eq <4 x i32> %10649, %12363
  %12374 = icmp eq <4 x i32> %10651, %12366
  %12375 = select <4 x i1> %12373, <4 x i64> %12371, <4 x i64> zeroinitializer
  %12376 = select <4 x i1> %12374, <4 x i64> %12372, <4 x i64> zeroinitializer
  %12377 = add <4 x i64> %12375, %10711
  %12378 = add <4 x i64> %12376, %10712
  %12379 = add nuw nsw i32 %10653, 32
  br label %10652

12380:                                            ; preds = %10559
  %12381 = or i32 %10560, 25
  %12382 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12381
  %12383 = bitcast i32* %12382 to <4 x i32>*
  %12384 = load <4 x i32>, <4 x i32>* %12383, align 4, !tbaa !3
  %12385 = getelementptr inbounds i32, i32* %12382, i32 4
  %12386 = bitcast i32* %12385 to <4 x i32>*
  %12387 = load <4 x i32>, <4 x i32>* %12386, align 4, !tbaa !3
  %12388 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12384
  %12389 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12387
  %12390 = bitcast <4 x i8*> %12388 to <4 x i64*>
  %12391 = bitcast <4 x i8*> %12389 to <4 x i64*>
  %12392 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12390, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12393 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12391, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12394 = icmp eq <4 x i32> %10556, %12384
  %12395 = icmp eq <4 x i32> %10558, %12387
  %12396 = select <4 x i1> %12394, <4 x i64> %12392, <4 x i64> zeroinitializer
  %12397 = select <4 x i1> %12395, <4 x i64> %12393, <4 x i64> zeroinitializer
  %12398 = add <4 x i64> %12396, %10618
  %12399 = add <4 x i64> %12397, %10619
  %12400 = add nuw nsw i32 %10560, 32
  br label %10559

12401:                                            ; preds = %10457
  %12402 = or i32 %10458, 25
  %12403 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12402
  %12404 = bitcast i32* %12403 to <4 x i32>*
  %12405 = load <4 x i32>, <4 x i32>* %12404, align 4, !tbaa !3
  %12406 = getelementptr inbounds i32, i32* %12403, i32 4
  %12407 = bitcast i32* %12406 to <4 x i32>*
  %12408 = load <4 x i32>, <4 x i32>* %12407, align 4, !tbaa !3
  %12409 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12405
  %12410 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12408
  %12411 = bitcast <4 x i8*> %12409 to <4 x i64*>
  %12412 = bitcast <4 x i8*> %12410 to <4 x i64*>
  %12413 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12411, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12414 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12412, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12415 = icmp eq <4 x i32> %10454, %12405
  %12416 = icmp eq <4 x i32> %10456, %12408
  %12417 = select <4 x i1> %12415, <4 x i64> %12413, <4 x i64> zeroinitializer
  %12418 = select <4 x i1> %12416, <4 x i64> %12414, <4 x i64> zeroinitializer
  %12419 = add <4 x i64> %12417, %10516
  %12420 = add <4 x i64> %12418, %10517
  %12421 = add nuw nsw i32 %10458, 32
  br label %10457

12422:                                            ; preds = %10364
  %12423 = or i32 %10365, 25
  %12424 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12423
  %12425 = bitcast i32* %12424 to <4 x i32>*
  %12426 = load <4 x i32>, <4 x i32>* %12425, align 4, !tbaa !3
  %12427 = getelementptr inbounds i32, i32* %12424, i32 4
  %12428 = bitcast i32* %12427 to <4 x i32>*
  %12429 = load <4 x i32>, <4 x i32>* %12428, align 4, !tbaa !3
  %12430 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12426
  %12431 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12429
  %12432 = bitcast <4 x i8*> %12430 to <4 x i64*>
  %12433 = bitcast <4 x i8*> %12431 to <4 x i64*>
  %12434 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12432, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12435 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12433, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12436 = icmp eq <4 x i32> %10361, %12426
  %12437 = icmp eq <4 x i32> %10363, %12429
  %12438 = select <4 x i1> %12436, <4 x i64> %12434, <4 x i64> zeroinitializer
  %12439 = select <4 x i1> %12437, <4 x i64> %12435, <4 x i64> zeroinitializer
  %12440 = add <4 x i64> %12438, %10423
  %12441 = add <4 x i64> %12439, %10424
  %12442 = add nuw nsw i32 %10365, 32
  br label %10364

12443:                                            ; preds = %10271
  %12444 = or i32 %10272, 25
  %12445 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12444
  %12446 = bitcast i32* %12445 to <4 x i32>*
  %12447 = load <4 x i32>, <4 x i32>* %12446, align 4, !tbaa !3
  %12448 = getelementptr inbounds i32, i32* %12445, i32 4
  %12449 = bitcast i32* %12448 to <4 x i32>*
  %12450 = load <4 x i32>, <4 x i32>* %12449, align 4, !tbaa !3
  %12451 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12447
  %12452 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12450
  %12453 = bitcast <4 x i8*> %12451 to <4 x i64*>
  %12454 = bitcast <4 x i8*> %12452 to <4 x i64*>
  %12455 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12453, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12456 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12454, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12457 = icmp eq <4 x i32> %10268, %12447
  %12458 = icmp eq <4 x i32> %10270, %12450
  %12459 = select <4 x i1> %12457, <4 x i64> %12455, <4 x i64> zeroinitializer
  %12460 = select <4 x i1> %12458, <4 x i64> %12456, <4 x i64> zeroinitializer
  %12461 = add <4 x i64> %12459, %10330
  %12462 = add <4 x i64> %12460, %10331
  %12463 = add nuw nsw i32 %10272, 32
  br label %10271

12464:                                            ; preds = %10178
  %12465 = or i32 %10179, 25
  %12466 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12465
  %12467 = bitcast i32* %12466 to <4 x i32>*
  %12468 = load <4 x i32>, <4 x i32>* %12467, align 4, !tbaa !3
  %12469 = getelementptr inbounds i32, i32* %12466, i32 4
  %12470 = bitcast i32* %12469 to <4 x i32>*
  %12471 = load <4 x i32>, <4 x i32>* %12470, align 4, !tbaa !3
  %12472 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12468
  %12473 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12471
  %12474 = bitcast <4 x i8*> %12472 to <4 x i64*>
  %12475 = bitcast <4 x i8*> %12473 to <4 x i64*>
  %12476 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12474, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12477 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12475, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12478 = icmp eq <4 x i32> %10175, %12468
  %12479 = icmp eq <4 x i32> %10177, %12471
  %12480 = select <4 x i1> %12478, <4 x i64> %12476, <4 x i64> zeroinitializer
  %12481 = select <4 x i1> %12479, <4 x i64> %12477, <4 x i64> zeroinitializer
  %12482 = add <4 x i64> %12480, %10237
  %12483 = add <4 x i64> %12481, %10238
  %12484 = add nuw nsw i32 %10179, 32
  br label %10178

12485:                                            ; preds = %10085
  %12486 = or i32 %10086, 25
  %12487 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12486
  %12488 = bitcast i32* %12487 to <4 x i32>*
  %12489 = load <4 x i32>, <4 x i32>* %12488, align 4, !tbaa !3
  %12490 = getelementptr inbounds i32, i32* %12487, i32 4
  %12491 = bitcast i32* %12490 to <4 x i32>*
  %12492 = load <4 x i32>, <4 x i32>* %12491, align 4, !tbaa !3
  %12493 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12489
  %12494 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12492
  %12495 = bitcast <4 x i8*> %12493 to <4 x i64*>
  %12496 = bitcast <4 x i8*> %12494 to <4 x i64*>
  %12497 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12495, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12498 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12496, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12499 = icmp eq <4 x i32> %10082, %12489
  %12500 = icmp eq <4 x i32> %10084, %12492
  %12501 = select <4 x i1> %12499, <4 x i64> %12497, <4 x i64> zeroinitializer
  %12502 = select <4 x i1> %12500, <4 x i64> %12498, <4 x i64> zeroinitializer
  %12503 = add <4 x i64> %12501, %10144
  %12504 = add <4 x i64> %12502, %10145
  %12505 = add nuw nsw i32 %10086, 32
  br label %10085

12506:                                            ; preds = %9992
  %12507 = or i32 %9993, 25
  %12508 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12507
  %12509 = bitcast i32* %12508 to <4 x i32>*
  %12510 = load <4 x i32>, <4 x i32>* %12509, align 4, !tbaa !3
  %12511 = getelementptr inbounds i32, i32* %12508, i32 4
  %12512 = bitcast i32* %12511 to <4 x i32>*
  %12513 = load <4 x i32>, <4 x i32>* %12512, align 4, !tbaa !3
  %12514 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12510
  %12515 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12513
  %12516 = bitcast <4 x i8*> %12514 to <4 x i64*>
  %12517 = bitcast <4 x i8*> %12515 to <4 x i64*>
  %12518 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12516, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12519 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12517, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12520 = icmp eq <4 x i32> %9989, %12510
  %12521 = icmp eq <4 x i32> %9991, %12513
  %12522 = select <4 x i1> %12520, <4 x i64> %12518, <4 x i64> zeroinitializer
  %12523 = select <4 x i1> %12521, <4 x i64> %12519, <4 x i64> zeroinitializer
  %12524 = add <4 x i64> %12522, %10051
  %12525 = add <4 x i64> %12523, %10052
  %12526 = add nuw nsw i32 %9993, 32
  br label %9992

12527:                                            ; preds = %9899
  %12528 = or i32 %9900, 25
  %12529 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12528
  %12530 = bitcast i32* %12529 to <4 x i32>*
  %12531 = load <4 x i32>, <4 x i32>* %12530, align 4, !tbaa !3
  %12532 = getelementptr inbounds i32, i32* %12529, i32 4
  %12533 = bitcast i32* %12532 to <4 x i32>*
  %12534 = load <4 x i32>, <4 x i32>* %12533, align 4, !tbaa !3
  %12535 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12531
  %12536 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12534
  %12537 = bitcast <4 x i8*> %12535 to <4 x i64*>
  %12538 = bitcast <4 x i8*> %12536 to <4 x i64*>
  %12539 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12537, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12540 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12538, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12541 = icmp eq <4 x i32> %9896, %12531
  %12542 = icmp eq <4 x i32> %9898, %12534
  %12543 = select <4 x i1> %12541, <4 x i64> %12539, <4 x i64> zeroinitializer
  %12544 = select <4 x i1> %12542, <4 x i64> %12540, <4 x i64> zeroinitializer
  %12545 = add <4 x i64> %12543, %9958
  %12546 = add <4 x i64> %12544, %9959
  %12547 = add nuw nsw i32 %9900, 32
  br label %9899

12548:                                            ; preds = %9806
  %12549 = or i32 %9807, 25
  %12550 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12549
  %12551 = bitcast i32* %12550 to <4 x i32>*
  %12552 = load <4 x i32>, <4 x i32>* %12551, align 4, !tbaa !3
  %12553 = getelementptr inbounds i32, i32* %12550, i32 4
  %12554 = bitcast i32* %12553 to <4 x i32>*
  %12555 = load <4 x i32>, <4 x i32>* %12554, align 4, !tbaa !3
  %12556 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12552
  %12557 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12555
  %12558 = bitcast <4 x i8*> %12556 to <4 x i64*>
  %12559 = bitcast <4 x i8*> %12557 to <4 x i64*>
  %12560 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12558, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12561 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12559, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12562 = icmp eq <4 x i32> %9803, %12552
  %12563 = icmp eq <4 x i32> %9805, %12555
  %12564 = select <4 x i1> %12562, <4 x i64> %12560, <4 x i64> zeroinitializer
  %12565 = select <4 x i1> %12563, <4 x i64> %12561, <4 x i64> zeroinitializer
  %12566 = add <4 x i64> %12564, %9865
  %12567 = add <4 x i64> %12565, %9866
  %12568 = add nuw nsw i32 %9807, 32
  br label %9806

12569:                                            ; preds = %9704
  %12570 = or i32 %9705, 25
  %12571 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12570
  %12572 = bitcast i32* %12571 to <4 x i32>*
  %12573 = load <4 x i32>, <4 x i32>* %12572, align 4, !tbaa !3
  %12574 = getelementptr inbounds i32, i32* %12571, i32 4
  %12575 = bitcast i32* %12574 to <4 x i32>*
  %12576 = load <4 x i32>, <4 x i32>* %12575, align 4, !tbaa !3
  %12577 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12573
  %12578 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12576
  %12579 = bitcast <4 x i8*> %12577 to <4 x i64*>
  %12580 = bitcast <4 x i8*> %12578 to <4 x i64*>
  %12581 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12579, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12582 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12580, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12583 = icmp eq <4 x i32> %9701, %12573
  %12584 = icmp eq <4 x i32> %9703, %12576
  %12585 = select <4 x i1> %12583, <4 x i64> %12581, <4 x i64> zeroinitializer
  %12586 = select <4 x i1> %12584, <4 x i64> %12582, <4 x i64> zeroinitializer
  %12587 = add <4 x i64> %12585, %9763
  %12588 = add <4 x i64> %12586, %9764
  %12589 = add nuw nsw i32 %9705, 32
  br label %9704

12590:                                            ; preds = %9611
  %12591 = or i32 %9612, 25
  %12592 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12591
  %12593 = bitcast i32* %12592 to <4 x i32>*
  %12594 = load <4 x i32>, <4 x i32>* %12593, align 4, !tbaa !3
  %12595 = getelementptr inbounds i32, i32* %12592, i32 4
  %12596 = bitcast i32* %12595 to <4 x i32>*
  %12597 = load <4 x i32>, <4 x i32>* %12596, align 4, !tbaa !3
  %12598 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12594
  %12599 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12597
  %12600 = bitcast <4 x i8*> %12598 to <4 x i64*>
  %12601 = bitcast <4 x i8*> %12599 to <4 x i64*>
  %12602 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12600, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12603 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12601, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12604 = icmp eq <4 x i32> %9608, %12594
  %12605 = icmp eq <4 x i32> %9610, %12597
  %12606 = select <4 x i1> %12604, <4 x i64> %12602, <4 x i64> zeroinitializer
  %12607 = select <4 x i1> %12605, <4 x i64> %12603, <4 x i64> zeroinitializer
  %12608 = add <4 x i64> %12606, %9670
  %12609 = add <4 x i64> %12607, %9671
  %12610 = add nuw nsw i32 %9612, 32
  br label %9611

12611:                                            ; preds = %9518
  %12612 = or i32 %9519, 25
  %12613 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12612
  %12614 = bitcast i32* %12613 to <4 x i32>*
  %12615 = load <4 x i32>, <4 x i32>* %12614, align 4, !tbaa !3
  %12616 = getelementptr inbounds i32, i32* %12613, i32 4
  %12617 = bitcast i32* %12616 to <4 x i32>*
  %12618 = load <4 x i32>, <4 x i32>* %12617, align 4, !tbaa !3
  %12619 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12615
  %12620 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12618
  %12621 = bitcast <4 x i8*> %12619 to <4 x i64*>
  %12622 = bitcast <4 x i8*> %12620 to <4 x i64*>
  %12623 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12621, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12624 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12622, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12625 = icmp eq <4 x i32> %9515, %12615
  %12626 = icmp eq <4 x i32> %9517, %12618
  %12627 = select <4 x i1> %12625, <4 x i64> %12623, <4 x i64> zeroinitializer
  %12628 = select <4 x i1> %12626, <4 x i64> %12624, <4 x i64> zeroinitializer
  %12629 = add <4 x i64> %12627, %9577
  %12630 = add <4 x i64> %12628, %9578
  %12631 = add nuw nsw i32 %9519, 32
  br label %9518

12632:                                            ; preds = %9425
  %12633 = or i32 %9426, 25
  %12634 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12633
  %12635 = bitcast i32* %12634 to <4 x i32>*
  %12636 = load <4 x i32>, <4 x i32>* %12635, align 4, !tbaa !3
  %12637 = getelementptr inbounds i32, i32* %12634, i32 4
  %12638 = bitcast i32* %12637 to <4 x i32>*
  %12639 = load <4 x i32>, <4 x i32>* %12638, align 4, !tbaa !3
  %12640 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12636
  %12641 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12639
  %12642 = bitcast <4 x i8*> %12640 to <4 x i64*>
  %12643 = bitcast <4 x i8*> %12641 to <4 x i64*>
  %12644 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12642, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12645 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12643, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12646 = icmp eq <4 x i32> %9422, %12636
  %12647 = icmp eq <4 x i32> %9424, %12639
  %12648 = select <4 x i1> %12646, <4 x i64> %12644, <4 x i64> zeroinitializer
  %12649 = select <4 x i1> %12647, <4 x i64> %12645, <4 x i64> zeroinitializer
  %12650 = add <4 x i64> %12648, %9484
  %12651 = add <4 x i64> %12649, %9485
  %12652 = add nuw nsw i32 %9426, 32
  br label %9425

12653:                                            ; preds = %9332
  %12654 = or i32 %9333, 25
  %12655 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12654
  %12656 = bitcast i32* %12655 to <4 x i32>*
  %12657 = load <4 x i32>, <4 x i32>* %12656, align 4, !tbaa !3
  %12658 = getelementptr inbounds i32, i32* %12655, i32 4
  %12659 = bitcast i32* %12658 to <4 x i32>*
  %12660 = load <4 x i32>, <4 x i32>* %12659, align 4, !tbaa !3
  %12661 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12657
  %12662 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12660
  %12663 = bitcast <4 x i8*> %12661 to <4 x i64*>
  %12664 = bitcast <4 x i8*> %12662 to <4 x i64*>
  %12665 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12663, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12666 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12664, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12667 = icmp eq <4 x i32> %9329, %12657
  %12668 = icmp eq <4 x i32> %9331, %12660
  %12669 = select <4 x i1> %12667, <4 x i64> %12665, <4 x i64> zeroinitializer
  %12670 = select <4 x i1> %12668, <4 x i64> %12666, <4 x i64> zeroinitializer
  %12671 = add <4 x i64> %12669, %9391
  %12672 = add <4 x i64> %12670, %9392
  %12673 = add nuw nsw i32 %9333, 32
  br label %9332

12674:                                            ; preds = %9239
  %12675 = or i32 %9240, 25
  %12676 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12675
  %12677 = bitcast i32* %12676 to <4 x i32>*
  %12678 = load <4 x i32>, <4 x i32>* %12677, align 4, !tbaa !3
  %12679 = getelementptr inbounds i32, i32* %12676, i32 4
  %12680 = bitcast i32* %12679 to <4 x i32>*
  %12681 = load <4 x i32>, <4 x i32>* %12680, align 4, !tbaa !3
  %12682 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12678
  %12683 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12681
  %12684 = bitcast <4 x i8*> %12682 to <4 x i64*>
  %12685 = bitcast <4 x i8*> %12683 to <4 x i64*>
  %12686 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12684, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12687 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12685, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12688 = icmp eq <4 x i32> %9236, %12678
  %12689 = icmp eq <4 x i32> %9238, %12681
  %12690 = select <4 x i1> %12688, <4 x i64> %12686, <4 x i64> zeroinitializer
  %12691 = select <4 x i1> %12689, <4 x i64> %12687, <4 x i64> zeroinitializer
  %12692 = add <4 x i64> %12690, %9298
  %12693 = add <4 x i64> %12691, %9299
  %12694 = add nuw nsw i32 %9240, 32
  br label %9239

12695:                                            ; preds = %9146
  %12696 = or i32 %9147, 25
  %12697 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12696
  %12698 = bitcast i32* %12697 to <4 x i32>*
  %12699 = load <4 x i32>, <4 x i32>* %12698, align 4, !tbaa !3
  %12700 = getelementptr inbounds i32, i32* %12697, i32 4
  %12701 = bitcast i32* %12700 to <4 x i32>*
  %12702 = load <4 x i32>, <4 x i32>* %12701, align 4, !tbaa !3
  %12703 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12699
  %12704 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12702
  %12705 = bitcast <4 x i8*> %12703 to <4 x i64*>
  %12706 = bitcast <4 x i8*> %12704 to <4 x i64*>
  %12707 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12705, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12708 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12706, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12709 = icmp eq <4 x i32> %9143, %12699
  %12710 = icmp eq <4 x i32> %9145, %12702
  %12711 = select <4 x i1> %12709, <4 x i64> %12707, <4 x i64> zeroinitializer
  %12712 = select <4 x i1> %12710, <4 x i64> %12708, <4 x i64> zeroinitializer
  %12713 = add <4 x i64> %12711, %9205
  %12714 = add <4 x i64> %12712, %9206
  %12715 = add nuw nsw i32 %9147, 32
  br label %9146

12716:                                            ; preds = %9053
  %12717 = or i32 %9054, 25
  %12718 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12717
  %12719 = bitcast i32* %12718 to <4 x i32>*
  %12720 = load <4 x i32>, <4 x i32>* %12719, align 4, !tbaa !3
  %12721 = getelementptr inbounds i32, i32* %12718, i32 4
  %12722 = bitcast i32* %12721 to <4 x i32>*
  %12723 = load <4 x i32>, <4 x i32>* %12722, align 4, !tbaa !3
  %12724 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12720
  %12725 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12723
  %12726 = bitcast <4 x i8*> %12724 to <4 x i64*>
  %12727 = bitcast <4 x i8*> %12725 to <4 x i64*>
  %12728 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12726, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12729 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12727, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12730 = icmp eq <4 x i32> %9050, %12720
  %12731 = icmp eq <4 x i32> %9052, %12723
  %12732 = select <4 x i1> %12730, <4 x i64> %12728, <4 x i64> zeroinitializer
  %12733 = select <4 x i1> %12731, <4 x i64> %12729, <4 x i64> zeroinitializer
  %12734 = add <4 x i64> %12732, %9112
  %12735 = add <4 x i64> %12733, %9113
  %12736 = add nuw nsw i32 %9054, 32
  br label %9053

12737:                                            ; preds = %8951
  %12738 = or i32 %8952, 25
  %12739 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12738
  %12740 = bitcast i32* %12739 to <4 x i32>*
  %12741 = load <4 x i32>, <4 x i32>* %12740, align 4, !tbaa !3
  %12742 = getelementptr inbounds i32, i32* %12739, i32 4
  %12743 = bitcast i32* %12742 to <4 x i32>*
  %12744 = load <4 x i32>, <4 x i32>* %12743, align 4, !tbaa !3
  %12745 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12741
  %12746 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12744
  %12747 = bitcast <4 x i8*> %12745 to <4 x i64*>
  %12748 = bitcast <4 x i8*> %12746 to <4 x i64*>
  %12749 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12747, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12750 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12748, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12751 = icmp eq <4 x i32> %8948, %12741
  %12752 = icmp eq <4 x i32> %8950, %12744
  %12753 = select <4 x i1> %12751, <4 x i64> %12749, <4 x i64> zeroinitializer
  %12754 = select <4 x i1> %12752, <4 x i64> %12750, <4 x i64> zeroinitializer
  %12755 = add <4 x i64> %12753, %9010
  %12756 = add <4 x i64> %12754, %9011
  %12757 = add nuw nsw i32 %8952, 32
  br label %8951

12758:                                            ; preds = %8858
  %12759 = or i32 %8859, 25
  %12760 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12759
  %12761 = bitcast i32* %12760 to <4 x i32>*
  %12762 = load <4 x i32>, <4 x i32>* %12761, align 4, !tbaa !3
  %12763 = getelementptr inbounds i32, i32* %12760, i32 4
  %12764 = bitcast i32* %12763 to <4 x i32>*
  %12765 = load <4 x i32>, <4 x i32>* %12764, align 4, !tbaa !3
  %12766 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12762
  %12767 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12765
  %12768 = bitcast <4 x i8*> %12766 to <4 x i64*>
  %12769 = bitcast <4 x i8*> %12767 to <4 x i64*>
  %12770 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12768, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12771 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12769, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12772 = icmp eq <4 x i32> %8855, %12762
  %12773 = icmp eq <4 x i32> %8857, %12765
  %12774 = select <4 x i1> %12772, <4 x i64> %12770, <4 x i64> zeroinitializer
  %12775 = select <4 x i1> %12773, <4 x i64> %12771, <4 x i64> zeroinitializer
  %12776 = add <4 x i64> %12774, %8917
  %12777 = add <4 x i64> %12775, %8918
  %12778 = add nuw nsw i32 %8859, 32
  br label %8858

12779:                                            ; preds = %8765
  %12780 = or i32 %8766, 25
  %12781 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12780
  %12782 = bitcast i32* %12781 to <4 x i32>*
  %12783 = load <4 x i32>, <4 x i32>* %12782, align 4, !tbaa !3
  %12784 = getelementptr inbounds i32, i32* %12781, i32 4
  %12785 = bitcast i32* %12784 to <4 x i32>*
  %12786 = load <4 x i32>, <4 x i32>* %12785, align 4, !tbaa !3
  %12787 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12783
  %12788 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12786
  %12789 = bitcast <4 x i8*> %12787 to <4 x i64*>
  %12790 = bitcast <4 x i8*> %12788 to <4 x i64*>
  %12791 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12789, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12792 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12790, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12793 = icmp eq <4 x i32> %8762, %12783
  %12794 = icmp eq <4 x i32> %8764, %12786
  %12795 = select <4 x i1> %12793, <4 x i64> %12791, <4 x i64> zeroinitializer
  %12796 = select <4 x i1> %12794, <4 x i64> %12792, <4 x i64> zeroinitializer
  %12797 = add <4 x i64> %12795, %8824
  %12798 = add <4 x i64> %12796, %8825
  %12799 = add nuw nsw i32 %8766, 32
  br label %8765

12800:                                            ; preds = %8672
  %12801 = or i32 %8673, 25
  %12802 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12801
  %12803 = bitcast i32* %12802 to <4 x i32>*
  %12804 = load <4 x i32>, <4 x i32>* %12803, align 4, !tbaa !3
  %12805 = getelementptr inbounds i32, i32* %12802, i32 4
  %12806 = bitcast i32* %12805 to <4 x i32>*
  %12807 = load <4 x i32>, <4 x i32>* %12806, align 4, !tbaa !3
  %12808 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12804
  %12809 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12807
  %12810 = bitcast <4 x i8*> %12808 to <4 x i64*>
  %12811 = bitcast <4 x i8*> %12809 to <4 x i64*>
  %12812 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12810, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12813 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12811, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12814 = icmp eq <4 x i32> %8669, %12804
  %12815 = icmp eq <4 x i32> %8671, %12807
  %12816 = select <4 x i1> %12814, <4 x i64> %12812, <4 x i64> zeroinitializer
  %12817 = select <4 x i1> %12815, <4 x i64> %12813, <4 x i64> zeroinitializer
  %12818 = add <4 x i64> %12816, %8731
  %12819 = add <4 x i64> %12817, %8732
  %12820 = add nuw nsw i32 %8673, 32
  br label %8672

12821:                                            ; preds = %8579
  %12822 = or i32 %8580, 25
  %12823 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12822
  %12824 = bitcast i32* %12823 to <4 x i32>*
  %12825 = load <4 x i32>, <4 x i32>* %12824, align 4, !tbaa !3
  %12826 = getelementptr inbounds i32, i32* %12823, i32 4
  %12827 = bitcast i32* %12826 to <4 x i32>*
  %12828 = load <4 x i32>, <4 x i32>* %12827, align 4, !tbaa !3
  %12829 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12825
  %12830 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12828
  %12831 = bitcast <4 x i8*> %12829 to <4 x i64*>
  %12832 = bitcast <4 x i8*> %12830 to <4 x i64*>
  %12833 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12831, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12834 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12832, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12835 = icmp eq <4 x i32> %8576, %12825
  %12836 = icmp eq <4 x i32> %8578, %12828
  %12837 = select <4 x i1> %12835, <4 x i64> %12833, <4 x i64> zeroinitializer
  %12838 = select <4 x i1> %12836, <4 x i64> %12834, <4 x i64> zeroinitializer
  %12839 = add <4 x i64> %12837, %8638
  %12840 = add <4 x i64> %12838, %8639
  %12841 = add nuw nsw i32 %8580, 32
  br label %8579

12842:                                            ; preds = %8486
  %12843 = or i32 %8487, 25
  %12844 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12843
  %12845 = bitcast i32* %12844 to <4 x i32>*
  %12846 = load <4 x i32>, <4 x i32>* %12845, align 4, !tbaa !3
  %12847 = getelementptr inbounds i32, i32* %12844, i32 4
  %12848 = bitcast i32* %12847 to <4 x i32>*
  %12849 = load <4 x i32>, <4 x i32>* %12848, align 4, !tbaa !3
  %12850 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12846
  %12851 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %12849
  %12852 = bitcast <4 x i8*> %12850 to <4 x i64*>
  %12853 = bitcast <4 x i8*> %12851 to <4 x i64*>
  %12854 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12852, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12855 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12853, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12856 = icmp eq <4 x i32> %8483, %12846
  %12857 = icmp eq <4 x i32> %8485, %12849
  %12858 = select <4 x i1> %12856, <4 x i64> %12854, <4 x i64> zeroinitializer
  %12859 = select <4 x i1> %12857, <4 x i64> %12855, <4 x i64> zeroinitializer
  %12860 = add <4 x i64> %12858, %8545
  %12861 = add <4 x i64> %12859, %8546
  %12862 = add nuw nsw i32 %8487, 32
  br label %8486

12863:                                            ; preds = %8393
  %12864 = or i32 %8394, 25
  %12865 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12864
  %12866 = bitcast i32* %12865 to <4 x i32>*
  %12867 = load <4 x i32>, <4 x i32>* %12866, align 4, !tbaa !3
  %12868 = getelementptr inbounds i32, i32* %12865, i32 4
  %12869 = bitcast i32* %12868 to <4 x i32>*
  %12870 = load <4 x i32>, <4 x i32>* %12869, align 4, !tbaa !3
  %12871 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12867
  %12872 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %12870
  %12873 = bitcast <4 x i8*> %12871 to <4 x i64*>
  %12874 = bitcast <4 x i8*> %12872 to <4 x i64*>
  %12875 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12873, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12876 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12874, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12877 = icmp eq <4 x i32> %8390, %12867
  %12878 = icmp eq <4 x i32> %8392, %12870
  %12879 = select <4 x i1> %12877, <4 x i64> %12875, <4 x i64> zeroinitializer
  %12880 = select <4 x i1> %12878, <4 x i64> %12876, <4 x i64> zeroinitializer
  %12881 = add <4 x i64> %12879, %8452
  %12882 = add <4 x i64> %12880, %8453
  %12883 = add nuw nsw i32 %8394, 32
  br label %8393

12884:                                            ; preds = %8300
  %12885 = or i32 %8301, 25
  %12886 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12885
  %12887 = bitcast i32* %12886 to <4 x i32>*
  %12888 = load <4 x i32>, <4 x i32>* %12887, align 4, !tbaa !3
  %12889 = getelementptr inbounds i32, i32* %12886, i32 4
  %12890 = bitcast i32* %12889 to <4 x i32>*
  %12891 = load <4 x i32>, <4 x i32>* %12890, align 4, !tbaa !3
  %12892 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12888
  %12893 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %12891
  %12894 = bitcast <4 x i8*> %12892 to <4 x i64*>
  %12895 = bitcast <4 x i8*> %12893 to <4 x i64*>
  %12896 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12894, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12897 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12895, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12898 = icmp eq <4 x i32> %8297, %12888
  %12899 = icmp eq <4 x i32> %8299, %12891
  %12900 = select <4 x i1> %12898, <4 x i64> %12896, <4 x i64> zeroinitializer
  %12901 = select <4 x i1> %12899, <4 x i64> %12897, <4 x i64> zeroinitializer
  %12902 = add <4 x i64> %12900, %8359
  %12903 = add <4 x i64> %12901, %8360
  %12904 = add nuw nsw i32 %8301, 32
  br label %8300

12905:                                            ; preds = %8198
  %12906 = or i32 %8199, 25
  %12907 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12906
  %12908 = bitcast i32* %12907 to <4 x i32>*
  %12909 = load <4 x i32>, <4 x i32>* %12908, align 4, !tbaa !3
  %12910 = getelementptr inbounds i32, i32* %12907, i32 4
  %12911 = bitcast i32* %12910 to <4 x i32>*
  %12912 = load <4 x i32>, <4 x i32>* %12911, align 4, !tbaa !3
  %12913 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12909
  %12914 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %12912
  %12915 = bitcast <4 x i8*> %12913 to <4 x i64*>
  %12916 = bitcast <4 x i8*> %12914 to <4 x i64*>
  %12917 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12915, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12918 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12916, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12919 = icmp eq <4 x i32> %8195, %12909
  %12920 = icmp eq <4 x i32> %8197, %12912
  %12921 = select <4 x i1> %12919, <4 x i64> %12917, <4 x i64> zeroinitializer
  %12922 = select <4 x i1> %12920, <4 x i64> %12918, <4 x i64> zeroinitializer
  %12923 = add <4 x i64> %12921, %8257
  %12924 = add <4 x i64> %12922, %8258
  %12925 = add nuw nsw i32 %8199, 32
  br label %8198

12926:                                            ; preds = %8105
  %12927 = or i32 %8106, 25
  %12928 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12927
  %12929 = bitcast i32* %12928 to <4 x i32>*
  %12930 = load <4 x i32>, <4 x i32>* %12929, align 4, !tbaa !3
  %12931 = getelementptr inbounds i32, i32* %12928, i32 4
  %12932 = bitcast i32* %12931 to <4 x i32>*
  %12933 = load <4 x i32>, <4 x i32>* %12932, align 4, !tbaa !3
  %12934 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12930
  %12935 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %12933
  %12936 = bitcast <4 x i8*> %12934 to <4 x i64*>
  %12937 = bitcast <4 x i8*> %12935 to <4 x i64*>
  %12938 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12936, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12939 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12937, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12940 = icmp eq <4 x i32> %8102, %12930
  %12941 = icmp eq <4 x i32> %8104, %12933
  %12942 = select <4 x i1> %12940, <4 x i64> %12938, <4 x i64> zeroinitializer
  %12943 = select <4 x i1> %12941, <4 x i64> %12939, <4 x i64> zeroinitializer
  %12944 = add <4 x i64> %12942, %8164
  %12945 = add <4 x i64> %12943, %8165
  %12946 = add nuw nsw i32 %8106, 32
  br label %8105

12947:                                            ; preds = %8012
  %12948 = or i32 %8013, 25
  %12949 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12948
  %12950 = bitcast i32* %12949 to <4 x i32>*
  %12951 = load <4 x i32>, <4 x i32>* %12950, align 4, !tbaa !3
  %12952 = getelementptr inbounds i32, i32* %12949, i32 4
  %12953 = bitcast i32* %12952 to <4 x i32>*
  %12954 = load <4 x i32>, <4 x i32>* %12953, align 4, !tbaa !3
  %12955 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12951
  %12956 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %12954
  %12957 = bitcast <4 x i8*> %12955 to <4 x i64*>
  %12958 = bitcast <4 x i8*> %12956 to <4 x i64*>
  %12959 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12957, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12960 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12958, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12961 = icmp eq <4 x i32> %8009, %12951
  %12962 = icmp eq <4 x i32> %8011, %12954
  %12963 = select <4 x i1> %12961, <4 x i64> %12959, <4 x i64> zeroinitializer
  %12964 = select <4 x i1> %12962, <4 x i64> %12960, <4 x i64> zeroinitializer
  %12965 = add <4 x i64> %12963, %8071
  %12966 = add <4 x i64> %12964, %8072
  %12967 = add nuw nsw i32 %8013, 32
  br label %8012

12968:                                            ; preds = %7919
  %12969 = or i32 %7920, 25
  %12970 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12969
  %12971 = bitcast i32* %12970 to <4 x i32>*
  %12972 = load <4 x i32>, <4 x i32>* %12971, align 4, !tbaa !3
  %12973 = getelementptr inbounds i32, i32* %12970, i32 4
  %12974 = bitcast i32* %12973 to <4 x i32>*
  %12975 = load <4 x i32>, <4 x i32>* %12974, align 4, !tbaa !3
  %12976 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12972
  %12977 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %12975
  %12978 = bitcast <4 x i8*> %12976 to <4 x i64*>
  %12979 = bitcast <4 x i8*> %12977 to <4 x i64*>
  %12980 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12978, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12981 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12979, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %12982 = icmp eq <4 x i32> %7916, %12972
  %12983 = icmp eq <4 x i32> %7918, %12975
  %12984 = select <4 x i1> %12982, <4 x i64> %12980, <4 x i64> zeroinitializer
  %12985 = select <4 x i1> %12983, <4 x i64> %12981, <4 x i64> zeroinitializer
  %12986 = add <4 x i64> %12984, %7978
  %12987 = add <4 x i64> %12985, %7979
  %12988 = add nuw nsw i32 %7920, 32
  br label %7919

12989:                                            ; preds = %7826
  %12990 = or i32 %7827, 25
  %12991 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %12990
  %12992 = bitcast i32* %12991 to <4 x i32>*
  %12993 = load <4 x i32>, <4 x i32>* %12992, align 4, !tbaa !3
  %12994 = getelementptr inbounds i32, i32* %12991, i32 4
  %12995 = bitcast i32* %12994 to <4 x i32>*
  %12996 = load <4 x i32>, <4 x i32>* %12995, align 4, !tbaa !3
  %12997 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12993
  %12998 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %12996
  %12999 = bitcast <4 x i8*> %12997 to <4 x i64*>
  %13000 = bitcast <4 x i8*> %12998 to <4 x i64*>
  %13001 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %12999, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13002 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13000, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13003 = icmp eq <4 x i32> %7823, %12993
  %13004 = icmp eq <4 x i32> %7825, %12996
  %13005 = select <4 x i1> %13003, <4 x i64> %13001, <4 x i64> zeroinitializer
  %13006 = select <4 x i1> %13004, <4 x i64> %13002, <4 x i64> zeroinitializer
  %13007 = add <4 x i64> %13005, %7885
  %13008 = add <4 x i64> %13006, %7886
  %13009 = add nuw nsw i32 %7827, 32
  br label %7826

13010:                                            ; preds = %7733
  %13011 = or i32 %7734, 25
  %13012 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13011
  %13013 = bitcast i32* %13012 to <4 x i32>*
  %13014 = load <4 x i32>, <4 x i32>* %13013, align 4, !tbaa !3
  %13015 = getelementptr inbounds i32, i32* %13012, i32 4
  %13016 = bitcast i32* %13015 to <4 x i32>*
  %13017 = load <4 x i32>, <4 x i32>* %13016, align 4, !tbaa !3
  %13018 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13014
  %13019 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13017
  %13020 = bitcast <4 x i8*> %13018 to <4 x i64*>
  %13021 = bitcast <4 x i8*> %13019 to <4 x i64*>
  %13022 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13020, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13023 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13021, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13024 = icmp eq <4 x i32> %7730, %13014
  %13025 = icmp eq <4 x i32> %7732, %13017
  %13026 = select <4 x i1> %13024, <4 x i64> %13022, <4 x i64> zeroinitializer
  %13027 = select <4 x i1> %13025, <4 x i64> %13023, <4 x i64> zeroinitializer
  %13028 = add <4 x i64> %13026, %7792
  %13029 = add <4 x i64> %13027, %7793
  %13030 = add nuw nsw i32 %7734, 32
  br label %7733

13031:                                            ; preds = %7640
  %13032 = or i32 %7641, 25
  %13033 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13032
  %13034 = bitcast i32* %13033 to <4 x i32>*
  %13035 = load <4 x i32>, <4 x i32>* %13034, align 4, !tbaa !3
  %13036 = getelementptr inbounds i32, i32* %13033, i32 4
  %13037 = bitcast i32* %13036 to <4 x i32>*
  %13038 = load <4 x i32>, <4 x i32>* %13037, align 4, !tbaa !3
  %13039 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13035
  %13040 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13038
  %13041 = bitcast <4 x i8*> %13039 to <4 x i64*>
  %13042 = bitcast <4 x i8*> %13040 to <4 x i64*>
  %13043 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13041, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13044 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13042, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13045 = icmp eq <4 x i32> %7637, %13035
  %13046 = icmp eq <4 x i32> %7639, %13038
  %13047 = select <4 x i1> %13045, <4 x i64> %13043, <4 x i64> zeroinitializer
  %13048 = select <4 x i1> %13046, <4 x i64> %13044, <4 x i64> zeroinitializer
  %13049 = add <4 x i64> %13047, %7699
  %13050 = add <4 x i64> %13048, %7700
  %13051 = add nuw nsw i32 %7641, 32
  br label %7640

13052:                                            ; preds = %7547
  %13053 = or i32 %7548, 25
  %13054 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13053
  %13055 = bitcast i32* %13054 to <4 x i32>*
  %13056 = load <4 x i32>, <4 x i32>* %13055, align 4, !tbaa !3
  %13057 = getelementptr inbounds i32, i32* %13054, i32 4
  %13058 = bitcast i32* %13057 to <4 x i32>*
  %13059 = load <4 x i32>, <4 x i32>* %13058, align 4, !tbaa !3
  %13060 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13056
  %13061 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13059
  %13062 = bitcast <4 x i8*> %13060 to <4 x i64*>
  %13063 = bitcast <4 x i8*> %13061 to <4 x i64*>
  %13064 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13062, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13065 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13063, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13066 = icmp eq <4 x i32> %7544, %13056
  %13067 = icmp eq <4 x i32> %7546, %13059
  %13068 = select <4 x i1> %13066, <4 x i64> %13064, <4 x i64> zeroinitializer
  %13069 = select <4 x i1> %13067, <4 x i64> %13065, <4 x i64> zeroinitializer
  %13070 = add <4 x i64> %13068, %7606
  %13071 = add <4 x i64> %13069, %7607
  %13072 = add nuw nsw i32 %7548, 32
  br label %7547

13073:                                            ; preds = %7445
  %13074 = or i32 %7446, 25
  %13075 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13074
  %13076 = bitcast i32* %13075 to <4 x i32>*
  %13077 = load <4 x i32>, <4 x i32>* %13076, align 4, !tbaa !3
  %13078 = getelementptr inbounds i32, i32* %13075, i32 4
  %13079 = bitcast i32* %13078 to <4 x i32>*
  %13080 = load <4 x i32>, <4 x i32>* %13079, align 4, !tbaa !3
  %13081 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13077
  %13082 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13080
  %13083 = bitcast <4 x i8*> %13081 to <4 x i64*>
  %13084 = bitcast <4 x i8*> %13082 to <4 x i64*>
  %13085 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13083, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13086 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13084, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13087 = icmp eq <4 x i32> %7442, %13077
  %13088 = icmp eq <4 x i32> %7444, %13080
  %13089 = select <4 x i1> %13087, <4 x i64> %13085, <4 x i64> zeroinitializer
  %13090 = select <4 x i1> %13088, <4 x i64> %13086, <4 x i64> zeroinitializer
  %13091 = add <4 x i64> %13089, %7504
  %13092 = add <4 x i64> %13090, %7505
  %13093 = add nuw nsw i32 %7446, 32
  br label %7445

13094:                                            ; preds = %7352
  %13095 = or i32 %7353, 25
  %13096 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13095
  %13097 = bitcast i32* %13096 to <4 x i32>*
  %13098 = load <4 x i32>, <4 x i32>* %13097, align 4, !tbaa !3
  %13099 = getelementptr inbounds i32, i32* %13096, i32 4
  %13100 = bitcast i32* %13099 to <4 x i32>*
  %13101 = load <4 x i32>, <4 x i32>* %13100, align 4, !tbaa !3
  %13102 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13098
  %13103 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13101
  %13104 = bitcast <4 x i8*> %13102 to <4 x i64*>
  %13105 = bitcast <4 x i8*> %13103 to <4 x i64*>
  %13106 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13104, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13107 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13105, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13108 = icmp eq <4 x i32> %7349, %13098
  %13109 = icmp eq <4 x i32> %7351, %13101
  %13110 = select <4 x i1> %13108, <4 x i64> %13106, <4 x i64> zeroinitializer
  %13111 = select <4 x i1> %13109, <4 x i64> %13107, <4 x i64> zeroinitializer
  %13112 = add <4 x i64> %13110, %7411
  %13113 = add <4 x i64> %13111, %7412
  %13114 = add nuw nsw i32 %7353, 32
  br label %7352

13115:                                            ; preds = %7259
  %13116 = or i32 %7260, 25
  %13117 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13116
  %13118 = bitcast i32* %13117 to <4 x i32>*
  %13119 = load <4 x i32>, <4 x i32>* %13118, align 4, !tbaa !3
  %13120 = getelementptr inbounds i32, i32* %13117, i32 4
  %13121 = bitcast i32* %13120 to <4 x i32>*
  %13122 = load <4 x i32>, <4 x i32>* %13121, align 4, !tbaa !3
  %13123 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13119
  %13124 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13122
  %13125 = bitcast <4 x i8*> %13123 to <4 x i64*>
  %13126 = bitcast <4 x i8*> %13124 to <4 x i64*>
  %13127 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13125, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13128 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13126, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13129 = icmp eq <4 x i32> %7256, %13119
  %13130 = icmp eq <4 x i32> %7258, %13122
  %13131 = select <4 x i1> %13129, <4 x i64> %13127, <4 x i64> zeroinitializer
  %13132 = select <4 x i1> %13130, <4 x i64> %13128, <4 x i64> zeroinitializer
  %13133 = add <4 x i64> %13131, %7318
  %13134 = add <4 x i64> %13132, %7319
  %13135 = add nuw nsw i32 %7260, 32
  br label %7259

13136:                                            ; preds = %7166
  %13137 = or i32 %7167, 25
  %13138 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13137
  %13139 = bitcast i32* %13138 to <4 x i32>*
  %13140 = load <4 x i32>, <4 x i32>* %13139, align 4, !tbaa !3
  %13141 = getelementptr inbounds i32, i32* %13138, i32 4
  %13142 = bitcast i32* %13141 to <4 x i32>*
  %13143 = load <4 x i32>, <4 x i32>* %13142, align 4, !tbaa !3
  %13144 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13140
  %13145 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13143
  %13146 = bitcast <4 x i8*> %13144 to <4 x i64*>
  %13147 = bitcast <4 x i8*> %13145 to <4 x i64*>
  %13148 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13146, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13149 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13147, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13150 = icmp eq <4 x i32> %7163, %13140
  %13151 = icmp eq <4 x i32> %7165, %13143
  %13152 = select <4 x i1> %13150, <4 x i64> %13148, <4 x i64> zeroinitializer
  %13153 = select <4 x i1> %13151, <4 x i64> %13149, <4 x i64> zeroinitializer
  %13154 = add <4 x i64> %13152, %7225
  %13155 = add <4 x i64> %13153, %7226
  %13156 = add nuw nsw i32 %7167, 32
  br label %7166

13157:                                            ; preds = %7073
  %13158 = or i32 %7074, 25
  %13159 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13158
  %13160 = bitcast i32* %13159 to <4 x i32>*
  %13161 = load <4 x i32>, <4 x i32>* %13160, align 4, !tbaa !3
  %13162 = getelementptr inbounds i32, i32* %13159, i32 4
  %13163 = bitcast i32* %13162 to <4 x i32>*
  %13164 = load <4 x i32>, <4 x i32>* %13163, align 4, !tbaa !3
  %13165 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13161
  %13166 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13164
  %13167 = bitcast <4 x i8*> %13165 to <4 x i64*>
  %13168 = bitcast <4 x i8*> %13166 to <4 x i64*>
  %13169 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13167, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13170 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13168, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13171 = icmp eq <4 x i32> %7070, %13161
  %13172 = icmp eq <4 x i32> %7072, %13164
  %13173 = select <4 x i1> %13171, <4 x i64> %13169, <4 x i64> zeroinitializer
  %13174 = select <4 x i1> %13172, <4 x i64> %13170, <4 x i64> zeroinitializer
  %13175 = add <4 x i64> %13173, %7132
  %13176 = add <4 x i64> %13174, %7133
  %13177 = add nuw nsw i32 %7074, 32
  br label %7073

13178:                                            ; preds = %6980
  %13179 = or i32 %6981, 25
  %13180 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13179
  %13181 = bitcast i32* %13180 to <4 x i32>*
  %13182 = load <4 x i32>, <4 x i32>* %13181, align 4, !tbaa !3
  %13183 = getelementptr inbounds i32, i32* %13180, i32 4
  %13184 = bitcast i32* %13183 to <4 x i32>*
  %13185 = load <4 x i32>, <4 x i32>* %13184, align 4, !tbaa !3
  %13186 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13182
  %13187 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13185
  %13188 = bitcast <4 x i8*> %13186 to <4 x i64*>
  %13189 = bitcast <4 x i8*> %13187 to <4 x i64*>
  %13190 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13188, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13191 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13189, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13192 = icmp eq <4 x i32> %6977, %13182
  %13193 = icmp eq <4 x i32> %6979, %13185
  %13194 = select <4 x i1> %13192, <4 x i64> %13190, <4 x i64> zeroinitializer
  %13195 = select <4 x i1> %13193, <4 x i64> %13191, <4 x i64> zeroinitializer
  %13196 = add <4 x i64> %13194, %7039
  %13197 = add <4 x i64> %13195, %7040
  %13198 = add nuw nsw i32 %6981, 32
  br label %6980

13199:                                            ; preds = %6887
  %13200 = or i32 %6888, 25
  %13201 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13200
  %13202 = bitcast i32* %13201 to <4 x i32>*
  %13203 = load <4 x i32>, <4 x i32>* %13202, align 4, !tbaa !3
  %13204 = getelementptr inbounds i32, i32* %13201, i32 4
  %13205 = bitcast i32* %13204 to <4 x i32>*
  %13206 = load <4 x i32>, <4 x i32>* %13205, align 4, !tbaa !3
  %13207 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13203
  %13208 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13206
  %13209 = bitcast <4 x i8*> %13207 to <4 x i64*>
  %13210 = bitcast <4 x i8*> %13208 to <4 x i64*>
  %13211 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13209, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13212 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13210, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13213 = icmp eq <4 x i32> %6884, %13203
  %13214 = icmp eq <4 x i32> %6886, %13206
  %13215 = select <4 x i1> %13213, <4 x i64> %13211, <4 x i64> zeroinitializer
  %13216 = select <4 x i1> %13214, <4 x i64> %13212, <4 x i64> zeroinitializer
  %13217 = add <4 x i64> %13215, %6946
  %13218 = add <4 x i64> %13216, %6947
  %13219 = add nuw nsw i32 %6888, 32
  br label %6887

13220:                                            ; preds = %6794
  %13221 = or i32 %6795, 25
  %13222 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13221
  %13223 = bitcast i32* %13222 to <4 x i32>*
  %13224 = load <4 x i32>, <4 x i32>* %13223, align 4, !tbaa !3
  %13225 = getelementptr inbounds i32, i32* %13222, i32 4
  %13226 = bitcast i32* %13225 to <4 x i32>*
  %13227 = load <4 x i32>, <4 x i32>* %13226, align 4, !tbaa !3
  %13228 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13224
  %13229 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13227
  %13230 = bitcast <4 x i8*> %13228 to <4 x i64*>
  %13231 = bitcast <4 x i8*> %13229 to <4 x i64*>
  %13232 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13230, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13233 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13231, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13234 = icmp eq <4 x i32> %6791, %13224
  %13235 = icmp eq <4 x i32> %6793, %13227
  %13236 = select <4 x i1> %13234, <4 x i64> %13232, <4 x i64> zeroinitializer
  %13237 = select <4 x i1> %13235, <4 x i64> %13233, <4 x i64> zeroinitializer
  %13238 = add <4 x i64> %13236, %6853
  %13239 = add <4 x i64> %13237, %6854
  %13240 = add nuw nsw i32 %6795, 32
  br label %6794

13241:                                            ; preds = %6693
  %13242 = or i32 %6694, 25
  %13243 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13242
  %13244 = bitcast i32* %13243 to <4 x i32>*
  %13245 = load <4 x i32>, <4 x i32>* %13244, align 4, !tbaa !3
  %13246 = getelementptr inbounds i32, i32* %13243, i32 4
  %13247 = bitcast i32* %13246 to <4 x i32>*
  %13248 = load <4 x i32>, <4 x i32>* %13247, align 4, !tbaa !3
  %13249 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13245
  %13250 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13248
  %13251 = bitcast <4 x i8*> %13249 to <4 x i64*>
  %13252 = bitcast <4 x i8*> %13250 to <4 x i64*>
  %13253 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13251, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13254 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13252, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13255 = icmp eq <4 x i32> %6690, %13245
  %13256 = icmp eq <4 x i32> %6692, %13248
  %13257 = select <4 x i1> %13255, <4 x i64> %13253, <4 x i64> zeroinitializer
  %13258 = select <4 x i1> %13256, <4 x i64> %13254, <4 x i64> zeroinitializer
  %13259 = add <4 x i64> %13257, %6752
  %13260 = add <4 x i64> %13258, %6753
  %13261 = add nuw nsw i32 %6694, 32
  br label %6693

13262:                                            ; preds = %6600
  %13263 = or i32 %6601, 25
  %13264 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13263
  %13265 = bitcast i32* %13264 to <4 x i32>*
  %13266 = load <4 x i32>, <4 x i32>* %13265, align 4, !tbaa !3
  %13267 = getelementptr inbounds i32, i32* %13264, i32 4
  %13268 = bitcast i32* %13267 to <4 x i32>*
  %13269 = load <4 x i32>, <4 x i32>* %13268, align 4, !tbaa !3
  %13270 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13266
  %13271 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13269
  %13272 = bitcast <4 x i8*> %13270 to <4 x i64*>
  %13273 = bitcast <4 x i8*> %13271 to <4 x i64*>
  %13274 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13272, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13275 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13273, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13276 = icmp eq <4 x i32> %6597, %13266
  %13277 = icmp eq <4 x i32> %6599, %13269
  %13278 = select <4 x i1> %13276, <4 x i64> %13274, <4 x i64> zeroinitializer
  %13279 = select <4 x i1> %13277, <4 x i64> %13275, <4 x i64> zeroinitializer
  %13280 = add <4 x i64> %13278, %6659
  %13281 = add <4 x i64> %13279, %6660
  %13282 = add nuw nsw i32 %6601, 32
  br label %6600

13283:                                            ; preds = %6507
  %13284 = or i32 %6508, 25
  %13285 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13284
  %13286 = bitcast i32* %13285 to <4 x i32>*
  %13287 = load <4 x i32>, <4 x i32>* %13286, align 4, !tbaa !3
  %13288 = getelementptr inbounds i32, i32* %13285, i32 4
  %13289 = bitcast i32* %13288 to <4 x i32>*
  %13290 = load <4 x i32>, <4 x i32>* %13289, align 4, !tbaa !3
  %13291 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13287
  %13292 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13290
  %13293 = bitcast <4 x i8*> %13291 to <4 x i64*>
  %13294 = bitcast <4 x i8*> %13292 to <4 x i64*>
  %13295 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13293, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13296 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13294, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13297 = icmp eq <4 x i32> %6504, %13287
  %13298 = icmp eq <4 x i32> %6506, %13290
  %13299 = select <4 x i1> %13297, <4 x i64> %13295, <4 x i64> zeroinitializer
  %13300 = select <4 x i1> %13298, <4 x i64> %13296, <4 x i64> zeroinitializer
  %13301 = add <4 x i64> %13299, %6566
  %13302 = add <4 x i64> %13300, %6567
  %13303 = add nuw nsw i32 %6508, 32
  br label %6507

13304:                                            ; preds = %6414
  %13305 = or i32 %6415, 25
  %13306 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13305
  %13307 = bitcast i32* %13306 to <4 x i32>*
  %13308 = load <4 x i32>, <4 x i32>* %13307, align 4, !tbaa !3
  %13309 = getelementptr inbounds i32, i32* %13306, i32 4
  %13310 = bitcast i32* %13309 to <4 x i32>*
  %13311 = load <4 x i32>, <4 x i32>* %13310, align 4, !tbaa !3
  %13312 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13308
  %13313 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13311
  %13314 = bitcast <4 x i8*> %13312 to <4 x i64*>
  %13315 = bitcast <4 x i8*> %13313 to <4 x i64*>
  %13316 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13314, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13317 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13315, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13318 = icmp eq <4 x i32> %6411, %13308
  %13319 = icmp eq <4 x i32> %6413, %13311
  %13320 = select <4 x i1> %13318, <4 x i64> %13316, <4 x i64> zeroinitializer
  %13321 = select <4 x i1> %13319, <4 x i64> %13317, <4 x i64> zeroinitializer
  %13322 = add <4 x i64> %13320, %6473
  %13323 = add <4 x i64> %13321, %6474
  %13324 = add nuw nsw i32 %6415, 32
  br label %6414

13325:                                            ; preds = %6321
  %13326 = or i32 %6322, 25
  %13327 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13326
  %13328 = bitcast i32* %13327 to <4 x i32>*
  %13329 = load <4 x i32>, <4 x i32>* %13328, align 4, !tbaa !3
  %13330 = getelementptr inbounds i32, i32* %13327, i32 4
  %13331 = bitcast i32* %13330 to <4 x i32>*
  %13332 = load <4 x i32>, <4 x i32>* %13331, align 4, !tbaa !3
  %13333 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13329
  %13334 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13332
  %13335 = bitcast <4 x i8*> %13333 to <4 x i64*>
  %13336 = bitcast <4 x i8*> %13334 to <4 x i64*>
  %13337 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13335, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13338 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13336, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13339 = icmp eq <4 x i32> %6318, %13329
  %13340 = icmp eq <4 x i32> %6320, %13332
  %13341 = select <4 x i1> %13339, <4 x i64> %13337, <4 x i64> zeroinitializer
  %13342 = select <4 x i1> %13340, <4 x i64> %13338, <4 x i64> zeroinitializer
  %13343 = add <4 x i64> %13341, %6380
  %13344 = add <4 x i64> %13342, %6381
  %13345 = add nuw nsw i32 %6322, 32
  br label %6321

13346:                                            ; preds = %6228
  %13347 = or i32 %6229, 25
  %13348 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13347
  %13349 = bitcast i32* %13348 to <4 x i32>*
  %13350 = load <4 x i32>, <4 x i32>* %13349, align 4, !tbaa !3
  %13351 = getelementptr inbounds i32, i32* %13348, i32 4
  %13352 = bitcast i32* %13351 to <4 x i32>*
  %13353 = load <4 x i32>, <4 x i32>* %13352, align 4, !tbaa !3
  %13354 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13350
  %13355 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13353
  %13356 = bitcast <4 x i8*> %13354 to <4 x i64*>
  %13357 = bitcast <4 x i8*> %13355 to <4 x i64*>
  %13358 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13356, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13359 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13357, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13360 = icmp eq <4 x i32> %6225, %13350
  %13361 = icmp eq <4 x i32> %6227, %13353
  %13362 = select <4 x i1> %13360, <4 x i64> %13358, <4 x i64> zeroinitializer
  %13363 = select <4 x i1> %13361, <4 x i64> %13359, <4 x i64> zeroinitializer
  %13364 = add <4 x i64> %13362, %6287
  %13365 = add <4 x i64> %13363, %6288
  %13366 = add nuw nsw i32 %6229, 32
  br label %6228

13367:                                            ; preds = %6135
  %13368 = or i32 %6136, 25
  %13369 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13368
  %13370 = bitcast i32* %13369 to <4 x i32>*
  %13371 = load <4 x i32>, <4 x i32>* %13370, align 4, !tbaa !3
  %13372 = getelementptr inbounds i32, i32* %13369, i32 4
  %13373 = bitcast i32* %13372 to <4 x i32>*
  %13374 = load <4 x i32>, <4 x i32>* %13373, align 4, !tbaa !3
  %13375 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13371
  %13376 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13374
  %13377 = bitcast <4 x i8*> %13375 to <4 x i64*>
  %13378 = bitcast <4 x i8*> %13376 to <4 x i64*>
  %13379 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13377, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13380 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13378, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13381 = icmp eq <4 x i32> %6132, %13371
  %13382 = icmp eq <4 x i32> %6134, %13374
  %13383 = select <4 x i1> %13381, <4 x i64> %13379, <4 x i64> zeroinitializer
  %13384 = select <4 x i1> %13382, <4 x i64> %13380, <4 x i64> zeroinitializer
  %13385 = add <4 x i64> %13383, %6194
  %13386 = add <4 x i64> %13384, %6195
  %13387 = add nuw nsw i32 %6136, 32
  br label %6135

13388:                                            ; preds = %6042
  %13389 = or i32 %6043, 25
  %13390 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13389
  %13391 = bitcast i32* %13390 to <4 x i32>*
  %13392 = load <4 x i32>, <4 x i32>* %13391, align 4, !tbaa !3
  %13393 = getelementptr inbounds i32, i32* %13390, i32 4
  %13394 = bitcast i32* %13393 to <4 x i32>*
  %13395 = load <4 x i32>, <4 x i32>* %13394, align 4, !tbaa !3
  %13396 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13392
  %13397 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13395
  %13398 = bitcast <4 x i8*> %13396 to <4 x i64*>
  %13399 = bitcast <4 x i8*> %13397 to <4 x i64*>
  %13400 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13398, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13401 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13399, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13402 = icmp eq <4 x i32> %6039, %13392
  %13403 = icmp eq <4 x i32> %6041, %13395
  %13404 = select <4 x i1> %13402, <4 x i64> %13400, <4 x i64> zeroinitializer
  %13405 = select <4 x i1> %13403, <4 x i64> %13401, <4 x i64> zeroinitializer
  %13406 = add <4 x i64> %13404, %6101
  %13407 = add <4 x i64> %13405, %6102
  %13408 = add nuw nsw i32 %6043, 32
  br label %6042

13409:                                            ; preds = %5936
  %13410 = or i32 %5937, 25
  %13411 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13410
  %13412 = bitcast i32* %13411 to <4 x i32>*
  %13413 = load <4 x i32>, <4 x i32>* %13412, align 4, !tbaa !3
  %13414 = getelementptr inbounds i32, i32* %13411, i32 4
  %13415 = bitcast i32* %13414 to <4 x i32>*
  %13416 = load <4 x i32>, <4 x i32>* %13415, align 4, !tbaa !3
  %13417 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13413
  %13418 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13416
  %13419 = bitcast <4 x i8*> %13417 to <4 x i64*>
  %13420 = bitcast <4 x i8*> %13418 to <4 x i64*>
  %13421 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13419, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13422 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13420, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13423 = icmp eq <4 x i64*> %5933, %13419
  %13424 = icmp eq <4 x i64*> %5935, %13420
  %13425 = select <4 x i1> %13423, <4 x i64> %13421, <4 x i64> zeroinitializer
  %13426 = select <4 x i1> %13424, <4 x i64> %13422, <4 x i64> zeroinitializer
  %13427 = add <4 x i64> %13425, %5995
  %13428 = add <4 x i64> %13426, %5996
  %13429 = add nuw nsw i32 %5937, 32
  br label %5936

13430:                                            ; preds = %5843
  %13431 = or i32 %5844, 25
  %13432 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13431
  %13433 = bitcast i32* %13432 to <4 x i32>*
  %13434 = load <4 x i32>, <4 x i32>* %13433, align 4, !tbaa !3
  %13435 = getelementptr inbounds i32, i32* %13432, i32 4
  %13436 = bitcast i32* %13435 to <4 x i32>*
  %13437 = load <4 x i32>, <4 x i32>* %13436, align 4, !tbaa !3
  %13438 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13434
  %13439 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13437
  %13440 = bitcast <4 x i8*> %13438 to <4 x i64*>
  %13441 = bitcast <4 x i8*> %13439 to <4 x i64*>
  %13442 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13440, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13443 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13441, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13444 = icmp eq <4 x i32> %5840, %13434
  %13445 = icmp eq <4 x i32> %5842, %13437
  %13446 = select <4 x i1> %13444, <4 x i64> %13442, <4 x i64> zeroinitializer
  %13447 = select <4 x i1> %13445, <4 x i64> %13443, <4 x i64> zeroinitializer
  %13448 = add <4 x i64> %13446, %5902
  %13449 = add <4 x i64> %13447, %5903
  %13450 = add nuw nsw i32 %5844, 32
  br label %5843

13451:                                            ; preds = %5750
  %13452 = or i32 %5751, 25
  %13453 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13452
  %13454 = bitcast i32* %13453 to <4 x i32>*
  %13455 = load <4 x i32>, <4 x i32>* %13454, align 4, !tbaa !3
  %13456 = getelementptr inbounds i32, i32* %13453, i32 4
  %13457 = bitcast i32* %13456 to <4 x i32>*
  %13458 = load <4 x i32>, <4 x i32>* %13457, align 4, !tbaa !3
  %13459 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13455
  %13460 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13458
  %13461 = bitcast <4 x i8*> %13459 to <4 x i64*>
  %13462 = bitcast <4 x i8*> %13460 to <4 x i64*>
  %13463 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13461, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13464 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13462, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13465 = icmp eq <4 x i32> %5747, %13455
  %13466 = icmp eq <4 x i32> %5749, %13458
  %13467 = select <4 x i1> %13465, <4 x i64> %13463, <4 x i64> zeroinitializer
  %13468 = select <4 x i1> %13466, <4 x i64> %13464, <4 x i64> zeroinitializer
  %13469 = add <4 x i64> %13467, %5809
  %13470 = add <4 x i64> %13468, %5810
  %13471 = add nuw nsw i32 %5751, 32
  br label %5750

13472:                                            ; preds = %5657
  %13473 = or i32 %5658, 25
  %13474 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13473
  %13475 = bitcast i32* %13474 to <4 x i32>*
  %13476 = load <4 x i32>, <4 x i32>* %13475, align 4, !tbaa !3
  %13477 = getelementptr inbounds i32, i32* %13474, i32 4
  %13478 = bitcast i32* %13477 to <4 x i32>*
  %13479 = load <4 x i32>, <4 x i32>* %13478, align 4, !tbaa !3
  %13480 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13476
  %13481 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13479
  %13482 = bitcast <4 x i8*> %13480 to <4 x i64*>
  %13483 = bitcast <4 x i8*> %13481 to <4 x i64*>
  %13484 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13482, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13485 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13483, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13486 = icmp eq <4 x i32> %5654, %13476
  %13487 = icmp eq <4 x i32> %5656, %13479
  %13488 = select <4 x i1> %13486, <4 x i64> %13484, <4 x i64> zeroinitializer
  %13489 = select <4 x i1> %13487, <4 x i64> %13485, <4 x i64> zeroinitializer
  %13490 = add <4 x i64> %13488, %5716
  %13491 = add <4 x i64> %13489, %5717
  %13492 = add nuw nsw i32 %5658, 32
  br label %5657

13493:                                            ; preds = %5564
  %13494 = or i32 %5565, 25
  %13495 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13494
  %13496 = bitcast i32* %13495 to <4 x i32>*
  %13497 = load <4 x i32>, <4 x i32>* %13496, align 4, !tbaa !3
  %13498 = getelementptr inbounds i32, i32* %13495, i32 4
  %13499 = bitcast i32* %13498 to <4 x i32>*
  %13500 = load <4 x i32>, <4 x i32>* %13499, align 4, !tbaa !3
  %13501 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13497
  %13502 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13500
  %13503 = bitcast <4 x i8*> %13501 to <4 x i64*>
  %13504 = bitcast <4 x i8*> %13502 to <4 x i64*>
  %13505 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13503, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13506 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13504, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13507 = icmp eq <4 x i32> %5561, %13497
  %13508 = icmp eq <4 x i32> %5563, %13500
  %13509 = select <4 x i1> %13507, <4 x i64> %13505, <4 x i64> zeroinitializer
  %13510 = select <4 x i1> %13508, <4 x i64> %13506, <4 x i64> zeroinitializer
  %13511 = add <4 x i64> %13509, %5623
  %13512 = add <4 x i64> %13510, %5624
  %13513 = add nuw nsw i32 %5565, 32
  br label %5564

13514:                                            ; preds = %5471
  %13515 = or i32 %5472, 25
  %13516 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13515
  %13517 = bitcast i32* %13516 to <4 x i32>*
  %13518 = load <4 x i32>, <4 x i32>* %13517, align 4, !tbaa !3
  %13519 = getelementptr inbounds i32, i32* %13516, i32 4
  %13520 = bitcast i32* %13519 to <4 x i32>*
  %13521 = load <4 x i32>, <4 x i32>* %13520, align 4, !tbaa !3
  %13522 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13518
  %13523 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13521
  %13524 = bitcast <4 x i8*> %13522 to <4 x i64*>
  %13525 = bitcast <4 x i8*> %13523 to <4 x i64*>
  %13526 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13524, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13527 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13525, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13528 = icmp eq <4 x i32> %5468, %13518
  %13529 = icmp eq <4 x i32> %5470, %13521
  %13530 = select <4 x i1> %13528, <4 x i64> %13526, <4 x i64> zeroinitializer
  %13531 = select <4 x i1> %13529, <4 x i64> %13527, <4 x i64> zeroinitializer
  %13532 = add <4 x i64> %13530, %5530
  %13533 = add <4 x i64> %13531, %5531
  %13534 = add nuw nsw i32 %5472, 32
  br label %5471

13535:                                            ; preds = %5378
  %13536 = or i32 %5379, 25
  %13537 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13536
  %13538 = bitcast i32* %13537 to <4 x i32>*
  %13539 = load <4 x i32>, <4 x i32>* %13538, align 4, !tbaa !3
  %13540 = getelementptr inbounds i32, i32* %13537, i32 4
  %13541 = bitcast i32* %13540 to <4 x i32>*
  %13542 = load <4 x i32>, <4 x i32>* %13541, align 4, !tbaa !3
  %13543 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13539
  %13544 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13542
  %13545 = bitcast <4 x i8*> %13543 to <4 x i64*>
  %13546 = bitcast <4 x i8*> %13544 to <4 x i64*>
  %13547 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13545, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13548 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13546, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13549 = icmp eq <4 x i32> %5375, %13539
  %13550 = icmp eq <4 x i32> %5377, %13542
  %13551 = select <4 x i1> %13549, <4 x i64> %13547, <4 x i64> zeroinitializer
  %13552 = select <4 x i1> %13550, <4 x i64> %13548, <4 x i64> zeroinitializer
  %13553 = add <4 x i64> %13551, %5437
  %13554 = add <4 x i64> %13552, %5438
  %13555 = add nuw nsw i32 %5379, 32
  br label %5378

13556:                                            ; preds = %5285
  %13557 = or i32 %5286, 25
  %13558 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13557
  %13559 = bitcast i32* %13558 to <4 x i32>*
  %13560 = load <4 x i32>, <4 x i32>* %13559, align 4, !tbaa !3
  %13561 = getelementptr inbounds i32, i32* %13558, i32 4
  %13562 = bitcast i32* %13561 to <4 x i32>*
  %13563 = load <4 x i32>, <4 x i32>* %13562, align 4, !tbaa !3
  %13564 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13560
  %13565 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13563
  %13566 = bitcast <4 x i8*> %13564 to <4 x i64*>
  %13567 = bitcast <4 x i8*> %13565 to <4 x i64*>
  %13568 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13566, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13569 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13567, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13570 = icmp eq <4 x i32> %13560, %5282
  %13571 = icmp eq <4 x i32> %13563, %5284
  %13572 = select <4 x i1> %13570, <4 x i64> %13568, <4 x i64> zeroinitializer
  %13573 = select <4 x i1> %13571, <4 x i64> %13569, <4 x i64> zeroinitializer
  %13574 = add <4 x i64> %13572, %5344
  %13575 = add <4 x i64> %13573, %5345
  %13576 = add nuw nsw i32 %5286, 32
  br label %5285

13577:                                            ; preds = %5183
  %13578 = or i32 %5184, 25
  %13579 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13578
  %13580 = bitcast i32* %13579 to <4 x i32>*
  %13581 = load <4 x i32>, <4 x i32>* %13580, align 4, !tbaa !3
  %13582 = getelementptr inbounds i32, i32* %13579, i32 4
  %13583 = bitcast i32* %13582 to <4 x i32>*
  %13584 = load <4 x i32>, <4 x i32>* %13583, align 4, !tbaa !3
  %13585 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13581
  %13586 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13584
  %13587 = bitcast <4 x i8*> %13585 to <4 x i64*>
  %13588 = bitcast <4 x i8*> %13586 to <4 x i64*>
  %13589 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13587, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13590 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13588, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13591 = icmp eq <4 x i64*> %5180, %13587
  %13592 = icmp eq <4 x i64*> %5182, %13588
  %13593 = select <4 x i1> %13591, <4 x i64> %13589, <4 x i64> zeroinitializer
  %13594 = select <4 x i1> %13592, <4 x i64> %13590, <4 x i64> zeroinitializer
  %13595 = add <4 x i64> %13593, %5242
  %13596 = add <4 x i64> %13594, %5243
  %13597 = add nuw nsw i32 %5184, 32
  br label %5183

13598:                                            ; preds = %5090
  %13599 = or i32 %5091, 25
  %13600 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13599
  %13601 = bitcast i32* %13600 to <4 x i32>*
  %13602 = load <4 x i32>, <4 x i32>* %13601, align 4, !tbaa !3
  %13603 = getelementptr inbounds i32, i32* %13600, i32 4
  %13604 = bitcast i32* %13603 to <4 x i32>*
  %13605 = load <4 x i32>, <4 x i32>* %13604, align 4, !tbaa !3
  %13606 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13602
  %13607 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13605
  %13608 = bitcast <4 x i8*> %13606 to <4 x i64*>
  %13609 = bitcast <4 x i8*> %13607 to <4 x i64*>
  %13610 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13608, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13611 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13609, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13612 = icmp eq <4 x i32> %5087, %13602
  %13613 = icmp eq <4 x i32> %5089, %13605
  %13614 = select <4 x i1> %13612, <4 x i64> %13610, <4 x i64> zeroinitializer
  %13615 = select <4 x i1> %13613, <4 x i64> %13611, <4 x i64> zeroinitializer
  %13616 = add <4 x i64> %13614, %5149
  %13617 = add <4 x i64> %13615, %5150
  %13618 = add nuw nsw i32 %5091, 32
  br label %5090

13619:                                            ; preds = %4997
  %13620 = or i32 %4998, 25
  %13621 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13620
  %13622 = bitcast i32* %13621 to <4 x i32>*
  %13623 = load <4 x i32>, <4 x i32>* %13622, align 4, !tbaa !3
  %13624 = getelementptr inbounds i32, i32* %13621, i32 4
  %13625 = bitcast i32* %13624 to <4 x i32>*
  %13626 = load <4 x i32>, <4 x i32>* %13625, align 4, !tbaa !3
  %13627 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13623
  %13628 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13626
  %13629 = bitcast <4 x i8*> %13627 to <4 x i64*>
  %13630 = bitcast <4 x i8*> %13628 to <4 x i64*>
  %13631 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13629, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13632 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13630, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13633 = icmp eq <4 x i32> %4994, %13623
  %13634 = icmp eq <4 x i32> %4996, %13626
  %13635 = select <4 x i1> %13633, <4 x i64> %13631, <4 x i64> zeroinitializer
  %13636 = select <4 x i1> %13634, <4 x i64> %13632, <4 x i64> zeroinitializer
  %13637 = add <4 x i64> %13635, %5056
  %13638 = add <4 x i64> %13636, %5057
  %13639 = add nuw nsw i32 %4998, 32
  br label %4997

13640:                                            ; preds = %4904
  %13641 = or i32 %4905, 25
  %13642 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13641
  %13643 = bitcast i32* %13642 to <4 x i32>*
  %13644 = load <4 x i32>, <4 x i32>* %13643, align 4, !tbaa !3
  %13645 = getelementptr inbounds i32, i32* %13642, i32 4
  %13646 = bitcast i32* %13645 to <4 x i32>*
  %13647 = load <4 x i32>, <4 x i32>* %13646, align 4, !tbaa !3
  %13648 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13644
  %13649 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13647
  %13650 = bitcast <4 x i8*> %13648 to <4 x i64*>
  %13651 = bitcast <4 x i8*> %13649 to <4 x i64*>
  %13652 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13650, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13653 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13651, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13654 = icmp eq <4 x i32> %4901, %13644
  %13655 = icmp eq <4 x i32> %4903, %13647
  %13656 = select <4 x i1> %13654, <4 x i64> %13652, <4 x i64> zeroinitializer
  %13657 = select <4 x i1> %13655, <4 x i64> %13653, <4 x i64> zeroinitializer
  %13658 = add <4 x i64> %13656, %4963
  %13659 = add <4 x i64> %13657, %4964
  %13660 = add nuw nsw i32 %4905, 32
  br label %4904

13661:                                            ; preds = %4811
  %13662 = or i32 %4812, 25
  %13663 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13662
  %13664 = bitcast i32* %13663 to <4 x i32>*
  %13665 = load <4 x i32>, <4 x i32>* %13664, align 4, !tbaa !3
  %13666 = getelementptr inbounds i32, i32* %13663, i32 4
  %13667 = bitcast i32* %13666 to <4 x i32>*
  %13668 = load <4 x i32>, <4 x i32>* %13667, align 4, !tbaa !3
  %13669 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13665
  %13670 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13668
  %13671 = bitcast <4 x i8*> %13669 to <4 x i64*>
  %13672 = bitcast <4 x i8*> %13670 to <4 x i64*>
  %13673 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13671, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13674 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13672, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13675 = icmp eq <4 x i32> %4808, %13665
  %13676 = icmp eq <4 x i32> %4810, %13668
  %13677 = select <4 x i1> %13675, <4 x i64> %13673, <4 x i64> zeroinitializer
  %13678 = select <4 x i1> %13676, <4 x i64> %13674, <4 x i64> zeroinitializer
  %13679 = add <4 x i64> %13677, %4870
  %13680 = add <4 x i64> %13678, %4871
  %13681 = add nuw nsw i32 %4812, 32
  br label %4811

13682:                                            ; preds = %4718
  %13683 = or i32 %4719, 25
  %13684 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13683
  %13685 = bitcast i32* %13684 to <4 x i32>*
  %13686 = load <4 x i32>, <4 x i32>* %13685, align 4, !tbaa !3
  %13687 = getelementptr inbounds i32, i32* %13684, i32 4
  %13688 = bitcast i32* %13687 to <4 x i32>*
  %13689 = load <4 x i32>, <4 x i32>* %13688, align 4, !tbaa !3
  %13690 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13686
  %13691 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13689
  %13692 = bitcast <4 x i8*> %13690 to <4 x i64*>
  %13693 = bitcast <4 x i8*> %13691 to <4 x i64*>
  %13694 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13692, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13695 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13693, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13696 = icmp eq <4 x i32> %4715, %13686
  %13697 = icmp eq <4 x i32> %4717, %13689
  %13698 = select <4 x i1> %13696, <4 x i64> %13694, <4 x i64> zeroinitializer
  %13699 = select <4 x i1> %13697, <4 x i64> %13695, <4 x i64> zeroinitializer
  %13700 = add <4 x i64> %13698, %4777
  %13701 = add <4 x i64> %13699, %4778
  %13702 = add nuw nsw i32 %4719, 32
  br label %4718

13703:                                            ; preds = %4625
  %13704 = or i32 %4626, 25
  %13705 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13704
  %13706 = bitcast i32* %13705 to <4 x i32>*
  %13707 = load <4 x i32>, <4 x i32>* %13706, align 4, !tbaa !3
  %13708 = getelementptr inbounds i32, i32* %13705, i32 4
  %13709 = bitcast i32* %13708 to <4 x i32>*
  %13710 = load <4 x i32>, <4 x i32>* %13709, align 4, !tbaa !3
  %13711 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13707
  %13712 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13710
  %13713 = bitcast <4 x i8*> %13711 to <4 x i64*>
  %13714 = bitcast <4 x i8*> %13712 to <4 x i64*>
  %13715 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13713, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13716 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13714, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13717 = icmp eq <4 x i32> %4622, %13707
  %13718 = icmp eq <4 x i32> %4624, %13710
  %13719 = select <4 x i1> %13717, <4 x i64> %13715, <4 x i64> zeroinitializer
  %13720 = select <4 x i1> %13718, <4 x i64> %13716, <4 x i64> zeroinitializer
  %13721 = add <4 x i64> %13719, %4684
  %13722 = add <4 x i64> %13720, %4685
  %13723 = add nuw nsw i32 %4626, 32
  br label %4625

13724:                                            ; preds = %4532
  %13725 = or i32 %4533, 25
  %13726 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13725
  %13727 = bitcast i32* %13726 to <4 x i32>*
  %13728 = load <4 x i32>, <4 x i32>* %13727, align 4, !tbaa !3
  %13729 = getelementptr inbounds i32, i32* %13726, i32 4
  %13730 = bitcast i32* %13729 to <4 x i32>*
  %13731 = load <4 x i32>, <4 x i32>* %13730, align 4, !tbaa !3
  %13732 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13728
  %13733 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13731
  %13734 = bitcast <4 x i8*> %13732 to <4 x i64*>
  %13735 = bitcast <4 x i8*> %13733 to <4 x i64*>
  %13736 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13734, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13737 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13735, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13738 = icmp eq <4 x i32> %13728, %4529
  %13739 = icmp eq <4 x i32> %13731, %4531
  %13740 = select <4 x i1> %13738, <4 x i64> %13736, <4 x i64> zeroinitializer
  %13741 = select <4 x i1> %13739, <4 x i64> %13737, <4 x i64> zeroinitializer
  %13742 = add <4 x i64> %13740, %4591
  %13743 = add <4 x i64> %13741, %4592
  %13744 = add nuw nsw i32 %4533, 32
  br label %4532

13745:                                            ; preds = %4430
  %13746 = or i32 %4431, 25
  %13747 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13746
  %13748 = bitcast i32* %13747 to <4 x i32>*
  %13749 = load <4 x i32>, <4 x i32>* %13748, align 4, !tbaa !3
  %13750 = getelementptr inbounds i32, i32* %13747, i32 4
  %13751 = bitcast i32* %13750 to <4 x i32>*
  %13752 = load <4 x i32>, <4 x i32>* %13751, align 4, !tbaa !3
  %13753 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13749
  %13754 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13752
  %13755 = bitcast <4 x i8*> %13753 to <4 x i64*>
  %13756 = bitcast <4 x i8*> %13754 to <4 x i64*>
  %13757 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13755, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13758 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13756, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13759 = icmp eq <4 x i64*> %4427, %13755
  %13760 = icmp eq <4 x i64*> %4429, %13756
  %13761 = select <4 x i1> %13759, <4 x i64> %13757, <4 x i64> zeroinitializer
  %13762 = select <4 x i1> %13760, <4 x i64> %13758, <4 x i64> zeroinitializer
  %13763 = add <4 x i64> %13761, %4489
  %13764 = add <4 x i64> %13762, %4490
  %13765 = add nuw nsw i32 %4431, 32
  br label %4430

13766:                                            ; preds = %4337
  %13767 = or i32 %4338, 25
  %13768 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13767
  %13769 = bitcast i32* %13768 to <4 x i32>*
  %13770 = load <4 x i32>, <4 x i32>* %13769, align 4, !tbaa !3
  %13771 = getelementptr inbounds i32, i32* %13768, i32 4
  %13772 = bitcast i32* %13771 to <4 x i32>*
  %13773 = load <4 x i32>, <4 x i32>* %13772, align 4, !tbaa !3
  %13774 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13770
  %13775 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13773
  %13776 = bitcast <4 x i8*> %13774 to <4 x i64*>
  %13777 = bitcast <4 x i8*> %13775 to <4 x i64*>
  %13778 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13776, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13779 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13777, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13780 = icmp eq <4 x i32> %4334, %13770
  %13781 = icmp eq <4 x i32> %4336, %13773
  %13782 = select <4 x i1> %13780, <4 x i64> %13778, <4 x i64> zeroinitializer
  %13783 = select <4 x i1> %13781, <4 x i64> %13779, <4 x i64> zeroinitializer
  %13784 = add <4 x i64> %13782, %4396
  %13785 = add <4 x i64> %13783, %4397
  %13786 = add nuw nsw i32 %4338, 32
  br label %4337

13787:                                            ; preds = %4244
  %13788 = or i32 %4245, 25
  %13789 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13788
  %13790 = bitcast i32* %13789 to <4 x i32>*
  %13791 = load <4 x i32>, <4 x i32>* %13790, align 4, !tbaa !3
  %13792 = getelementptr inbounds i32, i32* %13789, i32 4
  %13793 = bitcast i32* %13792 to <4 x i32>*
  %13794 = load <4 x i32>, <4 x i32>* %13793, align 4, !tbaa !3
  %13795 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13791
  %13796 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13794
  %13797 = bitcast <4 x i8*> %13795 to <4 x i64*>
  %13798 = bitcast <4 x i8*> %13796 to <4 x i64*>
  %13799 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13797, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13800 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13798, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13801 = icmp eq <4 x i32> %4241, %13791
  %13802 = icmp eq <4 x i32> %4243, %13794
  %13803 = select <4 x i1> %13801, <4 x i64> %13799, <4 x i64> zeroinitializer
  %13804 = select <4 x i1> %13802, <4 x i64> %13800, <4 x i64> zeroinitializer
  %13805 = add <4 x i64> %13803, %4303
  %13806 = add <4 x i64> %13804, %4304
  %13807 = add nuw nsw i32 %4245, 32
  br label %4244

13808:                                            ; preds = %4151
  %13809 = or i32 %4152, 25
  %13810 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13809
  %13811 = bitcast i32* %13810 to <4 x i32>*
  %13812 = load <4 x i32>, <4 x i32>* %13811, align 4, !tbaa !3
  %13813 = getelementptr inbounds i32, i32* %13810, i32 4
  %13814 = bitcast i32* %13813 to <4 x i32>*
  %13815 = load <4 x i32>, <4 x i32>* %13814, align 4, !tbaa !3
  %13816 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13812
  %13817 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13815
  %13818 = bitcast <4 x i8*> %13816 to <4 x i64*>
  %13819 = bitcast <4 x i8*> %13817 to <4 x i64*>
  %13820 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13818, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13821 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13819, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13822 = icmp eq <4 x i32> %4148, %13812
  %13823 = icmp eq <4 x i32> %4150, %13815
  %13824 = select <4 x i1> %13822, <4 x i64> %13820, <4 x i64> zeroinitializer
  %13825 = select <4 x i1> %13823, <4 x i64> %13821, <4 x i64> zeroinitializer
  %13826 = add <4 x i64> %13824, %4210
  %13827 = add <4 x i64> %13825, %4211
  %13828 = add nuw nsw i32 %4152, 32
  br label %4151

13829:                                            ; preds = %4058
  %13830 = or i32 %4059, 25
  %13831 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13830
  %13832 = bitcast i32* %13831 to <4 x i32>*
  %13833 = load <4 x i32>, <4 x i32>* %13832, align 4, !tbaa !3
  %13834 = getelementptr inbounds i32, i32* %13831, i32 4
  %13835 = bitcast i32* %13834 to <4 x i32>*
  %13836 = load <4 x i32>, <4 x i32>* %13835, align 4, !tbaa !3
  %13837 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13833
  %13838 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %13836
  %13839 = bitcast <4 x i8*> %13837 to <4 x i64*>
  %13840 = bitcast <4 x i8*> %13838 to <4 x i64*>
  %13841 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13839, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13842 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13840, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13843 = icmp eq <4 x i32> %4055, %13833
  %13844 = icmp eq <4 x i32> %4057, %13836
  %13845 = select <4 x i1> %13843, <4 x i64> %13841, <4 x i64> zeroinitializer
  %13846 = select <4 x i1> %13844, <4 x i64> %13842, <4 x i64> zeroinitializer
  %13847 = add <4 x i64> %13845, %4117
  %13848 = add <4 x i64> %13846, %4118
  %13849 = add nuw nsw i32 %4059, 32
  br label %4058

13850:                                            ; preds = %3965
  %13851 = or i32 %3966, 25
  %13852 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13851
  %13853 = bitcast i32* %13852 to <4 x i32>*
  %13854 = load <4 x i32>, <4 x i32>* %13853, align 4, !tbaa !3
  %13855 = getelementptr inbounds i32, i32* %13852, i32 4
  %13856 = bitcast i32* %13855 to <4 x i32>*
  %13857 = load <4 x i32>, <4 x i32>* %13856, align 4, !tbaa !3
  %13858 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13854
  %13859 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %13857
  %13860 = bitcast <4 x i8*> %13858 to <4 x i64*>
  %13861 = bitcast <4 x i8*> %13859 to <4 x i64*>
  %13862 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13860, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13863 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13861, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13864 = icmp eq <4 x i32> %3962, %13854
  %13865 = icmp eq <4 x i32> %3964, %13857
  %13866 = select <4 x i1> %13864, <4 x i64> %13862, <4 x i64> zeroinitializer
  %13867 = select <4 x i1> %13865, <4 x i64> %13863, <4 x i64> zeroinitializer
  %13868 = add <4 x i64> %13866, %4024
  %13869 = add <4 x i64> %13867, %4025
  %13870 = add nuw nsw i32 %3966, 32
  br label %3965

13871:                                            ; preds = %3872
  %13872 = or i32 %3873, 25
  %13873 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13872
  %13874 = bitcast i32* %13873 to <4 x i32>*
  %13875 = load <4 x i32>, <4 x i32>* %13874, align 4, !tbaa !3
  %13876 = getelementptr inbounds i32, i32* %13873, i32 4
  %13877 = bitcast i32* %13876 to <4 x i32>*
  %13878 = load <4 x i32>, <4 x i32>* %13877, align 4, !tbaa !3
  %13879 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13875
  %13880 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %13878
  %13881 = bitcast <4 x i8*> %13879 to <4 x i64*>
  %13882 = bitcast <4 x i8*> %13880 to <4 x i64*>
  %13883 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13881, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13884 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13882, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13885 = icmp eq <4 x i32> %3869, %13875
  %13886 = icmp eq <4 x i32> %3871, %13878
  %13887 = select <4 x i1> %13885, <4 x i64> %13883, <4 x i64> zeroinitializer
  %13888 = select <4 x i1> %13886, <4 x i64> %13884, <4 x i64> zeroinitializer
  %13889 = add <4 x i64> %13887, %3931
  %13890 = add <4 x i64> %13888, %3932
  %13891 = add nuw nsw i32 %3873, 32
  br label %3872

13892:                                            ; preds = %3779
  %13893 = or i32 %3780, 25
  %13894 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13893
  %13895 = bitcast i32* %13894 to <4 x i32>*
  %13896 = load <4 x i32>, <4 x i32>* %13895, align 4, !tbaa !3
  %13897 = getelementptr inbounds i32, i32* %13894, i32 4
  %13898 = bitcast i32* %13897 to <4 x i32>*
  %13899 = load <4 x i32>, <4 x i32>* %13898, align 4, !tbaa !3
  %13900 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13896
  %13901 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %13899
  %13902 = bitcast <4 x i8*> %13900 to <4 x i64*>
  %13903 = bitcast <4 x i8*> %13901 to <4 x i64*>
  %13904 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13902, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13905 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13903, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13906 = icmp eq <4 x i32> %13896, %3776
  %13907 = icmp eq <4 x i32> %13899, %3778
  %13908 = select <4 x i1> %13906, <4 x i64> %13904, <4 x i64> zeroinitializer
  %13909 = select <4 x i1> %13907, <4 x i64> %13905, <4 x i64> zeroinitializer
  %13910 = add <4 x i64> %13908, %3838
  %13911 = add <4 x i64> %13909, %3839
  %13912 = add nuw nsw i32 %3780, 32
  br label %3779

13913:                                            ; preds = %3677
  %13914 = or i32 %3678, 25
  %13915 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13914
  %13916 = bitcast i32* %13915 to <4 x i32>*
  %13917 = load <4 x i32>, <4 x i32>* %13916, align 4, !tbaa !3
  %13918 = getelementptr inbounds i32, i32* %13915, i32 4
  %13919 = bitcast i32* %13918 to <4 x i32>*
  %13920 = load <4 x i32>, <4 x i32>* %13919, align 4, !tbaa !3
  %13921 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13917
  %13922 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %13920
  %13923 = bitcast <4 x i8*> %13921 to <4 x i64*>
  %13924 = bitcast <4 x i8*> %13922 to <4 x i64*>
  %13925 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13923, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13926 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13924, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13927 = icmp eq <4 x i64*> %3674, %13923
  %13928 = icmp eq <4 x i64*> %3676, %13924
  %13929 = select <4 x i1> %13927, <4 x i64> %13925, <4 x i64> zeroinitializer
  %13930 = select <4 x i1> %13928, <4 x i64> %13926, <4 x i64> zeroinitializer
  %13931 = add <4 x i64> %13929, %3736
  %13932 = add <4 x i64> %13930, %3737
  %13933 = add nuw nsw i32 %3678, 32
  br label %3677

13934:                                            ; preds = %3584
  %13935 = or i32 %3585, 25
  %13936 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13935
  %13937 = bitcast i32* %13936 to <4 x i32>*
  %13938 = load <4 x i32>, <4 x i32>* %13937, align 4, !tbaa !3
  %13939 = getelementptr inbounds i32, i32* %13936, i32 4
  %13940 = bitcast i32* %13939 to <4 x i32>*
  %13941 = load <4 x i32>, <4 x i32>* %13940, align 4, !tbaa !3
  %13942 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13938
  %13943 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %13941
  %13944 = bitcast <4 x i8*> %13942 to <4 x i64*>
  %13945 = bitcast <4 x i8*> %13943 to <4 x i64*>
  %13946 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13944, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13947 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13945, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13948 = icmp eq <4 x i32> %3581, %13938
  %13949 = icmp eq <4 x i32> %3583, %13941
  %13950 = select <4 x i1> %13948, <4 x i64> %13946, <4 x i64> zeroinitializer
  %13951 = select <4 x i1> %13949, <4 x i64> %13947, <4 x i64> zeroinitializer
  %13952 = add <4 x i64> %13950, %3643
  %13953 = add <4 x i64> %13951, %3644
  %13954 = add nuw nsw i32 %3585, 32
  br label %3584

13955:                                            ; preds = %3491
  %13956 = or i32 %3492, 25
  %13957 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13956
  %13958 = bitcast i32* %13957 to <4 x i32>*
  %13959 = load <4 x i32>, <4 x i32>* %13958, align 4, !tbaa !3
  %13960 = getelementptr inbounds i32, i32* %13957, i32 4
  %13961 = bitcast i32* %13960 to <4 x i32>*
  %13962 = load <4 x i32>, <4 x i32>* %13961, align 4, !tbaa !3
  %13963 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13959
  %13964 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %13962
  %13965 = bitcast <4 x i8*> %13963 to <4 x i64*>
  %13966 = bitcast <4 x i8*> %13964 to <4 x i64*>
  %13967 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13965, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13968 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13966, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13969 = icmp eq <4 x i32> %3488, %13959
  %13970 = icmp eq <4 x i32> %3490, %13962
  %13971 = select <4 x i1> %13969, <4 x i64> %13967, <4 x i64> zeroinitializer
  %13972 = select <4 x i1> %13970, <4 x i64> %13968, <4 x i64> zeroinitializer
  %13973 = add <4 x i64> %13971, %3550
  %13974 = add <4 x i64> %13972, %3551
  %13975 = add nuw nsw i32 %3492, 32
  br label %3491

13976:                                            ; preds = %3398
  %13977 = or i32 %3399, 25
  %13978 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13977
  %13979 = bitcast i32* %13978 to <4 x i32>*
  %13980 = load <4 x i32>, <4 x i32>* %13979, align 4, !tbaa !3
  %13981 = getelementptr inbounds i32, i32* %13978, i32 4
  %13982 = bitcast i32* %13981 to <4 x i32>*
  %13983 = load <4 x i32>, <4 x i32>* %13982, align 4, !tbaa !3
  %13984 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13980
  %13985 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %13983
  %13986 = bitcast <4 x i8*> %13984 to <4 x i64*>
  %13987 = bitcast <4 x i8*> %13985 to <4 x i64*>
  %13988 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13986, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13989 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %13987, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %13990 = icmp eq <4 x i32> %3395, %13980
  %13991 = icmp eq <4 x i32> %3397, %13983
  %13992 = select <4 x i1> %13990, <4 x i64> %13988, <4 x i64> zeroinitializer
  %13993 = select <4 x i1> %13991, <4 x i64> %13989, <4 x i64> zeroinitializer
  %13994 = add <4 x i64> %13992, %3457
  %13995 = add <4 x i64> %13993, %3458
  %13996 = add nuw nsw i32 %3399, 32
  br label %3398

13997:                                            ; preds = %3305
  %13998 = or i32 %3306, 25
  %13999 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %13998
  %14000 = bitcast i32* %13999 to <4 x i32>*
  %14001 = load <4 x i32>, <4 x i32>* %14000, align 4, !tbaa !3
  %14002 = getelementptr inbounds i32, i32* %13999, i32 4
  %14003 = bitcast i32* %14002 to <4 x i32>*
  %14004 = load <4 x i32>, <4 x i32>* %14003, align 4, !tbaa !3
  %14005 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14001
  %14006 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14004
  %14007 = bitcast <4 x i8*> %14005 to <4 x i64*>
  %14008 = bitcast <4 x i8*> %14006 to <4 x i64*>
  %14009 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14007, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14010 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14008, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14011 = icmp eq <4 x i32> %3302, %14001
  %14012 = icmp eq <4 x i32> %3304, %14004
  %14013 = select <4 x i1> %14011, <4 x i64> %14009, <4 x i64> zeroinitializer
  %14014 = select <4 x i1> %14012, <4 x i64> %14010, <4 x i64> zeroinitializer
  %14015 = add <4 x i64> %14013, %3364
  %14016 = add <4 x i64> %14014, %3365
  %14017 = add nuw nsw i32 %3306, 32
  br label %3305

14018:                                            ; preds = %3212
  %14019 = or i32 %3213, 25
  %14020 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14019
  %14021 = bitcast i32* %14020 to <4 x i32>*
  %14022 = load <4 x i32>, <4 x i32>* %14021, align 4, !tbaa !3
  %14023 = getelementptr inbounds i32, i32* %14020, i32 4
  %14024 = bitcast i32* %14023 to <4 x i32>*
  %14025 = load <4 x i32>, <4 x i32>* %14024, align 4, !tbaa !3
  %14026 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14022
  %14027 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14025
  %14028 = bitcast <4 x i8*> %14026 to <4 x i64*>
  %14029 = bitcast <4 x i8*> %14027 to <4 x i64*>
  %14030 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14028, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14031 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14029, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14032 = icmp eq <4 x i32> %3209, %14022
  %14033 = icmp eq <4 x i32> %3211, %14025
  %14034 = select <4 x i1> %14032, <4 x i64> %14030, <4 x i64> zeroinitializer
  %14035 = select <4 x i1> %14033, <4 x i64> %14031, <4 x i64> zeroinitializer
  %14036 = add <4 x i64> %14034, %3271
  %14037 = add <4 x i64> %14035, %3272
  %14038 = add nuw nsw i32 %3213, 32
  br label %3212

14039:                                            ; preds = %3119
  %14040 = or i32 %3120, 25
  %14041 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14040
  %14042 = bitcast i32* %14041 to <4 x i32>*
  %14043 = load <4 x i32>, <4 x i32>* %14042, align 4, !tbaa !3
  %14044 = getelementptr inbounds i32, i32* %14041, i32 4
  %14045 = bitcast i32* %14044 to <4 x i32>*
  %14046 = load <4 x i32>, <4 x i32>* %14045, align 4, !tbaa !3
  %14047 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14043
  %14048 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14046
  %14049 = bitcast <4 x i8*> %14047 to <4 x i64*>
  %14050 = bitcast <4 x i8*> %14048 to <4 x i64*>
  %14051 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14049, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14052 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14050, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14053 = icmp eq <4 x i32> %3116, %14043
  %14054 = icmp eq <4 x i32> %3118, %14046
  %14055 = select <4 x i1> %14053, <4 x i64> %14051, <4 x i64> zeroinitializer
  %14056 = select <4 x i1> %14054, <4 x i64> %14052, <4 x i64> zeroinitializer
  %14057 = add <4 x i64> %14055, %3178
  %14058 = add <4 x i64> %14056, %3179
  %14059 = add nuw nsw i32 %3120, 32
  br label %3119

14060:                                            ; preds = %3026
  %14061 = or i32 %3027, 25
  %14062 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14061
  %14063 = bitcast i32* %14062 to <4 x i32>*
  %14064 = load <4 x i32>, <4 x i32>* %14063, align 4, !tbaa !3
  %14065 = getelementptr inbounds i32, i32* %14062, i32 4
  %14066 = bitcast i32* %14065 to <4 x i32>*
  %14067 = load <4 x i32>, <4 x i32>* %14066, align 4, !tbaa !3
  %14068 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14064
  %14069 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14067
  %14070 = bitcast <4 x i8*> %14068 to <4 x i64*>
  %14071 = bitcast <4 x i8*> %14069 to <4 x i64*>
  %14072 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14070, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14073 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14071, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14074 = icmp eq <4 x i32> %14064, %3023
  %14075 = icmp eq <4 x i32> %14067, %3025
  %14076 = select <4 x i1> %14074, <4 x i64> %14072, <4 x i64> zeroinitializer
  %14077 = select <4 x i1> %14075, <4 x i64> %14073, <4 x i64> zeroinitializer
  %14078 = add <4 x i64> %14076, %3085
  %14079 = add <4 x i64> %14077, %3086
  %14080 = add nuw nsw i32 %3027, 32
  br label %3026

14081:                                            ; preds = %2924
  %14082 = or i32 %2925, 25
  %14083 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14082
  %14084 = bitcast i32* %14083 to <4 x i32>*
  %14085 = load <4 x i32>, <4 x i32>* %14084, align 4, !tbaa !3
  %14086 = getelementptr inbounds i32, i32* %14083, i32 4
  %14087 = bitcast i32* %14086 to <4 x i32>*
  %14088 = load <4 x i32>, <4 x i32>* %14087, align 4, !tbaa !3
  %14089 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %14085
  %14090 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %14088
  %14091 = bitcast <4 x i8*> %14089 to <4 x i64*>
  %14092 = bitcast <4 x i8*> %14090 to <4 x i64*>
  %14093 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14091, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14094 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14092, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14095 = icmp eq <4 x i64*> %2921, %14091
  %14096 = icmp eq <4 x i64*> %2923, %14092
  %14097 = select <4 x i1> %14095, <4 x i64> %14093, <4 x i64> zeroinitializer
  %14098 = select <4 x i1> %14096, <4 x i64> %14094, <4 x i64> zeroinitializer
  %14099 = add <4 x i64> %14097, %2983
  %14100 = add <4 x i64> %14098, %2984
  %14101 = add nuw nsw i32 %2925, 32
  br label %2924

14102:                                            ; preds = %2831
  %14103 = or i32 %2832, 25
  %14104 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14103
  %14105 = bitcast i32* %14104 to <4 x i32>*
  %14106 = load <4 x i32>, <4 x i32>* %14105, align 4, !tbaa !3
  %14107 = getelementptr inbounds i32, i32* %14104, i32 4
  %14108 = bitcast i32* %14107 to <4 x i32>*
  %14109 = load <4 x i32>, <4 x i32>* %14108, align 4, !tbaa !3
  %14110 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %14106
  %14111 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %14109
  %14112 = bitcast <4 x i8*> %14110 to <4 x i64*>
  %14113 = bitcast <4 x i8*> %14111 to <4 x i64*>
  %14114 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14112, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14115 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14113, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14116 = icmp eq <4 x i32> %2828, %14106
  %14117 = icmp eq <4 x i32> %2830, %14109
  %14118 = select <4 x i1> %14116, <4 x i64> %14114, <4 x i64> zeroinitializer
  %14119 = select <4 x i1> %14117, <4 x i64> %14115, <4 x i64> zeroinitializer
  %14120 = add <4 x i64> %14118, %2890
  %14121 = add <4 x i64> %14119, %2891
  %14122 = add nuw nsw i32 %2832, 32
  br label %2831

14123:                                            ; preds = %2738
  %14124 = or i32 %2739, 25
  %14125 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14124
  %14126 = bitcast i32* %14125 to <4 x i32>*
  %14127 = load <4 x i32>, <4 x i32>* %14126, align 4, !tbaa !3
  %14128 = getelementptr inbounds i32, i32* %14125, i32 4
  %14129 = bitcast i32* %14128 to <4 x i32>*
  %14130 = load <4 x i32>, <4 x i32>* %14129, align 4, !tbaa !3
  %14131 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %14127
  %14132 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %14130
  %14133 = bitcast <4 x i8*> %14131 to <4 x i64*>
  %14134 = bitcast <4 x i8*> %14132 to <4 x i64*>
  %14135 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14133, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14136 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14134, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14137 = icmp eq <4 x i32> %2735, %14127
  %14138 = icmp eq <4 x i32> %2737, %14130
  %14139 = select <4 x i1> %14137, <4 x i64> %14135, <4 x i64> zeroinitializer
  %14140 = select <4 x i1> %14138, <4 x i64> %14136, <4 x i64> zeroinitializer
  %14141 = add <4 x i64> %14139, %2797
  %14142 = add <4 x i64> %14140, %2798
  %14143 = add nuw nsw i32 %2739, 32
  br label %2738

14144:                                            ; preds = %2645
  %14145 = or i32 %2646, 25
  %14146 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14145
  %14147 = bitcast i32* %14146 to <4 x i32>*
  %14148 = load <4 x i32>, <4 x i32>* %14147, align 4, !tbaa !3
  %14149 = getelementptr inbounds i32, i32* %14146, i32 4
  %14150 = bitcast i32* %14149 to <4 x i32>*
  %14151 = load <4 x i32>, <4 x i32>* %14150, align 4, !tbaa !3
  %14152 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %14148
  %14153 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %14151
  %14154 = bitcast <4 x i8*> %14152 to <4 x i64*>
  %14155 = bitcast <4 x i8*> %14153 to <4 x i64*>
  %14156 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14154, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14157 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14155, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14158 = icmp eq <4 x i32> %2642, %14148
  %14159 = icmp eq <4 x i32> %2644, %14151
  %14160 = select <4 x i1> %14158, <4 x i64> %14156, <4 x i64> zeroinitializer
  %14161 = select <4 x i1> %14159, <4 x i64> %14157, <4 x i64> zeroinitializer
  %14162 = add <4 x i64> %14160, %2704
  %14163 = add <4 x i64> %14161, %2705
  %14164 = add nuw nsw i32 %2646, 32
  br label %2645

14165:                                            ; preds = %2552
  %14166 = or i32 %2553, 25
  %14167 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14166
  %14168 = bitcast i32* %14167 to <4 x i32>*
  %14169 = load <4 x i32>, <4 x i32>* %14168, align 4, !tbaa !3
  %14170 = getelementptr inbounds i32, i32* %14167, i32 4
  %14171 = bitcast i32* %14170 to <4 x i32>*
  %14172 = load <4 x i32>, <4 x i32>* %14171, align 4, !tbaa !3
  %14173 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14169
  %14174 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14172
  %14175 = bitcast <4 x i8*> %14173 to <4 x i64*>
  %14176 = bitcast <4 x i8*> %14174 to <4 x i64*>
  %14177 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14175, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14178 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14176, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14179 = icmp eq <4 x i32> %2549, %14169
  %14180 = icmp eq <4 x i32> %2551, %14172
  %14181 = select <4 x i1> %14179, <4 x i64> %14177, <4 x i64> zeroinitializer
  %14182 = select <4 x i1> %14180, <4 x i64> %14178, <4 x i64> zeroinitializer
  %14183 = add <4 x i64> %14181, %2611
  %14184 = add <4 x i64> %14182, %2612
  %14185 = add nuw nsw i32 %2553, 32
  br label %2552

14186:                                            ; preds = %2459
  %14187 = or i32 %2460, 25
  %14188 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14187
  %14189 = bitcast i32* %14188 to <4 x i32>*
  %14190 = load <4 x i32>, <4 x i32>* %14189, align 4, !tbaa !3
  %14191 = getelementptr inbounds i32, i32* %14188, i32 4
  %14192 = bitcast i32* %14191 to <4 x i32>*
  %14193 = load <4 x i32>, <4 x i32>* %14192, align 4, !tbaa !3
  %14194 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14190
  %14195 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14193
  %14196 = bitcast <4 x i8*> %14194 to <4 x i64*>
  %14197 = bitcast <4 x i8*> %14195 to <4 x i64*>
  %14198 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14196, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14199 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14197, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14200 = icmp eq <4 x i32> %2456, %14190
  %14201 = icmp eq <4 x i32> %2458, %14193
  %14202 = select <4 x i1> %14200, <4 x i64> %14198, <4 x i64> zeroinitializer
  %14203 = select <4 x i1> %14201, <4 x i64> %14199, <4 x i64> zeroinitializer
  %14204 = add <4 x i64> %14202, %2518
  %14205 = add <4 x i64> %14203, %2519
  %14206 = add nuw nsw i32 %2460, 32
  br label %2459

14207:                                            ; preds = %2366
  %14208 = or i32 %2367, 25
  %14209 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14208
  %14210 = bitcast i32* %14209 to <4 x i32>*
  %14211 = load <4 x i32>, <4 x i32>* %14210, align 4, !tbaa !3
  %14212 = getelementptr inbounds i32, i32* %14209, i32 4
  %14213 = bitcast i32* %14212 to <4 x i32>*
  %14214 = load <4 x i32>, <4 x i32>* %14213, align 4, !tbaa !3
  %14215 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14211
  %14216 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14214
  %14217 = bitcast <4 x i8*> %14215 to <4 x i64*>
  %14218 = bitcast <4 x i8*> %14216 to <4 x i64*>
  %14219 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14217, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14220 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14218, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14221 = icmp eq <4 x i32> %2363, %14211
  %14222 = icmp eq <4 x i32> %2365, %14214
  %14223 = select <4 x i1> %14221, <4 x i64> %14219, <4 x i64> zeroinitializer
  %14224 = select <4 x i1> %14222, <4 x i64> %14220, <4 x i64> zeroinitializer
  %14225 = add <4 x i64> %14223, %2425
  %14226 = add <4 x i64> %14224, %2426
  %14227 = add nuw nsw i32 %2367, 32
  br label %2366

14228:                                            ; preds = %2273
  %14229 = or i32 %2274, 25
  %14230 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14229
  %14231 = bitcast i32* %14230 to <4 x i32>*
  %14232 = load <4 x i32>, <4 x i32>* %14231, align 4, !tbaa !3
  %14233 = getelementptr inbounds i32, i32* %14230, i32 4
  %14234 = bitcast i32* %14233 to <4 x i32>*
  %14235 = load <4 x i32>, <4 x i32>* %14234, align 4, !tbaa !3
  %14236 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14232
  %14237 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14235
  %14238 = bitcast <4 x i8*> %14236 to <4 x i64*>
  %14239 = bitcast <4 x i8*> %14237 to <4 x i64*>
  %14240 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14238, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14241 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14239, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14242 = icmp eq <4 x i32> %14232, %2270
  %14243 = icmp eq <4 x i32> %14235, %2272
  %14244 = select <4 x i1> %14242, <4 x i64> %14240, <4 x i64> zeroinitializer
  %14245 = select <4 x i1> %14243, <4 x i64> %14241, <4 x i64> zeroinitializer
  %14246 = add <4 x i64> %14244, %2332
  %14247 = add <4 x i64> %14245, %2333
  %14248 = add nuw nsw i32 %2274, 32
  br label %2273

14249:                                            ; preds = %2171
  %14250 = or i32 %2172, 25
  %14251 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14250
  %14252 = bitcast i32* %14251 to <4 x i32>*
  %14253 = load <4 x i32>, <4 x i32>* %14252, align 4, !tbaa !3
  %14254 = getelementptr inbounds i32, i32* %14251, i32 4
  %14255 = bitcast i32* %14254 to <4 x i32>*
  %14256 = load <4 x i32>, <4 x i32>* %14255, align 4, !tbaa !3
  %14257 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %14253
  %14258 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %14256
  %14259 = bitcast <4 x i8*> %14257 to <4 x i64*>
  %14260 = bitcast <4 x i8*> %14258 to <4 x i64*>
  %14261 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14259, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14262 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14260, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14263 = icmp eq <4 x i32> %2168, %14253
  %14264 = icmp eq <4 x i32> %2170, %14256
  %14265 = select <4 x i1> %14263, <4 x i64> %14261, <4 x i64> zeroinitializer
  %14266 = select <4 x i1> %14264, <4 x i64> %14262, <4 x i64> zeroinitializer
  %14267 = add <4 x i64> %14265, %2230
  %14268 = add <4 x i64> %14266, %2231
  %14269 = add nuw nsw i32 %2172, 32
  br label %2171

14270:                                            ; preds = %2078
  %14271 = or i32 %2079, 25
  %14272 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14271
  %14273 = bitcast i32* %14272 to <4 x i32>*
  %14274 = load <4 x i32>, <4 x i32>* %14273, align 4, !tbaa !3
  %14275 = getelementptr inbounds i32, i32* %14272, i32 4
  %14276 = bitcast i32* %14275 to <4 x i32>*
  %14277 = load <4 x i32>, <4 x i32>* %14276, align 4, !tbaa !3
  %14278 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %14274
  %14279 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %14277
  %14280 = bitcast <4 x i8*> %14278 to <4 x i64*>
  %14281 = bitcast <4 x i8*> %14279 to <4 x i64*>
  %14282 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14280, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14283 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14281, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14284 = icmp eq <4 x i32> %2075, %14274
  %14285 = icmp eq <4 x i32> %2077, %14277
  %14286 = select <4 x i1> %14284, <4 x i64> %14282, <4 x i64> zeroinitializer
  %14287 = select <4 x i1> %14285, <4 x i64> %14283, <4 x i64> zeroinitializer
  %14288 = add <4 x i64> %14286, %2137
  %14289 = add <4 x i64> %14287, %2138
  %14290 = add nuw nsw i32 %2079, 32
  br label %2078

14291:                                            ; preds = %1985
  %14292 = or i32 %1986, 25
  %14293 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14292
  %14294 = bitcast i32* %14293 to <4 x i32>*
  %14295 = load <4 x i32>, <4 x i32>* %14294, align 4, !tbaa !3
  %14296 = getelementptr inbounds i32, i32* %14293, i32 4
  %14297 = bitcast i32* %14296 to <4 x i32>*
  %14298 = load <4 x i32>, <4 x i32>* %14297, align 4, !tbaa !3
  %14299 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %14295
  %14300 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %14298
  %14301 = bitcast <4 x i8*> %14299 to <4 x i64*>
  %14302 = bitcast <4 x i8*> %14300 to <4 x i64*>
  %14303 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14301, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14304 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14302, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14305 = icmp eq <4 x i32> %1982, %14295
  %14306 = icmp eq <4 x i32> %1984, %14298
  %14307 = select <4 x i1> %14305, <4 x i64> %14303, <4 x i64> zeroinitializer
  %14308 = select <4 x i1> %14306, <4 x i64> %14304, <4 x i64> zeroinitializer
  %14309 = add <4 x i64> %14307, %2044
  %14310 = add <4 x i64> %14308, %2045
  %14311 = add nuw nsw i32 %1986, 32
  br label %1985

14312:                                            ; preds = %1892
  %14313 = or i32 %1893, 25
  %14314 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14313
  %14315 = bitcast i32* %14314 to <4 x i32>*
  %14316 = load <4 x i32>, <4 x i32>* %14315, align 4, !tbaa !3
  %14317 = getelementptr inbounds i32, i32* %14314, i32 4
  %14318 = bitcast i32* %14317 to <4 x i32>*
  %14319 = load <4 x i32>, <4 x i32>* %14318, align 4, !tbaa !3
  %14320 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %14316
  %14321 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %14319
  %14322 = bitcast <4 x i8*> %14320 to <4 x i64*>
  %14323 = bitcast <4 x i8*> %14321 to <4 x i64*>
  %14324 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14322, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14325 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14323, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14326 = icmp eq <4 x i32> %1889, %14316
  %14327 = icmp eq <4 x i32> %1891, %14319
  %14328 = select <4 x i1> %14326, <4 x i64> %14324, <4 x i64> zeroinitializer
  %14329 = select <4 x i1> %14327, <4 x i64> %14325, <4 x i64> zeroinitializer
  %14330 = add <4 x i64> %14328, %1951
  %14331 = add <4 x i64> %14329, %1952
  %14332 = add nuw nsw i32 %1893, 32
  br label %1892

14333:                                            ; preds = %1799
  %14334 = or i32 %1800, 25
  %14335 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14334
  %14336 = bitcast i32* %14335 to <4 x i32>*
  %14337 = load <4 x i32>, <4 x i32>* %14336, align 4, !tbaa !3
  %14338 = getelementptr inbounds i32, i32* %14335, i32 4
  %14339 = bitcast i32* %14338 to <4 x i32>*
  %14340 = load <4 x i32>, <4 x i32>* %14339, align 4, !tbaa !3
  %14341 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14337
  %14342 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14340
  %14343 = bitcast <4 x i8*> %14341 to <4 x i64*>
  %14344 = bitcast <4 x i8*> %14342 to <4 x i64*>
  %14345 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14343, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14346 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14344, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14347 = icmp eq <4 x i32> %1796, %14337
  %14348 = icmp eq <4 x i32> %1798, %14340
  %14349 = select <4 x i1> %14347, <4 x i64> %14345, <4 x i64> zeroinitializer
  %14350 = select <4 x i1> %14348, <4 x i64> %14346, <4 x i64> zeroinitializer
  %14351 = add <4 x i64> %14349, %1858
  %14352 = add <4 x i64> %14350, %1859
  %14353 = add nuw nsw i32 %1800, 32
  br label %1799

14354:                                            ; preds = %1706
  %14355 = or i32 %1707, 25
  %14356 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14355
  %14357 = bitcast i32* %14356 to <4 x i32>*
  %14358 = load <4 x i32>, <4 x i32>* %14357, align 4, !tbaa !3
  %14359 = getelementptr inbounds i32, i32* %14356, i32 4
  %14360 = bitcast i32* %14359 to <4 x i32>*
  %14361 = load <4 x i32>, <4 x i32>* %14360, align 4, !tbaa !3
  %14362 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14358
  %14363 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14361
  %14364 = bitcast <4 x i8*> %14362 to <4 x i64*>
  %14365 = bitcast <4 x i8*> %14363 to <4 x i64*>
  %14366 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14364, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14367 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14365, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14368 = icmp eq <4 x i32> %1703, %14358
  %14369 = icmp eq <4 x i32> %1705, %14361
  %14370 = select <4 x i1> %14368, <4 x i64> %14366, <4 x i64> zeroinitializer
  %14371 = select <4 x i1> %14369, <4 x i64> %14367, <4 x i64> zeroinitializer
  %14372 = add <4 x i64> %14370, %1765
  %14373 = add <4 x i64> %14371, %1766
  %14374 = add nuw nsw i32 %1707, 32
  br label %1706

14375:                                            ; preds = %1613
  %14376 = or i32 %1614, 25
  %14377 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14376
  %14378 = bitcast i32* %14377 to <4 x i32>*
  %14379 = load <4 x i32>, <4 x i32>* %14378, align 4, !tbaa !3
  %14380 = getelementptr inbounds i32, i32* %14377, i32 4
  %14381 = bitcast i32* %14380 to <4 x i32>*
  %14382 = load <4 x i32>, <4 x i32>* %14381, align 4, !tbaa !3
  %14383 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14379
  %14384 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14382
  %14385 = bitcast <4 x i8*> %14383 to <4 x i64*>
  %14386 = bitcast <4 x i8*> %14384 to <4 x i64*>
  %14387 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14385, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14388 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14386, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14389 = icmp eq <4 x i32> %1610, %14379
  %14390 = icmp eq <4 x i32> %1612, %14382
  %14391 = select <4 x i1> %14389, <4 x i64> %14387, <4 x i64> zeroinitializer
  %14392 = select <4 x i1> %14390, <4 x i64> %14388, <4 x i64> zeroinitializer
  %14393 = add <4 x i64> %14391, %1672
  %14394 = add <4 x i64> %14392, %1673
  %14395 = add nuw nsw i32 %1614, 32
  br label %1613

14396:                                            ; preds = %1520
  %14397 = or i32 %1521, 25
  %14398 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14397
  %14399 = bitcast i32* %14398 to <4 x i32>*
  %14400 = load <4 x i32>, <4 x i32>* %14399, align 4, !tbaa !3
  %14401 = getelementptr inbounds i32, i32* %14398, i32 4
  %14402 = bitcast i32* %14401 to <4 x i32>*
  %14403 = load <4 x i32>, <4 x i32>* %14402, align 4, !tbaa !3
  %14404 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14400
  %14405 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14403
  %14406 = bitcast <4 x i8*> %14404 to <4 x i64*>
  %14407 = bitcast <4 x i8*> %14405 to <4 x i64*>
  %14408 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14406, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14409 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14407, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14410 = icmp eq <4 x i32> %1517, %14400
  %14411 = icmp eq <4 x i32> %1519, %14403
  %14412 = select <4 x i1> %14410, <4 x i64> %14408, <4 x i64> zeroinitializer
  %14413 = select <4 x i1> %14411, <4 x i64> %14409, <4 x i64> zeroinitializer
  %14414 = add <4 x i64> %14412, %1579
  %14415 = add <4 x i64> %14413, %1580
  %14416 = add nuw nsw i32 %1521, 32
  br label %1520

14417:                                            ; preds = %1418
  %14418 = or i32 %1419, 25
  %14419 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14418
  %14420 = bitcast i32* %14419 to <4 x i32>*
  %14421 = load <4 x i32>, <4 x i32>* %14420, align 4, !tbaa !3
  %14422 = getelementptr inbounds i32, i32* %14419, i32 4
  %14423 = bitcast i32* %14422 to <4 x i32>*
  %14424 = load <4 x i32>, <4 x i32>* %14423, align 4, !tbaa !3
  %14425 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %14421
  %14426 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %14424
  %14427 = bitcast <4 x i8*> %14425 to <4 x i64*>
  %14428 = bitcast <4 x i8*> %14426 to <4 x i64*>
  %14429 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14427, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14430 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14428, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14431 = icmp eq <4 x i32> %1415, %14421
  %14432 = icmp eq <4 x i32> %1417, %14424
  %14433 = select <4 x i1> %14431, <4 x i64> %14429, <4 x i64> zeroinitializer
  %14434 = select <4 x i1> %14432, <4 x i64> %14430, <4 x i64> zeroinitializer
  %14435 = add <4 x i64> %14433, %1477
  %14436 = add <4 x i64> %14434, %1478
  %14437 = add nuw nsw i32 %1419, 32
  br label %1418

14438:                                            ; preds = %1325
  %14439 = or i32 %1326, 25
  %14440 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14439
  %14441 = bitcast i32* %14440 to <4 x i32>*
  %14442 = load <4 x i32>, <4 x i32>* %14441, align 4, !tbaa !3
  %14443 = getelementptr inbounds i32, i32* %14440, i32 4
  %14444 = bitcast i32* %14443 to <4 x i32>*
  %14445 = load <4 x i32>, <4 x i32>* %14444, align 4, !tbaa !3
  %14446 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %14442
  %14447 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %14445
  %14448 = bitcast <4 x i8*> %14446 to <4 x i64*>
  %14449 = bitcast <4 x i8*> %14447 to <4 x i64*>
  %14450 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14448, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14451 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14449, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14452 = icmp eq <4 x i32> %1322, %14442
  %14453 = icmp eq <4 x i32> %1324, %14445
  %14454 = select <4 x i1> %14452, <4 x i64> %14450, <4 x i64> zeroinitializer
  %14455 = select <4 x i1> %14453, <4 x i64> %14451, <4 x i64> zeroinitializer
  %14456 = add <4 x i64> %14454, %1384
  %14457 = add <4 x i64> %14455, %1385
  %14458 = add nuw nsw i32 %1326, 32
  br label %1325

14459:                                            ; preds = %1232
  %14460 = or i32 %1233, 25
  %14461 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14460
  %14462 = bitcast i32* %14461 to <4 x i32>*
  %14463 = load <4 x i32>, <4 x i32>* %14462, align 4, !tbaa !3
  %14464 = getelementptr inbounds i32, i32* %14461, i32 4
  %14465 = bitcast i32* %14464 to <4 x i32>*
  %14466 = load <4 x i32>, <4 x i32>* %14465, align 4, !tbaa !3
  %14467 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %14463
  %14468 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %14466
  %14469 = bitcast <4 x i8*> %14467 to <4 x i64*>
  %14470 = bitcast <4 x i8*> %14468 to <4 x i64*>
  %14471 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14469, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14472 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14470, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14473 = icmp eq <4 x i32> %1229, %14463
  %14474 = icmp eq <4 x i32> %1231, %14466
  %14475 = select <4 x i1> %14473, <4 x i64> %14471, <4 x i64> zeroinitializer
  %14476 = select <4 x i1> %14474, <4 x i64> %14472, <4 x i64> zeroinitializer
  %14477 = add <4 x i64> %14475, %1291
  %14478 = add <4 x i64> %14476, %1292
  %14479 = add nuw nsw i32 %1233, 32
  br label %1232

14480:                                            ; preds = %1139
  %14481 = or i32 %1140, 25
  %14482 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14481
  %14483 = bitcast i32* %14482 to <4 x i32>*
  %14484 = load <4 x i32>, <4 x i32>* %14483, align 4, !tbaa !3
  %14485 = getelementptr inbounds i32, i32* %14482, i32 4
  %14486 = bitcast i32* %14485 to <4 x i32>*
  %14487 = load <4 x i32>, <4 x i32>* %14486, align 4, !tbaa !3
  %14488 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %14484
  %14489 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %14487
  %14490 = bitcast <4 x i8*> %14488 to <4 x i64*>
  %14491 = bitcast <4 x i8*> %14489 to <4 x i64*>
  %14492 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14490, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14493 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14491, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14494 = icmp eq <4 x i32> %1136, %14484
  %14495 = icmp eq <4 x i32> %1138, %14487
  %14496 = select <4 x i1> %14494, <4 x i64> %14492, <4 x i64> zeroinitializer
  %14497 = select <4 x i1> %14495, <4 x i64> %14493, <4 x i64> zeroinitializer
  %14498 = add <4 x i64> %14496, %1198
  %14499 = add <4 x i64> %14497, %1199
  %14500 = add nuw nsw i32 %1140, 32
  br label %1139

14501:                                            ; preds = %1046
  %14502 = or i32 %1047, 25
  %14503 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14502
  %14504 = bitcast i32* %14503 to <4 x i32>*
  %14505 = load <4 x i32>, <4 x i32>* %14504, align 4, !tbaa !3
  %14506 = getelementptr inbounds i32, i32* %14503, i32 4
  %14507 = bitcast i32* %14506 to <4 x i32>*
  %14508 = load <4 x i32>, <4 x i32>* %14507, align 4, !tbaa !3
  %14509 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14505
  %14510 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14508
  %14511 = bitcast <4 x i8*> %14509 to <4 x i64*>
  %14512 = bitcast <4 x i8*> %14510 to <4 x i64*>
  %14513 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14511, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14514 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14512, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14515 = icmp eq <4 x i32> %1043, %14505
  %14516 = icmp eq <4 x i32> %1045, %14508
  %14517 = select <4 x i1> %14515, <4 x i64> %14513, <4 x i64> zeroinitializer
  %14518 = select <4 x i1> %14516, <4 x i64> %14514, <4 x i64> zeroinitializer
  %14519 = add <4 x i64> %14517, %1105
  %14520 = add <4 x i64> %14518, %1106
  %14521 = add nuw nsw i32 %1047, 32
  br label %1046

14522:                                            ; preds = %953
  %14523 = or i32 %954, 25
  %14524 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14523
  %14525 = bitcast i32* %14524 to <4 x i32>*
  %14526 = load <4 x i32>, <4 x i32>* %14525, align 4, !tbaa !3
  %14527 = getelementptr inbounds i32, i32* %14524, i32 4
  %14528 = bitcast i32* %14527 to <4 x i32>*
  %14529 = load <4 x i32>, <4 x i32>* %14528, align 4, !tbaa !3
  %14530 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14526
  %14531 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14529
  %14532 = bitcast <4 x i8*> %14530 to <4 x i64*>
  %14533 = bitcast <4 x i8*> %14531 to <4 x i64*>
  %14534 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14532, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14535 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14533, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14536 = icmp eq <4 x i32> %950, %14526
  %14537 = icmp eq <4 x i32> %952, %14529
  %14538 = select <4 x i1> %14536, <4 x i64> %14534, <4 x i64> zeroinitializer
  %14539 = select <4 x i1> %14537, <4 x i64> %14535, <4 x i64> zeroinitializer
  %14540 = add <4 x i64> %14538, %1012
  %14541 = add <4 x i64> %14539, %1013
  %14542 = add nuw nsw i32 %954, 32
  br label %953

14543:                                            ; preds = %860
  %14544 = or i32 %861, 25
  %14545 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14544
  %14546 = bitcast i32* %14545 to <4 x i32>*
  %14547 = load <4 x i32>, <4 x i32>* %14546, align 4, !tbaa !3
  %14548 = getelementptr inbounds i32, i32* %14545, i32 4
  %14549 = bitcast i32* %14548 to <4 x i32>*
  %14550 = load <4 x i32>, <4 x i32>* %14549, align 4, !tbaa !3
  %14551 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14547
  %14552 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14550
  %14553 = bitcast <4 x i8*> %14551 to <4 x i64*>
  %14554 = bitcast <4 x i8*> %14552 to <4 x i64*>
  %14555 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14553, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14556 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14554, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14557 = icmp eq <4 x i32> %857, %14547
  %14558 = icmp eq <4 x i32> %859, %14550
  %14559 = select <4 x i1> %14557, <4 x i64> %14555, <4 x i64> zeroinitializer
  %14560 = select <4 x i1> %14558, <4 x i64> %14556, <4 x i64> zeroinitializer
  %14561 = add <4 x i64> %14559, %919
  %14562 = add <4 x i64> %14560, %920
  %14563 = add nuw nsw i32 %861, 32
  br label %860

14564:                                            ; preds = %767
  %14565 = or i32 %768, 25
  %14566 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14565
  %14567 = bitcast i32* %14566 to <4 x i32>*
  %14568 = load <4 x i32>, <4 x i32>* %14567, align 4, !tbaa !3
  %14569 = getelementptr inbounds i32, i32* %14566, i32 4
  %14570 = bitcast i32* %14569 to <4 x i32>*
  %14571 = load <4 x i32>, <4 x i32>* %14570, align 4, !tbaa !3
  %14572 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14568
  %14573 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14571
  %14574 = bitcast <4 x i8*> %14572 to <4 x i64*>
  %14575 = bitcast <4 x i8*> %14573 to <4 x i64*>
  %14576 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14574, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14577 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14575, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14578 = icmp eq <4 x i32> %764, %14568
  %14579 = icmp eq <4 x i32> %766, %14571
  %14580 = select <4 x i1> %14578, <4 x i64> %14576, <4 x i64> zeroinitializer
  %14581 = select <4 x i1> %14579, <4 x i64> %14577, <4 x i64> zeroinitializer
  %14582 = add <4 x i64> %14580, %826
  %14583 = add <4 x i64> %14581, %827
  %14584 = add nuw nsw i32 %768, 32
  br label %767

14585:                                            ; preds = %665
  %14586 = or i32 %666, 25
  %14587 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14586
  %14588 = bitcast i32* %14587 to <4 x i32>*
  %14589 = load <4 x i32>, <4 x i32>* %14588, align 4, !tbaa !3
  %14590 = getelementptr inbounds i32, i32* %14587, i32 4
  %14591 = bitcast i32* %14590 to <4 x i32>*
  %14592 = load <4 x i32>, <4 x i32>* %14591, align 4, !tbaa !3
  %14593 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %14589
  %14594 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T7 to i8*), <4 x i32> %14592
  %14595 = bitcast <4 x i8*> %14593 to <4 x i64*>
  %14596 = bitcast <4 x i8*> %14594 to <4 x i64*>
  %14597 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14595, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14598 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14596, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14599 = icmp eq <4 x i32> %662, %14589
  %14600 = icmp eq <4 x i32> %664, %14592
  %14601 = select <4 x i1> %14599, <4 x i64> %14597, <4 x i64> zeroinitializer
  %14602 = select <4 x i1> %14600, <4 x i64> %14598, <4 x i64> zeroinitializer
  %14603 = add <4 x i64> %14601, %724
  %14604 = add <4 x i64> %14602, %725
  %14605 = add nuw nsw i32 %666, 32
  br label %665

14606:                                            ; preds = %573
  %14607 = or i32 %574, 25
  %14608 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14607
  %14609 = bitcast i32* %14608 to <4 x i32>*
  %14610 = load <4 x i32>, <4 x i32>* %14609, align 4, !tbaa !3
  %14611 = getelementptr inbounds i32, i32* %14608, i32 4
  %14612 = bitcast i32* %14611 to <4 x i32>*
  %14613 = load <4 x i32>, <4 x i32>* %14612, align 4, !tbaa !3
  %14614 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %14610
  %14615 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T6 to i8*), <4 x i32> %14613
  %14616 = bitcast <4 x i8*> %14614 to <4 x i64*>
  %14617 = bitcast <4 x i8*> %14615 to <4 x i64*>
  %14618 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14616, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14619 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14617, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14620 = icmp eq <4 x i32> %570, %14610
  %14621 = icmp eq <4 x i32> %572, %14613
  %14622 = select <4 x i1> %14620, <4 x i64> %14618, <4 x i64> zeroinitializer
  %14623 = select <4 x i1> %14621, <4 x i64> %14619, <4 x i64> zeroinitializer
  %14624 = add <4 x i64> %14622, %632
  %14625 = add <4 x i64> %14623, %633
  %14626 = add nuw nsw i32 %574, 32
  br label %573

14627:                                            ; preds = %481
  %14628 = or i32 %482, 25
  %14629 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14628
  %14630 = bitcast i32* %14629 to <4 x i32>*
  %14631 = load <4 x i32>, <4 x i32>* %14630, align 4, !tbaa !3
  %14632 = getelementptr inbounds i32, i32* %14629, i32 4
  %14633 = bitcast i32* %14632 to <4 x i32>*
  %14634 = load <4 x i32>, <4 x i32>* %14633, align 4, !tbaa !3
  %14635 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %14631
  %14636 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T5 to i8*), <4 x i32> %14634
  %14637 = bitcast <4 x i8*> %14635 to <4 x i64*>
  %14638 = bitcast <4 x i8*> %14636 to <4 x i64*>
  %14639 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14637, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14640 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14638, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14641 = icmp eq <4 x i32> %478, %14631
  %14642 = icmp eq <4 x i32> %480, %14634
  %14643 = select <4 x i1> %14641, <4 x i64> %14639, <4 x i64> zeroinitializer
  %14644 = select <4 x i1> %14642, <4 x i64> %14640, <4 x i64> zeroinitializer
  %14645 = add <4 x i64> %14643, %540
  %14646 = add <4 x i64> %14644, %541
  %14647 = add nuw nsw i32 %482, 32
  br label %481

14648:                                            ; preds = %389
  %14649 = or i32 %390, 25
  %14650 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14649
  %14651 = bitcast i32* %14650 to <4 x i32>*
  %14652 = load <4 x i32>, <4 x i32>* %14651, align 4, !tbaa !3
  %14653 = getelementptr inbounds i32, i32* %14650, i32 4
  %14654 = bitcast i32* %14653 to <4 x i32>*
  %14655 = load <4 x i32>, <4 x i32>* %14654, align 4, !tbaa !3
  %14656 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %14652
  %14657 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T4 to i8*), <4 x i32> %14655
  %14658 = bitcast <4 x i8*> %14656 to <4 x i64*>
  %14659 = bitcast <4 x i8*> %14657 to <4 x i64*>
  %14660 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14658, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14661 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14659, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14662 = icmp eq <4 x i32> %386, %14652
  %14663 = icmp eq <4 x i32> %388, %14655
  %14664 = select <4 x i1> %14662, <4 x i64> %14660, <4 x i64> zeroinitializer
  %14665 = select <4 x i1> %14663, <4 x i64> %14661, <4 x i64> zeroinitializer
  %14666 = add <4 x i64> %14664, %448
  %14667 = add <4 x i64> %14665, %449
  %14668 = add nuw nsw i32 %390, 32
  br label %389

14669:                                            ; preds = %297
  %14670 = or i32 %298, 25
  %14671 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14670
  %14672 = bitcast i32* %14671 to <4 x i32>*
  %14673 = load <4 x i32>, <4 x i32>* %14672, align 4, !tbaa !3
  %14674 = getelementptr inbounds i32, i32* %14671, i32 4
  %14675 = bitcast i32* %14674 to <4 x i32>*
  %14676 = load <4 x i32>, <4 x i32>* %14675, align 4, !tbaa !3
  %14677 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14673
  %14678 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T3 to i8*), <4 x i32> %14676
  %14679 = bitcast <4 x i8*> %14677 to <4 x i64*>
  %14680 = bitcast <4 x i8*> %14678 to <4 x i64*>
  %14681 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14679, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14682 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14680, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14683 = icmp eq <4 x i32> %294, %14673
  %14684 = icmp eq <4 x i32> %296, %14676
  %14685 = select <4 x i1> %14683, <4 x i64> %14681, <4 x i64> zeroinitializer
  %14686 = select <4 x i1> %14684, <4 x i64> %14682, <4 x i64> zeroinitializer
  %14687 = add <4 x i64> %14685, %356
  %14688 = add <4 x i64> %14686, %357
  %14689 = add nuw nsw i32 %298, 32
  br label %297

14690:                                            ; preds = %205
  %14691 = or i32 %206, 25
  %14692 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14691
  %14693 = bitcast i32* %14692 to <4 x i32>*
  %14694 = load <4 x i32>, <4 x i32>* %14693, align 4, !tbaa !3
  %14695 = getelementptr inbounds i32, i32* %14692, i32 4
  %14696 = bitcast i32* %14695 to <4 x i32>*
  %14697 = load <4 x i32>, <4 x i32>* %14696, align 4, !tbaa !3
  %14698 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14694
  %14699 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T2 to i8*), <4 x i32> %14697
  %14700 = bitcast <4 x i8*> %14698 to <4 x i64*>
  %14701 = bitcast <4 x i8*> %14699 to <4 x i64*>
  %14702 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14700, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14703 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14701, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14704 = icmp eq <4 x i32> %202, %14694
  %14705 = icmp eq <4 x i32> %204, %14697
  %14706 = select <4 x i1> %14704, <4 x i64> %14702, <4 x i64> zeroinitializer
  %14707 = select <4 x i1> %14705, <4 x i64> %14703, <4 x i64> zeroinitializer
  %14708 = add <4 x i64> %14706, %264
  %14709 = add <4 x i64> %14707, %265
  %14710 = add nuw nsw i32 %206, 32
  br label %205

14711:                                            ; preds = %113
  %14712 = or i32 %114, 25
  %14713 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14712
  %14714 = bitcast i32* %14713 to <4 x i32>*
  %14715 = load <4 x i32>, <4 x i32>* %14714, align 4, !tbaa !3
  %14716 = getelementptr inbounds i32, i32* %14713, i32 4
  %14717 = bitcast i32* %14716 to <4 x i32>*
  %14718 = load <4 x i32>, <4 x i32>* %14717, align 4, !tbaa !3
  %14719 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14715
  %14720 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T1 to i8*), <4 x i32> %14718
  %14721 = bitcast <4 x i8*> %14719 to <4 x i64*>
  %14722 = bitcast <4 x i8*> %14720 to <4 x i64*>
  %14723 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14721, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14724 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14722, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14725 = icmp eq <4 x i32> %110, %14715
  %14726 = icmp eq <4 x i32> %112, %14718
  %14727 = select <4 x i1> %14725, <4 x i64> %14723, <4 x i64> zeroinitializer
  %14728 = select <4 x i1> %14726, <4 x i64> %14724, <4 x i64> zeroinitializer
  %14729 = add <4 x i64> %14727, %172
  %14730 = add <4 x i64> %14728, %173
  %14731 = add nuw nsw i32 %114, 32
  br label %113

14732:                                            ; preds = %21
  %14733 = or i32 %22, 25
  %14734 = getelementptr inbounds [256 x i32], [256 x i32]* @constinit.252, i32 0, i32 %14733
  %14735 = bitcast i32* %14734 to <4 x i32>*
  %14736 = load <4 x i32>, <4 x i32>* %14735, align 4, !tbaa !3
  %14737 = getelementptr inbounds i32, i32* %14734, i32 4
  %14738 = bitcast i32* %14737 to <4 x i32>*
  %14739 = load <4 x i32>, <4 x i32>* %14738, align 4, !tbaa !3
  %14740 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14736
  %14741 = getelementptr inbounds i8, i8* bitcast ([256 x i64]* @T0 to i8*), <4 x i32> %14739
  %14742 = bitcast <4 x i8*> %14740 to <4 x i64*>
  %14743 = bitcast <4 x i8*> %14741 to <4 x i64*>
  %14744 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14742, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14745 = call <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*> %14743, i32 4, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i64> undef), !tbaa !7
  %14746 = icmp eq <4 x i32> %18, %14736
  %14747 = icmp eq <4 x i32> %20, %14739
  %14748 = select <4 x i1> %14746, <4 x i64> %14744, <4 x i64> zeroinitializer
  %14749 = select <4 x i1> %14747, <4 x i64> %14745, <4 x i64> zeroinitializer
  %14750 = add <4 x i64> %14748, %80
  %14751 = add <4 x i64> %14749, %81
  %14752 = add nuw nsw i32 %22, 32
  br label %21
}

; Function Attrs: nofree
declare dso_local noundef i32 @read(i32 noundef, i8* nocapture noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nofree
declare dso_local noundef i32 @write(i32 noundef, i8* nocapture noundef readonly, i32 noundef) local_unnamed_addr #4

; Function Attrs: nofree nosync nounwind readonly willreturn
declare <4 x i64> @llvm.masked.gather.v4i64.v4p0i64(<4 x i64*>, i32 immarg, <4 x i1>, <4 x i64>) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i64 @llvm.vector.reduce.add.v4i64(<4 x i64>) #6

attributes #0 = { norecurse nounwind readonly willreturn "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake-avx512" "target-features"="+adx,+aes,+avx,+avx2,+avx512bw,+avx512cd,+avx512dq,+avx512f,+avx512vl,+bmi,+bmi2,+clflushopt,+clwb,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+pku,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind willreturn writeonly "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake-avx512" "target-features"="+adx,+aes,+avx,+avx2,+avx512bw,+avx512cd,+avx512dq,+avx512f,+avx512vl,+bmi,+bmi2,+clflushopt,+clwb,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+pku,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone willreturn "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake-avx512" "target-features"="+adx,+aes,+avx,+avx2,+avx512bw,+avx512cd,+avx512dq,+avx512f,+avx512vl,+bmi,+bmi2,+clflushopt,+clwb,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+pku,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake-avx512" "target-features"="+adx,+aes,+avx,+avx2,+avx512bw,+avx512cd,+avx512dq,+avx512f,+avx512vl,+bmi,+bmi2,+clflushopt,+clwb,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+pku,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="skylake-avx512" "target-features"="+adx,+aes,+avx,+avx2,+avx512bw,+avx512cd,+avx512dq,+avx512f,+avx512vl,+bmi,+bmi2,+clflushopt,+clwb,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+pku,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nosync nounwind readonly willreturn }
attributes #6 = { nofree nosync nounwind readnone willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"NumRegisterParameters", i32 0}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{!"Ubuntu clang version 12.0.0-3ubuntu1~20.04.4"}
!3 = !{!4, !4, i64 0}
!4 = !{!"int", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"long long", !5, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"short", !5, i64 0}
!11 = !{!5, !5, i64 0}
!12 = distinct !{!12, !13, !14}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !13, !14}
!16 = distinct !{!16, !13, !14}
!17 = distinct !{!17, !13, !14}
!18 = distinct !{!18, !13, !14}
!19 = distinct !{!19, !13, !14}
!20 = distinct !{!20, !13, !14}
!21 = distinct !{!21, !13, !14}
!22 = distinct !{!22, !13, !14}
!23 = distinct !{!23, !13, !14}
!24 = distinct !{!24, !13, !14}
!25 = distinct !{!25, !13, !14}
!26 = distinct !{!26, !13, !14}
!27 = distinct !{!27, !13, !14}
!28 = distinct !{!28, !13, !14}
!29 = distinct !{!29, !13, !14}
!30 = distinct !{!30, !13, !14}
!31 = distinct !{!31, !13, !14}
!32 = distinct !{!32, !13, !14}
!33 = distinct !{!33, !13, !14}
!34 = distinct !{!34, !13, !14}
!35 = distinct !{!35, !13, !14}
!36 = distinct !{!36, !13, !14}
!37 = distinct !{!37, !13, !14}
!38 = distinct !{!38, !13, !14}
!39 = distinct !{!39, !13, !14}
!40 = distinct !{!40, !13, !14}
!41 = distinct !{!41, !13, !14}
!42 = distinct !{!42, !13, !14}
!43 = distinct !{!43, !13, !14}
!44 = distinct !{!44, !13, !14}
!45 = distinct !{!45, !13, !14}
!46 = distinct !{!46, !13, !14}
!47 = distinct !{!47, !13, !14}
!48 = distinct !{!48, !13, !14}
!49 = distinct !{!49, !13, !14}
!50 = distinct !{!50, !13, !14}
!51 = distinct !{!51, !13, !14}
!52 = distinct !{!52, !13, !14}
!53 = distinct !{!53, !13, !14}
!54 = distinct !{!54, !13, !14}
!55 = distinct !{!55, !13, !14}
!56 = distinct !{!56, !13, !14}
!57 = distinct !{!57, !13, !14}
!58 = distinct !{!58, !13, !14}
!59 = distinct !{!59, !13, !14}
!60 = distinct !{!60, !13, !14}
!61 = distinct !{!61, !13, !14}
!62 = distinct !{!62, !13, !14}
!63 = distinct !{!63, !13, !14}
!64 = distinct !{!64, !13, !14}
!65 = distinct !{!65, !13, !14}
!66 = distinct !{!66, !13, !14}
!67 = distinct !{!67, !13, !14}
!68 = distinct !{!68, !13, !14}
!69 = distinct !{!69, !13, !14}
!70 = distinct !{!70, !13, !14}
!71 = distinct !{!71, !13, !14}
!72 = distinct !{!72, !13, !14}
!73 = distinct !{!73, !13, !14}
!74 = distinct !{!74, !13, !14}
!75 = distinct !{!75, !13, !14}
!76 = distinct !{!76, !13, !14}
!77 = distinct !{!77, !13, !14}
!78 = distinct !{!78, !13, !14}
!79 = distinct !{!79, !13, !14}
!80 = distinct !{!80, !13, !14}
!81 = distinct !{!81, !13, !14}
!82 = distinct !{!82, !13, !14}
!83 = distinct !{!83, !13, !14}
!84 = distinct !{!84, !13, !14}
!85 = distinct !{!85, !13, !14}
!86 = distinct !{!86, !13, !14}
!87 = distinct !{!87, !13, !14}
!88 = distinct !{!88, !13, !14}
!89 = distinct !{!89, !13, !14}
!90 = distinct !{!90, !13, !14}
!91 = distinct !{!91, !13, !14}
!92 = distinct !{!92, !13, !14}
!93 = distinct !{!93, !13, !14}
!94 = distinct !{!94, !13, !14}
!95 = distinct !{!95, !13, !14}
!96 = distinct !{!96, !13, !14}
!97 = distinct !{!97, !13, !14}
!98 = distinct !{!98, !13, !14}
!99 = distinct !{!99, !13, !14}
!100 = distinct !{!100, !13, !14}
!101 = distinct !{!101, !13, !14}
!102 = distinct !{!102, !13, !14}
!103 = distinct !{!103, !13, !14}
!104 = distinct !{!104, !13, !14}
!105 = distinct !{!105, !13, !14}
!106 = distinct !{!106, !13, !14}
!107 = distinct !{!107, !13, !14}
!108 = distinct !{!108, !13, !14}
!109 = distinct !{!109, !13, !14}
!110 = distinct !{!110, !13, !14}
!111 = distinct !{!111, !13, !14}
!112 = distinct !{!112, !13, !14}
!113 = distinct !{!113, !13, !14}
!114 = distinct !{!114, !13, !14}
!115 = distinct !{!115, !13, !14}
!116 = distinct !{!116, !13, !14}
!117 = distinct !{!117, !13, !14}
!118 = distinct !{!118, !13, !14}
!119 = distinct !{!119, !13, !14}
!120 = distinct !{!120, !13, !14}
!121 = distinct !{!121, !13, !14}
!122 = distinct !{!122, !13, !14}
!123 = distinct !{!123, !13, !14}
!124 = distinct !{!124, !13, !14}
!125 = distinct !{!125, !13, !14}
!126 = distinct !{!126, !13, !14}
!127 = distinct !{!127, !13, !14}
!128 = distinct !{!128, !13, !14}
!129 = distinct !{!129, !13, !14}
!130 = distinct !{!130, !13, !14}
!131 = distinct !{!131, !13, !14}
!132 = distinct !{!132, !13, !14}
!133 = distinct !{!133, !13, !14}
!134 = distinct !{!134, !13, !14}
!135 = distinct !{!135, !13, !14}
!136 = distinct !{!136, !13, !14}
!137 = distinct !{!137, !13, !14}
!138 = distinct !{!138, !13, !14}
!139 = distinct !{!139, !13, !14}
!140 = distinct !{!140, !13, !14}
!141 = distinct !{!141, !13, !14}
